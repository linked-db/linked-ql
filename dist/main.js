(()=>{var va=Object.defineProperty;var ve=(o,e)=>{for(var t in e)va(o,t,{get:e[t],enumerable:!0})};var na={};ve(na,{CTE:()=>dt,CTEItem:()=>_t,CTEItemAlias:()=>ht,PGCycleClause:()=>yt,PGSearchClause:()=>mt});function fe(o){return!Array.isArray(o)&&typeof o=="object"&&o}function oe(o,e,t=!1,s=null){if(Array.isArray(o)&&Array.isArray(e))return o.length===e.length&&(e=e.slice(0).sort())&&o.slice(0).sort().every((r,n)=>oe(r,e[n],t,s));if(typeof o?.jsonfy=="function"&&(o=o.jsonfy()),typeof e?.jsonfy=="function"&&(e=e.jsonfy()),fe(o)&&fe(e)){let r={indexs_a:Object.keys(o),indexs_b:Object.keys(e)};if(s?.length){let n=[].concat(s);r.indexs_a=r.indexs_a.filter(a=>!n.includes(a)),r.indexs_b=r.indexs_b.filter(a=>!n.includes(a))}return r.indexs_a.length===r.indexs_b.length&&r.indexs_a.reduce((n,a)=>n&&oe(o[a],e[a],t,s),!0)}return typeof o=="string"&&typeof e=="string"&&t===!1?o.toLowerCase()===e.toLowerCase():o===e}function Na(o){let e=o.replace(/([a-z0-9])([A-Z])/g,"$1_$2");return e=e.replace(/([A-Z])([A-Z][a-z])/g,"$1_$2"),e.toUpperCase()}var sa={};ve(sa,{TOK_TYPES:()=>at,aggrFunctionNames:()=>Ma,dataTypes:()=>Pa,functionNames:()=>La,keywords:()=>Da,operators:()=>ft,statements:()=>Ia});var at={data_type:{type:"data_type",value:void 0,resolve(){return this}},identifier:{type:"identifier",value:void 0,delim:[void 0],resolve({dialect:o,mysqlAnsiQuotes:e}={}){return{...this,delim:this.delim.concat(o==="mysql"?e?['"',"`"]:["`"]:['"'])}}},keyword:{type:"keyword",value:void 0,resolve(){return this}},operator:{type:"operator",value:void 0,prec:void 0,assoc:void 0,resultType:void 0,resolve(){return this}},punctuation:{type:"punctuation",value:void 0,resolve(){return this}},string_literal:{type:"string_literal",value:void 0,delim:["'"],modifier:[void 0],resolve({dialect:o,mysqlAnsiQuotes:e}={}){return{...this,delim:this.delim.concat(o==="mysql"?e?[]:['"']:[/^(\$\$|\$[a-zA-Z_][a-zA-Z0-9_]*\$)$/]),modifier:this.modifier.concat(o==="mysql"?["N"]:["E"])}}},number_literal:{type:"number_literal",value:void 0,match({value:o}){return!!/^[+-]?(?:\d+(?:\.\d*)?|\.\d+)(?:[eE][+-]?\d+)?$/.test(o)}},null_literal:{type:"null_literal",value:void 0,resolve(){return this}},unknown_literal:{type:"unknown_literal",value:void 0,resolve(){return this}},bool_literal:{type:"bool_literal",value:void 0,resolve(){return this}},hex_literal:{type:"hex_literal",value:void 0,resolve(){return this}},bit_literal:{type:"bit_literal",value:void 0,resolve(){return this}},bind_var:{type:"bind_var",value:void 0,delim:[],resolve({dialect:o}={}){return{...this,delim:this.delim.concat(o==="mysql"?["?"]:["$"])}}},version_spec:{type:"version_spec",value:void 0,delim:[void 0,"'"],resolve(){return this}},user_var:{type:"user_var",value:void 0,delim:[void 0],resolve({dialect:o}={}){return{...this,delim:this.delim.concat(o==="mysql"?["'"]:[])}}},system_var:{type:"system_var",value:void 0,resolve(){return this}},brace_block:{type:"brace_block",value:void 0,resolve(){return this}},bracket_block:{type:"bracket_block",value:void 0,resolve(){return this}},parent_block:{type:"paren_block",value:void 0,resolve(){return this}},block_comment:{type:"block_comment",value:void 0,resolve(){return this}},line_comment:{type:"line_comment",value:void 0,delim:["--"],resolve({dialect:o}={}){return{...this,delim:this.delim.concat(o==="mysql"?["#"]:[])}}}},Ia={common:["ALTER","CREATE","DROP","SELECT","INSERT","UPSERT","UPDATE","MERGE","DELETE","BEGIN","COMMIT","ROLLBACK","RELEASE","DESCRIBE","EXPLAIN","USE"],postgres:["ANALYZE","CLUSTER","COMMENT ON","REFRESH","REINDEX","VACUUM"],mysql:["ANALYZE","FLUSH","LOCK","OPTIMIZE","RENAME","REPAIR","RESET","SET","SHOW","TRUNCATE","UNLOCK"]},Da={common:["ALL","ON","NO","KEY","ANY","AS","BY","ASC","CASE","CAST","DEFAULT","DESC","DO","DISTINCT","ELSE","END","ESCAPE","EXISTS","FIRST","LAST","FOLLOWING","FOR","HAVING","FILTER","SHARE","UNIQUE","JOIN","SEPARATOR","SKIP","LOCKED","NOWAIT","OF","RECURSIVE","LIMIT","LOAD","NEXT","NOTHING","NULLS","OFFSET","ONLY","TIES","OVER","PARTITION","PRECEDING","RANGE","RETURNING","ROW","ROWS","INCLUDE","EXCLUDE","SET","SOME","THEN","USING","MATERIALIZED","MODE","TEMPORARY","MATCH","PARTIAL","SIMPLE","WITHIN","BOTH","CHECK","PRIMARY","FOREIGN","CONSTRAINT","REFERENCES","INHERITS","DATABASE","TABLE","COLUMN","INDEX","SEQUENCE","TRIGGER","VIEW","SAVEPOINT","VALUES","WHEN","WHERE","WINDOW","WITH","WITHOUT","TO","TABLESPACE","INTO","FROM","GROUP","ORDER","PARTITION","BREADTH","DEPTH","GENERATED","ALWAYS","INNER","LEFT","RIGHT","OUTER","FULL","CROSS","NATURAL","NO OTHERS","NO INHERIT","ROLLUP","UNBOUNDED","CURRENT ROW","GROUPS","IGNORE","RESPECT","CHARACTER SET","NO ACTION","SET NULL","SET DEFAULT","RESTRICT","CASCADE","STORED","GIST"],postgres:["ARRAY","GROUPING SETS","CUBE","TABLESAMPLE","REPEATABLE","SEARCH","LATERAL","ORDINALITY","OVERLAPS","SIMILAR","BERNOULLI","SYSTEM","UNLOGGED","PERFORM","CURRENT OF","TYPE","EXTENSION","IMMUTABLE","STABLE","VOLATILE","CYCLE","CONFLICT","TEMP","TIME ZONE","FETCH","LOCAL","IDENTITY","DEFERRABLE","INITIALLY","DEFERRED","IMMEDIATE"],mysql:["LOCK","RENAME","REPLACE","SHOW","UNLOCK","VIRTUAL","VISIBLE","INVISIBLE","HIGH_PRIORITY","CACHE","SQL_CACHE","SQL_NO_CACHE","STRAIGHT_JOIN","COMMENT","DATABASES","TABLES","COLUMNS","PROCEDURE","FUNCTION","AUTO_INCREMENT","CHARACTER SET","ENGINE","VALUE","DUPLICATE"]},La={common:["NOW","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","IF","NULLIF","IFNULL","COALESCE","GREATEST","LEAST","CONCAT","GROUPING","CONCAT_WS","FORMAT","UNNEST","MD5","SHA1","ST_ASTEXT","ST_ASGEOJSON","ST_GEOMFROMTEXT","ST_WITHIN","ST_CONTAINS","ST_INTERSECTS","ST_DISTANCE","ST_BUFFER"],postgres:["MAKE_DATE","MAKE_TIME","MAKE_TIMESTAMP","TO_JSON","TO_JSONB","JSON_TYPEOF","JSONB_TYPEOF","JSON_BUILD_ARRAY","JSONB_BUILD_ARRAY","JSON_BUILD_OBJECT","JSONB_BUILD_OBJECT","JSON_POPULATE_RECORD","JSONB_POPULATE_RECORD","JSON_PATH_QUERY","JSON_PATH_EXISTS"],mysql:["CURDATE","CURTIME","SYSDATE","STR_TO_DATE","MAKEDATE","MAKETIME","JSON_ARRAY","JSON_OBJECT","JSON_EXTRACT","JSON_UNQUOTE","JSON_SET","JSON_INSERT","JSON_REPLACE","JSON_REMOVE","JSON_SEARCH","JSON_CONTAINS","JSON_CONTAINS_PATH","JSON_KEYS","JSON_ARRAY_APPEND","JSON_ARRAY_INSERT","JSON_DEPTH","JSON_LENGTH","JSON_MERGE_PRESERVE","JSON_MERGE_PATCH","JSON_PRETTY","JSON_STORAGE_FREE"]},Ma={common:["COUNT","SUM","AVG","MIN","MAX","COVAR_POP","COVAR_SAMP","CORR","ROW_NUMBER","BIT_AND","BIT_OR","STDDEV_POP","STDDEV_SAMP","VAR_POP","VAR_SAMP","VARIANCE","STD","LEAD","LAG","NTILE","FIRST_VALUE","LAST_VALUE"],postgres:["ARRAY_AGG","STRING_AGG","REGR_SLOPE","PERCENTILE_CONT","PERCENTILE_DISC","MODE","RANK","DENSE_RANK","EVERY","BOOL_AND","BOOL_OR","JSON_AGG","JSON_OBJECT_AGG","JSONB_OBJECT_AGG","XMLAGG"],mysql:["GROUP_CONCAT","BIT_XOR","JSON_ARRAYAGG","JSON_OBJECTAGG"]},Pa={common:["SMALLINT","INTEGER","INT","BIGINT","DECIMAL","DEC","NUMERIC","REAL","FLOAT","DATE","TIME","TIMESTAMP","INTERVAL","CHAR","CHARACTER","VARCHAR","TEXT","BINARY","VARBINARY","BOOLEAN","JSON","GEOMETRY","POINT","LINESTRING","POLYGON","DOUBLE PRECISION","CHARACTER VARYING","BYTEA","ENUM"],postgres:["SERIAL","BIGSERIAL","MONEY","BIT","CIDR","INET","MACADDR","MACADDR8","TIMESTAMPTZ","TIMETZ","TSVECTOR","TSQUERY","UUID","XML","INT4RANGE","INT8RANGE","NUMRANGE","TSRANGE","TSTZRANGE","DATERANGE","BOX","PATH","CIRCLE","LINE","LSEG","POLYGON","OID","BIT VARYING","JSONB","REGCLASS"],mysql:["TINYINT","MEDIUMINT","BIT","YEAR","DATETIME","TINYTEXT","QUERY","MEDIUMTEXT","LONGTEXT","TINYBLOB","BLOB","MEDIUMBLOB","LONGBLOB","GEOMETRYCOLLECTION","MULTIPOINT","MULTILINESTRING","MULTIPOLYGON","BOOL"]},ft={common:[["<~",{prec:90,assoc:"left",resultType:":right"}],["~>",{prec:90,assoc:"right",resultType:":right"}],["BETWEEN",{prec:85,assoc:"left",resultType:"boolean"}],["NOT",{prec:80,assoc:"right",resultType:"boolean"}],["*",{prec:70,assoc:"left",resultType:"number"}],["/",{prec:70,assoc:"left",resultType:"number"}],["%",{prec:70,assoc:"left",resultType:"number"}],["+",{prec:60,assoc:"left",resultType:"number"}],["-",{prec:60,assoc:"left",resultType:"number"}],["&",{prec:60,assoc:"left",resultType:"number"}],["|",{prec:60,assoc:"left",resultType:"number"}],["<<",{prec:60,assoc:"left",resultType:"number"}],[">>",{prec:60,assoc:"left",resultType:"number"}],["=",{prec:50,assoc:"left",resultType:"boolean"}],["!=",{prec:50,assoc:"left",resultType:"boolean"}],["<>",{prec:50,assoc:"left",resultType:"boolean"}],["<",{prec:50,assoc:"left",resultType:"boolean"}],["<=",{prec:50,assoc:"left",resultType:"boolean"}],[">",{prec:50,assoc:"left",resultType:"boolean"}],[">=",{prec:50,assoc:"left",resultType:"boolean"}],["IS",{prec:50,assoc:"left",resultType:"boolean"}],["IS NOT",{prec:50,assoc:"left",resultType:"boolean"}],["DISTINCT FROM",{prec:50,assoc:"left",resultType:"boolean"}],["IN",{prec:50,assoc:"left",resultType:"boolean"}],["LIKE",{prec:50,assoc:"left",resultType:"boolean"}],["AND",{prec:40,assoc:"left",resultType:"boolean"}],["OR",{prec:30,assoc:"left",resultType:"boolean"}],["INTERSECT",{prec:20,assoc:"left",resultType:"set"}],["UNION",{prec:10,assoc:"left",resultType:"set"}],["EXCEPT",{prec:10,assoc:"left",resultType:"set"}]],postgres:[["COLLATE",{prec:83,assoc:"left",resultType:"string"}],["||",{prec:60,assoc:"left",resultType:"string"}],["::",{prec:100,assoc:"left",resultType:"casted"}],["AT",{prec:95,assoc:"left",resultType:"timestamptz"}],["^",{prec:90,assoc:"left",resultType:"number"}],["#",{prec:60,assoc:"left",resultType:"number"}],["->",{prec:80,assoc:"left",resultType:"json"}],["->>",{prec:80,assoc:"left",resultType:"text"}],["#>",{prec:80,assoc:"left",resultType:"json"}],["#>>",{prec:80,assoc:"left",resultType:"text"}],["@>",{prec:80,assoc:"left",resultType:"boolean"}],["<@",{prec:80,assoc:"left",resultType:"boolean"}],["?",{prec:80,assoc:"left",resultType:"boolean"}],["?|",{prec:80,assoc:"left",resultType:"boolean"}],["?&",{prec:80,assoc:"left",resultType:"boolean"}],["-@",{prec:80,assoc:"left",resultType:"boolean"}],["#-",{prec:80,assoc:"left",resultType:"json"}],["@?",{prec:80,assoc:"left",resultType:"boolean"}],["@@",{prec:80,assoc:"left",resultType:"boolean"}],["ILIKE",{prec:50,assoc:"left",resultType:"boolean"}],["~",{prec:50,assoc:"left",resultType:"boolean"}],["!~",{prec:50,assoc:"left",resultType:"boolean"}],["~*",{prec:50,assoc:"left",resultType:"boolean"}],["!~*",{prec:50,assoc:"left",resultType:"boolean"}],["SIMILAR TO",{prec:50,assoc:"left",resultType:"boolean"}],["&&",{prec:60,assoc:"left",resultType:"boolean"}],["<->",{prec:60,assoc:"left",resultType:"number"}],["@",{prec:60,assoc:"left",resultType:"geometry"}],["&<",{prec:60,assoc:"left",resultType:"boolean"}],["&>",{prec:60,assoc:"left",resultType:"boolean"}],["|-",{prec:60,assoc:"left",resultType:"boolean"}],["-|",{prec:60,assoc:"left",resultType:"boolean"}],["<<",{prec:60,assoc:"left",resultType:"boolean"}],[">>",{prec:60,assoc:"left",resultType:"boolean"}],["<<|",{prec:60,assoc:"left",resultType:"boolean"}],["|>>",{prec:60,assoc:"left",resultType:"boolean"}],["&<|",{prec:60,assoc:"left",resultType:"boolean"}],["|&>",{prec:60,assoc:"left",resultType:"boolean"}],["~=",{prec:50,assoc:"left",resultType:"boolean"}],["?#",{prec:60,assoc:"left",resultType:"boolean"}],["?-",{prec:60,assoc:"left",resultType:"boolean"}],["?-|",{prec:60,assoc:"left",resultType:"boolean"}],["?|",{prec:60,assoc:"left",resultType:"boolean"}],["?||",{prec:60,assoc:"left",resultType:"boolean"}],["#",{prec:60,assoc:"left",resultType:"number"}],["##",{prec:60,assoc:"left",resultType:"geometry"}],["@-@",{prec:60,assoc:"left",resultType:"number"}]],mysql:[["DIV",{prec:70,assoc:"left",resultType:"number"}],["MOD",{prec:70,assoc:"left",resultType:"number"}],["BINARY",{prec:90,assoc:"right",resultType:"binary"}],["^",{prec:80,assoc:"left",resultType:"number"}],["~",{prec:85,assoc:"right",resultType:"number"}],["<=>",{prec:50,assoc:"left",resultType:"boolean"}],["REGEXP",{prec:50,assoc:"left",resultType:"boolean"}],["RLIKE",{prec:50,assoc:"left",resultType:"boolean"}],["!",{prec:80,assoc:"right",resultType:"boolean"}],["XOR",{prec:40,assoc:"left",resultType:"boolean"}],["&&",{prec:40,assoc:"left",resultType:"boolean"}],["||",{prec:30,assoc:"left",resultType:"boolean"}],[":=",{prec:10,assoc:"right",resultType:":right"}],["SOUNDS LIKE",{prec:50,assoc:"left",resultType:"boolean"}]]};var nt=class{buffer="";cursor=0;line=1;column=1;mysqlBindingIndex=0;nestingContext=[];nextTokenEscape=0;next(e=1,t=!1){t&&(this.line++,this.column=0),this.column+=e,this.cursor+=e,this.nextTokenEscape===1?this.nextTokenEscape=2:this.nextTokenEscape===2&&(this.nextTokenEscape=0)}},ot=class{#e;#i;#t=!1;#n=!1;#o=!1;#r=null;#s=[];#a;#l=[];constructor(e,{state:t,...s}={}){this.#e=e,this.#i=s}[Symbol.asyncIterator](){return this}get options(){return this.#i}get locked(){return this.#t}get started(){return this.#n}get done(){return this.#o&&!this.#l.length}previous(){return this.#s[this.#s.length-1]}current(){return this.#a}async next(){this.#u("next()"),this.#n=!0;let e,t=!1;return this.#l.length?(this.#p(this.#a),this.#a=this.#f(),e=this.#a):({value:e,done:t}=await this.#e.next(),this.#p(this.#a),this.#a=e,this.#o=t),this.#r!==null&&e?.type.endsWith("_block")&&e.value.savepoint(),{value:e,done:t}}async match(e,t=void 0){let[s,r,n]=typeof arguments[0]=="number"?arguments:[0,e,t],a=p=>p&&(Array.isArray(r)?r.includes(p.type):r===p.type)&&(n===void 0||(Array.isArray(n)?n.includes(p.value)||n.includes(void 0):n===p.value))&&p||void 0;if(s===1/0){let p=0,c;for(;c=await this.peek(p++);)if(a(c))return c;return}return a(s?await this.peek(s):this.current())}async peek(e=1){if(e===0)return this.#a;let t=e-this.#l.length;for(;t;){let r=await this.#e.next();if(r.done)break;this.#m(r.value),t--}return this.#l[e-1]}async eat(e=void 0,t=void 0){let s=e?await this.match(e,t):this.current();return s&&(await this.next())?.value,s}async expect(e,t=void 0){let s=await this.eat(e,t);if(!s)throw new Error(`Expected token: ${e}${t?` (${t})`:""}`);return s}#p(e){e?.type.endsWith("_block"),this.#r!==null?this.#s.push(e):this.#s=[e]}#f(){let e=this.#l.shift();return e?.type.endsWith("_block")&&(e.value.#t=!1),e}#c(){let e=this.#s.pop();return e?.type.endsWith("_block")&&e.value.restore(e.value.#r),e}#y(e){e?.type.endsWith("_block")&&(e.value.restore(e.value.#r),e.value.#t=!0),this.#l.unshift(e)}#m(e){e?.type.endsWith("_block")&&(e.value.#t=!0),this.#l.push(e)}#u(e){if(this.#t)throw new Error(`Can't execute ${e}; TokenStream is locked`)}savepoint(){this.#u("savepoint()");let e=this.#s.length;return this.#r===null&&(this.#r=e),e}savepointStatus(){return this.#r!==null?this.#s.length:null}restore(e){if(this.#u("restore()"),this.#r===null||typeof e!="number"||e>this.#s.length)throw new Error(`Invalid restore point ${e}${this.#r===null?". Not in savepoint mode":""}`);for(;e<this.#s.length;)this.#a&&this.#y(this.#a),this.#a=this.#c()}commit(e){if(this.#u("commit()"),e!==this.#r)return;let t;for(;e<this.#s.length&&(t=this.#c());)t.type.endsWith("_block")&&t.value.commit(t.value.#r);this.#r=null}static async create(e,{dialect:t="postgres",state:s=new nt,...r}={}){return Array.isArray(e)&&e.every(n=>typeof n=="object"&&n?.type)&&(e=e.slice())?new this(e[Symbol.iterator](),{dialect:t,...r}):(r.normalized||(r=Sa({dialect:t,...r,normalized:!0})),new this(await this.createIterator(e,{dialect:t,state:s,...r,extendedAPI:!0}),{dialect:t,...r}))}static toIterator(e){return typeof e[Symbol.asyncIterator]=="function"?typeof e.next=="function"?e:e[Symbol.asyncIterator]():typeof e[Symbol.iterator]=="function"&&typeof e!="string"&&!(e instanceof String)?typeof e.next=="function"?e:e[Symbol.iterator]():function*(){yield e+""}()}static async*createIterator(e,{dialect:t="postgres",state:s=new nt,...r}={}){let n=this.toIterator(e);if(!["postgres","mysql"].includes(t))throw new Error(`Unknown dialect: ${t}`);if(!(s instanceof nt))throw new Error("options.state must be an instance of TokenStreamState");r.normalized?r={dialect:t,...r}:r=Sa({dialect:t,...r,normalized:!0});let a={token:null,prevEmittedToken:null,nextTokenSpaceBefore:"",multiwordBuffer:[]},p=(u,f=!1)=>u?Ta(u,{options:r,state:s,localState:a},f):[],c={value:""};do{s.buffer+=c.value||"";let u;for(;u=s.buffer[s.cursor];){let f=s.buffer[s.cursor+1]===void 0&&!c.done,y=Ea.has(u),d=()=>{throw new SyntaxError(`Unexpected token: ${u} at line ${s.line}, column ${s.column}`)};if(a.token?.type==="hex_literal"||a.token?.type==="bit_literal"){(a.token.delim?u===a.token.delim:y)?(yield*p(a.token),a.token=null,y&&r.spaces&&(a.nextTokenSpaceBefore+=u)):(a.token?.type==="hex_literal"?/[0-9A-Fa-f]/.test(u)||d():/[01]/.test(u)||d(),a.token.value+=u),s.next();continue}if(a.token?.type==="version_spec"){let h=a.token.delim&&u===a.token.delim,S=h||y||u==="."||u===","||u===";"||u===")";if(S?(yield*p(a.token),a.token=null):(a.token.value&&(u==="="?["<",">"].includes(a.token.value)||d():u==="_"?/\d$/.test(a.token.value)||d():/\d/.test(u)||d()),a.token.value+=u),!S||h){s.next();continue}}if(y){let h=a.token?.type==="string_literal",S=a.token?.type==="identifier"&&a.token.delim,N=a.token?.type==="block_comment",E=a.token?.type==="line_comment";if(h||S||N||E&&!(u==="\r"||u===`
`))a.token.value+=u;else{let C=s.buffer[s.cursor-1];!Ea.has(C)&&a.token&&(yield*p(a.token),a.token=null),r.spaces&&(a.nextTokenSpaceBefore+=u)}u===`
`||u==="\r"?s.next(1,!0):s.next();continue}if(u==="\\"){if(f)break;let h=s.buffer[s.cursor+1],S=a.token?.type==="string_literal"&&(r.dialect==="mysql"?!r.mysqlNoBackslashEscapes:a.token.modifier==="E"),N=h===a.token?.delim||h==="\\"||h==="0"||h==="b"||h==="f"||h==="n"||h==="r"||h==="t"||h==="v"||h==="Z";if(S&&N){h={"\\":"\\",0:"\0",b:"\b",f:"\f",n:`
`,r:"\r",t:"	",v:"\v",Z:""}[h]||h,a.token.value+=h,s.next(2);continue}s.nextTokenEscape=1,s.next();continue}if(a.token?.type==="block_comment"||a.token?.type==="line_comment"||a.token?.type==="string_literal"||a.token?.type==="identifier"&&a.token.delim||a.token?.type==="user_var"&&a.token.delim){let h;if(a.token.type==="block_comment"){if(u==="*"){if(f)break;h=s.buffer[s.cursor+1]==="/"?2:0}}else if(u===a.token.delim){if(a.token.type==="identifier"||a.token.type==="string_literal"&&(r.dialect==="mysql"?r.mysqlNoBackslashEscapes:a.token.modifier!=="E")){if(f)break;if(s.buffer[s.cursor+1]===u){a.token.value+=u,s.next(2);continue}}h=1}else if(a.token.type==="string_literal"&&a.token.delim.startsWith("$")&&u==="$"){let S=s.cursor+1;s.buffer.slice(S-a.token.delim.length,S)===a.token.delim&&(a.token.value=a.token.value.slice(0,-a.token.delim.length+1),h=1)}if(h){yield*p(a.token),a.token=null,s.next(h);continue}a.token.value+=u,s.next();continue}if(s.nestingContext.length&&u==={"{":"}","[":"]","(":")"}[s.nestingContext[0]]){if(yield*p(a.token,!0),s.nestingContext.shift(),r.structured){s.next(),a.nestingEndTagSeen=!0;return}a.token=null}let m,g=0,x=0;if(r.dialect==="postgres"){if(a.token?.type==="pg_possible_dollar_delim"||u==="$"){if(a.token?.type==="pg_possible_dollar_delim"){if(u==="$"){let{type:S,value:N,delim:E,...C}=a.token;a.token={type:"string_literal",value:"",delim:`$${N}$`,...C}}else a.token.value+=u;s.next();continue}if(f)break;let h=s.buffer[s.cursor+1];/[0-9]/.test(h)?m={type:"bind_var"}:m={type:"pg_possible_dollar_delim",delim:u}}}else r.dialect==="mysql"&&(u==="?"&&(m={type:"bind_var"}),u==="#"&&(m={type:"line_comment",delim:u}),u==="`"&&(m={type:"identifier",delim:u}));if(u==="'"){let h=new RegExp(`(@)$|^\\W?(${r.dialect==="postgres"?"E|X|B":"N|X"})$`,"i"),S=s.buffer.slice(Math.max(s.cursor-2,0),s.cursor).match(h),N=S?.[1]||S?.[2];if(N==="@"&&a.prevEmittedToken?.type==="identifier"){if(f)break;let E=s.buffer[s.cursor+1];/[\^~=\d<>!]/.test(E)&&(m={type:"version_spec",delim:u},g=1)}if(!m)if(N&&(N!=="@"||r.dialect==="mysql")){let E=/^(E|N)/i.test(N)?"string_literal":N==="@"?"user_var":(N==="X"?"hex_":"bit_")+"literal";m={type:E,...E==="string_literal"?{modifier:N.toUpperCase()}:{},delim:u},g=N==="@"?1:N.length}else m={type:"string_literal",delim:u}}else u==='"'&&(m={type:r.dialect!=="mysql"||r.mysqlAnsiQuotes?"identifier":"string_literal",delim:u});if(u==="@"){if(f)break;let h=s.buffer[s.cursor+1];(a.token||a.prevEmittedToken)?.type==="identifier"&&/[\^~=\d<>!]/.test(h)?m={type:"version_spec"}:r.dialect==="mysql"&&(h==="@"?(m={type:"system_var"},x=1):/[a-zA-Z_$]/.test(h)&&(m={type:"user_var"}))}if(u==="/"||u==="-"){if(f)break;let h=s.buffer[s.cursor+1];u==="/"&&h==="*"?(m={type:"block_comment"},x=1):u==="-"&&h==="-"&&(m={type:"line_comment",delim:u+h},x=1)}if(m){a.token&&!g&&(yield*p(a.token)),a.token={type:m.type,value:"",...m,line:s.line,column:g?s.column-g:s.column},s.next(1+x);continue}if((u==="{"||u==="["||u==="(")&&(yield*p(a.token),a.token=null,s.nestingContext.unshift(u),r.structured)){s.next();let h={type:{"{":"brace_block","[":"bracket_block","(":"paren_block"}[u],value:await this[r.extendedAPI?"create":"createIterator"](n,{state:s,...r}),line:s.line,column:s.column};if(yield*p(h),r.extendedAPI)await h.value.peek(1/0);else for(;!(await h.value.next()).done;);continue}if(/[0-9]/.test(u)){if(a.token?.type!=="identifier"&&a.token?.type!=="bind_var"&&a.token?.type!=="version_spec"&&!a.token?.type.endsWith("_literal")&&!a.token?.type.endsWith("_var")){if(yield*p(a.token),u==="0"){if(f)break;let h=s.buffer[s.cursor+1]?.toUpperCase();if((h==="X"||h==="B")&&r.dialect==="mysql"){a.token={type:(h==="X"?"hex_":"bit_")+"literal",value:"",line:s.line,column:s.column},s.next(2);continue}}a.token={type:"number_literal",value:u,line:s.line,column:s.column},s.next();continue}}else if(/[a-zA-Z_]/.test(u)){if(a.token?.type!=="identifier"&&!a.token?.type.endsWith("_var")&&!(a.token?.type==="number_literal"&&/\d$/.test(a.token.value)&&/E/i.test(u))){a.token?.type==="number_literal"&&d(),yield*p(a.token),a.token={type:"identifier",value:u,line:s.line,column:s.column},s.next();continue}}else{let h="operator";if(u===";"||u===","||u===":"||u==="{"||u==="}"||u==="["||u==="]"||u==="("||u===")"){if(u===":"&&(s.nestingContext[0]!=="{"||s.nextTokenEscape)?h="operator":h="punctuation",r.dialect==="postgres"&&u===":"&&h==="operator"&&a.token?.type!=="operator"){let S=s.buffer[s.cursor-1];if(f)break;let N=s.buffer[s.cursor+1];S!==":"&&/[a-zA-Z_]/.test(N)&&r.PL_SQL!==!1&&(h="user_var",u="")}}else if(u===".")if(a.token?.type==="number_literal")a.token.value.includes(".")&&d(),h="number_literal";else{if(f)break;let S=s.buffer[s.cursor+1];/\d/.test(S)?h="number_literal":(h="punctuation",a.token?.type==="system_var"&&(h="system_var"))}else(u==="+"||u==="-")&&a.token?.type==="number_literal"&&/E$/i.test(a.token.value)&&(/\+|\-/.test(a.token.value)&&d(),h="number_literal");if(a.token?.type!==h||h==="punctuation"||h==="operator"&&!r.operators.classic.has(`${a.token.value}${u}`)){yield*p(a.token),a.token={type:h,value:u,line:s.line,column:s.column},s.next();continue}}a.token.value+=u,s.next()}if(c.done)break;s.buffer=s.buffer.slice(s.cursor),s.cursor=0}while(c=await n.next());if(a.token){if(a.token.type==="operator"&&a.token.value!=="*"||a.token.type==="number_literal"&&/E$/i.test(a.token.value)||a.token.type==="block_comment"||a.token.type==="pg_possible_dollar_delim"||["string_literal","hex_literal","bit_literal","identifier","version_spec","user_var"].includes(a.token.type)&&a.token.delim)throw new SyntaxError(`Unterminated ${a.token.type} at line ${s.line}, column ${s.column}`);yield*p(a.token,!0)}if(s.nestingContext.length&&!a.nestingEndTagSeen)throw new SyntaxError(`Unterminated nesting "${s.nestingContext[0]}" at line ${s.line}, column ${s.column}`)}},Ea=new Set([" ","\f",`
`,"\r","	","\v"]);function Sa(o){let e=(t,s,r,n)=>{r.split(" ").reduce((a,p)=>(a=a?`${a} ${p}`:p,t.set(a,n),a),s)};for(let t of["statements","functionNames","aggrFunctionNames","keywords","operators","dataTypes"]){let s=["statements","functionNames","aggrFunctionNames"].includes(t)?"keywords":t,r=o[s]||{classic:new Map,compound:new Map};for(let n of["common",o.dialect==="mysql"?"mysql":"postgres"]){let a=sa[t][n];for(let p of a){let[c,u]=Array.isArray(p)?[p[0],{...p[1],value:p[0]}]:[p,{value:p}];c.includes(" ")?e(r.compound,"",c,u):r.classic.set(c,u)}}o={...o,[s]:r}}return o}function Ta(o,{options:e,state:t,localState:s},r=!1){if(s.nextTokenSpaceBefore){let{type:p,...c}=o;o={type:p,spaceBefore:s.nextTokenSpaceBefore,...c},s.nextTokenSpaceBefore=""}if(o.type==="block_comment"||o.type==="line_comment")return ja(o,{options:e});let n,a=!1;if(e.dialect==="mysql"&&o.type==="bind_var")n=[{...o,value:`${++t.mysqlBindingIndex}`}];else if(o.type==="operator"){let{line:p,column:c,...u}=o;n=[{...u,...e.operators.classic.get(o.value)||{},line:p,column:c}]}else o.type==="identifier"&&!o.delim&&(n=Ua(o,{options:e,state:t,localState:s},r),a=!0);return n||(n=[o]),n?.length?s.prevEmittedToken=n[0]:s.prevEmittedToken=o,!a&&n.length&&s.multiwordBuffer.length?s.multiwordBuffer.splice(0).concat(n):n}function ja(o,{options:e}){return e.comments?(o.type==="block_comment"?o={...o,value:o.value.split(`
`).map(t=>t.replace(/^[ ]+\*[ ]+?/,"").trim()).join(`
`)}:o={...o,value:o.value.trim()},[o]):[]}function Ua(o,{options:e,state:t,localState:s},r=!1){let n,a=s.multiwordBuffer.length,p=(a?s.multiwordBuffer.map(g=>g.value).concat(o.value).join(" "):o.value).toUpperCase(),c=g=>{for(let x of["keywords","operators","dataTypes"]){let h=e[x][g].get(p);if(h)return[x,h]}return[]},u=()=>{let{type:g,spaceBefore:x,line:h,column:S,...N}=o;a&&(x=s.multiwordBuffer[0].spaceBefore,h=s.multiwordBuffer[0].line,S=s.multiwordBuffer[0].column);let E={type:d==="dataTypes"?"data_type":d.replace(/s$/,""),...x?{spaceBefore:x}:{},...N,...m,value:p,line:h,column:S};a?(n=[E],s.multiwordBuffer.splice(0),a=0):n=[E]},f=()=>{let g={...o,type:d==="dataTypes"?"data_type":d.replace(/s$/,"")};s.multiwordBuffer.push(g),n=[]},y=!1,[d,m]=c("compound");if(m?.value===p)u(),y=!0;else if(m){let[g,x]=c("classic");x&&g!==d&&([d,m]=[g,x]),r?u():f(),y=!0}else[d,m]=c("classic"),m&&(u(),y=!0);if(!y&&a){let g=s.multiwordBuffer.splice(0),x=Ta(o,{options:e,state:t,localState:s});return[...g,...x]}if(!n&&/^(TRUE|FALSE|NULL|UNKNOWN)$/i.test(o.value)){let{type:g,...x}=o;n=[{type:/UNKNOWN/.test(o.value)?"unknown_literal":/NULL/i.test(o.value)?"null_literal":"bool_literal",...x,value:o.value.toUpperCase()}]}return n}var l=Object.create(null);var _=class o{static get NODE_NAME(){return Na(this.name)}get NODE_NAME(){return this.constructor.NODE_NAME}#e;get _ast(){return this.#e}#i;get options(){return this.#i||this.#t?.options||{dialect:"postgres"}}#t;get parentNode(){return this.#t}get statementNode(){return this.#t?.statementNode}get rootNode(){return this.#t?.rootNode||this}constructor(e={},t={}){this.#e=e,this.#i=t;for(let s of Object.values(this.#e))this._adoptNodes(...[].concat(s))}_has(e,t=void 0,s=void 0){return e in this.#e?typeof t=="number"?typeof this.#e[e][t]<"u":t?this.#e[e].some(r=>r.identifiesAs?.(t,s)):!0:!1}_get(e,t=void 0,s=void 0){if(!(e in this.#e))return;if(typeof t<"u"&&!Array.isArray(this.#e[e]))throw new Error(`Can't use index in field "${e}"; not an array.`);let r=this.#e[e];return typeof t=="number"?r=r[t]:t&&(r=r.find(n=>n.identifiesAs?.(t,s))),r}_set(e,t,s=void 0,r=void 0){let n=arguments.length>2?t:void 0,a=arguments.length>2?s:t,p=this._get(e,n,r);return p&&this._unadoptNodes(...[].concat(p)),typeof n<"u"?this.#e[e]=p?this.#e[e].reduce((c,u)=>u===p?c.concat(a):c.concat(u),[]):this.#e[e].concat(a):this.#e[e]=a,this._adoptNodes(...[].concat(a)),!0}_delete(e,t=void 0,s=void 0){if(!(e in this.#e))return!1;if(typeof t<"u"&&!Array.isArray(this.#e[e]))throw new Error(`Can't use index in field "${e}"; not an array.`);return typeof t<"u"?this.#e[e]=this.#e[e].reduce((r,n,a)=>(typeof t=="number"?a===t:n.identifiesAs?.(t,s))?(this._unadoptNodes(n),r):r.concat(n),[]):(this._unadoptNodes(...[].concat(this.#e[e])),this.#e[e]=Array.isArray(this.#e[e])?[]:void 0),!0}_add(e,...t){if(!Array.isArray(this.#e[e]))throw new Error(`Can't add on field "${e}"; not an array.`);return this._adoptNodes(...t),this.#e[e]=this.#e[e].concat(t),!0}_adoptNodes(...e){for(let t of e)if(t instanceof o){if(t.#t&&t.#t!==this){let s=`${this.NODE_NAME}`;throw new Error(`[${s}] Illegal node operation`)}t.#t=this}}_unadoptNodes(...e){for(let t of e)if(t instanceof o){if(t.#t!==this){let s=`${this.NODE_NAME}`;throw new Error(`[${s}] Illegal node operation`)}t.#t=null}}climbTree(e){if(this.#t)return e(this.#t,()=>this.#t.climbTree(e))}walkTree(e){let t=(s,r)=>{!(s instanceof o)&&!Array.isArray(s)||e(s,r)!==s||(Array.isArray(s)?s.map(t):s.statementNode!==s&&s.walkTree(e))};for(let[s,r]of Object.entries(this.#e))t(r,s)}containsNode(e){return e?this===e.parentNode||this.containsNode(e.parentNode):!1}identifiesAs(e,t=!1){if(typeof e>"u")return!1;if(typeof e?.jsonfy=="function")return oe(this.jsonfy({nodeNames:!1}),e.jsonfy({nodeNames:!1}),t)}static morphsTo(){return this}clone(e={},t=null,s=null){let r=this.jsonfy(e,t,s);return[this.constructor].concat(this.constructor.morphsTo()).reduce((p,c)=>p||c.fromJSON(r,{dialect:e.toDialect||this.options.dialect}),void 0)}deSugar(e=1,t={},s=null,r=null){return t={...t,deSugar:e},this.clone(t,s,r)}toDialect(e,t={},s=null,r=null){return t={...t,toDialect:e},this.clone(t,s,r)}static get syntaxRules(){return[]}static compileASTSchemaFromSyntaxRules({dialect:e="postgres"}={}){this._astSchemaCompileCache||(this._astSchemaCompileCache=new Map);let t=`${this.NODE_NAME}:${e}`;if(!this._astSchemaCompileCache.has(t)){let s,r=this.syntaxRules,n=[].concat(r);n.length===1&&Array.isArray(n[0].type)&&!n[0].as?s=n[0]:s=this._compileASTSchemaFromSyntaxRules(r,e,{trail:[this.NODE_NAME]}),this._astSchemaCompileCache.set(t,s)}return this._astSchemaCompileCache.get(t)}static _compileASTSchemaFromSyntaxRules(e,t="postgres",{trail:s=[],schemaSet:r=new Set([new Map]),assertionTrail:n={dependencies:new Set,optional:!1,assert:!1}}={}){let a=Array.isArray(e)?e:[e],p=new Set(n.dependencies),c=f=>new Set([...f].map(y=>new Map(y)));for(let[f,y]of a.entries()){if(y.dialect&&y.dialect!==t)continue;let{type:d,as:m,if:g=n.inference,value:x,arity:h,singletons:S,modifier:N,booleanfy:E,optional:C=n.optional,assert:w=n.assert,syntax:L,syntaxes:H,...j}=y,W=s.concat(`${Array.isArray(e)?f:""}${m?`<${m}>`:""}`||[]),k=W.join("."),$=Aa(j);if($.length)throw new SyntaxError(`[${k}] Unsupported attributes in rule: "${$.join('", "')}".`);let K=typeof d=="string"&&d[0]===d[0].toLowerCase();if(m){if(!d)throw new SyntaxError(`[${k}] Field rules must have a "type" attribute of type string.`);if(L||H)throw new SyntaxError(`[${k}] Field rules ("${m}") can not have a "syntax" or "syntaxes" attribute.`);if(m==="."){if(!K)throw new SyntaxError(`[${k}] Terminal Node rules must be token-typed rules.`);if(C)throw new SyntaxError(`[${k}] Terminal Node rules can not be optional.`)}else if(N)throw new SyntaxError(`[${k}] Only Terminal Node rules can have a "modifier" attribute.`);if(K){if(![void 0,null].includes(h))throw new SyntaxError(`[${k}] Token rules can not be item-based.`);if(!at[d])throw new SyntaxError(`[${k}] Unknown token type "${d}".`)}else{if(x)throw new SyntaxError(`[${k}] Only token rules can have a "value" attribute.`);for(let B of[].concat(d))if(!l[B])throw new SyntaxError(`[${k}] Unknown node type "${B}".`);if(![void 0,null].includes(h)){if(fe(h)){let B=Object.keys(h);if(B.some(U=>!["min","max","eager"].includes(U)||typeof h[U]!=(U==="eager"?"boolean":"number")))throw new SyntaxError(`Invalid arity object "{ ${B.join(", ")} }" for field "${m}". Only "min: <number>", "max: <number>" and "eager: <bool>" expected.`)}else if([].concat(h).some(B=>typeof B!="number"))throw new SyntaxError(`[${k}] Invalid arity value "${[].concat(h).join(", ")}" for field "${m}". Number(s) expected.`)}}let J={rulePath:k,type:d};x&&(J.value=x),N&&(J.modifier=N),E&&(J.booleanfy=E),[void 0,null].includes(h)||(J.arity=h),S&&(J.singletons=S),C&&(J.optional=!0),w&&(J.assert=w),g&&(J.if=g),C&&n.dependencies.size&&(J.dependencies=Array.from(n.dependencies));for(let B of r)B.set(m,J);m!=="."&&C&&!y.optional&&p.add(m)}if(L||H){let J={dependencies:p,optional:C,assert:w,inference:g};if(L){r=this._compileASTSchemaFromSyntaxRules(L,t,{trail:W.concat("syntax"),schemaSet:r,assertionTrail:J});continue}let B=new Set;for(let[U,A]of H.entries()){let b=c(r),G=this._compileASTSchemaFromSyntaxRules(A,t,{trail:W.concat("syntaxes",U),schemaSet:b,assertionTrail:J});for(let M of G)B.add(M)}r=B}}let u=Array.from(r);for(let f=0;f<u.length;f++){let y=u[f],d=Object.fromEntries(y);if(!y.size){r.delete(y);continue}for(let m=f+1;m<u.length;m++){let g=u[m],x=Object.fromEntries(g);oe(d,x,"cs","rulePath")&&r.delete(g)}}return r}static fromJSON(e,t={},s=null){let r=this.compileASTSchemaFromSyntaxRules(t);if(Array.isArray(r.type)){for(let y of r.type){let m=l[y].fromJSON(e,t,s);if(m)return m}return}if(e instanceof o){if(e instanceof this)return e;e=e.jsonfy()}if(!fe(e))return;let n=null;if("nodeName"in e){if(e.nodeName&&e.nodeName!==this.NODE_NAME)return;({nodeName:n,...e}=e)}let a,p=(y,d=null,m=!1)=>{if(!(!n&&t.assert!==!0&&!(t.assert instanceof RegExp&&t.assert.test(activeTrailStr)))){if(d&&(y=`[${d}] ${y}`),m){a=y;return}throw new Error(y)}},c=(y,d)=>{if(y.value!==void 0){let m=y.booleanfy?[!0,!1]:y.value;return[].concat(m).includes(d.value)}return at[y.type].match?.(d,t)!==!1},u=(y,d)=>{for(let m of[].concat(y.type))if(typeof m=="string"&&m[0]===m[0].toLowerCase()){if(c(y,{value:d})===!0)return d}else{let x=l[m].fromJSON(d,{...t,assert:!1});if(x)return x}},f=(y,d,m,g=!1)=>{if(m.dependencies?.length){for(let h of m.dependencies)if(!(h in y))return p(`Missing dependency field "${h}" required by "${d}"`,m.rulePath,g),!1}if(m.if&&!aa(m.if,y,m.rulePath))return!0;if(![void 0,null].includes(m.arity)){if(e[d]===void 0)return m.optional?(y[d]=void 0,!0):(p(`Missing required field "${d}"`,m.rulePath,g),!1);if(!Array.isArray(e[d]))return p(`Field "${d}" must be an array`,m.rulePath,g),!1;if(m.arity!==1/0){let N=e[d].length;if(fe(m.arity)){if("min"in m.arity&&N<m.arity.min)return p(`A minimum of ${m.arity.min} argument(s) expected but got ${N}`,m.rulePath,g),!1;if("max"in m.arity&&N>m.arity.max)return p(`A maximum of ${m.arity.max} argument(s) expected but got ${N}`,m.rulePath,g),!1}else if(![].concat(m.arity).includes(N))return p(`Exactly ${[].concat(m.arity).join(" or ")} argument(s) expected but got ${N}`,m.rulePath,g),!1}let h=e[d].map(N=>u(m,N)).filter(N=>N!==void 0),S=h.length;if(e[d].length>S)return S?(p(`Failed to resolve some arguments for "${d}"`,m.rulePath,g),!1):(p(`Failed to resolve any argument for "${d}"`,m.rulePath,g),!1);if(m.singletons){let N=h.find((E,C)=>h.slice(C+1).some(w=>m.singletons==="BY_KEY"?w.identifiesAs?.(E):w instanceof E.constructor));if(N)return p(`Duplicate entry of type "${N.constructor.name}"`,m.rulePath,g),!1}return y[d]=h,!0}if(e[d]===void 0)return m.optional?(y[d]=m.booleanfy?!1:void 0,!0):(p(`Missing required field "${d}"`,m.rulePath,g),!1);let x=u(m,e[d]);return x===void 0?(p(`Failed to resolve field "${d}"`,m.rulePath,g),!1):(y[d]=x,!0)};e:for(let y of r instanceof Map?[r]:r){let d=Object.create(null),m=new Map(y),g=e;if(m.has(".")){let x=m.get("."),h=at[x.type];if([void 0,null].includes(g.value))continue e;({value:d.value,...g}=g);for(let S of Object.keys(h))typeof h[S]!="function"&&S in g&&({[S]:d[S],...g}=g);if(c(x,d)===!1)continue e;m.delete(".")}for(let x of new Set(Object.keys(g).concat(...m.keys()))){if(!m.has(x)){if(e[x]===void 0)continue;continue e}let h=m.get(x);if(f(d,x,h,!0)===!1)continue e}return typeof s=="function"?s(d,t):new this(d,t)}p(`Failed to match any schema${a?`. ${a}`:""}`,this.NODE_NAME)}toJSON(){return this.jsonfy()}jsonfy(e={},t=null,s=null){let r=(n,a,p)=>{let c=(f=e,y=p)=>Array.isArray(a)?a.reduce((d,m,g)=>{let x=r(g,m,y);return x===void 0?d:d.concat(x)},[]):a instanceof o?a.jsonfy(f,y,s):a;if(a===void 0)return;let u=p?p.transform(a,c,n,e):c();if(u instanceof o)throw new Error('"jsonfy" transforms must return plain JSON objects.');return u};return{...e.nodeNames!==!1?{nodeName:this.NODE_NAME}:{},...Object.fromEntries(Object.entries(this.#e).reduce((n,[a,p])=>{let c=r(a,p,t);return c===void 0?n:[...n,[a,c]]},[]))}}static async toStream(e,t={}){let s=e instanceof ot?e:await ot.create(e,{structured:!0,spaces:!0,...t});return!s.current()&&!s.done&&await s.next(),s}static async parse(e,{left:t=void 0,minPrecedence:s=0,trail:r=[],...n}={}){let a=await this.toStream(e,n),p=a.savepoint(),c=this.syntaxRules,u,f;if((f=[].concat(c)).length===1&&Array.isArray(f[0].type)&&!f[0].as)f[0].expression?u=await this._parseAsExpression(a,f[0].type,{left:t,minPrecedence:s,trail:r.concat(this.NODE_NAME),...n}):u=await this._parseFromTypes(a,f[0].type,{left:t,minPrecedence:s,trail:r.concat(this.NODE_NAME),...n});else{let y=await this._parseFromRules(a,c,{left:t,minPrecedence:s,trail:r.concat(this.NODE_NAME),...n});y&&(u=new this(y,{...n,dialect:a.options.dialect}))}return u||a.restore(p),u}static async _parseAsExpression(e,t,{left:s=void 0,minPrecedence:r,trail:n,...a}){if(s)throw new Error("TODO");for(s=await this._parseFromTypes(e,t,{minPrecedence:r,trail:n,...a});s;){let p=await e.match("operator");if(!p||p.prec<r)break;let c=s,u=await this._parseFromTypes(e,t,{left:s,minPrecedence:r,trail:n,...a});if(!u)return s;s=u}return s}static async _parseFromRules(e,t,{left:s,minPrecedence:r,trail:n,...a},p={}){let c=Array.isArray(t)?t:[t],u=0,f=r;for(let[y,d]of c.entries()){if(d.dialect&&d.dialect!==e.options.dialect){u++;continue}let{requiredSpacing:m,peek:g,type:x,value:h,syntax:S,syntaxes:N,as:E,if:C,arity:w,optionalParens:L,singletons:H,itemSeparator:j,optional:W=!1,assert:k=!1,booleanfy:$,...K}=d,J=n.concat(`${Array.isArray(t)?y:""}${E?`<${E}>`:""}`||[]),B=J.join("."),U=Aa(K);if(U.length)throw new SyntaxError(`[${B}] Unsupported attributes in rule: "${U.join('", "')}".`);let A=typeof x=="string"&&x[0]===x[0].toLowerCase(),b=E&&!A&&c[y+1]?.type==="operator"||c[y+1]?.type==="punctuation"&&c[y+1]?.value===".",G=async()=>{if(!(Array.isArray(g)&&!await Y(-1))){for(let R of[].concat(x))if(s instanceof l[R])return p[E]=s,!0;return!1}},M=()=>{let R=e.current();return m===!1&&!R?.spaceBefore||m===!0&&R?.spaceBefore||m===`
`&&/\n/.test(R?.spaceBefore)},Y=async(R=0)=>R?await e.match(g[0]+R,...g.slice(1)):await e.match(...g),O=async()=>{let R;if((R=await e.match("operator"))&&R.prec<r)return;let I=await e.eat(x,x.endsWith("_block")?void 0:h);return I?.type==="operator"&&(f=I.prec+(I.assoc==="right"?0:1)),I},D=async(R,I)=>{if(Array.isArray(x))return await this._parseFromTypes(R,x,{minPrecedence:I,trail:J,...a});let ue=l[x];if(!ue)throw new SyntaxError(`[${B}] Unknown node type <${x}>.`);return await ue.parse(R,{minPrecedence:I,trail:J,...a})},F=(R,I,ue=!1,se=!1)=>{if(!(!k&&!se&&a.assert!==!0&&!(a.assert instanceof RegExp&&a.assert.test(B)))){if(ue){let le=R.current()||R.previous(),de=R.current()?ue===1?":":" near":" by";I+=le?`${de}${typeof le.value=="string"?` "${le.value}"`:""} (${le.type}) at <line ${le.line}, column ${le.column}>`:`${de} end of stream`}throw new SyntaxError(`[${B}] ${I}.`)}};if(x){if(s){if(!b||!await G())return;s=null;continue}else if(s===!1&&b){if(W){s=null;continue}return}}if(C&&!aa(C,p,B))continue;if(m!==void 0&&!M()){F(e,"Required spacing mismatch",!0);return}if(Array.isArray(g)&&!await Y()){F(e,"Peek failure",!0);return}if(E==="."){if(!x||!A)throw new SyntaxError(`[${B}] Terminal node rules must be token-typed rules.`);let R=await O();if(!R){F(e,`Token of type "${x}"${h?` and value "${h}"`:""} expected but got "${e.current()?.type}"`,!0);return}let I,ue,se,le,de,zs,xe,Te;({type:I,line:ue,column:se,spaceBefore:le,prec:de,assoc:zs,resultType:xe,...Te}=R),Object.assign(p,Te);continue}let T=e;if(typeof x=="string"&&x.endsWith("_block")){if(!(T=(await O())?.value)){if(W)continue;F(e,`Token of type "${x}" expected but got "${e.current()?.type}"`,!0);return}f=0,!T.current()&&!T.done&&await T.next()}if(![void 0,null].includes(w)){if(!E)throw new SyntaxError(`[${B}] Multi-argument field rules must have a "as" attribute.`);if(!x)throw new SyntaxError(`[${B}] Multi-argument field rules must have a "type" attribute.`);if(A)throw new SyntaxError(`[${B}] Multi-argument field rules must be node-typed rules.`);let R,I=[],ue=f;if(j?.type==="operator"){let se=j.value&&(T.options.operators?.classic.get(j.value)||T.options.operators?.compound.get(j.value));se?.prec&&(ue=se?.prec+1)}for(;R=await D(T,ue);){if(H&&(H==="BY_KEY"?I.some(le=>le.identifiesAs?.(R)):I.some(le=>le instanceof R.constructor))){F(T,`Duplicate entry of type "${R.constructor.name}"`,!0,!0);return}if(I.push(R),fe(w)&&w.eager===!1&&I.length===w.max||j&&!await T.eat(j.type,j.value))break}if(w!==1/0){let se=I.length;if(!se&&W)continue;let le=T.current(),de=le?`. Unexpected ${le.type}${typeof le.value=="string"?` "${le.value}"`:""}`:"";if(fe(w)){if("min"in w&&se<w.min){F(T,`A minimum of ${w.min} argument(s) expected but got ${se}${de}`,!0);return}if("max"in w&&se>w.max){F(T,`A maximum of ${w.max} argument(s) expected but got ${se}${de}`,!0);return}}else if(![].concat(w).includes(se)){F(T,`Exactly ${[].concat(w).join(" or ")} argument(s) expected but got ${se}${de}`,!0);return}}p[E]=I;continue}let q;if(S){let R=T.savepoint();q=await this._parseFromRules(T,S,{left:s,minPrecedence:f,trail:J.concat("syntax"),...a}),q===void 0?T.restore(R):s&&(s=null)}else if(N){for(let[R,I]of N.entries()){let ue=T.savepoint();if(q=await this._parseFromRules(T,I,{left:s,minPrecedence:f,trail:J.concat("syntaxes",R),...a}),q===void 0)T.restore(ue);else break}q!==void 0&&s&&(s=null)}else if(!(typeof x=="string"&&x.endsWith("_block")))q=A?(await O())?.value:await D(T,f);else if(!x)throw new SyntaxError(`[${B}] Rules must have a "type", "syntax" or "syntaxes" attribute.`);if(q===void 0&&!W){F(T,x?"Unexpected token":null,1);return}if(typeof x=="string"&&x.endsWith("_block")&&!T.done&&T.current())return;E?($&&(q=q!==void 0),p[E]=q):(S||N)&&Object.assign(p,q)}if(u!==c.length)return p}static async _parseFromTypes(e,t,{left:s,minPrecedence:r,trail:n,...a}){for(let p of t)if(typeof p=="string"&&p[0]===p[0].toLowerCase()){if(await e.match(p))return await e.eat()}else{let u=l[p];if(!u)throw new SyntaxError(`[${this.NODE_NAME}] Unknown node type "${p}".`);let f=await u.parse(e,{left:s,minPrecedence:r,trail:n,...a});if(f!==void 0)return f}}toString(){return this.stringify()}stringify(e={}){return this._stringifyFromRules(this.constructor.syntaxRules,{trail:[this.NODE_NAME],...e})}_stringifyFromRules(e,{trail:t=[],startingIndentLevel:s=0,autoLineBreakThreshold:r=60,...n},a=null){let p=()=>" ",c=d=>`
${(n.tabSpaces===4?"	":" ".repeat(n.tabSpaces||2)).repeat(d)}`,u=[],f=[].concat(e),y=0;for(let[d,m]of f.entries()){if(m.dialect&&m.dialect!==this.options.dialect)continue;let{requiredSpacing:g,type:x,value:h,booleanfy:S,syntax:N,syntaxes:E,as:C,if:w,arity:L,itemSeparator:H,optional:j=!1,autoSpacing:W=g,optionalParens:k,autoIndent:$=!1,autoIndentAdjust:K=0}=m,J=t.concat(`${Array.isArray(e)?d:""}${C?`<${C}>`:""}`||[]),B=J.join("."),U=$;if(w&&!aa(w,this.#e,this.NODE_NAME))continue;let A={startingIndentLevel:s+($?1:0)+K,autoLineBreakThreshold:r,...n},b;if([void 0,null].includes(L))if(N)b=this._stringifyFromRules(N,{trail:J.concat("syntax"),...A},a);else if(E){let O=-1;for(let[D,F]of E.entries()){let T={score:0},q=this._stringifyFromRules(F,{trail:J.concat("syntaxes",D),...A},T);typeof q=="string"&&T.score>O&&(b=q,O=T.score)}a&&(a.score+=O)}else if(C){let O=this._get(C==="."?"value":C),D=h!=null;if(D&&S&&O===!0&&(O=h),D&&([].concat(h).includes(O)?a&&a.score++:O=void 0),O!==void 0){O instanceof o&&(O=O.stringify(A));let F=C==="."?{...m,...this.#e}:{...m,value:O};b=this._stringifyTerminal(F,A)}}else b=this._stringifyTerminal(m,A);else{let O=!1,D=this._get(C),F=D?.length||0;if(typeof $=="number"&&F<$&&(A.startingIndentLevel-=1),D&&((O=L===1/0)||(fe(L)?O=(!("min"in L)||F>=L.min)&&(!("max"in L)||F<=L.max):O=[].concat(L).includes(F))),O){let T=D.map(ue=>ue.stringify(A));U=$===!0||typeof $=="number"&&D.length>=$||W===`
`;let q=T.join(" "),R=A.prettyPrint&&U&&(q.length>r||q.includes(`
`))?c(A.startingIndentLevel):p(),I=H?this._stringifyTerminal(H,A):"";/^\w+$/.test(I)?I=`${R}${I}${R}`:I===";"&&A.prettyPrint?I=`${I}
${R}`:I=`${I}${R}`,b=T.join(I)}}if(x==="paren_block"&&k&&!b?.trim()){if(k===!0||n.pruneOptionalParens){a&&a.score++,y++;continue}b=""}if(b===void 0){if(j){y++;continue}return}C&&a&&a.score++;let G=!1,M=b.length>r||b.includes(`
`);if(typeof x=="string"&&x.endsWith("_block")){let O=A.prettyPrint&&$&&M,D={brace_block:"{}",bracket_block:"[]",paren_block:"()"}[x];b=[D[0],O&&!/^\s/.test(b)?c(s+1):D[0]==="{"?p():"",b,O||/^\s/.test(b)?c(s):D[1]==="}"?p():"",D[1]].join("")}else A.prettyPrint&&U&&(u.length||M)&&b!==""&&(b=[c(s+(W===`
`?0:1)),b].join(""),G=!0);let Y=u[u.length-1];b!==""&&!G&&u.length&&!/\s$/.test(Y)&&(Array.isArray(W)?W.includes(Y):W!==!1)&&(W===`
`&&A.prettyPrint?u.push(c(s)):u.push(p())),u.push(b)}if(u.length||y===f.length)return u.join("")}_stringifyTerminal(e,t={}){switch(e.type){case"data_type":return this._stringifyDataType(e,t);case"identifier":return this._stringifyIdentifier(e,t);case"keyword":return this._stringifyKeyword(e,t);case"operator":return this._stringifyOperator(e,t);case"punctuation":return this._stringifyPunctuation(e,t);case"bind_var":return this._stringifyBindVar(e,t);case"version_spec":return`@${e.value}`}if(!Array.isArray(e.type)){if(e.type.endsWith("_literal"))return this._stringifyLiteral(e,t);if(e.type.endsWith("_var"))return this._stringifyVariable(e,t);if(e.type.endsWith("_comment"))return this._stringifyComment(e,t)}return String(e.value)}_stringifyIdentifier(e){let{value:t}=e,s=['"'];this.options.dialect==="mysql"&&(this.options.mysqlAnsiQuotes?s.push("`"):s.fill("`"));let r=s.includes(e.delim)?e.delim:s[0];return e.delim||/^\d/.test(t)||!/^(\*|[\w]+)$/.test(t)?`${r}${String(t||"").replace(new RegExp(r,"g"),r.repeat(2))}${r}`:t}_stringifyKeyword(e){return String(e.value)}_stringifyOperator(e){return e.value===":"&&this.#t?.isProperty?"\\:":String(e.value)}_stringifyPunctuation(e){return String(e.value)}_stringifyDataType(e){return String(e.value)}_stringifyLiteral(e,t){let{value:s}=e;switch(e.type){case"bit_literal":return this._stringifyBitLiteral(e,t);case"hex_literal":return this._stringifyHexLiteral(e,t);case"number_literal":return this._stringifyNumberLiteral(e,t);case"string_literal":return this._stringifyStringLiteral(e,t);case"bool_literal":return/^true$/i.test(s+"")?"TRUE":"FALSE";case"null_literal":return"NULL"}return String(s)}_stringifyBindVar(e){let{value:t}=e;return this.options.dialect==="mysql"?"?":`$${t}`}_stringifyBitLiteral(e){let{value:t}=e;return this.options.dialect==="mysql"?`0b${t}`:`B'${t}'`}_stringifyHexLiteral(e){let{value:t}=e;return this.options.dialect==="mysql"?`0x${t}`:`X'${t}'`}_stringifyNumberLiteral(e){let{value:t}=e;return String(t)}_stringifyStringLiteral(e){let{value:t}=e,s=["'"],r=null;this.options.dialect==="postgres"&&e.delim?.startsWith("$")?s.fill(e.delim):this.options.dialect==="mysql"&&!this.options.mysqlAnsiQuotes&&s.push('"');let n=s.includes(e.delim)?e.delim:s[0];if((this.options.dialect==="mysql"&&!this.options.mysqlNoBackslashEscapes||this.options.dialect==="postgres"&&e.modifier==="E")&&(r="\\"),n.length>1)return`${n}${t}${n}`;if(!r)r=n;else if(r==="\\"){let a={"\\":"\\\\","\0":"\\0","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","	":"\\t","\v":"\\v","":"\\Z"};t=t.replace(/[\\\0\b\r\n\t\x1A]/g,p=>a[p])}return t=`${n}${(t||"").replace(new RegExp(n,"g"),`${r}${n}`)}${n}`,e.modifier?`${e.modifier}${t}`:t}_stringifyVariable(e){let{type:t,value:s}=e;return this.options.dialect==="mysql"?`${t==="system_var"?"@@":"@"}${s}`:`${this.#t?.isProperty?"\\:":":"}${s}`}_stringifyComment(e,t={}){let{value:s}=e;if(e.type==="block_comment"){let a="  ".repeat(t.startingIndentLevel||0),p=s.trim().split(`
`).map(u=>u.trim());return[`${a}/**`,...p.map(u=>`${a} * ${u}`),`${a} */`].join(`
`)}let r=["--"];return this.options.dialect==="mysql"&&r.push("#"),`${r.includes(e.delim)?e.delim:r[0]} ${s}`}},Aa=o=>Object.keys(o).filter(e=>!$a.has(e)),$a=new Set(["dialect","autoSpacing","optionalParens","autoIndent","autoIndentAdjust","type","value","delim","modifier","syntax","syntaxes","as","booleanfy","if","arity","itemSeparator","singletons","keyed","requiredSpacing","peek","optional","assert"]),aa=(o,e,t)=>[].concat(o).some(s=>{if(fe(s))return Object.entries(s).every(([n,a])=>{let p=!0;return n.startsWith("!")&&(n=n.slice(1),p=!1),(Array.isArray(a)?a.includes(e[n]):e[n]===a)===p});if(typeof s!="string")throw new SyntaxError(`[${t}] A specifier of type string or object expected in inferenceMatch but got ${s===null?"null":`type ${typeof s}`}`);let r=!0;return s.startsWith("!")&&(s=s.slice(1),r=!1),![void 0,null,!1].includes(e[s])===r});var yt=class extends _{static get syntaxRules(){return{dialect:"postgres",syntax:[{type:"keyword",value:"CYCLE"},{assert:!0,syntax:[{type:"ColumnRef1",as:"column_names",arity:{min:1},itemSeparator:{type:"punctuation",value:","},assert:!0,autoIndent:2},{type:"keyword",value:"SET"},{type:"ColumnRef1",as:"mark_col_name"},{optional:!0,syntax:[{type:"keyword",value:"TO"},{type:"Expr",as:"mark_value"},{type:"keyword",value:"DEFAULT"},{type:"Expr",as:"mark_default"}]},{type:"keyword",value:"USING"},{type:"ColumnRef1",as:"path_col_name"}]}]}}breadthOrDepthFirst(){return this._get("breadth_or_depth_first")}columnNames(){return this._get("column_names")}markColName(){return this._get("mark_col_name")}markValue(){return this._get("mark_value")}markDefault(){return this._get("mark_default")}pathColName(){return this._get("path_col_name")}};var mt=class extends _{static get syntaxRules(){return{dialect:"postgres",syntax:[{type:"keyword",value:"SEARCH"},{assert:!0,syntax:[{type:"keyword",as:"breadth_or_depth_first",value:["BREADTH","DEPTH"]},{type:"keyword",value:"FIRST"},{type:"keyword",value:"BY"},{type:"ColumnRef1",as:"column_names",arity:{min:1},itemSeparator:{type:"punctuation",value:","},assert:!0,autoIndent:2},{type:"keyword",value:"SET"},{type:"ColumnRef1",as:"seq_col_name"}]}]}}breadthOrDepthFirst(){return this._get("breadth_or_depth_first")}columnNames(){return this._get("column_names")}seqColName(){return this._get("seq_col_name")}};var Z=o=>class extends o{#e;resultSchema(){return this.#e}static fromJSON(e,t={},s=null){if(e instanceof _)return super.fromJSON(e,t,s);let{result_schema:r,...n}=e,a=super.fromJSON(n,t,s);if(a&&r){if(!(r instanceof _))throw new Error("Invalid Schema object passed at inputJson.result_schema");a.#e=r}return a}jsonfy(e={},t=null,s=null){let r=super.jsonfy(e,t,s);return this.#e&&(r={...r,result_schema:this.#e}),r}};var Ce=class extends _{get statementNode(){return this}#e;get uuid(){return this.#e||(this.#e=`$query${(0|Math.random()*9e6).toString(36)}`),this.#e}static fromJSON(e,t={},s=null){if(e instanceof _)return super.fromJSON(e,t,s);let{uuid:r,...n}=e,a=super.fromJSON(n,t,s);return a&&(a.#e=r),a}jsonfy(e={},t=null,s=null){let r=super.jsonfy(e,t,s);return this.#e&&(r={uuid:this.#e,...r}),r}};var ge=class extends Z(Ce){renderBindings(e){if(!Array.isArray(e))throw new Error("Values must be an array");let t=[...this.queryBindings()];for(let s=0;s<e.length;s++){let r=t.filter(n=>n.offset()===s+1);if(!r.length)throw new Error(`No bindings exists at offset #${s}`);r.forEach(n=>n.value(e[s]))}}normalizeBindings(e=!1){let t=[...this.queryBindings()];if(!e)return t.forEach((n,a)=>n.offset(a+1)),t;let s=new Map,r=1;for(let n of t)if(n.offset()===0||!s.has(n.offset())){let a=r++;s.set(n.offset(),a),n.offset(a)}else n.offset(s.get(n.offset())).withDetail("redundant",!0);return t.filter(n=>!n.getDetail("redundant"))}};var ne=class o{#e;get cb(){return this.#e}#i=new Map;#t=new Map;#n;get parentTransformer(){return this.#n}#o;get statementNode(){return this.#o}get statementContext(){return this.#r?this:this.#n.statementContext}get rootContext(){return this.#n?.rootContext||this}#r;get isStatementContext(){return this.#r}#s=new Map([["outputSchemas",new Set],["tableSchemas",new Set],["selectorDimensions",new Map],["payloadDimensions",new Set]]);get artifacts(){return this.#s}constructor(e,t=null,s=null){this.#e=e,this.#n=t,this.#o=s,this.#r=!t||s!==t.statementNode}rand(e,{asSalt:t=!1,rands:s=this.#i}={}){return s.set(e,s.has(e)?s.get(e)+1:0),`${t?"~":"$"}${e}~${s.get(e)}`}hash(e,t,{hashes:s=this.#t}={}){return s.has(e)||s.set(e,this.rand(t)),s.get(e)}transform(e,t,s,r,n=this){let a=(p=r,c=n)=>(typeof p=="function"&&(c=new o(p,c,this.#o),p=r),n.statementNode!==this.#o?t(p,c):this.#e(e,(u=p)=>(typeof u=="function"&&(c=new o(u,c,this.#o),u=p),t(u,c)),s,p));return this.#n?this.#n.transform(e,a,s,r,n):a()}};var dt=class extends ge{static get _bodyTypes(){return["SelectStmt","TableStmt","InsertStmt","UpsertStmt","UpdateStmt","DeleteStmt","ValuesConstructor"]}static get syntaxRules(){return[{type:"keyword",value:"WITH"},{type:"keyword",as:"recursive",value:"RECURSIVE",booleanfy:!0,optional:!0},{type:"CTEItem",as:"declarations",arity:{min:1},itemSeparator:{type:"punctuation",value:","},assert:!0,autoIndent:2},{type:this._bodyTypes,as:"body",assert:!0,autoSpacing:`
`}]}recursive(){return this._get("recursive")}declarations(){return this._get("declarations")}body(){return this._get("body")}jsonfy(e={},t=null,s=null){if(!e.deSugar)return super.jsonfy(e,t,s);let r;return t=new ne((a,p,c)=>{if(c==="body"&&a.parentNode===this){let u=p();return r=u.result_schema,u}return p()},t,this),{...super.jsonfy(e,t,s),result_schema:r}}};var _t=class extends ge{static get syntaxRules(){return[{type:"CTEItemAlias",as:"alias",assert:!0},{type:"keyword",value:"AS"},{optional:!0,dialect:"postgres",syntaxes:[[{type:"operator",as:"not_materialized_kw",value:"NOT",booleanfy:!0},{type:"keyword",value:"MATERIALIZED",assert:!0}],{type:"keyword",as:"materialized",value:"MATERIALIZED",booleanfy:!0}]},{type:"paren_block",syntax:{type:["SelectStmt","InsertStmt","UpsertStmt","UpdateStmt","DeleteStmt","TableStmt","ValuesConstructor"],as:"expr",autoIndent:!0}},{type:"PGSearchClause",as:"search_clause",optional:!0},{type:"PGCycleClause",as:"cycle_clause",optional:!0}]}alias(){return this._get("alias")}notMaterializedKW(){return this._get("not_materialized_kw")}materialized(){return this._get("materialized")}expr(){return this._get("expr")}searchClause(){return this._get("search_clause")}cycleClause(){return this._get("cycle_clause")}jsonfy(e={},t=null,s=null){let r=super.jsonfy(e,t,s);if(e.deSugar){let n={nodeName:l.Identifier.NODE_NAME,value:r.alias.value,delim:r.alias.delim},a=r.expr.result_schema;if(a instanceof l.TableSchema?a=a.clone({renameTo:n}):a=l.TableSchema.fromJSON({name:n,entries:a?.entries().map(p=>p.jsonfy())||[]}),r.alias.columns?.length){if(r.alias.columns.length!==a.length)throw new SyntaxError(`[${this}] Number of column aliases must match number of result columns.`);a=a.clone({},new ne((p,c,u)=>typeof u=="number"&&p.parentNode===a?p instanceof l.ColumnSchema?p.jsonfy({renameTo:r.alias.columns[u]}):{...p.jsonfy(),nodeName:l.ColumnSchema.NODE_NAME,name:r.alias.columns[u]}:c()))}t.statementContext.artifacts.get("tableSchemas").add({type:"CTEItem",resultSchema:a}),r={...r,result_schema:a}}return r}};var ie=class o extends _{static get syntaxRules(){return{type:"identifier",as:"."}}static get syntaxPriority(){return-1}value(){return this._get("value")}identifiesAs(e,t=void 0){return e instanceof o?oe(this.value(),e.value(),t===void 0?this._has("delim")||e._has("delim"):t):typeof e=="string"?oe(this._get("value"),e,t===void 0?this._has("delim"):t):super.identifiesAs(e,t)}};var ht=class extends ie{static get syntaxRules(){let e={type:"punctuation",value:","};return[{...[].concat(super.syntaxRules)[0]},{type:"paren_block",syntax:{type:"Identifier",as:"columns",arity:{min:1},itemSeparator:e,assert:!0},if:"value",optional:!0,optionalParens:!0}]}columns(){return this._get("columns")}};var oa={};ve(oa,{CheckConstraint:()=>bt,ColumnDefaultConstraint:()=>wt,ColumnDiff:()=>xt,ColumnExpressionConstraint:()=>kt,ColumnFKConstraint:()=>It,ColumnIdent:()=>Dr,ColumnIdentityConstraint:()=>Ge,ColumnNullConstraint:()=>Dt,ColumnPKConstraint:()=>Lt,ColumnSchema:()=>gt,ColumnUKConstraint:()=>Mt,ConstraintSchema:()=>X,CreateTableStmt:()=>Fr,FKDeleteRule:()=>Et,FKMatchRule:()=>Nt,FKUpdateRule:()=>St,IndexDiff:()=>Pr,IndexSchema:()=>jr,MYColumnAutoIncrementModifier:()=>Fe,MYColumnCommentModifier:()=>Pt,MYColumnOnUpdateModifier:()=>jt,MYColumnVisibilityModifier:()=>Ut,PGIndexParamInclude:()=>At,PGIndexParamUsing:()=>Ot,PGIndexParamWith:()=>Rt,PGIndexParameters:()=>Tt,PGTableEXConstraint:()=>$t,PGTableEXConstraintItem:()=>vt,ReferentialAction:()=>Ct,SchemaDiff:()=>Ur,SchemaIdent:()=>Lr,SchemaSchema:()=>$r,TableDiff:()=>Jr,TableFKConstraint:()=>Jt,TableIdent:()=>Mr,TablePKConstraint:()=>Bt,TableSchema:()=>Br,TableUKConstraint:()=>qt});var v=class extends _{static get syntaxRules(){return[]}get length(){return(this._get("entries")||[]).length}[Symbol.iterator](){return(this._get("entries")||[])[Symbol.iterator]()}entries(){return(this._get("entries")||[]).slice(0)}get(e){return this._get("entries",e)}set(e,t){return this._set("entries",e,t)}has(e){return this._has("entries",e)}add(...e){return this._add("entries",...e)}};var Ne=class extends v{};var xt=class extends Ne{};var _e=class o extends v{name(){return this._get("name")}identifiesAs(e,...t){return this.name()?.identifiesAs(e instanceof o?e.name():e,...t)}static fromJSON(e,t={},s=null){if(e instanceof _)return super.fromJSON(e,t,s);let{ddl_name:r,...n}=e,a=super.fromJSON(n,t,s);if(r&&a){let p=[l.SchemaIdent,l.TableIdent,l.ColumnIdent].reduce((c,u)=>c||u.fromJSON(r),null);a._set("ddl_name",p)}return a}jsonfy({renameTo:e,...t}={},s=null,r=null){let n=super.jsonfy(t,s,r);if(e){if(e instanceof _)throw new Error("options.renameTo must be a JSON value.");return n.name?.value&&!n.ddl_name&&(n={...n,ddl_name:n.name}),{...n,name:e}}return n}};var gt=class extends _e{static get syntaxRules(){return[{type:["ColumnIdent","Identifier"],as:"name"},{type:"DataType",as:"data_type",assert:!0},{type:["CheckConstraint","ColumnDefaultConstraint","ColumnExpressionConstraint","ColumnFKConstraint","ColumnIdentityConstraint","ColumnNullConstraint","ColumnPKConstraint","ColumnUKConstraint","MYColumnAutoIncrementModifier","MYColumnCommentModifier","MYColumnOnUpdateModifier","MYColumnVisibilityModifier"],as:"entries",arity:1/0,singletons:!0,optional:!0}]}dataType(){return this._get("data_type")}defaultConstraint(){for(let e of this)if(e instanceof l.ColumnDefaultConstraint)return e}expressionConstraint(){for(let e of this)if(e instanceof l.ColumnExpressionConstraint)return e}identityConstraint(){for(let e of this)if(e instanceof l.ColumnIdentityConstraint)return e}nullConstraint(){for(let e of this)if(e instanceof l.ColumnNullConstraint)return e}pkConstraint(e=!1){for(let t of this)if(t instanceof l.ColumnPKConstraint)return t;if(e&&this.parentNode instanceof l.TableSchema){let t=this.parentNode.pkConstraint(!1),s=t?.columns()||[];if(s.length===1&&s[0].identifiesAs(this.name())){let{nodeName:r,columns:n,...a}=t.jsonfy(),p=l.ColumnPKConstraint.fromJSON(a);return this._adoptNodes(p),p}}}fkConstraint(e=!1){for(let t of this)if(t instanceof l.ColumnFKConstraint)return t;if(e&&this.parentNode instanceof l.TableSchema){let{nodeName:t,columns:s,...r}=this.parentNode.fkConstraints(!1).find(n=>{let a=n.columns();return a.length===1&&a[0].identifiesAs(this.name())})?.jsonfy()||{};if(t){let n=l.ColumnFKConstraint.fromJSON(r);return this._adoptNodes(n),n}}}ukConstraint(e=!1){for(let t of this)if(t instanceof l.ColumnUKConstraint)return t;if(e&&this.parentNode instanceof l.TableSchema){let{nodeName:t,columns:s,...r}=this.parentNode.ukConstraints(!1).find(n=>{let a=n.columns();return a.length===1&&a[0].identifiesAs(this.name())})?.jsonfy()||{};if(t){let n=l.ColumnUKConstraint.fromJSON(r);return this._adoptNodes(n),n}}}ckConstraint(e=!1){for(let t of this)if(t instanceof l.CheckConstraint)return t;if(e&&this.parentNode instanceof l.TableSchema){let t=this.parentNode.ckConstraints(!1).find(s=>{let r=s.columns();return r.length===1&&r[0].identifiesAs(this.name())});if(t=t?.clone())return this._adoptNodes(t),t}}jsonfy({normalized:e=!1,...t}={},s=null,r=null){let n=super.jsonfy(t,s,r);if(e){let a=[];for(let p of["pk","fk","uk","ck"]){let c=`${p}Constraint`;this[c]()||a.push(this[c](!0)?.jsonfy())}if((a=a.filter(p=>p)).length)return{...n,entries:n.entries.concat(a)}}return n}};var Nt=class extends _{static get syntaxRules(){return[{type:"keyword",value:"MATCH"},{type:"keyword",as:"value",value:["FULL","PARTIAL","SIMPLE"],assert:!0}]}value(){return this._get("value")}};var Et=class extends _{static get syntaxRules(){return[{type:"keyword",value:"ON"},{type:"keyword",value:"DELETE"},{type:"ReferentialAction",as:"action",assert:!0}]}action(){return this._get("action")}};var St=class extends _{static get syntaxRules(){return[{type:"keyword",value:"ON"},{type:"keyword",value:"UPDATE"},{type:"ReferentialAction",as:"action",assert:!0}]}action(){return this._get("action")}};var Tt=class extends v{static get syntaxRules(){return[{type:["PGIndexParamInclude","PGIndexParamUsing","PGIndexParamWith"],as:"entries",arity:1/0,singletons:!0}]}};var At=class extends v{static get syntaxRules(){return[{type:"keyword",value:"INCLUDE"},{type:"paren_block",syntax:{type:"ColumnRef2",as:"entries",arity:{min:1},itemSeparator:{type:"punctuation",value:","}}}]}};var Ot=class extends _{static get syntaxRules(){return[{type:"keyword",value:"USING"},{type:"keyword",value:"INDEX"},{type:"keyword",value:"TABLESPACE"},{type:"identifier",as:"."}]}};var Rt=class extends v{static get syntaxRules(){return[{type:"keyword",value:"WITH"},{type:"paren_block",syntax:{type:"ConfigAssignmentExprAlt2",as:"entries",arity:{min:1},itemSeparator:{type:"punctuation",value:","}}}]}};var X=class extends _e{static buildSyntaxRules(e){return[{optional:!0,syntax:[{type:"keyword",value:"CONSTRAINT"},{type:"Identifier",as:"name",assert:!0}]},...e,{optional:!0,dialect:"postgres",syntaxes:[[{type:"operator",as:"pg_deferrable",value:"NOT"},{type:"keyword",value:"DEFERRABLE"}],{type:"keyword",as:"pg_deferrable",value:"DEFERRABLE"}]},{optional:!0,dialect:"postgres",syntax:[{type:"keyword",value:"INITIALLY"},{type:"keyword",as:"pg_deferred",value:["DEFERRED","IMMEDIATE"]}]}]}static get syntaxRules(){return{type:["TableFKConstraint","TablePKConstraint","TableUKConstraint","CheckConstraint","ColumnDefaultConstraint","ColumnExpressionConstraint","ColumnFKConstraint","ColumnIdentityConstraint","ColumnNullConstraint","ColumnPKConstraint","ColumnUKConstraint"]}}get isColumnLevel(){return this.parentNode instanceof l.ColumnSchema}pgDeferrable(){return this._get("pg_deferrable")}pgDeferred(){return this._get("pg_deferred")}};var vt=class extends X{static get syntaxRules(){return[{syntaxes:[{type:"ColumnRef2",as:"expr"},{type:"ParenExpr",as:"expr"}]},{optional:!0,syntax:[{type:"operator",value:"COLLATE"},{type:"string_literal",as:"collation",assert:!0}]},{optional:!0,syntax:[{type:"Identifier",as:"opclass"},{optional:!0,type:"paren_block",syntax:{type:"ConfigAssignmentExpr",as:"opclass_parameters",arity:{min:1},itemSeparator:{type:"punctuation",value:","},assert:!0}}]},{type:"keyword",value:["ASC","DESC"],as:"dir",optional:!0},{optional:!0,syntax:[{type:"keyword",value:"NULLS"},{type:"keyword",as:"nulls_spec",value:["FIRST","LAST"],assert:!0}]},{type:"keyword",value:"WITH"},{type:"operator",as:"operator"}]}expr(){return this._get("expr")}collation(){return this._get("collation")}opclass(){return this._get("opclass")}opclassParameters(){return this._get("opclass_parameters")}dir(){return this._get("dir")}nullsSpec(){return this._get("nulls_spec")}operator(){return this._get("operator")}};var Ct=class extends _{static get syntaxRules(){return{syntaxes:[{type:"keyword",as:"value",value:["NO ACTION","RESTRICT","CASCADE"]},[{type:"keyword",as:"value",value:["SET NULL","SET DEFAULT"]},{optional:!0,dialect:"postgres",type:"paren_block",syntax:{type:"Identifier",as:"columns",arity:{min:1},itemSeparator:{type:"punctuation",value:","}}}]]}}value(){return this._get("value")}columns(){return this._get("columns")}};var bt=class extends X{static get syntaxRules(){return this.buildSyntaxRules([{type:"keyword",value:"CHECK"},{type:"paren_block",syntax:{type:"Expr",as:"expr",assert:!0},assert:!0},{type:"keyword",as:"no_inherit_kw",value:"NO INHERIT",optional:!0}])}expr(){return this._get("expr")}noInheritKW(){return this._get("no_inherit_kw")}columns(){let e=[];return this.expr()?.walkTree(t=>{if(t instanceof l.ColumnRef1)e.push(l.ColumnRef2.fromJSON({value:t.value()}));else return t}),e}};var wt=class extends X{static get syntaxRules(){return this.buildSyntaxRules([{type:"keyword",value:"DEFAULT"},{type:"Expr",as:"expr",assert:!0,dialect:"postgres"},{type:["NumberLiteral","StringLiteral","NullLiteral","BoolLiteral","CallExpr","RowConstructor"],as:"expr",assert:!0,dialect:"mysql"}])}expr(){return this._get("expr")}};var kt=class extends X{static get syntaxRules(){return this.buildSyntaxRules([{dialect:"postgres",syntax:[{type:"keyword",value:"GENERATED"},{type:"keyword",value:"ALWAYS"},{type:"keyword",value:"AS"},{type:"paren_block",syntax:{type:"Expr",as:"expr",assert:!0}},{type:"keyword",as:"stored",value:"STORED",assert:!0}]},{dialect:"mysql",syntax:[{optional:!0,syntax:[{type:"keyword",as:"my_generated_kw",value:"GENERATED",booleanfy:!0},{type:"keyword",value:"ALWAYS"}]},{type:"keyword",value:"AS"},{type:"paren_block",syntax:{type:"Expr",as:"expr",assert:!0}},{type:"keyword",as:"stored",value:["STORED","VIRTUAL"],optional:!0}]}])}myGeneratedKW(){return this._get("my_generated_kw")}expr(){return this._get("expr")}stored(){return this._get("stored")}};var{ColumnSchema:Ja,ColumnRef2:Ba}=l,It=class extends X{static get syntaxRules(){let e={type:"punctuation",value:","};return this.buildSyntaxRules([{type:"keyword",value:"REFERENCES"},{type:"TableRef2",as:"target_table",assert:!0},{dialect:"postgres",optional:!0,type:"paren_block",syntax:{type:"Identifier",as:"target_columns",arity:1,itemSeparator:e,singletons:"BY_KEY",assert:!0}},{dialect:"mysql",type:"paren_block",syntax:{type:"Identifier",as:"target_columns",arity:1,itemSeparator:e,singletons:"BY_KEY",assert:!0}},{type:["FKMatchRule","FKDeleteRule","FKUpdateRule"],as:"referential_rules",arity:1/0,singletons:!0}])}targetTable(){return this._get("target_table")}targetColumns(){return this._get("target_columns")}referentialRules(){return this._get("referential_rules")}columns(){return this.parentNode instanceof Ja?[Ba.fromJSON({value:this.parentNode.name().value()})]:[]}};var Fe=class extends _{static get syntaxRules(){return{dialect:"mysql",syntax:{type:"keyword",as:".",value:"AUTO_INCREMENT"}}}jsonfy(e={},t=null,s=null){return(e.toDialect||this.options.dialect)==="postgres"?new Ge().jsonfy(e,t,s):super.jsonfy(e,t,s)}};var Ge=class extends X{static get syntaxRules(){return this.buildSyntaxRules([{type:"keyword",value:"GENERATED"},{syntaxes:[{type:"keyword",as:"always_kw",value:"ALWAYS",booleanfy:!0},{syntax:[{type:"keyword",as:"by_default_kw",value:"BY",booleanfy:!0},{type:"keyword",value:"DEFAULT",assert:!0}]}]},{optional:!0,syntax:[{type:"keyword",as:"as_identity_kw",value:"AS",booleanfy:!0},{type:"keyword",value:"IDENTITY",assert:!0}]}])}alwaysKW(){return this._get("always_kw")}byDefaultKW(){return this._get("by_default_kw")}asIdentityKW(){return this._get("as_identity_kw")}jsonfy(e={},t=null,s=null){return(e.toDialect||this.options.dialect)==="mysql"?new Fe().jsonfy(e,t,s):super.jsonfy(e,t,s)}};var Dt=class extends X{static get syntaxRules(){return this.buildSyntaxRules([{syntaxes:[[{type:"operator",as:".",value:"NOT"},{type:"null_literal",value:"NULL"}],{type:"null_literal",as:".",value:"NULL"}]}])}value(){return this._get("value")}};var Lt=class extends X{static get syntaxRules(){return this.buildSyntaxRules([{type:"keyword",value:"PRIMARY"},{type:"keyword",value:"KEY",assert:!0},{type:"PGIndexParameters",as:"pg_index_parameters",optional:!0,dialect:"postgres"}])}primaryKW(){return this._get("primary_kw")}pgIndexParameters(){return this._get("pg_index_parameters")}columns(){return this.parentNode instanceof l.ColumnSchema?[l.ColumnRef2.fromJSON({value:this.parentNode.name().value()})]:[]}};var Mt=class extends X{static get syntaxRules(){return this.buildSyntaxRules([{type:"keyword",value:"UNIQUE"},{type:"keyword",as:"my_key_kw",value:["KEY","INDEX"],optional:!0,dialect:"mysql"},{optional:!0,dialect:"postgres",syntaxes:[[{type:"keyword",value:"NULLS"},{type:"operator",as:"pg_nulls_distinct",value:"NOT"},{type:"keyword",value:"DISTINCT",assert:!0}],[{type:"keyword",value:"NULLS"},{type:"keyword",as:"pg_nulls_distinct",value:"DISTINCT",assert:!0}]]},{type:"PGIndexParameters",as:"pg_index_parameters",optional:!0,dialect:"postgres"}])}myKeyKW(){return this._get("my_key_kw")}pgNullsDistinct(){return this._get("pg_nulls_distinct")}pgIndexParameters(){return this._get("pg_index_parameters")}columns(){let{ColumnSchema:e,ColumnRef2:t}=l;return this.parentNode instanceof e?[t.fromJSON({value:this.parentNode.name().value()})]:[]}};var Pt=class extends _{static get syntaxRules(){return{dialect:"mysql",syntax:[{type:"keyword",value:"COMMENT"},{type:"string_literal",as:"."}]}}};var jt=class extends _{static get syntaxRules(){return{dialect:"mysql",syntax:[{type:"keyword",value:"ON"},{type:"keyword",value:"UPDATE"},{type:"keyword",as:"."}]}}};var Ut=class extends _{static get syntaxRules(){return{dialect:"mysql",syntaxes:[{type:"keyword",as:".",value:"VISIBLE"},{type:"keyword",as:".",value:"INVISIBLE"}]}}};var $t=class extends X{static get syntaxRules(){let e={type:"punctuation",value:","};return{dialect:"postgres",syntax:this.buildSyntaxRules([{type:"keyword",value:"EXCLUDE"},{optional:!0,syntax:[{type:"keyword",value:"USING"},{type:"keyword",as:"index_method",assert:!0}]},{type:"paren_block",syntax:{type:"PGTableEXConstraintItem",as:"entries",arity:{min:1},itemSeparator:e,assert:!0},assert:!0},{type:"PGIndexParameters",as:"pg_index_parameters",optional:!0},{optional:!0,syntax:[{type:"keyword",value:"WHERE"},{type:"paren_block",syntax:{type:"Expr",as:"where_predicate",assert:!0},assert:!0}]}])}}indexMethod(){return this._get("index_method")}entries(){return this._get("entries")}pgIndexParameters(){return this._get("pg_index_parameters")}wherePredicate(){return this._get("where_predicate")}};var Jt=class extends X{static get syntaxRules(){let e={type:"punctuation",value:","};return this.buildSyntaxRules([{type:"keyword",value:"FOREIGN"},{type:"keyword",value:"KEY",assert:!0},{type:"paren_block",syntax:{type:"ColumnRef2",as:"columns",arity:{min:1},itemSeparator:e,assert:!0,singletons:"BY_KEY"}},{type:"keyword",value:"REFERENCES"},{type:"TableRef2",as:"target_table",assert:!0},{dialect:"postgres",optional:!0,type:"paren_block",syntax:{type:"Identifier",as:"target_columns",arity:{min:1},itemSeparator:e,singletons:"BY_KEY",assert:!0}},{dialect:"mysql",type:"paren_block",syntax:{type:"Identifier",as:"target_columns",arity:{min:1},itemSeparator:e,singletons:"BY_KEY",assert:!0}},{type:["FKMatchRule","FKDeleteRule","FKUpdateRule"],as:"referential_rules",arity:1/0,assert:!0,singletons:!0}])}columns(){return this._get("columns")}targetTable(){return this._get("target_table")}targetColumns(){return this._get("target_columns")}referentialRules(){return this._get("referential_rules")}};var Bt=class extends X{static get syntaxRules(){let e={type:"punctuation",value:","};return this.buildSyntaxRules([{type:"keyword",value:"PRIMARY"},{type:"keyword",value:"KEY",assert:!0},{type:"paren_block",syntax:{type:"ColumnRef2",as:"columns",arity:{min:1},itemSeparator:e,singletons:"BY_KEY",assert:!0},assert:!0},{type:"PGIndexParameters",as:"pg_index_parameters",optional:!0,dialect:"postgres"}])}columns(){return this._get("columns")}pgIndexParameters(){return this._get("pg_index_parameters")}};var qt=class extends X{static get syntaxRules(){let e={type:"punctuation",value:","};return this.buildSyntaxRules([{type:"keyword",value:"UNIQUE"},{type:"keyword",as:"my_key_kw",value:["KEY","INDEX"],optional:!0,dialect:"mysql"},{optional:!0,dialect:"postgres",syntaxes:[[{type:"keyword",value:"NULLS"},{type:"operator",as:"pg_nulls_distinct",value:"NOT"},{type:"keyword",value:"DISTINCT",assert:!0}],[{type:"keyword",value:"NULLS"},{type:"keyword",as:"pg_nulls_distinct",value:"DISTINCT",assert:!0}]]},{type:"paren_block",syntax:{type:"ColumnRef2",as:"columns",arity:{min:1},itemSeparator:e,singletons:"BY_KEY",assert:!0},assert:!0},{type:"PGIndexParameters",as:"pg_index_parameters",optional:!0,dialect:"postgres"}])}myKeyKW(){return this._get("my_key_kw")}pgNullsDistinct(){return this._get("pg_nulls_distinct")}columns(){return this._get("columns")}pgIndexParameters(){return this._get("pg_index_parameters")}};var be=o=>class extends o{static get _qualifierType(){return"Identifier"}static buildSyntaxRules(e=null){return[{optional:!0,syntax:[{type:this._qualifierType,as:"qualifier"},{type:"punctuation",value:".",autoSpacing:!1}]},e||{...[].concat(super.syntaxRules)[0],autoSpacing:!1}]}static get syntaxRules(){return this.buildSyntaxRules()}static get syntaxPriority(){return-1}qualifier(){return this._get("qualifier")}identifiesAs(e,t=void 0){let s=super.identifiesAs(e,t);return s&&this.qualifier()&&e.qualifier?.()?this.qualifier().identifiesAs(e.qualifier(),t):s}static async _parseFromRules(e,t,{left:s=void 0,minPrecedence:r=0,trail:n,...a},p={}){if(s)return super._parseFromRules(e,t,{left:s,minPrecedence:r,trail:n,...a},p);let c=[];for(;;){if(await e.match(1,"punctuation","."))c.push(await e.eat());else if(await e.match(1,"version_spec")&&await e.match(2,"punctuation","."))c.push(await e.eat()),c.push(await e.eat());else break;(await e.match(2,"punctuation",".")||await e.match(2,"version_spec")&&await e.match(3,"punctuation","."))&&c.push(await e.eat())}let u="qualifier";if(c.length){let f=[].concat(this._qualifierType),y=await this.toStream(c,a),d={minPrecedence:r,trail:n.concat(this.NODE_NAME,`<${u}>`),...a};s=await this._parseFromTypes(y,f,d)}else s=!1;return await super._parseFromRules(e,t,{left:s,minPrecedence:r,trail:n,...a},p)}};var he={};ve(he,{AggrCallExpr:()=>Wt,AtTimeZoneExpr:()=>dr,BetweenExpr:()=>_r,BinaryExpr:()=>ee,BindVar:()=>wr,BitLiteral:()=>zt,BoolLiteral:()=>Zt,CallExpr:()=>Ye,CaseBranch:()=>Kt,CaseExpr:()=>Yt,CastExpr:()=>Ht,ColumnRef0:()=>Er,ColumnRef1:()=>Qe,ColumnRef2:()=>$e,DefaultLiteral:()=>er,DistinctFromExpr:()=>hr,Expr:()=>pt,ExtractExpr:()=>Vt,HexLiteral:()=>tr,Identifier:()=>ie,InExpr:()=>xr,LQArrayLiteral:()=>cr,LQBackBackRef:()=>De,LQBackRef:()=>Sr,LQBackRefAbstraction:()=>ut,LQBackRefEndpoint:()=>Tr,LQDeepDeepRef1:()=>Oe,LQDeepDeepRef2:()=>Ar,LQDeepRef1:()=>Xe,LQDeepRef2:()=>Or,LQObjectLiteral:()=>fr,LQObjectProperty:()=>yr,NullLiteral:()=>rr,NumberLiteral:()=>sr,PGCastExpr2:()=>gr,PGFilterClause:()=>Ft,PGTypedArrayLiteral:()=>mr,PGWithinGroupClause:()=>Gt,ParenExpr:()=>we,PredicateExpr:()=>Qt,QuantitativeExpr:()=>Xt,RowConstructor:()=>Ue,ScalarSubquery:()=>it,SchemaRef:()=>Rr,StringLiteral:()=>ar,SystemVar:()=>kr,TableRef0:()=>vr,TableRef1:()=>Le,TableRef2:()=>Cr,TypedDateLiteral:()=>nr,TypedIntervalLiteral:()=>or,TypedLiteral:()=>me,TypedRowConstructor:()=>lt,TypedTimeLiteral:()=>ir,TypedTimeZoneLiteral:()=>ur,TypedTimestampLiteral:()=>lr,UnaryExpr:()=>Nr,UnknownLiteral:()=>pr,UserVar:()=>Ir,WindowRef:()=>br});var Ee=o=>class extends o{dataType(){return l.DataType.fromJSON({value:"TEXT"})}};var re=class extends Ee(_){};var we=class o extends re{static get syntaxRules(){return{type:"paren_block",syntax:{type:"Expr",as:"expr"},autoIndent:!0}}static get syntaxPriority(){return-1}expr(){return this._get("expr")}exprUnwrapped(){let e=this._get("expr");return e instanceof o?e.exprUnwrapped():e}dataType(){return this.expr()?.dataType()}};var Ue=class o extends Z(Ee(v)){static get syntaxRules(){return{syntax:[{type:"paren_block",syntax:{type:["DerivedQuery","ValuesTableLiteral","Expr"],as:"entries",arity:1/0,itemSeparator:{type:"punctuation",value:","},autoIndent:10}}]}}static get syntaxPriority(){return 49}exprUnwrapped(){return this._get("entries")?.length===1&&this._get("entries")[0]instanceof o?this._get("entries")[0].exprUnwrapped():this}dataType(){return l.DataType.fromJSON({value:"SET"})}jsonfy(e={},t=null,s=null){let r=super.jsonfy(e,t,s);if(Number(e.deSugar||0)>5||e.forceDeSugar){let n=this.entries()||[],p=(r.entries||[]).map((c,u)=>{let f={nodeName:l.Identifier.NODE_NAME,value:u};return c.result_schema instanceof l.ColumnSchema?c.result_schema.clone({renameTo:f}):l.ColumnSchema.fromJSON({name:f,data_type:n[u].dataType().jsonfy()})});r={...r,result_schema:l.JSONSchema.fromJSON({entries:p},{assert:!0})}}return r}};var We=class extends Z(we){static get syntaxRules(){return{type:"paren_block",syntax:{type:["SelectStmt","TableStmt","CTE"],as:"expr",autoIndent:!0}}}static get syntaxPriority(){return-1}dataType(){return this.expr()?.dataType()}jsonfy(e={},t=null,s=null){let r=super.jsonfy(e,t,s);if(e.deSugar){let n=r.expr?.result_schema;r={...r,result_schema:n}}return r}};var it=class extends We{static get syntaxRules(){return{type:"paren_block",syntax:{type:["SelectStmt","CTE"],as:"expr"},autoIndent:!0}}static get syntaxPriority(){return 48}dataType(){return this.resultSchema()?this.resultSchema().dataType():l.DataType.fromJSON({value:"TEXT"})}jsonfy(e={},t=null,s=null){let r=super.jsonfy(e,t,s);if(e.deSugar){let n=r.expr?.result_schema;if(n?.length!==1)throw new Error("Scalar subqueries must return a scalar value.");n=n.entries()[0],r={...r,result_schema:n}}return r}};var lt=class extends Ue{static get syntaxRules(){return[{type:"keyword",value:"ROW"},...[].concat(super.syntaxRules)]}static get syntaxPriority(){return 52}};var Ft=class extends _{static get syntaxRules(){return{dialect:"postgres",syntax:[{type:"keyword",value:"FILTER"},{type:"paren_block",syntax:{type:"WhereClause",as:"where_clause"},assert:!0,autoIndent:!0}]}}static get syntaxPriority(){return-1}whereClause(){return this._get("where_clause")}};var Gt=class extends _{static get syntaxRules(){return{dialect:"postgres",syntax:[{type:"keyword",value:"WITHIN"},{type:"keyword",value:"GROUP"},{type:"paren_block",syntax:{type:"OrderByClause",as:"order_by_clause"},assert:!0,autoIndent:!0}]}}static get syntaxPriority(){return-1}orderByClause(){return this._get("order_by_clause")}};var Ye=class extends Z(re){static get syntaxRules(){let e={type:"punctuation",value:","};return{syntaxes:[{peek:[0,"keyword",["NOW","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","IF","NULLIF","IFNULL","COALESCE","GREATEST","LEAST","CONCAT","CONCAT_WS","FORMAT","MD5","SHA1","TO_JSON","TO_JSONB","JSON_TYPEOF","JSONB_TYPEOF","JSON_BUILD_ARRAY","JSONB_BUILD_ARRAY","JSON_BUILD_OBJECT","JSONB_BUILD_OBJECT","JSON_POPULATE_RECORD","JSONB_POPULATE_RECORD","JSON_PATH_QUERY","JSON_PATH_EXISTS","JSON_ARRAY","JSON_OBJECT","JSON_EXTRACT","JSON_UNQUOTE","JSON_SET","JSON_INSERT","JSON_REPLACE","JSON_REMOVE","JSON_SEARCH","JSON_CONTAINS","JSON_CONTAINS_PATH","JSON_KEYS","JSON_ARRAY_APPEND","JSON_ARRAY_INSERT","JSON_DEPTH","JSON_LENGTH","JSON_MERGE_PRESERVE","JSON_MERGE_PATCH","JSON_PRETTY","JSON_STORAGE_FREE","ST_ASTEXT","ST_ASGEOJSON","ST_GEOMFROMTEXT","ST_WITHIN","ST_CONTAINS","ST_INTERSECTS","ST_DISTANCE","ST_BUFFER","MAKE_DATE","MAKE_TIME","MAKE_TIMESTAMP","ARRAY","CURDATE","CURTIME","SYSDATE","STR_TO_DATE","MAKEDATE","MAKETIME"]],syntaxes:[[{type:"keyword",as:"name",value:["CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP"]},{type:"paren_block",syntax:{type:"Expr",as:"arguments",arity:0,itemSeparator:e,assert:!0},optional:!0,optionalParens:!0,autoSpacing:!1}],[{type:"keyword",as:"name",value:["NOW"]},{type:"paren_block",syntax:{type:"Expr",as:"arguments",arity:0,itemSeparator:e,assert:!0},optional:!0,autoSpacing:!1}],[{type:"keyword",as:"name",value:["IF","NULLIF","IFNULL"]},{type:"paren_block",syntax:{type:"Expr",as:"arguments",arity:{min:2,max:3},itemSeparator:e,assert:!0},autoSpacing:!1}],[{type:"keyword",as:"name",value:["COALESCE","GREATEST","LEAST","CONCAT"]},{type:"paren_block",syntax:{type:"Expr",as:"arguments",arity:{min:1},itemSeparator:e,assert:!0},autoSpacing:!1}],[{type:"keyword",as:"name",value:["CONCAT_WS","FORMAT"]},{type:"paren_block",syntax:{type:"Expr",as:"arguments",arity:{min:2},itemSeparator:e,assert:!0},autoSpacing:!1}],[{type:"keyword",as:"name",value:["MD5","SHA1"]},{type:"paren_block",syntax:{type:"Expr",as:"arguments",arity:1,itemSeparator:e,assert:!0},autoSpacing:!1}],[{type:"keyword",as:"name",value:["ST_ASTEXT","ST_ASGEOJSON","ST_GEOMFROMTEXT"]},{type:"paren_block",syntax:{type:"Expr",as:"arguments",arity:1,itemSeparator:e,assert:!0},autoSpacing:!1}],[{type:"keyword",as:"name",value:["ST_WITHIN","ST_CONTAINS","ST_INTERSECTS","ST_DISTANCE","ST_BUFFER"]},{type:"paren_block",syntax:{type:"Expr",as:"arguments",arity:2,itemSeparator:e,assert:!0},autoSpacing:!1}],{dialect:"postgres",syntax:[{type:"keyword",as:"name",value:["TO_JSON","TO_JSONB","JSON_TYPEOF","JSONB_TYPEOF"]},{type:"paren_block",syntax:{type:"Expr",as:"arguments",arity:1,itemSeparator:e,assert:!0},autoSpacing:!1}]},{dialect:"postgres",syntax:[{type:"keyword",as:"name",value:["JSON_BUILD_ARRAY","JSONB_BUILD_ARRAY","JSON_BUILD_OBJECT","JSONB_BUILD_OBJECT"]},{type:"paren_block",syntax:{type:"Expr",as:"arguments",arity:{min:0},itemSeparator:e,assert:!0},autoSpacing:!1}]},{dialect:"postgres",syntax:[{type:"keyword",as:"name",value:["JSON_POPULATE_RECORD","JSONB_POPULATE_RECORD","JSON_PATH_QUERY","JSON_PATH_EXISTS"]},{type:"paren_block",syntax:{type:"Expr",as:"arguments",arity:2,itemSeparator:e,assert:!0},autoSpacing:!1}]},{dialect:"postgres",syntax:[{type:"keyword",as:"name",value:["ARRAY"]},{type:"paren_block",syntax:{type:"SelectStmt",as:"arguments",arity:1,itemSeparator:e,assert:!0},autoIndent:!0,autoSpacing:!0}]},{dialect:"postgres",syntax:[{type:"keyword",as:"name",value:["MAKE_DATE","MAKE_TIME","MAKE_TIMESTAMP"]},{type:"paren_block",syntax:{type:"Expr",as:"arguments",arity:1/0,itemSeparator:e,assert:!0},autoSpacing:!1}]},{dialect:"mysql",syntax:[{type:"keyword",as:"name",value:["JSON_ARRAY","JSON_OBJECT","JSON_EXTRACT","JSON_UNQUOTE","JSON_SET","JSON_INSERT","JSON_REPLACE","JSON_REMOVE","JSON_SEARCH","JSON_CONTAINS","JSON_CONTAINS_PATH","JSON_KEYS","JSON_ARRAY_APPEND","JSON_ARRAY_INSERT","JSON_DEPTH","JSON_LENGTH","JSON_MERGE_PRESERVE","JSON_MERGE_PATCH","JSON_PRETTY","JSON_STORAGE_FREE"]},{type:"paren_block",syntax:{type:"Expr",as:"arguments",arity:{min:1},itemSeparator:e,assert:!0},autoSpacing:!1}]},{dialect:"mysql",syntax:[{type:"keyword",as:"name",value:["CURDATE","CURTIME","SYSDATE"]},{type:"paren_block",syntax:{type:"Expr",as:"arguments",arity:0,itemSeparator:e,optional:!0,assert:!0},autoSpacing:!1}]},{dialect:"mysql",syntax:[{type:"keyword",as:"name",value:"STR_TO_DATE"},{type:"paren_block",syntax:{type:"Expr",as:"arguments",arity:2,itemSeparator:e,assert:!0},autoSpacing:!1}]},{dialect:"mysql",syntax:[{type:"keyword",as:"name",value:["MAKEDATE","MAKETIME"]},{type:"paren_block",syntax:{type:"Expr",as:"arguments",arity:2,itemSeparator:e,assert:!0},autoSpacing:!1}]}]},[{type:"keyword",as:"name"},{type:"paren_block",syntax:{type:"Expr",as:"arguments",arity:1/0,itemSeparator:e},autoSpacing:!1}],[{type:"identifier",as:"name"},{type:"paren_block",syntax:{type:"Expr",as:"arguments",arity:1/0,itemSeparator:e},autoSpacing:!1}]]}}static get syntaxPriority(){return 51}name(){return this._get("name")}arguments(){return this._get("arguments")}};var Wt=class extends Ye{static get syntaxRules(){let e={type:"punctuation",value:","},t={type:"keyword",as:"distinct",value:"DISTINCT",booleanfy:!0,optional:!0},s={optional:!0,syntax:[{type:"keyword",value:"SEPARATOR"},{type:"Expr",as:"separator",assert:!0}]},r={type:"OrderByClause",as:"order_by_clause",optional:!0},n={type:"PGFilterClause",as:"pg_filter_clause",optional:!0,dialect:"postgres"},a={type:"PGWithinGroupClause",as:"pg_within_group_clause",optional:!0,dialect:"postgres"},p={optional:!0,syntax:[{type:"keyword",as:"null_handling",value:["IGNORE","RESPECT"]},{type:"keyword",value:"NULLS",assert:!0}]},c={optional:!0,syntax:[{type:"keyword",value:"OVER"},{type:["WindowRef","WindowSpec"],as:"over_clause",assert:!0}]};return{peek:[0,"keyword",["COUNT","SUM","AVG","MIN","MAX","ARRAY_AGG","STRING_AGG","GROUP_CONCAT","REGR_SLOPE","COVAR_POP","COVAR_SAMP","CORR","PERCENTILE_CONT","PERCENTILE_DISC","MODE","RANK","DENSE_RANK","ROW_NUMBER","EVERY","BOOL_AND","BOOL_OR","BIT_AND","BIT_OR","BIT_XOR","JSON_AGG","JSON_ARRAYAGG","JSON_OBJECT_AGG","JSONB_OBJECT_AGG","JSON_OBJECTAGG","STDDEV_POP","STDDEV_SAMP","VAR_POP","VAR_SAMP","VARIANCE","STD","XMLAGG","LEAD","LAG","NTILE","FIRST_VALUE","LAST_VALUE"]],syntaxes:[[{type:"keyword",as:"name",value:"COUNT"},{type:"paren_block",syntax:[{dialect:"postgres",type:"ColumnRef0",as:"arguments",arity:1,assert:!1,itemSeparator:e},{dialect:"mysql",type:"ColumnRef0",as:"arguments",arity:1/0,assert:!1,itemSeparator:e,optional:!0}],autoSpacing:!1},{...n},{...c}],[{type:"keyword",as:"name",value:["COUNT","SUM","AVG","MIN","MAX"]},{type:"paren_block",syntax:[{...t},{type:"Expr",as:"arguments",arity:1,itemSeparator:e,assert:!0}],autoSpacing:!1},{...n},{...c}],{dialect:"postgres",syntax:[{type:"keyword",as:"name",value:"ARRAY_AGG"},{type:"paren_block",syntax:[{...t},{type:"Expr",as:"arguments",arity:{min:1},itemSeparator:e,assert:!0},{...r}],autoSpacing:!1},{...n},{...c}]},{dialect:"postgres",syntax:[{type:"keyword",as:"name",value:"STRING_AGG"},{type:"paren_block",syntax:[{...t},{type:"Expr",as:"arguments",arity:2,itemSeparator:e,assert:!0},{...r},{...s}],autoSpacing:!1},{...n},{...c}]},{dialect:"mysql",syntax:[{type:"keyword",as:"name",value:"GROUP_CONCAT"},{type:"paren_block",syntax:[{...t},{type:"Expr",as:"arguments",arity:{min:1},itemSeparator:e,assert:!0},{...r},{...s}],autoSpacing:!1},{...c}]},{dialect:"postgres",syntax:[{type:"keyword",as:"name",value:"REGR_SLOPE"},{type:"paren_block",syntax:{type:"Expr",as:"arguments",arity:2,itemSeparator:e,assert:!0},autoSpacing:!1},{...n},{...c}]},[{type:"keyword",as:"name",value:["COVAR_POP","COVAR_SAMP","CORR"]},{type:"paren_block",syntax:{type:"Expr",as:"arguments",arity:2,itemSeparator:e,assert:!0},autoSpacing:!1},{...n},{...c}],{dialect:"postgres",syntax:[{type:"keyword",as:"name",value:["PERCENTILE_CONT","PERCENTILE_DISC"]},{type:"paren_block",syntax:{type:"Expr",as:"arguments",arity:1,itemSeparator:e,assert:!0},autoSpacing:!1},{...n},{...a,optional:!1}]},{dialect:"postgres",syntax:[{type:"keyword",as:"name",value:"MODE"},{type:"paren_block",syntax:{type:"Expr",as:"arguments",arity:0,itemSeparator:e,assert:!0},autoSpacing:!1},{...n},{...a,optional:!1}]},{dialect:"postgres",syntax:[{type:"keyword",as:"name",value:["RANK","DENSE_RANK"]},{type:"paren_block",syntax:{type:"Expr",as:"arguments",arity:0,itemSeparator:e,assert:!0},autoSpacing:!1},{...n},{...c,optional:!1}]},[{type:"keyword",as:"name",value:"ROW_NUMBER"},{type:"paren_block",syntax:{type:"Expr",as:"arguments",arity:0,itemSeparator:e,assert:!0},autoSpacing:!1},{...c,optional:!1}],{dialect:"postgres",syntax:[{type:"keyword",as:"name",value:["EVERY","BOOL_AND","BOOL_OR"]},{type:"paren_block",syntax:[{...t},{type:"Expr",as:"arguments",arity:1,itemSeparator:e,assert:!0}],autoSpacing:!1},{...n},{...c}]},{dialect:"postgres",syntax:[{type:"keyword",as:"name",value:"JSON_AGG"},{type:"paren_block",syntax:[{...t},{type:"Expr",as:"arguments",arity:{min:1},itemSeparator:e,assert:!0}],autoSpacing:!1},{...n},{...c}]},{dialect:"mysql",syntax:[{type:"keyword",as:"name",value:"JSON_ARRAYAGG"},{type:"paren_block",syntax:[{...t},{type:"Expr",as:"arguments",arity:{min:1},itemSeparator:e,assert:!0}],autoSpacing:!1},{...c}]},{dialect:"mysql",syntax:[{type:"keyword",as:"name",value:"BIT_XOR"},{type:"paren_block",syntax:[{...t},{type:"Expr",as:"arguments",arity:1,itemSeparator:e,assert:!0}],autoSpacing:!1},{...c}]},[{type:"keyword",as:"name",value:["BIT_AND","BIT_OR"]},{type:"paren_block",syntax:[{...t},{type:"Expr",as:"arguments",arity:1,itemSeparator:e,assert:!0}],autoSpacing:!1},{...n},{...c}],{dialect:"postgres",syntax:[{type:"keyword",as:"name",value:["JSON_OBJECT_AGG","JSONB_OBJECT_AGG"]},{type:"paren_block",syntax:[{...t},{type:"Expr",as:"arguments",arity:2,itemSeparator:e,assert:!0}],autoSpacing:!1},{...n},{...c}]},{dialect:"mysql",syntax:[{type:"keyword",as:"name",value:"JSON_OBJECTAGG"},{type:"paren_block",syntax:[{...t},{type:"Expr",as:"arguments",arity:2,itemSeparator:e,assert:!0}],autoSpacing:!1},{...c}]},[{type:"keyword",as:"name",value:["STDDEV_POP","STDDEV_SAMP","VAR_POP","VAR_SAMP","VARIANCE","STD"]},{type:"paren_block",syntax:[{...t},{type:"Expr",as:"arguments",arity:1,itemSeparator:e,assert:!0}],autoSpacing:!1},{...n},{...c}],{dialect:"postgres",syntax:[{type:"keyword",as:"name",value:"XMLAGG"},{type:"paren_block",syntax:[{type:"Expr",as:"arguments",arity:1,itemSeparator:e,assert:!0},{...r}],autoSpacing:!1},{...n},{...c}]},[{type:"keyword",as:"name",value:["LEAD","LAG"]},{type:"paren_block",syntax:{type:"Expr",as:"arguments",arity:{max:3},itemSeparator:e,optional:!0,assert:!0},autoSpacing:!1},{...p},{...c}],[{type:"keyword",as:"name",value:["NTILE","FIRST_VALUE","LAST_VALUE"]},{type:"paren_block",syntax:{type:"Expr",as:"arguments",arity:1,itemSeparator:e,assert:!0},autoSpacing:!1},{...c,optional:!1}]]}}distinct(){return this._get("distinct")}orderByClause(){return this._get("order_by_clause")}separator(){return this._get("separator")}overClause(){return this._get("over_clause")}pgFilterClause(){return this._get("pg_filter_clause")}pgWithinGroupClause(){return this._get("pg_within_group_clause")}};var Yt=class extends Ee(v){static get syntaxRules(){return[{type:"keyword",value:"CASE"},{type:"Expr",as:"subject",optional:!0},{type:"CaseBranch",as:"entries",arity:{min:1},assert:!0,autoIndent:2},{optional:!0,syntax:[{type:"keyword",value:"ELSE"},{type:"Expr",as:"alternate",autoIndent:!0}],autoSpacing:`
`},{type:"keyword",value:"END",autoSpacing:`
`}]}subject(){return this._get("subject")}branches(){return this.entries()}alternate(){return this._get("alternate")}};var Kt=class extends _{static get syntaxRules(){return[{type:"keyword",value:"WHEN"},{type:"Expr",as:"condition"},{type:"keyword",value:"THEN"},{type:"Expr",as:"consequent"}]}static get syntaxPriority(){return-1}condition(){return this._get("condition")}consequent(){return this._get("consequent")}};var Ht=class extends re{static get syntaxRules(){return[{type:"keyword",value:"CAST"},{type:"paren_block",syntax:[{type:"Expr",as:"expr"},{type:"keyword",value:"AS"},{type:"DataType",as:"data_type",assert:!0}],assert:!0,autoSpacing:!1}]}expr(){return this._get("expr")}dataType(){return this._get("data_type")}};var ee=class extends re{static get syntaxRules(){return[{type:"Expr",as:"left",peek:[1,"operator",["NOT",void 0]]},{type:"operator",as:"negation",value:"NOT",booleanfy:!0,optional:!0},{type:"operator",as:"operator"},{type:"Expr",as:"right"}]}static get syntaxPriority(){return 0}left(){return this._get("left")}negation(){return this._get("negation")}operator(){return this._get("operator")}right(){return this._get("right")}dataType(){let e=this.operator();if(!e)return this.left()?.dataType();let t=this.options.dialect,r=new Map(ft.common.concat(ft[t])).get(e)?.resultType;if(r)return r===":right"?this.right()?.dataType():r===":left"?this.left()?.dataType():l.DataType.fromJSON({value:r.toUpperCase()})}};var Vt=class extends ee{static get syntaxRules(){return[{type:"keyword",value:"EXTRACT"},{type:"paren_block",syntax:[{type:"Expr",as:"left"},{type:"keyword",value:"FROM"},{type:"Expr",as:"right",assert:!0}],autoSpacing:!1}]}left(){return this._get("left")}right(){return this._get("right")}};var Qt=class extends re{static get syntaxRules(){return[{type:"keyword",as:"predicate",value:["EXISTS"]},{type:"ScalarSubquery",as:"expr"}]}predicate(){return this._get("predicate")}expr(){return this._get("expr")}dataType(){return l.DataType.fromJSON({value:"BOOLEAN"})}};var Xt=class extends _{static get syntaxRules(){return[{type:"keyword",as:"quantifier",value:["ALL","ANY","SOME"]},{type:["DerivedQuery","RowConstructor","TypedRowConstructor"],as:"expr"}]}quantifier(){return this._get("quantifier")}expr(){return this._get("expr")}};var ce=class extends re{static get syntaxPriority(){return 49}value(){return this._get("value")}};var zt=class extends ce{static get syntaxRules(){return{type:"bit_literal",as:"."}}dataType(){return l.DataType.fromJSON({value:"BINARY"})}};var Zt=class extends ce{static get syntaxRules(){return{type:"bool_literal",as:"."}}dataType(){return l.DataType.fromJSON({value:"BOOLEAN"})}};var er=class extends ce{static get syntaxRules(){return{type:"keyword",as:".",value:"DEFAULT"}}};var tr=class extends ce{static get syntaxRules(){return{type:"hex_literal",as:"."}}dataType(){return l.DataType.fromJSON({value:"BINARY"})}};var rr=class extends ce{static get syntaxRules(){return{type:"null_literal",as:"."}}};var sr=class extends ce{static get syntaxRules(){return{type:"number_literal",as:"."}}dataType(){return l.DataType.fromJSON({value:"INT"})}};var ar=class extends ce{static get syntaxRules(){return{type:"string_literal",as:"."}}qualifier(){return this._get("qualifier")}dataType(){return l.DataType.fromJSON({value:"TEXT"})}};var me=class extends re{static get syntaxRules(){return[{type:"data_type",as:"data_type"},{type:"string_literal",as:"value"}]}static get syntaxPriority(){return 50}dataType(){return l.DataType.fromJSON({value:this._get("data_type")})}value(){return this._get("value")}};var nr=class extends me{static get syntaxRules(){return[{type:"data_type",as:"data_type",value:"DATE"},{type:"string_literal",as:"value"}]}};var or=class extends me{static get syntaxRules(){return[{type:"data_type",as:"data_type",value:"INTERVAL"},{syntaxes:[{type:"string_literal",as:"value"},{type:"number_literal",as:"value",dialect:"mysql"}]},{optional:!0,syntax:[{type:"keyword",as:"unit",value:["YEAR","MONTH","DAY","HOUR","MINUTE","SECOND"]},{optional:!0,syntax:[{type:"keyword",value:"TO"},{type:"keyword",as:"to_unit",value:["YEAR","MONTH","DAY","HOUR","MINUTE","SECOND"],assert:!0}]}]}]}unit(){return this._get("unit")}toUnit(){return this._get("to_unit")}};var ir=class extends me{static get syntaxRules(){return[{type:"data_type",as:"data_type",value:"TIME"},{type:"string_literal",as:"value"},{optional:!0,dialect:"postgres",syntax:[{type:"keyword",as:"pg_with_tz",value:["WITH","WITHOUT"]},{type:"keyword",value:"TIME ZONE",assert:!0}]}]}pgWithTZ(){return this._get("pg_with_tz")}};var lr=class extends me{static get syntaxRules(){return[{type:"data_type",as:"data_type",value:"TIMESTAMP",dialect:"postgres"},{type:"data_type",as:"data_type",value:["TIMESTAMP","DATETIME"],dialect:"mysql"},{type:"string_literal",as:"value"},{optional:!0,dialect:"postgres",syntax:[{type:"keyword",as:"pg_with_tz",value:["WITH","WITHOUT"]},{type:"keyword",value:"TIME ZONE",assert:!0}]}]}pgWithTZ(){return this._get("pg_with_tz")}};var ur=class extends me{static get syntaxRules(){return[{type:"keyword",value:"TIME ZONE"},{type:"Expr",as:"value"}]}};var pr=class extends ce{static get syntaxRules(){return{type:"unknown_literal",as:"."}}};var Ke=o=>class extends o{get isSugar(){return!0}};var He=class extends Ke(Ee(v)){dataType(){return l.DataType.fromJSON({value:"JSON"})}};var cr=class extends He{static get syntaxRules(){return{syntax:[{type:"bracket_block",syntax:{type:"Expr",as:"entries",arity:1/0,itemSeparator:{type:"punctuation",value:","},autoIndent:2}}]}}static morphsTo(){return l.CallExpr}jsonfy(e={},t=null,s=null){let r=super.jsonfy(e,t,s);if(e.deSugar){let n=[];r={nodeName:l.CallExpr.NODE_NAME,name:(e.toDialect||this.options.dialect)==="mysql"?"JSON_ARRAY":"JSON_BUILD_ARRAY",arguments:r.entries.map((a,p)=>{let c=a.result_schema,u={value:p,nodeName:l.Identifier.NODE_NAME};return c instanceof l.ColumnSchema?c=c.clone({renameTo:u}):c=l.ColumnSchema.fromJSON({name:u,data_type:this.entries()[p].dataType().jsonfy()}),n.push(c),a}),result_schema:l.JSONSchema.fromJSON({entries:n},{assert:!0})}}return r}};var fr=class extends He{static get syntaxRules(){return{syntax:[{type:"brace_block",syntax:{type:"LQObjectProperty",as:"entries",arity:1/0,itemSeparator:{type:"punctuation",value:","},autoIndent:3}}]}}static morphsTo(){return l.CallExpr}jsonfy(e={},t=null,s=null){let r=super.jsonfy(e,t,s);if(e.deSugar){let n=r.entries.reduce((p,c)=>{if(c.star_ref){for(let u of c.star_ref.result_schema){let f={key:{value:u.value(),delim:u._get("delim")},value:u.jsonfy()};p=p.reduce((y,d)=>oe(f.key.value,d.key.value,f.key.delim||d.key.delim)?y:y.concat(d),[]),p=p.concat(f)}return p}return p.concat(c)},[]),a=[];r={nodeName:l.CallExpr.NODE_NAME,name:(e.toDialect||this.options.dialect)==="mysql"?"JSON_OBJECT":"JSON_BUILD_OBJECT",arguments:n.reduce((p,c,u)=>{let f=c.value.result_schema,y={...c.key,nodeName:l.Identifier.NODE_NAME};return f instanceof l.ColumnSchema?f=f.clone({renameTo:y}):f=l.ColumnSchema.fromJSON({name:y,data_type:this.entries()[u].value()?.dataType().jsonfy()||{nodeName:l.DataType.NODE_NAME,value:"TEXT"}}),a.push(f),p.concat({...c.key,nodeName:l.StringLiteral.NODE_NAME},{...c.value})},[]),result_schema:l.JSONSchema.fromJSON({entries:a},{assert:!0})}}return r}};var yr=class o extends _{static get syntaxRules(){return{syntaxes:[{type:"ColumnRef0",as:"star_ref"},[{type:"SelectItemAlias",as:"key"},{optional:!0,syntax:[{type:"punctuation",value:":"},{type:"Expr",as:"value",assert:!0}],autoSpacing:!1}]]}}static get syntaxPriority(){return-1}get isProperty(){return!0}starRef(){return this._get("star_ref")}key(){return this._get("key")}value(){return this._get("value")}jsonfy(e={},t=null,s=null){if(e.deSugar&&!this.starRef()){let r=this.key(),n,a=t?t.transform(r,(f=e)=>r.jsonfy(f),"key",e):r.jsonfy(e);a.is_aggr&&({is_aggr:n,...a}=a);let p=this.value();p||(p=l.ColumnRef1.fromJSON({...a,nodeName:void 0}),this._adoptNodes(p));let c;n&&!(p instanceof l.LQDeepRef1)?c=(f=e,y=t)=>({nodeName:l.AggrCallExpr.NODE_NAME,name:(e.toDialect||this.options.dialect)==="mysql"?"JSON_ARRAYAGG":"JSON_AGG",arguments:[p.jsonfy(f,y,s)]}):c=(f=e,y=t)=>p.jsonfy(f,y,s);let u=t?t.transform(p,c,"value",{...e,asAggr:n}):c();return{nodeName:o.NODE_NAME,key:a,value:u}}return super.jsonfy(e,t,s)}};var mr=class extends v{static get syntaxRules(){return{dialect:"postgres",syntax:[{type:"keyword",value:"ARRAY"},{type:"bracket_block",syntax:{type:"Expr",as:"entries",arity:1/0,itemSeparator:{type:"punctuation",value:","},autoIndent:2},autoSpacing:!1}]}}static morphsTo(){return l.CallExpr}dataType(){return l.DataType.fromJSON({value:"JSON"})}jsonfy(e={},t=null,s=null){let r=super.jsonfy(e,t,s);return(e.toDialect||this.options.dialect)==="mysql"&&(r={nodeName:l.CallExpr.NODE_NAME,name:"JSON_ARRAY",arguments:r.entries}),r}};var dr=class extends ee{static get syntaxRules(){return[{type:"Expr",as:"left",peek:[1,"operator","AT"]},{type:"operator",as:"operator",value:"AT"},{syntaxes:[{type:"TypedTimeZoneLiteral",as:"right"},{type:"keyword",as:"right",value:"LOCAL"}]}]}static get syntaxPriority(){return 0}left(){return this._get("left")}right(){return this._get("right")}dataType(){return l.DataType.fromJSON({value:"TIME ZONE"})}};var _r=class extends ee{static get syntaxRules(){return[{type:"Expr",as:"left",peek:[1,"operator",["NOT","BETWEEN"]]},{type:"operator",as:"negation",value:"NOT",booleanfy:!0,optional:!0},{type:"operator",as:"operator",value:"BETWEEN"},{type:"Expr",as:"right",arity:{min:2,max:2,eager:!1},itemSeparator:{type:"operator",value:"AND"},assert:!0}]}};var hr=class extends ee{static get syntaxRules(){return[{type:"Expr",as:"left",peek:[1,"operator",["IS","IS NOT"]]},{type:"operator",as:"logic",value:["IS","IS NOT"]},{type:"operator",as:"operator",value:"DISTINCT FROM"},{type:"Expr",as:"right",assert:!0}]}logic(){return this._get("logic")}};var xr=class extends ee{static get syntaxRules(){return[{type:"Expr",as:"left",peek:[1,"operator",["NOT","IN"]]},{type:"operator",as:"negation",value:"NOT",booleanfy:!0,optional:!0},{type:"operator",as:"operator",value:"IN"},{type:["DerivedQuery","RowConstructor","TypedRowConstructor"],as:"right",assert:!0}]}};var gr=class extends ee{static get syntaxRules(){return{dialect:"postgres",syntax:[{type:"Expr",as:"left",peek:[1,"operator","::"]},{type:"operator",as:"operator",value:"::",autoSpacing:!1},{type:"DataType",as:"right",assert:!0,autoSpacing:!1}]}}expr(){return this.left()}dataType(){return this.right()}};var Nr=class extends re{static get syntaxRules(){return[{type:"operator",as:"operator",value:["-","+","NOT"]},{type:"Expr",as:"operand",autoSpacing:["NOT"]}]}static get syntaxPriority(){return 1}operator(){return this._get("operator")}operand(){return this._get("operand")}dataType(){let e=this.operator();return e?l.DataType.fromJSON({value:e==="NOT"?"BOOLEAN":"NUMBER"}):super.dataType()}};var Ae=class extends Error{};var Ve=class extends Error{};var Se=class extends Z(Ee(ie)){lookup(e,t){return[]}resolve(e,t){let s=this.lookup(null,e,t)||[],r=this.constructor.name.match(/schema/i)?"Schema":this.constructor.name.match(/table/i)?"Table":"Column";if(s.length>1)throw new Ve(`[${this.parentNode?.parentNode||this.parentNode||this}] ${r} ${this} is ambiguous. (Is it ${s.join(" or ")}?)`);if(!s.length)throw new Ae(`[${this.parentNode?.parentNode||this.parentNode||this}] ${r} ${this} does not exist.`);return s[0]}};var Qe=class o extends be(Se){static get _qualifierType(){return["TableRef1","LQBackRefAbstraction"]}static get syntaxRules(){return this.buildSyntaxRules({type:"identifier",as:".",autoSpacing:!1})}static get syntaxPriority(){return 51}static morphsTo(){return l.ColumnRef2}dataType(){return this.resultSchema()?.dataType()||super.dataType()}canReferenceOutputColumns(){return this.climbTree((e,t)=>e instanceof l.SelectStmt?!1:e instanceof l.GroupByClause||e instanceof l.HavingClause||e instanceof l.OrderByClause?e:t())}lookup(e=null,t=null,s=null){if(!t&&!s)return[];let r=this._get("value"),n=(!r||r==="*")&&!e,a=[],p=(u,f=void 0)=>{if(!(u instanceof l.ColumnSchema)||r&&r!=="*"&&!u.identifiesAs(this))return!1;let y;if(e&&!(y=e(u,f)))return!1;if(y instanceof _||Array.isArray(y))return y;let d=u.clone({normalized:!0});u.parentNode?._adoptNodes(d);let m=o.fromJSON({...u.name().jsonfy({nodeNames:!1}),result_schema:d,qualifier:f});return this.parentNode._adoptNodes(m),m};if(((this.options.dialect||"postgres")==="postgres"?["CTID","OID","XMIN","XMAX","TABLEOID"]:[]).includes(r?.toUpperCase())){let u=l.ColumnSchema.fromJSON({name:{nodeName:l.Identifier.NODE_NAME,value:r},data_type:{nodeName:l.DataType.NODE_NAME,value:"INT"}},{assert:!0});return[].concat(p(u)||[])}if(this.canReferenceOutputColumns()&&t){let u=t.statementContext;for(let f of u.artifacts.get("outputSchemas"))if(a=a.concat(p(f)||[]),!n&&a.length)break}if((n||!a.length)&&(a=a.concat(new l.TableRef1(this.qualifier()?.jsonfy()||{}).lookup((u,f=void 0)=>u._get("entries").reduce((y,d)=>{if(u instanceof l.JSONSchema)return y.concat(p(d)||[]);let m={...u.name().jsonfy({nodeNames:!1}),result_schema:u,qualifier:f};return y.concat(p(d,m)||[])},[]),t,s))),r==="*"){let u=l.ColumnRef0.fromJSON({value:this.value(),result_schema:l.JSONSchema.fromJSON({entries:a.map(f=>f.clone())},{assert:!0})});this.parentNode._adoptNodes(u),a=[u]}return a}jsonfy({toKind:e=1,...t}={},s=null,r=null){if(t.deSugar&&(!this.qualifier()&&Number(t.deSugar)>1||!this.resultSchema())&&(s||r)){let a=this.resolve(s,r).jsonfy();return Number(t.deSugar)<2&&!this.qualifier()?{...a,qualifier:void 0}:a}let n=super.jsonfy(t,s,r);return e===2&&(n={...n,nodeName:l.ColumnRef2.NODE_NAME},delete n.qualifier),n}};var Er=class extends Qe{static get _qualifierType(){return["TableRef1"]}static get syntaxRules(){return this.buildSyntaxRules({type:"operator",as:".",value:"*",autoSpacing:!1})}static get syntaxPriority(){return-1}dataType(){return l.DataType.fromJSON({value:"SET"})}};var ke=class extends Error{constructor(e){super(e),this.name="ErrorFKInvalid"}};var Ie=class extends Ke(ee){rhsTable(e,t){let r=(this.operand()?.resolve(e,t)).resultSchema()?.fkConstraint(!0);if(!r)throw new ke(`[${this.parentNode||this}] Column ${this.operand()} is not a foreign key.`);return r.targetTable()?.resolve(null,t)}rhsSchema(e,t){return this.rhsTable(e,t)?.resultSchema()}};var $e=class o extends Se{static get syntaxPriority(){return-1}static morphsTo(){return l.ColumnRef1}dataType(){return this.resultSchema()?.dataType()||super.dataType()}lookup(e,t=null,s=null){if(!t&&!s)return[];let r=this._get("value"),n=!r&&!e,a=[],p=u=>{if(!(u instanceof l.ColumnSchema)||r&&!u.identifiesAs(this))return!1;let f;if(e&&!(f=e(u)))return!1;if(f instanceof _||Array.isArray(f))return f;let y=u.clone({normalized:!0});u.parentNode._adoptNodes(y);let d=o.fromJSON({...u.name().jsonfy({nodeNames:!1}),result_schema:y});return this.parentNode._adoptNodes(d),d},c;this.parentNode instanceof Ie?this===this.parentNode.operand()?c=[this.parentNode.parentNode.rhsSchema(t,s)]:c=[this.parentNode.rhsSchema(t,s)]:c=this.climbTree((u,f)=>{if(u instanceof l.InsertStmt||u instanceof l.UpdateStmt){let y=[...t.statementContext.artifacts.get("tableSchemas")].map(d=>d.resultSchema);return this.options.dialect!=="mysql"&&(y=y.slice(0,1)),y}return u instanceof l.TableSchema?[u]:f()});e:for(let u of c||[])for(let f of u)if(a=a.concat(p(f)||[]),!n&&a.length)break e;return a}jsonfy({toKind:e=2,...t}={},s=null,r=null){if(t.deSugar&&!this.resultSchema()&&(s||r))return this.resolve(s,r).jsonfy();let n=super.jsonfy(t,s,r);return e===1&&(n={...n,nodeName:l.ColumnRef1.NODE_NAME},delete n.qualifier),n}};var De=class o extends Ie{static get _leftType(){return["LQBackRefEndpoint","LQBackBackRef"]}static get syntaxRules(){return[{type:this._leftType,as:"left",peek:[1,"operator","<~"]},{type:"operator",value:"<~"},{type:"ColumnRef2",as:"right",peek:[1,"operator","<~"]}]}static get syntaxPriority(){return 1}static morphsTo(){return[l.LQDeepRef1,l.LQDeepRef2,l.LQDeepDeepRef1,l.LQDeepDeepRef2]}operand(){return this.right()}endpoint(){return this.left()instanceof o?this.left().endpoint():this.left()}jsonfy({reverseRef:e=!1,toKind:t=1,...s}={},r=null,n=null){return e?{nodeName:t===2?e===1/0?l.LQDeepDeepRef2.NODE_NAME:l.LQDeepRef2.NODE_NAME:e===1/0?l.LQDeepDeepRef1.NODE_NAME:l.LQDeepRef1.NODE_NAME,left:this.right().jsonfy({toKind:e!==1/0?1:2,...s}),right:this.left()instanceof l.LQBackRefEndpoint?{nodeName:l.ColumnRef2.NODE_NAME,value:this.left().value(),delim:this.left()._get("delim")}:this.left().jsonfy({reverseRef:1/0,toKind:t,...s})}:super.jsonfy(s,r,n)}};var Sr=class extends De{static get syntaxRules(){return[{type:this._leftType,as:"left",peek:[1,"operator","<~"]},{type:"operator",value:"<~"},{type:"TableRef2",as:"right"}]}static get syntaxPriority(){return 0}rhsTable(e,t){if(!t)return;let s=this.right()?.lookup(null,null,t)||[];if(!s.length)throw new Ae(`[${this.parentNode||this}] Implied RHS table ${this.right()} does not exist.`);return s[0]}resolve(e,t,s=1){if(!e||!t)return;let r=this.left(),n=r instanceof De?r.endpoint():r,a=n.qualifier(),p=l.ColumnRef2.fromJSON({...n.jsonfy({nodeNames:!1}),qualifier:void 0}),u=n.resolve(e,t).resultSchema().fkConstraint(!0);if(!u)throw new ke(`[${this.parentNode||this}] Endpoint column ${p} is not a foreign key.`);let f=u.targetTable(),y,d=(h,S)=>{let N=S.pkConstraint(!0)?.columns()[0]?.resolve(e,t);if(!N)throw new ke(`[${this.parentNode||this}] The referenced LHS table ${h} does not have a primary key.`);let E=l.ColumnRef1.fromJSON({qualifier:{...S.name().jsonfy({nodeNames:!1}),result_schema:S},value:N.value(),delim:N._get("delim"),result_schema:N.resultSchema()});if(y)throw new Ve(`[${this.parentNode||this}]: The referenced endpoint for foreign key ${p} is ambiguous. (Is it ${y} or ${E}?)`);y=E},m=e.statementContext;e:do for(let{type:h,resultSchema:S}of m.artifacts.get("tableSchemas")){if(h==="CTEItem")continue;let N=S._get("ddl_name")||S.name();if(a){if(!S.identifiesAs(a))continue;if(!f.identifiesAs(N))throw new ke(`[${this.parentNode||this}] The endpoint table implied by ${a} (${N}) is not the actual target (${f}) of the foreign key column ${p}.`);d(N,S);break e}else f.identifiesAs(N)&&d(N,S)}while(!y&&(m=m.parentTransformer?.statementContext));if(!y)throw new Ae(`[${this.parentNode||this}] Ref does not correlate with current query.`);let g=this.rhsTable(e,t),x=r instanceof De?r.clone({reverseRef:!0,toKind:s}):p.constructor.fromJSON({...p.jsonfy(),result_schema:g.resultSchema()._get("entries",p)});return{lhsOperand:y,rhsOperand:x.clone({toKind:s}),rhsTable:g}}};var ut=class extends we{static get syntaxRules(){return{type:"paren_block",syntaxes:[{type:"Expr",as:"expr",peek:[1,"operator","<~"]},{type:"Expr",as:"expr",peek:[2,"operator","<~"]}]}}static get syntaxPriority(){return 51}expr(){return this._get("expr")}};var Tr=class extends $e{static get syntaxRules(){return[{optional:!0,type:"paren_block",syntax:{type:"Identifier",as:"qualifier"}},{...[].concat(super.syntaxRules)[0],peek:[1,"operator","<~"]}]}static get syntaxPriority(){return 52}static morphsTo(){return $e}qualifier(){return this._get("qualifier")}};var Oe=class o extends Ie{static get _rightType(){return["LQDeepDeepRef1","LQObjectLiteral","LQArrayLiteral","RowConstructor","ColumnRef2"]}static get syntaxRules(){return[{type:["ColumnRef2","LQBackRefAbstraction"],as:"left",peek:[1,"operator","~>"]},{type:"operator",value:"~>"},{type:this._rightType,as:"right"}]}static get syntaxPriority(){return-1}static morphsTo(){return[l.LQDeepRef1,l.LQDeepRef2,l.LQDeepDeepRef1,l.LQDeepDeepRef2]}operand(){return this.left()}endpoint(){return this.right()instanceof o?this.right().endpoint():this.right()}jsonfy({toDeepRef:e=!1,toKind:t=1,...s}={},r=null,n=null){if(e||t===1||t===2){let a=[l.LQDeepRef1.NODE_NAME,l.LQDeepRef2.NODE_NAME,l.LQDeepDeepRef1.NODE_NAME,l.LQDeepDeepRef2.NODE_NAME],p=a.indexOf(this.NODE_NAME);return e&&p>1&&(p-=2),{nodeName:a[(p+1)%2===t%2?p:t%2?p-1:p+1],left:this.left().jsonfy({toKind:p>1?2:1}),right:this.right().jsonfy({toKind:this.right()instanceof o?t:void 0})}}return super.jsonfy(s,r,n)}};var Ar=class extends Oe{static get _rightType(){return["LQDeepDeepRef2","ColumnRef2","ColumnsConstructor"]}jsonfy({toDeepRef:e=!1,toKind:t=2,...s}={},r=null,n=null){return super.jsonfy({toDeepRef:e,toKind:t,...s},r=null,n)}};var Xe=class o extends Oe{static get syntaxRules(){return[{syntaxes:[[{type:["ColumnRef1","LQBackRefAbstraction"],as:"left",peek:[1,"operator","~>"]},{type:"operator",value:"~>"}],[{type:"ColumnRef1",as:"left",peek:[3,"operator","~>"]},{type:"operator",value:"~>"}]]},{type:this._rightType,as:"right"}]}static get syntaxPriority(){return 1}rhsTable(e,t){return this.left()?.qualifier?.()instanceof l.LQBackRefAbstraction?this._normalize().rhsTable(e,t):this.left()instanceof l.LQBackRefAbstraction?this.left().expr().rhsTable(e,t):super.rhsTable(e,t)}_normalize(){let e=this.left(),t=this.right(),s=e.qualifier().jsonfy(),r={...e.jsonfy(),qualifier:void 0,nodeName:l.ColumnRef2.NODE_NAME},n=o.fromJSON({left:s,right:{nodeName:Oe.NODE_NAME,left:r,right:t.jsonfy()}});return this._adoptNodes(n),n}resolve(e,t,s=1){if(!e||!t)return;if(this.left()?.qualifier?.()instanceof l.LQBackRefAbstraction)return this._normalize().resolve(e,t,s);let r;if(this.right()instanceof l.ColumnRef2?r=this.right().clone({toKind:s}):this.right()instanceof l.LQDeepDeepRef1?r=this.right().clone({toDeepRef:!0,toKind:s}):r=this.right(),this.left()instanceof l.LQBackRefAbstraction)return{...this.left().expr().resolve(e,t,s),detail:r};let n=this.left().resolve(e,t),a=this.rhsTable(e,t),p=a.resultSchema().pkConstraint(!0)?.columns()[0]?.resolve(e,t);if(!p)throw new Error(`[${this.parentNode||this}] The referenced RHS table ${a} does not have a primary key.`);return{lhsOperand:n,rhsOperand:p.clone({toKind:s}),rhsTable:a,detail:r}}};var Or=class extends Xe{static get _rightType(){return["LQDeepDeepRef2","ColumnRef2","ColumnsConstructor"]}static get syntaxPriority(){return-1}resolve(e,t,s=2){return super.resolve(e,t,s)}jsonfy({toDeepRef:e=!1,toKind:t=2,...s}={},r=null,n=null){return super.jsonfy({toDeepRef:e,toKind:t,...s},r,n)}};var Rr=class extends Se{static get syntaxRules(){return[{type:"identifier",as:"."},{type:"LQVersionSpec",as:"version_spec",optional:!0,autoSpacing:!1}]}static get syntaxPriority(){return-1}versionSpec(){return this._get("version_spec")}lookup(e=null,t=null,s=null){if(!s)return[];let r=this._get("value"),n=!r&&!e,a=[],p=c=>{if(!(c instanceof l.SchemaSchema)||r&&!c.identifiesAs(this))return!1;let u;if(e&&!(u=e(c)))return!1;if(u instanceof _||Array.isArray(u))return u;let f=ColumnRef2.fromJSON({...c.name().jsonfy({nodeNames:!1}),ddl_schema:c});return this.parentNode._adoptNodes(f),f};for(let c of s.catalog)if(a=a.concat(p(c)||[]),!n&&a.length)break;return a}jsonfy(e={},t=null,s=null){let r;return e.deSugar&&!this.resultSchema()&&s?r=this.resolve(t,s).jsonfy():r=super.jsonfy(e,t,s),e.deSugar&&r.version_spec&&(r={...r,version_spec:void 0}),r}};var Le=class extends be(Se){static get _qualifierType(){return"SchemaRef"}static get syntaxRules(){return this.buildSyntaxRules({syntax:[{type:"identifier",as:"."},{type:"LQVersionSpec",as:"version_spec",optional:!0,autoSpacing:!1}],autoSpacing:!1})}versionSpec(){return this._get("version_spec")}dataType(){return l.DataType.fromJSON({value:"SET"})}canReferenceInlineTables(){return!0}lookup(e=null,t=null,s=null){if(!t&&!s)return[];let r=this._get("value"),n=(!r||r==="*")&&!e,a=[],p=(u,f=void 0)=>{if(u instanceof l.JSONSchema&&(!r||r==="*")&&e)return e(u,f);if(!(u instanceof l.TableSchema)||r&&r!=="*"&&!u.identifiesAs(this))return!1;let y;if(e&&!(y=e(u,f)))return!1;if(y instanceof _||Array.isArray(y))return y;let d=this.constructor.fromJSON({...u.name().jsonfy({nodeNames:!1}),result_schema:u,qualifier:f});return this.parentNode?._adoptNodes(d),d};if(((this.options.dialect||"postgres")==="postgres"?["EXCLUDED"]:[]).includes(r?.toUpperCase())&&t){let u=[...t.statementContext.artifacts.get("tableSchemas")][0].resultSchema.clone({renameTo:{nodeName:l.Identifier.NODE_NAME,value:r}});return[].concat(p(u)||[])}if(this.canReferenceInlineTables()&&t){let u=t.statementContext,f;do for(let{type:y,resultSchema:d}of u.artifacts.get("tableSchemas"))if(!(f&&f!=="dml"&&y==="dml")&&(f||(f=y),!(y==="CTEItem"&&e)&&(a=a.concat(p(d)||[]),!n&&a.length)))break;while((n||!a.length)&&(u=u.parentTransformer?.statementContext))}if(!e&&(n||!a.length)&&(a=a.concat(new l.SchemaRef(this.qualifier()?.jsonfy()||{}).lookup(u=>u._get("entries").reduce((f,y)=>{let d={...u.name().jsonfy({nodeNames:!1}),result_schema:u};return f.concat(p(y,d)||[])},[]),t,s))),r==="*"){let u=l.TableRef0.fromJSON({value:this.value(),result_schema:l.JSONSchema.fromJSON({entries:a.map(f=>f.clone())},{assert:!0})});this.parentNode._adoptNodes(u),a=[u]}return a}jsonfy(e={},t=null,s=null){let r;return e.deSugar&&(!this.qualifier()&&Number(e.deSugar)>1||!this.resultSchema())&&(t||s)?(r=this.resolve(t,s).jsonfy(),Number(e.deSugar)<2&&!this.qualifier()&&(r={...r,qualifier:void 0})):r=super.jsonfy(e,t,s),e.deSugar&&r.version_spec&&(r={...r,version_spec:void 0}),r}};var vr=class extends Le{static get _qualifierType(){return["SchemaRef"]}static get syntaxRules(){return this.buildSyntaxRules({type:"operator",as:".",value:"*",autoSpacing:!1})}static get syntaxPriority(){return-1}dataType(){return l.DataType.fromJSON({value:"SET"})}};var Cr=class extends Le{canReferenceInlineTables(){return!1}};var br=class extends ie{static get syntaxPriority(){return-1}};var wr=class extends re{static get syntaxRules(){return{type:"bind_var",as:"."}}value(){return this._get("value")}};var kr=class extends re{static get syntaxRules(){return{type:"system_var",as:"."}}value(){return this._get("value")}};var Ir=class extends re{static get syntaxRules(){return{type:"user_var",as:"."}}value(){return this._get("value")}};var pt=class extends re{static get syntaxRules(){return{type:Fa,expression:!0}}static[Symbol.hasInstance](e){return e instanceof re||e.constructor.name in he}},qa=Object.keys(he),Fa=qa.filter(o=>he[o]!==pt&&he[o].syntaxPriority!==-1).sort((o,e)=>{let t=(he[e].syntaxPriority??100)-(he[o].syntaxPriority??100);return t===0?he[e].prototype.isPrototypeOf(he[o].prototype)?-1:1:t});var Dr=class extends be(ie){static get _qualifierType(){return"TableRef2"}};var Lr=class extends ie{};var Mr=class extends be(ie){static get _qualifierType(){return"SchemaRef"}};var Pr=class extends Ne{};var jr=class extends _e{static get syntaxRules(){return[{type:"Identifier",as:"name",assert:!0}]}};var Ur=class extends Ne{};var $r=class extends _e{static get syntaxRules(){return[{type:"SchemaIdent",as:"name",assert:!0},{type:"paren_block",syntax:{type:"TableSchema",as:"entries",arity:{min:1},itemSeparator:{type:"punctuation",value:","},singletons:"BY_KEY",autoIndent:!0}}]}tables(){let e=[];for(let t of this)t instanceof l.TableSchema&&e.push(t);return e}};var Jr=class extends Ne{};var Br=class extends _e{static get syntaxRules(){let e={type:"punctuation",value:","},t=["TablePKConstraint","TableFKConstraint","TableUKConstraint","PGTableEXConstraint","CheckConstraint","ColumnSchema","IndexSchema"];return[{type:["TableIdent","Identifier"],as:"name"},{type:"paren_block",syntaxes:[{type:t,as:"entries",arity:1/0,itemSeparator:e,singletons:"BY_KEY",optional:!0,dialect:"postgres",autoIndent:!0},{type:t,as:"entries",arity:{min:1},itemSeparator:e,singletons:"BY_KEY",dialect:"mysql",autoIndent:!0}]}]}columns(){let e=[];for(let t of this)t instanceof l.ColumnSchema&&e.push(t);return e}pkConstraint(e=!1){for(let t of this){if(t instanceof l.TablePKConstraint)return t;let s;if(e&&t instanceof l.ColumnSchema&&(s=t.pkConstraint())){let r=l.TablePKConstraint.fromJSON({...s.jsonfy(),nodeName:void 0,columns:[l.ColumnRef2.fromJSON({value:t.name().value()})]});return this._adoptNodes(r),r}}}fkConstraints(e=!1){let t=[];for(let s of this){s instanceof l.TableFKConstraint&&t.push(s);let r;if(e&&s instanceof l.ColumnSchema&&(r=s.fkConstraint())){let n=l.TableFKConstraint.fromJSON({...r.jsonfy(),nodeName:void 0,columns:[l.ColumnRef2.fromJSON({value:s.name().value()})]});this._adoptNodes(n),t.push(n)}}return t}ukConstraints(e=!1){let t=[];for(let s of this){s instanceof l.TableUKConstraint&&t.push(s);let r;if(e&&s instanceof l.ColumnSchema&&(r=s.ukConstraint())){let n=l.TableUKConstraint.fromJSON({...r.jsonfy(),nodeName:void 0,columns:[l.ColumnRef2.fromJSON({value:s.name().value()})]});this._adoptNodes(n),t.push(n)}}return t}ckConstraints(e=!1){let t=[];for(let s of this){s instanceof l.CheckConstraint&&t.push(s);let r;e&&s instanceof l.ColumnSchema&&(r=s.ckConstraint()?.clone())&&(this._adoptNodes(r),t.push(r))}return t}jsonfy({normalized:e=!1,...t}={},s=null,r=null){let n=[],a={[l.ColumnPKConstraint.NODE_NAME]:l.TablePKConstraint.NODE_NAME,[l.ColumnFKConstraint.NODE_NAME]:l.TableFKConstraint.NODE_NAME,[l.ColumnUKConstraint.NODE_NAME]:l.TableUKConstraint.NODE_NAME,[l.CheckConstraint.NODE_NAME]:l.CheckConstraint.NODE_NAME};e&&(s=new ne((c,u)=>{if(c?.NODE_NAME in a&&c.parentNode instanceof l.ColumnSchema){n.push({...c.jsonfy(),nodeName:a[c.NODE_NAME],...c instanceof l.CheckConstraint?{}:{columns:[l.ColumnRef2.fromJSON({value:c.parentNode.name().value()})]}});return}return u()},s));let p=super.jsonfy(t,s,r);return e&&(p={...p,entries:p.entries.concat(n)}),p}};var qr=class extends Ce{static get syntaxRules(){return{type:["CreateTableStmt"]}}};var Fr=class extends qr{static get syntaxRules(){return[{type:"keyword",value:"CREATE"},{optional:!0,syntaxes:[{type:"keyword",as:"temporary_kw",value:"TEMPORARY",booleanfy:!0},{type:"keyword",as:"temporary_kw",value:"TEMP",booleanfy:!0,dialect:"postgres"}]},{type:"keyword",value:"TABLE"},{optional:!0,syntax:[{type:"keyword",as:"if_not_exists",value:"IF",booleanfy:!0},{type:"operator",value:"NOT"},{type:"keyword",value:"EXISTS"}]},{type:"TableSchema",as:"argument"},{type:["ConfigAssignmentExprAlt1","ConfigAssignmentExprAlt2"],as:"my_create_options",arity:1/0,dialect:"mysql"}]}temporaryKW(){return this._get("temporary_kw")}ifNotExists(){return this._get("if_not_exists")}argument(){return this._get("argument")}myCreateOptions(){return this._get("my_create_options")}};var ia={};ve(ia,{AssignmentExpr:()=>ts,ColumnsConstructor:()=>es,ConfigAssignmentExpr:()=>rs,ConfigAssignmentExprAlt1:()=>ss,ConfigAssignmentExprAlt2:()=>as,DeleteStmt:()=>ls,InsertStmt:()=>Pe,MYOnDuplicateKeyUpdateClause:()=>Gr,MYPartitionClause:()=>Wr,MYSetStmt:()=>ps,MYVarAssignmentExpr:()=>ns,PGConflictTarget:()=>Yr,PGConflictTargetIndexSpec:()=>Kr,PGDefaultValuesClause:()=>Hr,PGOnConflictClause:()=>Vr,PGWhereCurrentClause:()=>Xr,ReturningClause:()=>Qr,SetClause:()=>zr,TableAbstraction1:()=>is,TableAbstraction2:()=>os,UpdateStmt:()=>cs,UpsertStmt:()=>fs,UsingFromClause:()=>Zr,ValuesConstructor:()=>Ze});var Gr=class extends v{static get syntaxRules(){return{dialect:"mysql",syntax:[{type:"keyword",value:"ON"},{type:"keyword",value:"DUPLICATE"},{type:"keyword",value:"KEY"},{type:"keyword",value:"UPDATE"},{type:"AssignmentExpr",as:"entries",arity:{min:1},itemSeparator:{type:"punctuation",value:","},assert:!0,autoIndent:!0}]}}};var Wr=class extends v{static get syntaxRules(){return{dialect:"mysql",syntax:[{type:"keyword",value:"PARTITION"},{type:"Identifier",as:"entries",arity:{min:1},itemSeparator:{type:"punctuation",value:","},assert:!0}]}}};var Yr=class extends _{static get syntaxRules(){return{syntaxes:[[{type:"keyword",value:"ON"},{type:"keyword",value:"CONSTRAINT"},{type:"Identifier",as:"constraint_name",assert:!0}],[{type:"paren_block",syntax:{type:"PGConflictTargetIndexSpec",as:"index_list",arity:{min:1},itemSeparator:{type:"punctuation",value:","},assert:!0},autoIndent:!0},{type:"WhereClause",as:"where_clause",optional:!0,autoIndent:!0}]]}}constraintName(){return this._get("constraint_name")}indexList(){return this._get("index_list")}whereClause(){return this._get("where_clause")}};var Kr=class extends _{static get syntaxRules(){return[{syntaxes:[{type:"ColumnRef2",as:"column_name"},{type:"paren_block",syntax:{type:"Expr",as:"expr",assert:!0},autoIndent:!0},{type:"CallExpr",as:"expr"}]},{optional:!0,syntax:[{type:"operator",value:"COLLATE"},{type:"string_literal",as:"collation",assert:!0}]},{type:"Identifier",as:"opclass",optional:!0}]}columnName(){return this._get("column_name")}expr(){return this._get("expr")}collation(){return this._get("collation")}opclass(){return this._get("opclass")}};var Hr=class extends _{static get syntaxRules(){return{dialect:"postgres",syntax:[{type:"keyword",as:".",value:"DEFAULT"},{type:"keyword",value:"VALUES"}]}}};var Vr=class extends v{static get syntaxRules(){return{dialect:"postgres",syntax:[{type:"keyword",value:"ON"},{type:"keyword",value:"CONFLICT"},{syntaxes:[[{type:"PGConflictTarget",as:"conflict_target",optional:!0},{type:"keyword",as:"do_nothing",value:"DO"},{type:"keyword",value:"NOTHING"}],[{type:"PGConflictTarget",as:"conflict_target"},{type:"keyword",value:"DO"},{type:"keyword",value:"UPDATE"},{type:"keyword",value:"SET"},{type:"AssignmentExpr",as:"entries",arity:{min:1},itemSeparator:{type:"punctuation",value:","},assert:!0,autoIndent:!0},{type:"WhereClause",as:"where_clause",optional:!0,autoIndent:!0}]]}]}}conflictTarget(){return this._get("conflict_target")}doNothing(){return this._get("do_nothing")}whereClause(){return this._get("where_clause")}};var ze=class extends Z(v){static get syntaxRules(){return{type:"SelectItem",as:"entries",arity:{min:1},itemSeparator:{type:"punctuation",value:","},assert:!0,autoIndent:2}}jsonfy(e={},t=null,s=null){let r=super.jsonfy(e,t,s);if(!e.deSugar)return r;let n=[],a=Number(e.deSugar)>2,p=!1,c=u=>{p&&(n=n.reduce((f,y)=>u.alias&&y.alias&&oe(u.alias.value,y.alias.value,u.alias.delim||y.alias.delim)?f:f.concat(y),[])),n=n.concat(u)};for(let[u,f]of r.entries.entries())if(f.expr.value==="*")for(let y of f.result_schema){let d=y.jsonfy(),m={nodeName:l.SelectItemAlias.NODE_NAME,as_kw:!0,value:d.value,delim:d.delim};c({nodeName:l.SelectItem.NODE_NAME,expr:d,alias:m,result_schema:d.result_schema.clone(),_originalStarJson:f})}else if(a&&this.entries()[u].expr()instanceof l.LQObjectLiteral&&!this.entries()[u].alias()){let[y]=f.expr.arguments.reduce(([m,g],x)=>g?[[...m,[g,x]]]:[m,x],[[]]),d=f.expr.result_schema.entries();for(let m=0;m<y.length;m++)c({nodeName:l.SelectItem.NODE_NAME,expr:y[m][1],alias:{...y[m][0],nodeName:l.SelectItemAlias.NODE_NAME,as_kw:!0},result_schema:d[m]})}else c(f);return{...r,entries:n}}finalizeJSON(e,t,s,r){let n=Number(r.deSugar)>1,a,[p,c]=e.entries.reduce(([u,f],{_originalStarJson:y,...d})=>{if(y&&(a=!0),y&&!n)return y.result_schema||(y.result_schema=l.JSONSchema.fromJSON({entries:[]},{assert:!0})),y.result_schema._add("entries",d.result_schema),[u.concat(y),f.concat(d.result_schema.clone())];if(!d.result_schema){let m=l.SelectItem.fromJSON(d,this.options);this._adoptNodes(m),d=m.jsonfy(r,t,s)}return[u.concat(d),f.concat(d.result_schema.clone())]},[[],[]]);return e={...e,entries:a&&!n?[...new Set(p)]:p,result_schema:l.JSONSchema.fromJSON({entries:c},{assert:!0})},t.statementContext.artifacts.set("outputSchemas",new Set(c)),e}};var Qr=class extends ze{static get syntaxRules(){return[{type:"keyword",value:"RETURNING"},...[].concat(super.syntaxRules)]}};var Xr=class extends _{static get syntaxRules(){return{dialect:"postgres",syntax:[{type:"keyword",value:"WHERE"},{type:"keyword",value:"CURRENT OF"},{type:"identifier",as:"cursor_name",assert:!0}]}}cursorName(){return this._get("cursor_name")}};var zr=class extends v{static get syntaxRules(){return[{type:"keyword",value:"SET"},{type:"AssignmentExpr",as:"entries",arity:{min:1},itemSeparator:{type:"punctuation",value:","},assert:!0,autoIndent:2}]}};var Zr=class extends v{static get syntaxRules(){return[{type:"keyword",value:"USING"},{type:"FromItem",as:"entries",arity:{min:1},itemSeparator:{type:"punctuation",value:","},assert:!0}]}};var es=class extends v{static get syntaxRules(){return{syntax:[{type:"paren_block",syntax:{type:["LQDeepRef2","ColumnRef2"],as:"entries",arity:1/0,itemSeparator:{type:"punctuation",value:","},autoIndent:10}}]}}static get syntaxPriority(){return-1}};var Ze=class extends Z(v){static get syntaxRules(){let e={type:"punctuation",value:","};return{syntaxes:[[{type:"keyword",value:"VALUES"},{type:["TypedRowConstructor","RowConstructor"],as:"entries",arity:{min:1},itemSeparator:e,assert:!0,autoIndent:2}],{dialect:"mysql",syntax:[{type:"keyword",value:["VALUES","VALUE"]},{type:["TypedRowConstructor","RowConstructor"],as:"entries",arity:{min:1},itemSeparator:e,assert:!0,autoIndent:2}]}]}}static get syntaxPriority(){return-1}jsonfy(e={},t=null,s=null){let r=super.jsonfy({...e,forceDeSugar:e.deSugar},t,s);if(e.deSugar){let n=r.entries?.[0]?.result_schema;r={...r,result_schema:n?.clone()}}return r}};var ts=class extends ee{static get syntaxRules(){return[{type:["LQDeepRef2","ColumnsConstructor","ColumnRef2"],as:"left",dialect:"postgres"},{type:["LQDeepRef2","ColumnRef1"],as:"left",dialect:"mysql"},{type:"operator",as:"operator",value:"="},{type:["ValuesTableLiteral","DerivedQuery","Expr"],as:"right"}]}};var rs=class extends ee{static get syntaxRules(){return[{type:"keyword",as:"my_default_kw",value:"DEFAULT",booleanfy:!0,dialect:"mysql",optional:!0},{syntaxes:[{type:"keyword",as:"left"},{type:"identifier",as:"left"}]},{type:"operator",as:"operator",value:"="},{syntaxes:[{type:"Expr",as:"right"},{type:"keyword",as:"right"}]}]}myDefaultKW(){return this._get("my_default_kw")}};var ss=class extends ee{static get syntaxRules(){return[{type:"keyword",as:"my_default_kw",value:"DEFAULT",booleanfy:!0,dialect:"mysql",optional:!0},{syntaxes:[{type:"keyword",as:"left"},{type:"identifier",as:"left"}]},{type:"operator",as:"operator",value:"=",optional:!0},{syntaxes:[{type:"Expr",as:"right"},{type:"keyword",as:"right"}]}]}myDefaultKW(){return this._get("my_default_kw")}};var as=class extends ee{static get syntaxRules(){return[{type:"keyword",as:"default_kw",value:"DEFAULT",booleanfy:!0,optional:!0},{syntaxes:[{type:"keyword",as:"left"},{type:"identifier",as:"left"}]},{optional:!0,syntax:[{type:"operator",as:"operator",value:"="},{syntaxes:[{type:"Expr",as:"right"},{type:"keyword",as:"right"}]}]}]}myDefaultKW(){return this._get("my_default_kw")}};var ns=class extends ee{static get syntaxRules(){return{dialect:"mysql",syntax:[{type:["UserVar","SystemVar"],as:"left"},{type:"operator",as:"operator",value:["=",":="]},{type:"Expr",as:"right"}]}}};var os=class extends Z(_){static get syntaxRules(){return[{type:"keyword",as:"pg_only_kw",value:"ONLY",optional:!0,dialect:"postgres"},{type:"TableRef1",as:"table_ref",assert:!0},{type:"operator",as:"pg_star_ref",value:"*",booleanfy:!0,optional:!0,dialect:"postgres"},{type:"SelectItemAlias",as:"alias",optional:!0}]}tableRef(){return this._get("table_ref")}alias(){return this._get("alias")}pgOnlyKW(){return this._get("pg_only_kw")}pgStarRef(){return this._get("pg_star_ref")}deriveAlias(){let e;return this.alias()?e=this.alias():e=l.SelectItemAlias.fromJSON({as_kw:!0,value:this.tableRef().value(),delim:this.tableRef()._get("delim")}),e}jsonfy(e={},t=null,s=null){let r=super.jsonfy(e,t,s);if(e.deSugar){let n=r.alias||this.deriveAlias().jsonfy(),a={nodeName:l.Identifier.NODE_NAME,value:n.value,delim:n.delim},p=r.table_ref.result_schema.clone({renameTo:a});r.alias&&(p=p.clone({renameTo:{nodeName:l.Identifier.NODE_NAME,value:r.alias.value,delim:r.alias.delim}})),t.statementContext.artifacts.get("tableSchemas").add({resultSchema:p});let c=Number(e.deSugar)>1&&n||r.alias;r={...r,alias:c,result_schema:p}}return r}};var is=class extends _{static get syntaxRules(){return[{type:"TableRef1",as:"table_ref"},{optional:!0,dialect:"mysql",syntax:[{type:"punctuation",value:".",autoSpacing:!1},{type:"operator",as:"my_star_ref",value:"*",booleanfy:!0,autoSpacing:!1}]}]}tableRef(){return this._get("table_ref")}myStarRef(){return this._get("my_star_ref")}};var et=o=>class extends o{get isSelectorStmt(){return!0}jsonfy(e={},t=null,s=null){if(!e.deSugar)return super.jsonfy(e,t,s);let{ColumnRef1:r,ColumnRef2:n,AggrCallExpr:a,LQBackRefAbstraction:p,LQDeepRef1:c,LQBackRef:u}=l;return t=new ne((f,y,d,{deSugar:m,asAggr:g,...x})=>{let h=E=>E instanceof r&&E.qualifier()instanceof p,S=E=>{let C=E.qualifier().jsonfy(),w={...E.jsonfy(),qualifier:void 0,nodeName:n.NODE_NAME},L=c.fromJSON({left:C,right:w});return E.parentNode._adoptNodes(L),L},N=E=>({nodeName:a.NODE_NAME,name:(x.toDialect||this.options.dialect)==="mysql"?"JSON_ARRAYAGG":"JSON_AGG",arguments:[E]});if(h(f)&&(f=S(f)),f instanceof c){let{select:E,detail:C}=this.createSelectorDimension(f,t,s,{...x,asAggr:g}),w=g?N(C.jsonfy()):C.jsonfy();return E(w)}if(f instanceof u||f instanceof p){f instanceof p&&(f=f.expr());let{alias:E}=this.createSelectorDimension(f,t,s,x);return E()}return y()},t,this),super.jsonfy(e,t,s)}createSelectorDimension(e,t,s,{asAggr:r=!1,...n}={}){let{lhsOperand:a,rhsOperand:p,rhsTable:c,detail:u}=e.resolve(t,s),f=t.statementContext.artifacts.get("selectorDimensions"),{CompleteSelectStmt:y,DerivedQuery:d,FromClause:m,JoinClause:g,OnClause:x,GroupByClause:h,GroupingElement:S,FromItem:N,SelectList:E,SelectItem:C,FromItemAlias:w,SelectItemAlias:L,TableRef1:H,ColumnRef1:j,BinaryExpr:W}=l,k=`dimension${r?"/g":""}|${[a,p,c].join("|")}`,$=t.statementContext.hash(k,"join");if(f?.has($))return{...f.get($),detail:u};let K=new Map,J=t.rand("key",K),B=p.jsonfy(),U={nodeName:C.NODE_NAME,expr:B,alias:{nodeName:L.NODE_NAME,as_kw:!0,value:J}},A={nodeName:g.NODE_NAME,join_type:"LEFT",expr:{nodeName:d.NODE_NAME,expr:{nodeName:y.NODE_NAME,select_list:{nodeName:E.NODE_NAME,entries:[U]},from_clause:{nodeName:m.NODE_NAME,entries:[{nodeName:N.NODE_NAME,expr:c.jsonfy({...n,deSugar:0})}]},group_by_clause:r?{nodeName:h.NODE_NAME,entries:[{nodeName:S.NODE_NAME,expr:{nodeName:j.NODE_NAME,value:J}}]}:void 0}},alias:{nodeName:w.NODE_NAME,as_kw:!0,value:$},condition_clause:{nodeName:x.NODE_NAME,expr:{nodeName:W.NODE_NAME,operator:"=",left:a.jsonfy({...n,deSugar:0},t,s),right:{nodeName:j.NODE_NAME,qualifier:{nodeName:H.NODE_NAME,value:$},value:J}}}},M={id:$,type:"join",query:A,alias:()=>({nodeName:H.NODE_NAME,value:$}),select:Y=>{let O=t.rand("ref",K);return A.expr.expr.select_list.entries.push({nodeName:C.NODE_NAME,expr:Y,alias:{nodeName:L.NODE_NAME,as_kw:!0,value:O}}),{nodeName:j.NODE_NAME,qualifier:{nodeName:H.NODE_NAME,value:$},value:O}},detail:u};return f.set($,M),M}finalizeSelectorJSON(e,t,s,r){let n;[e,n]=this.preprocessSelectorDimensions(e,t,s,r),e={...e,join_clauses:e.join_clauses?.slice(0)||[]};for(let a of n){let p=l.JoinClause.fromJSON(a,this.options);this._adoptNodes(p);let c=t.transform(p,(u=r,f=t)=>p.jsonfy({...u,deSugar:2},f,s),null,r);e.join_clauses.push(c)}return e}preprocessSelectorDimensions(e,t,s,r){let n=t.statementContext.artifacts.get("selectorDimensions");if(!n.size)return[e,[]];if(this.options.dialect==="postgres"&&(this instanceof l.DeleteStmt||this instanceof l.UpdateStmt)){if(e.where_clause?.cursor_name)throw new Error('Deep/Back Refs are currently not supported with a "WHERE CURRENT OF..." statement');let{DerivedQuery:a,CompleteSelectStmt:p,SelectList:c,SelectItem:u,FromItemAlias:f,FromClause:y,WhereClause:d,TableRef1:m,BinaryExpr:g,FromItem:x}=l,h=t.rand("join"),S=e.table_expr,N=S.alias.value,E=S.alias.delim,C=`${h}:${N}`,L=S.result_schema.pkConstraint(!0)?.columns()[0].jsonfy({toKind:1}),H,j,W=U=>({nodeName:g.NODE_NAME,left:{...U,qualifier:{nodeName:m.NODE_NAME,value:N,delim:E}},operator:"=",right:{...U,qualifier:{nodeName:m.NODE_NAME,value:C}}}),k,$=U=>{if(!oe(U.qualifier.value,N,U.qualifier.delim||E))return U;if(!H){let A={nodeName:x.NODE_NAME,expr:{nodeName:a.NODE_NAME,expr:{nodeName:p.NODE_NAME,select_list:{nodeName:c.NODE_NAME,entries:[]},from_clause:{nodeName:y.NODE_NAME,entries:[{nodeName:x.NODE_NAME,expr:S.table_ref}]}}},alias:{nodeName:f.NODE_NAME,as_kw:!0,value:C}};k=A.expr.expr.select_list.entries,L&&(k.push({nodeName:u.NODE_NAME,expr:L}),j={nodeName:d.NODE_NAME,expr:W(L)}),H=A}if(k.find(A=>oe(A.expr.value,U.value,A.expr.delim||U.delim))||k.push({nodeName:u.NODE_NAME,expr:U}),!L){let A=W(U);j&&(A={nodeName:g.NODE_NAME,left:j.expr,operator:"AND",right:A}),j={nodeName:d.NODE_NAME,expr:A}}return{...U,qualifier:{nodeName:m.NODE_NAME,value:C}}},K=[];for(let[,{query:U}]of n)K.push({...U,condition_clause:{...U.condition_clause,expr:{...U.condition_clause.expr,left:$(U.condition_clause.expr.left)}}});let[J,B]=this instanceof l.DeleteStmt?["using_clause","UsingFromClause"]:["pg_from_clause","FromClause"];if(H){let U=x.fromJSON(H,this.options);this._adoptNodes(U),e={...e,[J]:{nodeName:l[B].NODE_NAME,entries:(e[J]?.entries||[]).concat(U.jsonfy(r,t,s))},where_clause:e.where_clause?{nodeName:d.NODE_NAME,expr:{nodeName:g.NODE_NAME,left:j.expr,operator:"AND",right:e.where_clause.expr}}:j}}return[e,K]}return[e,[...n].map(([,{query:a}])=>a)]}};var Me=class extends ge{static get syntaxRules(){return{type:["InsertStmt","UpsertStmt","UpdateStmt","DeleteStmt"]}}finalizeOutputJSON(e,t,s,r){if(e.returning_clause){let n=this.returningClause().finalizeJSON(e.returning_clause,t,s,r);e={...e,returning_clause:n,result_schema:n.result_schema}}else e={...e,result_schema:l.JSONSchema.fromJSON({entries:[]},this.options)};return e}};var ls=class extends et(Me){static get syntaxRules(){let e={type:"punctuation",value:","};return[{type:"keyword",value:"DELETE"},{assert:!0,syntaxes:[{dialect:"postgres",syntax:[{type:"keyword",value:"FROM"},{type:"TableAbstraction2",as:"table_expr"},{type:"UsingFromClause",as:"using_clause",optional:!0,autoIndent:!0},{type:"JoinClause",as:"join_clauses",arity:1/0,optional:!0,autoIndent:!0},{type:["PGWhereCurrentClause","WhereClause"],as:"where_clause",optional:!0,autoIndent:!0},{type:"ReturningClause",as:"returning_clause",optional:!0,autoIndent:!0}]},{dialect:"mysql",syntax:[{type:"TableAbstraction1",as:"my_delete_list",arity:{min:1},itemSeparator:e},{type:"FromClause",as:"my_from_clause",autoIndent:!0},{type:"JoinClause",as:"join_clauses",arity:1/0,optional:!0,autoIndent:!0},{type:"WhereClause",as:"where_clause",optional:!0,autoIndent:!0}]},{dialect:"mysql",syntax:[{type:"keyword",value:"FROM"},{type:"TableAbstraction1",as:"my_delete_list",arity:{min:1},itemSeparator:e},{type:"UsingFromClause",as:"using_clause",autoIndent:!0},{type:"JoinClause",as:"join_clauses",arity:1/0,optional:!0,autoIndent:!0},{type:"WhereClause",as:"where_clause",optional:!0,autoIndent:!0}]},{dialect:"mysql",syntax:[{type:"keyword",value:"FROM"},{type:"TableAbstraction2",as:"table_expr"},{type:"MYPartitionClause",as:"my_partition_clause",optional:!0,autoIndent:!0},{type:"WhereClause",as:"where_clause",optional:!0,autoIndent:!0},{type:"OrderByClause",as:"my_order_by_clause",optional:!0,dialect:"mysql",autoIndent:!0},{type:"LimitClause",as:"my_limit_clause",optional:!0,dialect:"mysql",autoIndent:!0}]}]}]}tableExpr(){return this._get("table_expr")}usingClause(){return this._get("using_clause")}joinClauses(){return this._get("join_clauses")}whereClause(){return this._get("where_clause")}returningClause(){return this._get("returning_clause")}myPartitionClause(){return this._get("my_partition_clause")}myDeleteList(){return this._get("my_delete_list")}myFromClause(){return this._get("my_from_clause")}myOrderByClause(){return this._get("my_order_by_clause")}myLimitClause(){return this._get("my_limit_clause")}jsonfy(e={},t=null,s=null){if(!e.deSugar)return super.jsonfy(e,t,s);t=new ne((n,a)=>a(),t,this);let r=super.jsonfy(e,t,s);return(e.toDialect||this.options.dialect)==="mysql"?r={uuid:r.uuid,nodeName:r.nodeName,my_delete_list:r.my_delete_list,my_from_clause:r.my_from_clause,using_clause:r.using_clause,join_clauses:r.join_clauses,where_clause:r.where_clause,table_expr:r.table_expr,my_partition_clause:r.my_partition_clause,where_clause:r.where_clause,my_order_by_clause:r.my_order_by_clause,my_limit_clause:r.my_limit_clause}:r={uuid:r.uuid,nodeName:r.nodeName,table_expr:r.table_expr,using_clause:r.using_clause,join_clauses:r.join_clauses,where_clause:r.where_clause,returning_clause:r.returning_clause,result_schema:r.result_schema},r=this.finalizeOutputJSON(r,t,s,e),r=this.finalizeSelectorJSON(r,t,s,e),r}};var us=o=>class extends o{get isPayloadStmt(){return!0}static morphsTo(){return l.CTE}jsonfy(e={},t=null,s=null){if(!e.deSugar)return super.jsonfy(e,t,s);let{LQDeepRef2:r,AssignmentExpr:n,DerivedQuery:a,ColumnsConstructor:p,ValuesConstructor:c,TypedRowConstructor:u,RowConstructor:f}=l,y=["column_list","pg_default_values_clause","values_clause","select_clause"].map(E=>this._get(E)),[d,m,g,x]=y,h=d?.entries().some(E=>E instanceof r),S=h?new Set(y):new Set;t=new ne((E,C,w,{deSugar:L,...H})=>{if(S.has(E))return;if(!(E instanceof n))return C();let j=!!this._get("conflict_handling_clause")?.containsNode(E);if(j&&this.options.dialect!=="postgres")return C();let W={...H,conflictHandlingClauseContext:j};if(E.left()instanceof r){let[[k],[[$]]]=this.deSugarPayload(p.fromJSON({entries:[E.left().jsonfy()]}),[[E.right()]],t,s,W);return k?{nodeName:n.NODE_NAME,operator:"=",left:k,right:$}:void 0}if(E.left()instanceof p&&E.left().entries().some(k=>k instanceof r)){let k=E.left(),$,K;return E.right()instanceof f?([$,[K]]=this.deSugarPayload(k,[E.right().entries()],t,s,W),K={nodeName:u.NODE_NAME,entries:K}):E.right()instanceof a?([$,K]=this.deSugarPayload(k,E.right().expr(),t,s,W),K={nodeName:a.NODE_NAME,expr:K}):[$,[K]]=this.deSugarPayload(k,[[E.right()]],t,s,W),$.length?{nodeName:n.NODE_NAME,operator:"=",left:{nodeName:p.NODE_NAME,entries:$},right:K}:void 0}return C()},t,this);let N=super.jsonfy(e,t,s);if(h){let[E,C]=this.deSugarPayload(d,m||g?.entries().map(w=>w.entries())||x,t,s,e);if(N={...N,column_list:{nodeName:p.NODE_NAME,entries:E}},m&&Array.isArray(C)||g){let w=C.map(L=>({nodeName:u.NODE_NAME,entries:L}));N={...N,values_clause:{nodeName:c.NODE_NAME,entries:w}}}else m?N={...N,pg_default_values_clause:C}:N={...N,select_clause:C}}return N}deSugarPayload(e,t,s,r,{conflictHandlingClauseContext:n=!1,deSugar:a,...p}={}){let c=s.statementContext.artifacts.get("payloadDimensions"),{LQDeepRef2:u,TableRef1:f,ColumnRef1:y,SelectItemAlias:d,ColumnRef2:m,ColumnsConstructor:g,TypedRowConstructor:x,RowConstructor:h,DefaultLiteral:S,SelectStmt:N,CompleteSelectStmt:E,PGDefaultValuesClause:C,SelectList:w,SelectItem:L,FromClause:H,FromItem:j}=l,W=(b,G=a)=>b.jsonfy({deSugar:G,...p},s,r),k=(b,G)=>b.entries().reduce((M,Y,O)=>{if(Y instanceof u){let D=this.createPayloadDimension(Y,s,r,{conflictHandlingClauseContext:n,...p});return G.set(O,D),D.refMode==="dependency"&&D.lhsOperandJson?M.concat({nodeName:m.NODE_NAME,value:D.lhsOperandJson.value,delim:D.lhsOperandJson.delim,result_schema:D.lhsOperandJson.result_schema}):M}return M.concat(W(Y))},[]),$=(b,G)=>{let M=e.entries().reduce((Y,O,D)=>{let F=G.has(D)?G.get(D).offload(b):{nodeName:S.NODE_NAME,value:"DEFAULT"};return F?Y.concat(F):Y},[]);return e.length-M.length===G.size?b.jsonfy():[M]},K=(b,G)=>b.map((M,Y)=>M.reduce((O,D,F)=>{let T;return e.get(F)instanceof u&&D instanceof S?T=G.get(F).offload(C.fromJSON({value:"DEFAULT"},this.options),Y):G.has(F)?T=G.get(F).offload(D,Y):T=W(D),T?O.concat(T):O},[])),J=(b,G)=>{let M={...W(b,2),result_schema:void 0},Y=M.select_list.entries;if(Y.length!==e.length)throw new Error(`Select list (${Y.length}) does not match columns length (${e.length})`);let O;if(!n&&M.from_clause&&!/^[`"]\$memo~.+[`"]$/.test(b.fromClause().entries()[0].expr()+"")){let T=s.rootContext.rand("memo");O={...M,uuid:T,select_list:{nodeName:w.NODE_NAME,entries:[Ra("$row_number~a")]}},c.add({refMode:"memo",query:O});let q={nodeName:j.NODE_NAME,expr:{nodeName:f.NODE_NAME,value:T}};M={nodeName:E.NODE_NAME,select_list:{nodeName:w.NODE_NAME,entries:[]},from_clause:{nodeName:H.NODE_NAME,entries:[q]}}}let D=(T,q=!1)=>O?(T.alias&&q?T={...T,alias:{...T.alias,value:T.alias.value+s.rand("rand",{asSalt:!0})}}:T.alias||(T.alias={nodeName:d.NODE_NAME,as_kw:!0,value:s.rand("value")}),O.select_list.entries.push(T),{nodeName:L.NODE_NAME,expr:{nodeName:y.NODE_NAME,value:T.alias.value,delim:T.alias.delim}}):T,F=Y.reduce((T,q,R)=>{if(G.has(R)){let I;[x.NODE_NAME,h.NODE_NAME].includes(q.expr.nodeName)?(I=q.expr.entries.map(se=>D({nodeName:L.NODE_NAME,expr:se,alias:q.alias},!0)),e.get(R).right()instanceof g||(I=[{nodeName:L.NODE_NAME,expr:{nodeName:x.NODE_NAME,entries:I.map(se=>se.expr)}}])):I=[D(q)];let ue=N.fromJSON({...M,select_list:{nodeName:w.NODE_NAME,entries:I}},this.options);if(q=G.get(R).offload(ue),q){let se=G.get(R).lhsOperandJson;return T.concat({nodeName:L.NODE_NAME,expr:q,alias:{nodeName:d.NODE_NAME,as_kw:!0,value:se.value,delim:se.delim}})}return T}if(!q.alias){let I=e.get(R);q={...q,alias:{nodeName:d.NODE_NAME,as_kw:!0,value:I.value(),delim:I._get("delim")}}}return T.concat(D(q))},[]);return M={...M,select_list:{nodeName:w.NODE_NAME,entries:F}},M},B=new Map,U=k(e,B),A=t instanceof C?$(t,B):t instanceof N?J(t,B):K(t,B);return B.clear(),[U,A]}createPayloadDimension(e,t,s,{conflictHandlingClauseContext:r=!1,...n}={}){let{lhsOperand:a,rhsOperand:p,rhsTable:c,detail:u}=e.resolve(t,s,2),f=t.statementContext.artifacts.get("payloadDimensions"),{LQDeepRef2:y,LQBackRefAbstraction:d,ReturningClause:m,ColumnRef2:g,ColumnRef1:x,TableRef1:h,SelectList:S,SelectItem:N,SelectItemAlias:E,AssignmentExpr:C,ColumnsConstructor:w,TypedRowConstructor:L,RowConstructor:H,PGDefaultValuesClause:j,ValuesConstructor:W,ValuesTableLiteral:k,DefaultLiteral:$,SelectStmt:K,WhereClause:J,CompleteSelectStmt:B,ScalarSubquery:U,DerivedQuery:A,FromItem:b,FromClause:G,SetClause:M,BinaryExpr:Y,BoolLiteral:O,NumberLiteral:D,UpdateStmt:F,TableAbstraction2:T}=l,q=t.rootContext.hash(this,"main"),R=P=>P.jsonfy(n,t,s),I=R(a),ue=R(p),se=R(c),le=a.jsonfy({toKind:1}),de=p.jsonfy({toKind:1}),zs={...se,nodeName:h.NODE_NAME},xe=e.left()instanceof d?"dependent":"dependency",Te=u instanceof y,Re;if(u instanceof w)Re=R(u);else if(u instanceof g||u instanceof y)Re={nodeName:w.NODE_NAME,entries:[R(u)]};else throw new Error(`Invalid columns spec: ${e}`);let fa=Re.entries.length,Be=(P,Q=null)=>{if(Te)return P;let ae=1;if(Q?ae=Q.length:P instanceof H||P instanceof K||P instanceof K?ae=P.length:P instanceof A&&(ae=P.expr().length),ae>fa)throw new Error(`[${P}] Payload has more columns than target columns: ${u}.`);if(ae<fa)throw new Error(`[${P}] Payload has fewer columns than target columns: ${u}.`);return P},ct=(P,Q,ae=null,pe=null)=>{let V,z;typeof ae=="number"?z={nodeName:D.NODE_NAME,value:ae+1}:ae&&(z=ae),z?V={nodeName:Y.NODE_NAME,left:{nodeName:x.NODE_NAME,value:"$row_number~b"},operator:"=",right:z}:pe&&(V={nodeName:Y.NODE_NAME,left:{nodeName:x.NODE_NAME,value:pe},operator:"IS",right:{nodeName:O.NODE_NAME,value:"TRUE"}});let te={nodeName:b.NODE_NAME,expr:{nodeName:h.NODE_NAME,value:z?`${P}~indices`:P}},rt={nodeName:B.NODE_NAME,select_list:{nodeName:S.NODE_NAME,entries:[{nodeName:N.NODE_NAME,expr:{...Q,qualifier:void 0}}]},from_clause:{nodeName:G.NODE_NAME,entries:[te]},where_clause:V&&{nodeName:J.NODE_NAME,expr:V}};return{nodeName:U.NODE_NAME,expr:rt}};if(this instanceof F||r){let P=r?`${q}_conflict_based_update`:null,Q={nodeName:Y.NODE_NAME,left:de,operator:"IN",right:ct(q,I,null,P)},ae={uuid:t.rootContext.rand(xe),nodeName:F.NODE_NAME,table_expr:{nodeName:T.NODE_NAME,table_ref:zs},set_clause:{nodeName:M.NODE_NAME,entries:[]},where_clause:{nodeName:J.NODE_NAME,expr:Q}},V={refMode:xe,query:ae,offload:z=>{if(z instanceof k)throw new Error(`Single-row payload structure expected for column structure: ${u}. Recieved ${z.NODE_NAME}.`);if(ae.set_clause.entries.length)throw new Error(`Unexpected multiple offload() call on ${e}`);let te=R(z);if(Te&&!(z instanceof j)&&(z=L.fromJSON({entries:[te]},this.options),te=R(z)),z instanceof K?(te={nodeName:A.NODE_NAME,expr:te,result_schema:te.result_schema},Be(z,te.result_schema)):z instanceof A?Be(z,te.result_schema):z instanceof H?Be(z):z instanceof j||(te={nodeName:L.NODE_NAME,entries:[te]}),ae.set_clause.entries.push({nodeName:C.NODE_NAME,left:Re,operator:"=",right:te}),xe==="dependency")return le},lhsOperandJson:I,conflictHandlingClauseContext:r};return f.add(V),V}let ye=[],Zs=(P,Q,ae=null)=>{if(Q instanceof j)if(ae){let pe=P.column_list.entries.length-1;P.values_clause.entries.push({nodeName:L.NODE_NAME,entries:P.column_list.entries.map((V,z)=>z===pe?ae:{nodeName:$.NODE_NAME,value:"DEFAULT"})})}else delete P.values_clause,P.pg_default_values_clause=R(Q);else{Be(Q);let pe=R(Q);Q instanceof H||(pe={nodeName:L.NODE_NAME,entries:[pe]}),ae&&(pe={...pe,entries:pe.entries.concat(ae)}),P.values_clause.entries.push(pe)}};if(xe==="dependent"){let P=()=>({uuid:t.rootContext.rand(xe),nodeName:this.NODE_NAME,table_ref:se,column_list:w.fromJSON({entries:Re.entries.concat(ue)}).jsonfy()}),Q=(V,z)=>{let te={nodeName:N.NODE_NAME,expr:z,alias:p instanceof g?{nodeName:E.NODE_NAME,as_kw:!0,value:p.value(),delim:p._get("delim")}:void 0};return{...V,select_list:{...V.select_list,entries:V.select_list.entries.concat(te)}}},pe={refMode:xe,queries:ye,offload:(V,z=null)=>{ye.length||ye.push(P());let te=ye[ye.length-1];V instanceof K&&(z={nodeName:x.NODE_NAME,value:"$row_number~a"});let rt=ct(q,I,z),da;if(V instanceof A&&(V=V.expr(),(te.select_clause||te.values_clause)&&(te=P(),ye.push(te)),da=!0),V instanceof K){let qe=R(V);!da&&!Te&&(qe=Oa(qe,Re)),Be(V,qe.result_schema),te.select_clause=Q(qe,rt);return}if(te.select_clause&&(te=P(),ye.push(te)),te.values_clause||(te.values_clause={nodeName:W.NODE_NAME,entries:[]}),Te&&!(V instanceof j)&&(V=L.fromJSON({entries:[R(V)]})),V instanceof k)for(let qe of V.entries())Zs(te,qe,rt);else Zs(te,V,rt)},lhsOperandJson:I};return f.add(pe),pe}let ya={nodeName:x.NODE_NAME,value:p.value(),delim:p._get("delim")},ea=()=>({uuid:t.rootContext.rand(xe),nodeName:this.NODE_NAME,table_ref:se,column_list:Re,returning_clause:{nodeName:m.NODE_NAME,entries:[{nodeName:N.NODE_NAME,expr:de}]}}),ma={refMode:xe,queries:ye,offload:P=>{if(P instanceof k)throw new Error(`Single-row payload structure expected for column structure: ${e.right()}. Recieved ${P.NODE_NAME}.`);ye.length||ye.push(ea());let Q=ye[ye.length-1],ae=!1;if(P instanceof A&&(P=P.expr(),(Q.select_clause||Q.values_clause)&&(Q=ea(),ye.push(Q)),ae=!0),P instanceof K){let V=R(P),z;return ae||(Te||(V=Oa(V,Re)),z={nodeName:x.NODE_NAME,value:"$row_number~a"}),Be(P,V.result_schema),Q.select_clause=V,ct(Q.uuid,ya,z)}Q.select_clause&&(Q=ea(),ye.push(Q)),Q.values_clause||(Q.values_clause={nodeName:W.NODE_NAME,entries:[]}),Te&&!(P instanceof j)&&(P=L.fromJSON({entries:[R(P)]})),Zs(Q,P);let pe;return Q.values_clause&&(pe=Q.values_clause.entries.length-1),ct(Q.uuid,ya,pe)},lhsOperandJson:I,rhsOperandJson:de};return f.add(ma),ma}finalizePayloadJSON(e,t,s,r){let n=t.statementContext.artifacts.get("payloadDimensions");if(!n.size)return e;let{ColumnRef0:a,ColumnRef1:p,TableRef1:c,FromItem:u,FromClause:f,AggrCallExpr:y,ReturningClause:d,SelectList:m,SelectItem:g,SelectItemAlias:x,NumberLiteral:h,BinaryExpr:S,CTE:N,CTEItem:E,CTEItemAlias:C,CompleteSelectStmt:w,UpdateStmt:L}=l,H=t.rootContext.hash(this,"main"),j={nodeName:N.NODE_NAME,declarations:[],body:null},W=t,k=(A,b,G=[],M=W)=>{let Y=E.fromJSON({nodeName:E.NODE_NAME,alias:{nodeName:C.NODE_NAME,value:A},expr:b},this.options).jsonfy(r,M,s);if(Y.expr?.nodeName===N.NODE_NAME){if(j.declarations.push(...Y.expr.declarations),this instanceof L&&Y.expr.body.nodeName===w.NODE_NAME)return;Y={nodeName:E.NODE_NAME,alias:{nodeName:C.NODE_NAME,value:A},expr:Y.expr.body}}j.declarations.push(Y),G.length&&j.declarations.push(E.fromJSON({nodeName:E.NODE_NAME,alias:{nodeName:C.NODE_NAME,value:`${A}~indices`},expr:Ga(G,A)},this.options).jsonfy(r,M,s))},$=[],K=[],J=[],B=!1,U=e.returning_clause?.entries||[];for(let{refMode:A,query:b,queries:G,lhsOperandJson:M,rhsOperandJson:Y,conflictHandlingClauseContext:O}of n)for(let{uuid:D,...F}of b&&[b]||G)if(A==="dependent"||this instanceof L&&A==="dependency"||O){if(!J.find(T=>oe(T.expr.value,M.value))){let T={nodeName:g.NODE_NAME,expr:M};U.find(q=>oe((q.alias||q.expr).value,M.value))&&(T.alias={nodeName:x.NODE_NAME,as_kw:!0,value:t.rand("key")}),J.push(T)}O&&(B=!0),$.push({uuid:D,...F})}else if(A==="dependency"){let T=[{nodeName:g.NODE_NAME,expr:Y}];e.select_clause?K.push({uuid:D,wherePredicate:T,...F}):F.pg_default_values_clause||F.select_clause?k(D,F):k(D,F,T)}else k(D,F);for(let{uuid:A,wherePredicate:b,...G}of K)k(A,G,b);if($.length){let A=[],b=[];for(let O of U)O.alias||(O={...O,alias:{nodeName:x.NODE_NAME,as_kw:!0,value:t.rand("key")}}),A.push(O),b.push({...O,expr:{nodeName:p.NODE_NAME,value:O.alias.value,delim:O.alias.delim}});if(B){let O=`${H}_conflict_based_update`;A.push({nodeName:g.NODE_NAME,expr:{nodeName:S.NODE_NAME,left:{nodeName:p.NODE_NAME,value:"XMAX"},operator:"!=",right:{nodeName:h.NODE_NAME,value:"0"}},alias:{nodeName:x.NODE_NAME,as_kw:!0,value:O}})}let G={nodeName:d.NODE_NAME,entries:[...A,...J]};this instanceof L||B?k(H,{...e,returning_clause:G}):e.pg_default_values_clause?k(H,{...e,returning_clause:G}):k(H,{...e,returning_clause:G},J);for(let{uuid:O,...D}of $)k(O,D);let M=b;M.length||(M=[{nodeName:g.NODE_NAME,expr:{nodeName:y.NODE_NAME,name:"COUNT",arguments:[{nodeName:a.NODE_NAME,value:"*"}]},alias:{nodeName:x.NODE_NAME,as_kw:!0,value:"COUNT"}}]);let Y={nodeName:u.NODE_NAME,expr:{nodeName:c.NODE_NAME,value:H}};j.body=w.fromJSON({nodeName:w.NODE_NAME,select_list:{nodeName:m.NODE_NAME,entries:M},from_clause:{nodeName:f.NODE_NAME,entries:[Y]}},this.options).jsonfy(r,W,s)}else{let b=[this.constructor].concat(this.constructor.morphsTo()).reduce((G,M)=>G||M.fromJSON(e,this.options),void 0);j.body=b.jsonfy(r,W,s)}return{...j,result_schema:j.body.result_schema}}},Oa=(o,e)=>{let t=o.select_list.entries.reduce((s,r,n)=>{if(!r.alias){let a=e.entries[n];r={...r,alias:{nodeName:l.SelectItemAlias.NODE_NAME,as_kw:!0,value:a.value,delim:a.delim}}}return s.concat(r)},[]);return{...o,select_list:{...o.select_list,entries:t}}},Ga=(o,e)=>{let t=Ra("$row_number~b");o=o.map(r=>r.alias?{...r,expr:{...r.expr,value:r.alias.value,delim:r.alias.delim,qualifier:void 0},alias:{...r.alias,value:r.expr.value,delim:r.expr.delim}}:r.expr.nodeName===l.ColumnRef0.NODE_NAME?i:{...r,expr:{...r.expr,qualifier:void 0},alias:{nodeName:l.SelectItemAlias.NODE_NAME,as_kw:!0,value:r.expr.value,delim:r.expr.delim}}).concat(t);let s={nodeName:l.FromItem.NODE_NAME,expr:{nodeName:l.TableRef1.NODE_NAME,value:e}};return{nodeName:l.CompleteSelectStmt.NODE_NAME,select_list:{nodeName:l.SelectList.NODE_NAME,entries:o},from_clause:{nodeName:l.FromClause.NODE_NAME,entries:[s]}}},Ra=o=>({nodeName:l.SelectItem.NODE_NAME,expr:{nodeName:l.AggrCallExpr.NODE_NAME,name:"ROW_NUMBER",arguments:[],over_clause:{nodeName:l.WindowSpec.NODE_NAME}},alias:{nodeName:l.SelectItemAlias.NODE_NAME,as_kw:!0,value:o||3}});var Pe=class extends us(Me){static get _clause(){return"INSERT"}static get syntaxRules(){let e={optional:!0,syntax:[{type:"keyword",value:"AS",booleanfy:!0},{type:"Identifier",as:"pg_table_alias",assert:!0}]},t={optional:!0,dialect:"mysql",if:["!select_clause","!my_table_clause"],syntax:[{type:"keyword",value:"AS"},{type:"FromItemAlias",as:"my_row_alias",assert:!0}]};return[{type:"keyword",value:this._clause},{type:"keyword",value:"INTO"},{assert:!0,syntax:[{dialect:"postgres",syntax:[{type:"TableRef2",as:"table_ref"},{...e},{type:"ColumnsConstructor",as:"column_list",optional:!0,autoIndent:!0},{syntaxes:[{type:"PGDefaultValuesClause",as:"pg_default_values_clause"},{type:"ValuesConstructor",as:"values_clause"},{type:"SelectStmt",as:"select_clause"}],autoSpacing:`
`},...this._clause==="INSERT"?[{type:"PGOnConflictClause",as:"conflict_handling_clause",optional:!0,autoSpacing:`
`}]:[],{type:"ReturningClause",as:"returning_clause",optional:!0,autoSpacing:`
`}]},{dialect:"mysql",syntax:[{type:"TableRef2",as:"table_ref"},{type:"MYPartitionClause",as:"my_partition_clause",optional:!0,autoIndent:!0},{syntaxes:[[{type:"ColumnsConstructor",as:"column_list",optional:!0,autoIndent:!0},{syntaxes:[{type:"ValuesConstructor",as:"values_clause"},{type:"SelectStmt",as:"select_clause"},{type:"TableStmt",as:"my_table_clause"}],autoSpacing:`
`}],{type:"SetClause",as:"my_set_clause",autoSpacing:`
`}]},{...t},...this._clause==="INSERT"?[{type:"MYOnDuplicateKeyUpdateClause",as:"conflict_handling_clause",optional:!0,autoSpacing:`
`}]:[]]}]}]}tableRef(){return this._get("table_ref")}columnList(){return this._get("column_list")}valuesClause(){return this._get("values_clause")}selectClause(){return this._get("select_clause")}conflictHandlingClause(){return this._get("conflict_handling_clause")}pgTableAlias(){return this._get("pg_table_alias")}pgDefaultValuesClause(){return this._get("pg_default_values_clause")}returningClause(){return this._get("returning_clause")}myRowAlias(){return this._get("my_row_alias")}myPartitionClause(){return this._get("my_partition_clause")}mySetClause(){return this._get("my_set_clause")}myTableClause(){return this._get("my_table_clause")}jsonfy(e={},t=null,s=null){if(!e.deSugar)return super.jsonfy(e,t,s);t=new ne((a,p)=>{if(a instanceof l.TableRef2){let c=p(),u=c.result_schema;return c.pg_table_alias&&(u=u.clone({renameTo:c.pg_table_alias})),t.statementContext.artifacts.get("tableSchemas").add({type:"dml",resultSchema:u}),c}return p()},t,this);let r=super.jsonfy(e,t,s),n=e.toDialect||this.options.dialect;if(n==="mysql"?r={uuid:r.uuid,nodeName:r.nodeName,table_ref:r.table_ref,my_partition_clause:r.my_partition_clause,column_list:r.column_list,values_clause:r.values_clause,select_clause:r.select_clause,my_table_clause:r.my_table_clause,my_set_clause:r.my_set_clause,my_row_alias:r.my_row_alias,conflict_handling_clause:r.conflict_handling_clause}:r={uuid:r.uuid,nodeName:r.nodeName,table_ref:r.table_ref,pg_table_alias:r.pg_table_alias,column_list:r.column_list,pg_default_values_clause:r.pg_default_values_clause,values_clause:r.values_clause,select_clause:r.select_clause,conflict_handling_clause:r.conflict_handling_clause,returning_clause:r.returning_clause,result_schema:r.result_schema},r.conflict_handling_clause?.entries&&!r.conflict_handling_clause.entries.length){let p=r.table_ref.result_schema.pkConstraint(!0).columns()[0];r={...r,conflict_handling_clause:{...r.conflict_handling_clause,entries:[{nodeName:l.AssignmentExpr.NODE_NAME,left:p.jsonfy(),operator:"=",right:p.jsonfy({toKind:1})}]}}}return n==="postgres"&&!r.pg_table_alias&&Number(e.deSugar)>2&&(r={...r,pg_table_alias:{nodeName:l.Identifier.NODE_NAME,value:r.table_ref.value,delim:r.table_ref.delim}}),r=this.finalizeOutputJSON(r,t,s,e),r=this.finalizePayloadJSON(r,t,s,e),r}};var ps=class extends v{static get syntaxRules(){return[{type:"keyword",value:"SET"},{type:"MYVarAssignmentExpr",as:"entries",arity:{min:1},itemSeparator:{type:"punctuation",value:","},assert:!0,autoIndent:2}]}};var cs=class extends us(et(Me)){static get syntaxRules(){return[{type:"keyword",value:"UPDATE"},{assert:!0,syntaxes:[{dialect:"postgres",syntax:[{type:"TableAbstraction2",as:"table_expr"},{type:"SetClause",as:"set_clause",autoSpacing:`
`},{type:"FromClause",as:"pg_from_clause",optional:!0,dialect:"postgres",autoSpacing:`
`},{type:"JoinClause",as:"join_clauses",arity:1/0,optional:!0,autoSpacing:`
`},{type:["PGWhereCurrentClause","WhereClause"],as:"where_clause",optional:!0,autoSpacing:`
`},{type:"ReturningClause",as:"returning_clause",optional:!0,autoSpacing:`
`}]},{dialect:"mysql",syntax:[{type:"TableAbstraction2",as:"table_expr"},{type:"SetClause",as:"set_clause",autoSpacing:`
`},{type:"WhereClause",as:"where_clause",optional:!0,autoSpacing:`
`},{type:"OrderByClause",as:"my_order_by_clause",optional:!0,autoSpacing:`
`},{type:"LimitClause",as:"my_limit_clause",optional:!0,autoSpacing:`
`}]},{dialect:"mysql",syntax:[{type:"TableAbstraction1",as:"my_update_list",arity:{min:1},itemSeparator:{type:"punctuation",value:","}},{type:"JoinClause",as:"join_clauses",arity:1/0,optional:!0,autoSpacing:`
`},{type:"SetClause",as:"set_clause",autoSpacing:`
`},{type:"WhereClause",as:"where_clause",optional:!0,autoSpacing:`
`}]}]}]}tableExpr(){return this._get("table_expr")}joinClauses(){return this._get("join_clauses")}setClause(){return this._get("set_clause")}whereClause(){return this._get("where_clause")}pgFromClause(){return this._get("pg_from_clause")}returningClause(){return this._get("returning_clause")}myUpdateList(){return this._get("my_update_list")}myOrderByClause(){return this._get("my_order_by_clause")}myLimitClause(){return this._get("my_limit_clause")}jsonfy(e={},t=null,s=null){if(!e.deSugar)return super.jsonfy(e,t,s);t=new ne((n,a)=>a(),t,this);let r=super.jsonfy(e,t,s);if((e.toDialect||this.options.dialect)==="mysql"?r={uuid:r.uuid,nodeName:r.nodeName,table_expr:r.table_expr,my_update_list:r.my_update_list,join_clauses:r.join_clauses,set_clause:r.set_clause,where_clause:r.where_clause,my_order_by_clause:r.my_order_by_clause,my_limit_clause:r.my_limit_clause}:r={uuid:r.uuid,nodeName:r.nodeName,table_expr:r.table_expr,set_clause:r.set_clause,pg_from_clause:r.pg_from_clause,join_clauses:r.join_clauses,where_clause:r.where_clause,returning_clause:r.returning_clause,result_schema:r.result_schema},!r.set_clause?.entries.length){let a=r.table_expr.result_schema.pkConstraint(!0).columns()[0];r={...r,set_clause:{...r.set_clause,entries:[{nodeName:l.AssignmentExpr.NODE_NAME,left:a.jsonfy(),operator:"=",right:a.jsonfy({toKind:1})}]}}}return r=this.finalizeOutputJSON(r,t,s,e),r=this.finalizeSelectorJSON(r,t,s,e),r=this.finalizePayloadJSON(r,t,s,e),r}};var fs=class extends Ke(Pe){static get _clause(){return"UPSERT"}static morphsTo(){return[Pe].concat(super.morphsTo())}finalizePayloadJSON(e,t,s,r){if(e.conflict_handling_clause)throw new Error("An explicit conflict handling clause is forbidden on the UPSERT statement.");let n=[...t.statementContext.artifacts.get("tableSchemas")].map(u=>u.resultSchema)[0],a=r.toDialect||this.options.dialect,p;e.my_set_clause?p=e.my_set_clause.entries.map(u=>({value:u.left.value,delim:u.left.delim})):e.column_list?p=e.column_list.entries.map(u=>({value:u.value,delim:u.delim})):p=n.columns().map(u=>u.name().jsonfy({nodeNames:!1}));let c={nodeName:a==="mysql"?l.MYOnDuplicateKeyUpdateClause.NODE_NAME:l.PGOnConflictClause.NODE_NAME,entries:p.map(u=>({nodeName:l.AssignmentExpr.NODE_NAME,left:{nodeName:a==="mysql"?l.ColumnRef1.NODE_NAME:l.ColumnRef2.NODE_NAME,...u},operator:"=",right:{...u,nodeName:l.ColumnRef1.NODE_NAME,qualifier:{value:a==="mysql"?"VALUES":"EXCLUDED"}}}))};if(a==="postgres"){let u=[].concat(n.pkConstraint(!0)||[]).concat(n.ukConstraints(!0)).map(y=>y.columns().map(d=>d.jsonfy()));if(!u.length)throw new Error(`Table ${this.tableRef()} has no unique keys defined to process an UPSERT operation. You may want to perform a direct INSERT operation.`);let f=u.find(y=>y.find(d=>p.find(m=>oe(d.value,m.value,d.delim||m.delim))))||u[0];c.conflict_target={nodeName:l.PGConflictTarget.NODE_NAME,index_list:f.map(y=>({nodeName:l.PGConflictTargetIndexSpec.NODE_NAME,column_name:y}))}}return super.finalizePayloadJSON({...e,nodeName:Pe.NODE_NAME,conflict_handling_clause:c},t,s,r)}};var la={};ve(la,{BasicSelectStmt:()=>Je,CompleteSelectStmt:()=>Ws,CompositeSelectStmt:()=>Ys,DerivedQuery:()=>We,DistinctClause:()=>ys,ForClause:()=>ms,FromClause:()=>ds,FromItem:()=>tt,FromItemAlias:()=>Ms,GroupByClause:()=>_s,GroupingElement:()=>hs,HavingClause:()=>xs,JoinClause:()=>gs,LimitClause:()=>Ns,OffsetClause:()=>Es,OnClause:()=>Ss,OrderByClause:()=>Ts,OrderElement:()=>As,PGFetchClause:()=>Rs,PGOrderOperator:()=>vs,PartitionByClause:()=>Os,SRFExpr1:()=>Us,SRFExpr2:()=>$s,SRFExpr3:()=>Js,SRFExpr4:()=>Bs,SRFExprDDL1:()=>qs,SRFExprDDL2:()=>Fs,SelectItem:()=>Ps,SelectItemAlias:()=>js,SelectList:()=>ze,SelectStmt:()=>je,TableStmt:()=>Ks,UsingClause:()=>Cs,ValuesTableLiteral:()=>Gs,WhereClause:()=>bs,WindowClause:()=>ws,WindowDeclaration:()=>ks,WindowFrameBound:()=>Ds,WindowFrameSpec:()=>Is,WindowSpec:()=>Ls});var ys=class extends _{static get syntaxRules(){return{syntaxes:[{dialect:"postgres",syntax:[{type:"keyword",value:"DISTINCT"},{type:"keyword",value:"ON"},{type:"paren_block",syntax:{type:"Expr",as:"pg_distinct_on_list",arity:{min:1},itemSeparator:{type:"punctuation",value:","},assert:!0}}]},{type:"keyword",as:"all_or_distinct",value:["ALL","DISTINCT"]}]}}allOrDistinct(){return this._get("all_or_distinct")}pgDistinctOnList(){return this._get("pg_distinct_on_list")}};var ms=class extends _{static get syntaxRules(){return[{type:"keyword",value:"FOR"},{optional:!0,dialect:"postgres",syntaxes:[[{type:"keyword",as:"pg_no_key_kw",value:"NO",booleanfy:!0},{type:"keyword",value:"KEY",if:"pg_no_key_kw",assert:!0}],{type:"keyword",as:"pg_key_kw",value:"KEY",booleanfy:!0}]},{type:"keyword",as:"intent_kw",value:["UPDATE","SHARE"],assert:!0},{optional:!0,syntax:[{type:"keyword",value:"OF"},{type:"TableRef2",as:"table_names",arity:{min:1},itemSeparator:{type:"punctuation",value:","},assert:!0}]},{optional:!0,syntaxes:[[{type:"keyword",as:"skip_locked_kw",value:"SKIP",booleanfy:!0},{type:"keyword",value:"LOCKED",assert:!0}],{type:"keyword",as:"nowait_kw",value:"NOWAIT",booleanfy:!0},{dialect:"mysql",syntax:[{type:"keyword",as:"my_lock_in_share_mode",value:"LOCK",booleanfy:!0},{type:"operator",value:"IN",assert:!0},{type:"keyword",value:"SHARE",assert:!0},{type:"keyword",value:"MODE",assert:!0}]}]}]}intentKW(){return this._get("intent_kw")}tableNames(){return this._get("table_names")}skipLockedKW(){return this._get("skip_locked_kw")}nowaitKW(){return this._get("nowait_kw")}pgKeyKW(){return this._get("pg_key_kw")}pgNoKeyKW(){return this._get("pg_no_key_kw")}myLockInShareMode(){return this._get("my_lock_in_share_mode")}};var ds=class extends v{static get syntaxRules(){return[{type:"keyword",value:"FROM"},{type:"FromItem",as:"entries",arity:{min:1},itemSeparator:{type:"punctuation",value:","},assert:!0}]}};var _s=class extends v{static get syntaxRules(){return[{type:"keyword",value:"GROUP"},{type:"keyword",value:"BY",assert:!0},{type:"keyword",as:"all_or_distinct",value:["ALL","DISTINCT"],optional:!0},{type:"GroupingElement",as:"entries",arity:{min:1},itemSeparator:{type:"punctuation",value:","},assert:!0,autoIndent:2},{optional:!0,autoIndent:!0,syntax:[{type:"keyword",as:"with_rollup",value:"WITH",booleanfy:!0},{type:"keyword",value:"ROLLUP",assert:!0}]}]}allOrDistinct(){return this._get("all_or_distinct")}withRollup(){return this._get("with_rollup")}};var hs=class extends _{static get syntaxRules(){return{syntaxes:[[{type:"keyword",value:"GROUPING SETS"},{type:"paren_block",syntax:{type:"GroupingElement",as:"grouping_sets",arity:{min:1},itemSeparator:{type:"punctuation",value:","},assert:!0,autoIndent:2},autoIndent:!0}],[{type:"keyword",value:"ROLLUP"},{type:"RowConstructor",as:"rollup_set",assert:!0}],[{type:"keyword",value:"CUBE"},{type:"RowConstructor",as:"cube_set",assert:!0}],{type:["Expr","ParenExpr"],as:"expr"}]}}groupingSets(){return this._get("grouping_sets")}rollupSet(){return this._get("rollup_set")}cubeSet(){return this._get("cube_set")}expr(){return this._get("expr")}};var xs=class extends _{static get syntaxRules(){return[{type:"keyword",value:"HAVING"},{type:"Expr",as:"expr",assert:!0}]}static get syntaxPriority(){return-1}expr(){return this._get("expr")}};var tt=class extends Z(_){static get syntaxRules(){let e={type:"punctuation",value:","};return{syntaxes:[[{type:"keyword",as:"lateral_kw",value:"LATERAL",booleanfy:!0,optional:!0},{type:"SRFExpr1",as:"expr"}],[{type:"keyword",as:"lateral_kw",value:"LATERAL",booleanfy:!0,optional:!0},{type:["SRFExpr2","SRFExpr4"],as:"expr"},{type:"FromItemAlias",as:"alias",optional:!0}],[{type:"keyword",as:"lateral_kw",value:"LATERAL",booleanfy:!0,optional:!0},{type:["DerivedQuery","ValuesTableLiteral"],as:"expr",dialect:"postgres"},{type:"DerivedQuery",as:"expr",dialect:"mysql"},{type:"FromItemAlias",as:"alias",optional:!0}],[{type:"keyword",as:"pg_only_kw",value:"ONLY",optional:!0,dialect:"postgres"},{type:["TableRef1","TableRef2"],as:"expr"},{type:"operator",as:"pg_star_ref",value:"*",booleanfy:!0,optional:!0,dialect:"postgres"},{type:"FromItemAlias",as:"alias",optional:!0},{...{optional:!0,dialect:"postgres",syntax:[{type:"keyword",value:"TABLESAMPLE"},{syntaxes:[[{type:"keyword",as:"pg_sampling_method",value:["BERNOULLI","SYSTEM"]},{type:"paren_block",syntax:{type:"Expr",as:"pg_sampling_arguments",arity:1,itemSeparator:e,assert:!0}}],[{type:"identifier",as:"pg_sampling_method"},{type:"paren_block",syntax:{type:"Expr",as:"pg_sampling_arguments",arity:1/0,itemSeparator:e,assert:!0}}]],assert:!0},{optional:!0,syntax:[{type:"keyword",value:"REPEATABLE"},{type:"paren_block",syntax:{type:"Expr",as:"pg_repeatable_seed"},assert:!0}]}]}}]]}}lateralKW(){return this._get("lateral_kw")}expr(){return this._get("expr")}alias(){return this._get("alias")}pgOnlyKW(){return this._get("pg_only_kw")}pgStarRef(){return this._get("pg_star_ref")}pgSamplingMethod(){return this._get("pg_sampling_method")}pgSamplingArguments(){return this._get("pg_sampling_arguments")}pgRepeatableSeed(){return this._get("pg_repeatable_seed")}deriveAlias(){let e;if(this.alias()?.value()?e={as_kw:!0,value:this.alias().value(),delim:this.alias()._get("delim")}:this.expr()instanceof l.TableRef1||this.expr()instanceof l.TableRef2?e={as_kw:!0,value:this.expr().value(),delim:this.expr()._get("delim")}:this.expr()instanceof l.SRFExpr1&&this.expr().qualif()instanceof l.SRFExprDDL2&&(e={as_kw:!0,value:this.expr().qualif().alias().value(),delim:this.expr().qualif().alias()._get("delim")}),e)return l.FromItemAlias.fromJSON(e)}jsonfy(e={},t=null,s=null){let r=super.jsonfy(e,t,s);if(e.deSugar){let n=r.alias||this.deriveAlias()?.jsonfy(),a=n?.value&&{nodeName:l.Identifier.NODE_NAME,value:n.value,delim:n.delim},p=r.expr.result_schema;if(p instanceof l.TableSchema?p=p.clone({renameTo:a}):a&&(p=l.TableSchema.fromJSON({name:a,entries:p?.entries().map(u=>u.jsonfy())||[]})),r.alias?.columns?.length){if(r.alias.columns.length!==p.length)throw new SyntaxError(`[${this}] Number of column aliases must match number of result columns.`);p=p.clone({},new ne((u,f,y)=>typeof y=="number"&&u.parentNode===p?u instanceof l.ColumnSchema?u.jsonfy({renameTo:r.alias.columns[y]}):{...u.jsonfy(),nodeName:l.ColumnSchema.NODE_NAME,name:r.alias.columns[y]}:f()))}t.statementContext.artifacts.get("tableSchemas").add({type:this.joinType?.()||"dql",lateral:this.lateralKW(),resultSchema:p});let c=!(this.expr()instanceof l.SRFExpr1)&&(Number(e.deSugar)>2||Number(e.deSugar)>1&&(this.parentNode?.length||0)>1)&&n||r.alias;r={...r,alias:c,result_schema:p}}return r}};var gs=class extends tt{static get syntaxRules(){return{syntaxes:[[{type:"keyword",as:"join_type",value:"CROSS"},{type:"keyword",value:"JOIN",assert:!0},...[].concat(super.syntaxRules)],[{type:"keyword",as:"natural_kw",value:"NATURAL",booleanfy:!0,optional:!0},{optional:!0,syntaxes:[{type:"keyword",as:"join_type",value:"INNER"},[{type:"keyword",as:"join_type",value:["LEFT","RIGHT","FULL"],dialect:"postgres"},{type:"keyword",as:"join_type",value:["LEFT","RIGHT"],dialect:"mysql"},{type:"keyword",as:"outer_kw",value:"OUTER",booleanfy:!0,optional:!0}]]},{type:"keyword",value:"JOIN"},...[].concat(super.syntaxRules),{type:["OnClause","UsingClause"],as:"condition_clause",if:"!natural_kw",assert:!0,autoIndent:!0}]]}}naturalKW(){return this._get("natural_kw")}joinType(){return this._get("join_type")}outerKW(){return this._get("outer_kw")}conditionClause(){return this._get("condition_clause")}jsonfy(e={},t=null,s=null){let r;e.deSugar&&(t=new ne((a,p,c)=>{if(c==="condition_clause")r=p;else return p()},t,this.statementNode));let n=super.jsonfy(e,t,s);return r&&(n={...n,condition_clause:r()}),n}};var Ns=class extends _{static get syntaxRules(){return[{type:"keyword",value:"LIMIT"},{dialect:"mysql",syntax:[{optional:!0,syntax:[{type:"Expr",as:"my_offset"},{type:"punctuation",value:",",autoSpacing:!1}]},{type:"Expr",as:"expr",assert:!0}]},{dialect:"postgres",syntaxes:[{type:"keyword",as:"pg_all_kw",value:"ALL"},{type:"Expr",as:"expr",assert:!0}]}]}expr(){return this._get("expr")}pgAllKW(){return this._get("pg_all_kw")}myOffset(){return this._get("my_offset")}};var Es=class extends _{static get syntaxRules(){return[{type:"keyword",value:"OFFSET"},{type:"Expr",as:"expr",assert:!0},{type:"keyword",as:"pg_row_kw",value:["ROW","ROWS"],optional:!0,dialect:"postgres"}]}expr(){return this._get("expr")}pgRowKW(){return this._get("pg_row_kw")}};var Ss=class extends _{static get syntaxRules(){return[{type:"keyword",value:"ON"},{type:"Expr",as:"expr",assert:!0}]}expr(){return this._get("expr")}};var Ts=class extends v{static get syntaxRules(){return[{type:"keyword",value:"ORDER"},{type:"keyword",value:"BY",assert:!0},{type:"OrderElement",as:"entries",arity:{min:1},itemSeparator:{type:"punctuation",value:","},assert:!0,autoIndent:2},{optional:!0,autoIndent:!0,syntax:[{type:"keyword",as:"with_rollup",value:"WITH",booleanfy:!0},{type:"keyword",value:"ROLLUP",assert:!0}]}]}withRollup(){return this._get("with_rollup")}};var As=class extends _{static get syntaxRules(){return[{type:"Expr",as:"expr"},{optional:!0,syntaxes:[{type:"keyword",value:["ASC","DESC"],as:"dir"},{type:"PGOrderOperator",as:"dir"}]},{optional:!0,syntax:[{type:"keyword",value:"NULLS"},{type:"keyword",as:"nulls_spec",value:["FIRST","LAST"],assert:!0}]}]}expr(){return this._get("expr")}dir(){return this._get("dir")}nullsSpec(){return this._get("nulls_spec")}};var Os=class extends v{static get syntaxRules(){return[{type:"keyword",value:"PARTITION"},{type:"keyword",value:"BY",assert:!0},{type:"Expr",as:"entries",arity:{min:1},itemSeparator:{type:"punctuation",value:","},assert:!0,autoIndent:2}]}};var Rs=class extends _{static get syntaxRules(){return{dialect:"postgres",syntax:[{type:"keyword",value:"FETCH"},{type:"keyword",as:"rel_kw",value:["FIRST","NEXT"]},{type:"Expr",as:"expr",optional:!0},{type:"keyword",as:"row_kw",value:["ROW","ROWS"],assert:!0},{syntaxes:[{type:"keyword",value:"ONLY"},[{type:"keyword",as:"with_ties",value:"WITH"},{type:"keyword",value:"TIES",assert:!0}]]}]}}relKW(){return this._get("rel_kw")}expr(){return this._get("expr")}rowKW(){return this._get("row_kw")}withTies(){return this._get("with_ties")}};var vs=class extends _{static get syntaxRules(){return{dialect:"postgres",syntax:[{type:"keyword",value:"USING"},{type:"operator",as:".",assert:!0}]}}value(){return this._get("value")}};var Cs=class extends _{static get syntaxRules(){return[{type:"keyword",value:"USING"},{type:["ColumnRef2","ColumnsConstructor"],as:"column",assert:!0}]}column(){return this._get("column")}};var bs=class extends _{static get syntaxRules(){return[{type:"keyword",value:"WHERE"},{type:"Expr",as:"expr",assert:!0}]}expr(){return this._get("expr")}};var ws=class extends v{static get syntaxRules(){return[{type:"keyword",value:"WINDOW"},{type:"WindowDeclaration",as:"entries",arity:{min:1},itemSeparator:{type:"punctuation",value:","},assert:!0,autoIndent:2}]}};var ks=class extends _{static get syntaxRules(){return[{type:"Identifier",as:"name"},{type:"keyword",value:"AS"},{type:"WindowSpec",as:"spec",assert:!0}]}name(){return this._get("name")}spec(){return this._get("spec")}};var Is=class extends _{static get syntaxRules(){let e={type:"operator",value:"AND"};return[{type:"keyword",as:"specifier",value:["ROWS","RANGE","GROUPS"]},{syntaxes:[[{type:"operator",as:"with_between_clause",value:"BETWEEN",booleanfy:!0},{type:"WindowFrameBound",as:"bounds",arity:2,itemSeparator:e,assert:!0}],{type:"WindowFrameBound",as:"bounds",arity:1,itemSeparator:e,assert:!0}]},{optional:!0,syntax:[{type:"keyword",value:"EXCLUDE"},{type:"keyword",as:"exclusion",value:["CURRENT ROW","GROUP","TIES","NO OTHERS"],assert:!0}]}]}specifier(){return this._get("specifier")}withBetweenClause(){return this._get("with_between_clause")}bounds(){return this._get("bounds")}exclusion(){return this._get("exclusion")}};var Ds=class extends _{static get syntaxRules(){return{syntaxes:[{type:"keyword",as:"specifier",value:"CURRENT ROW"},[{type:"keyword",as:"specifier",value:"UNBOUNDED"},{type:"keyword",as:"dir",value:["PRECEDING","FOLLOWING"]}],[{type:"number_literal",as:"specifier"},{type:"keyword",as:"dir",value:["PRECEDING","FOLLOWING"]}],[{type:"Expr",as:"specifier"},{type:"keyword",as:"dir",value:["PRECEDING","FOLLOWING"]}]]}}specifier(){return this._get("specifier")}dir(){return this._get("dir")}};var Ls=class extends _{static get syntaxRules(){return{type:"paren_block",syntax:[{type:"WindowRef",as:"super_window",optional:!0},{type:"PartitionByClause",as:"partition_by_clause",optional:!0,autoIndent:!0},{type:"OrderByClause",as:"order_by_clause",optional:!0,autoIndent:!0},{type:"WindowFrameSpec",as:"frame_spec",optional:!0,autoIndent:!0}],autoIndent:!0,autoIndentAdjust:-1}}superWindow(){return this._get("super_window")}partitionByClause(){return this._get("partition_by_clause")}orderByClause(){return this._get("order_by_clause")}frameSpec(){return this._get("frame_spec")}};var Ms=class extends ie{static get syntaxRules(){let e={type:"punctuation",value:","};return[{syntaxes:[{...[].concat(super.syntaxRules)[0]},[{type:"keyword",as:"as_kw",value:"AS",booleanfy:!0},{...[].concat(super.syntaxRules)[0],assert:!0}]]},{type:"paren_block",syntax:{type:"Identifier",as:"columns",arity:{min:1},itemSeparator:e,assert:!0},if:"value",optional:!0,optionalParens:!0}]}asKW(){return this._get("as_kw")}columns(){return this._get("columns")}};var Ps=class o extends Z(_){static get syntaxRules(){return[{type:["Expr","ColumnRef0","MYVarAssignmentExpr"],as:"expr"},{type:"SelectItemAlias",as:"alias",optional:!0}]}expr(){return this._get("expr")}alias(){return this._get("alias")}deriveAlias(){let e=this.alias()?.jsonfy(),t=this.expr();if(!(t instanceof l.ColumnRef0)){if(t instanceof l.RowConstructor&&(t=t.exprUnwrapped()),(t instanceof l.CastExpr||t instanceof l.PGCastExpr2)&&(t=t.expr()),!e)if(t instanceof l.ColumnRef1)e={as_kw:!0,value:t.value(),delim:t._get("delim")};else if(t instanceof l.LQDeepRef1&&t.endpoint()instanceof l.ColumnRef2){let s=t.endpoint();e={as_kw:!0,value:s.value(),delim:s._get("delim")}}else{let s=this.options.dialect==="postgres";t instanceof l.CallExpr&&s&&(e={as_kw:!0,value:t.name().toLowerCase()})}return l.SelectItemAlias.fromJSON(e)}}jsonfy(e={},t=null,s=null){if(e.deSugar){let r=this.deriveAlias(),n,a=r&&(t?t.transform(r,(m=e)=>r.jsonfy(m),"alias",e):r.jsonfy(e));a?.is_aggr&&({is_aggr:n,...a}=a);let p=this.expr(),c;n&&!(p instanceof l.LQDeepRef1)?c=(m=e,g=t)=>({nodeName:l.AggrCallExpr.NODE_NAME,name:(e.toDialect||this.options.dialect)==="mysql"?"JSON_ARRAYAGG":"JSON_AGG",arguments:[p.jsonfy(m,g,s)]}):c=(m=e,g=t)=>p.jsonfy(m,g,s);let u=t?t.transform(p,c,"expr",{...e,asAggr:n}):c(),f=a&&{nodeName:l.Identifier.NODE_NAME,value:a.value,delim:a.delim}||{nodeName:l.Identifier.NODE_NAME,value:this.options.dialect==="postgres"?"?column?":p.stringify()},y=u.result_schema;if(y instanceof l.ColumnSchema){let m=y.parentNode;y=y.clone({renameTo:f}),m._adoptNodes(y)}else!(p instanceof l.LQDeepRef1)&&!(p instanceof l.ColumnRef0)&&(y=l.ColumnSchema.fromJSON({name:f,data_type:this.expr().dataType().jsonfy()}),p._adoptNodes(y));let d=(n||Number(e.deSugar)>2||Number(e.deSugar)>1&&(this.parentNode?.entries().length||0)>1)&&a||this.alias()?.jsonfy();return{nodeName:o.NODE_NAME,expr:u,alias:d,result_schema:y}}return super.jsonfy(e,t,s)}};var js=class extends ie{static get syntaxRules(){return[{syntaxes:[{...[].concat(super.syntaxRules)[0]},[{type:"keyword",as:"as_kw",value:"AS",booleanfy:!0},{...[].concat(super.syntaxRules)[0],assert:!0}]]},{type:"AggrNotation",as:"is_aggr",autoSpacing:!1,optional:!0}]}asKW(){return this._get("as_kw")}isAggr(){return this._get("is_aggr")}};var Us=class extends Z(_){static get syntaxRules(){return[{type:"CallExpr",as:"call_expr"},{type:["SRFExprDDL1","SRFExprDDL2"],as:"qualif"}]}callExpr(){return this._get("call_expr")}qualif(){return this._get("qualif")}jsonfy(e={},t=null,s=null){let r=super.jsonfy(e,t,s);if(e.deSugar){let n=r.qualif?.column_defs||[],a=r.qualif?.alias?l.TableSchema.fromJSON({name:r.qualif.alias,entries:n}):l.JSONSchema.fromJSON({entries:n});r={...r,result_schema:a}}return r}};var $s=class extends Z(_){static get syntaxRules(){return[{type:"CallExpr",as:"call_expr"},{optional:!0,syntax:[{type:"keyword",as:"with_ordinality",value:"WITH",booleanfy:!0},{type:"keyword",value:"ORDINALITY",assert:!0}]}]}callExpr(){return this._get("call_expr")}withOrdinality(){return this._get("with_ordinality")}jsonfy(e={},t=null,s=null){let r=super.jsonfy(e,t,s);if(e.deSugar){let n,a;r.with_ordinality&&(a=l.ColumnSchema.fromJSON({name:{nodeName:l.Identifier.NODE_NAME,value:"ordinality"},data_type:{nodeName:l.DataType.NODE_NAME,value:"INT"}}));let p={nodeName:l.Identifier.NODE_NAME,value:r.call_expr.name};if(r.call_expr?.result_schema)if(n=r.call_expr.result_schema,n instanceof l.TableSchema||n instanceof l.JSONSchema)if(a){let c=n.jsonfy();n=n.constructor.fromJSON({name:p,...c,entries:[...c.entries,a]})}else n=n.clone();else n=l.JSONSchema.fromJSON({entries:[n.jsonfy()].concat(a||[])});else n=l.JSONSchema.fromJSON({entries:[{nodeName:l.ColumnSchema.NODE_NAME,name:p,data_type:this.callExpr().dataType().jsonfy()}].concat(a||[])});r={...r,result_schema:n}}return r}};var Js=class extends Z(_){static get syntaxRules(){return[{type:"CallExpr",as:"call_expr"},{type:"SRFExprDDL1",as:"qualif",optional:!0}]}callExpr(){return this._get("call_expr")}qualif(){return this._get("qualif")}jsonfy(e={},t=null,s=null){let r=super.jsonfy(e,t,s);if(e.deSugar){let n;if(r.qualif?.column_defs.length)n=l.JSONSchema.fromJSON({entries:r.qualif.column_defs});else if(r.call_expr?.result_schema){let a=r.call_expr.result_schema;n=a instanceof l.TableSchema||a instanceof l.JSONSchema?a.clone():l.JSONSchema.fromJSON({entries:[a.jsonfy()]})}else{let a={nodeName:l.Identifier.NODE_NAME,value:r.call_expr.name};n=l.JSONSchema.fromJSON({entries:[{nodeName:l.ColumnSchema.NODE_NAME,name:a,data_type:this.callExpr().dataType().jsonfy()}]})}r={...r,result_schema:n}}return r}};var Bs=class extends Z(v){static get syntaxRules(){return[{type:"keyword",value:"ROWS"},{type:"keyword",value:"FROM"},{type:"paren_block",syntax:{type:"SRFExpr3",as:"entries",arity:{min:1},itemSeparator:{type:"punctuation",value:","},assert:!0,autoIndent:2},autoIndent:!0},{optional:!0,syntax:[{type:"keyword",as:"with_ordinality",value:"WITH",booleanfy:!0},{type:"keyword",value:"ORDINALITY",assert:!0}]}]}static get syntaxPriority(){return-1}withOrdinality(){return this._get("with_ordinality")}jsonfy(e={},t=null,s=null){let r=super.jsonfy(e,t,s);if(e.deSugar){let n;r.with_ordinality&&(n=l.ColumnSchema.fromJSON({name:{nodeName:l.Identifier.NODE_NAME,value:"ordinality"},data_type:{nodeName:l.DataType.NODE_NAME,value:"INT"}}));let a=l.JSONSchema.fromJSON({entries:[...r.entries.reduce((p,c)=>{let u=c.result_schema.jsonfy().entries;return p.concat(u)},[])].concat(n||[])});r={...r,result_schema:a}}return r}};var qs=class extends _{static get syntaxRules(){return[{type:"keyword",value:"AS"},{type:"paren_block",syntax:{type:"ColumnSchema",as:"column_defs",arity:{min:1},itemSeparator:{type:"punctuation",value:","}}}]}asKW(){return this._get("as_kw")}alias(){return this._get("alias")}columnDefs(){return this._get("column_defs")}};var Fs=class extends _{static get syntaxRules(){return[{syntaxes:[{type:"Identifier",as:"alias"},[{type:"keyword",value:"AS",as:"as_kw"},{type:"Identifier",as:"alias",assert:!0}]]},{type:"paren_block",syntax:{type:"ColumnSchema",as:"column_defs",arity:{min:1},itemSeparator:{type:"punctuation",value:","}}}]}alias(){return this._get("alias")}columnDefs(){return this._get("column_defs")}};var Gs=class extends Ze{static get syntaxRules(){return{type:"paren_block",syntax:super.syntaxRules,autoIndent:!0}}};var je=class extends ge{static get syntaxRules(){return{type:["CompleteSelectStmt","CompositeSelectStmt"],expression:!0}}static buildSyntaxRules(e=null){let t=(r=[])=>[{type:"keyword",value:"SELECT"},{type:"DistinctClause",as:"distinct_clause",optional:!0},{type:"SelectList",as:"select_list"},{optional:!0,syntax:[{type:"FromClause",as:"from_clause",autoSpacing:`
`},{type:"JoinClause",as:"join_clauses",arity:1/0,optional:!0,autoSpacing:`
`},{type:"MYPartitionClause",as:"my_partition_clause",optional:!0,autoSpacing:`
`},{type:"WhereClause",as:"where_clause",optional:!0,autoSpacing:`
`},{optional:!0,syntax:[{type:"GroupByClause",as:"group_by_clause",autoSpacing:`
`},{type:"HavingClause",as:"having_clause",optional:!0,autoSpacing:`
`}]},{type:"WindowClause",as:"window_clause",optional:!0,autoSpacing:`
`},...r],autoSpacing:`
`}],s=()=>[{type:"OrderByClause",as:"order_by_clause",optional:!0,autoSpacing:`
`},{type:"LimitClause",as:"limit_clause",optional:!0,autoSpacing:`
`},{type:"OffsetClause",as:"offset_clause",optional:!0,autoSpacing:`
`},{type:"PGFetchClause",as:"pg_fetch_clause",optional:!0,dialect:"postgres",autoSpacing:`
`},{type:"ForClause",as:"for_clause",optional:!0,autoSpacing:`
`}];return e===1?t():e===2?s():t(s())}dataType(){return l.DataType.fromJSON({value:"SET"})}};var Je=class extends et(je){static get syntaxRules(){return this.buildSyntaxRules(1)}static get syntaxPriority(){return-1}distinctClause(){return this._get("distinct_clause")}selectList(){return this._get("select_list")}fromClause(){return this._get("from_clause")}joinClauses(){return this._get("join_clauses")}whereClause(){return this._get("where_clause")}groupByClause(){return this._get("group_by_clause")}havingClause(){return this._get("having_clause")}windowClause(){return this._get("window_clause")}myPartitionClause(){return this._get("my_partition_clause")}get length(){return this.selectList()?.length??0}[Symbol.iterator](){return(this.selectList()||[])[Symbol.iterator]()}jsonfy(e={},t=null,s=null){if(!e.deSugar)return super.jsonfy(e,t,s);let r={select_list:null,group_by_clause:new Set,having_clause:new Set,order_by_clause:new Set};t=new ne((p,c,u)=>{if(p instanceof l.SelectList){r.select_list=c;return}return p instanceof l.GroupByClause||p instanceof l.HavingClause||p instanceof l.OrderByClause?c((f,y,d)=>{if((typeof d=="number"||d==="expr")&&f.parentNode===p){try{r[u].add(y())}catch(m){if(m instanceof Ae)r[u].add(y);else throw m}return}return y()}):c()},t,this);let n=super.jsonfy(e,t,s),a=r.select_list();n=this.finalizeSelectorJSON(n,t,s,e),a=this.selectList().finalizeJSON(a,t,s,e),n={...n,select_list:a,result_schema:a.result_schema};for(let[p,c]of Object.entries(r)){if(p==="select_list"||!c.size)continue;let u=[];for(let f of c)typeof f=="function"&&(f=f()),u.push(f);p==="having_clause"?n={...n,[p]:u[0]}:p==="group_by_clause"&&(n={...n,[p]:{entries:u}})}return n}};var Ws=class extends Je{static get syntaxRules(){return this.buildSyntaxRules()}static get syntaxPriority(){return 99}orderByClause(){return this._get("order_by_clause")}offsetClause(){return this._get("offset_clause")}limitClause(){return this._get("limit_clause")}forClause(){return this._get("for_clause")}pgFetchClause(){return this._get("pg_fetch_clause")}static async parse(e,{left:t=void 0,minPrecedence:s=0,trail:r=[],...n}={}){if(t)return;let a=await this.toStream(e,n),p=await super.parse(a,{minPrecedence:s,trail:r,...n});if(await a.match("operator",["INTERSECT","UNION","EXCEPT"])){if(p.order_by_clause||p.offset_clause||p.limit_clause||p.for_clause){let c=a.current(),u=`[${this.NODE_NAME}] Unexpected ${c.type} token:${typeof c.value=="string"?` "${c.value}"`:""} at <line ${c.line}, column ${c.column}>`;throw new SyntaxError(u)}return Je.fromJSON({...p.jsonfy(),nodeName:void 0})}return p}};var Ys=class extends je{static get syntaxRules(){let e=["DerivedQuery","ValuesTableLiteral","ParenExpr","BasicSelectStmt","CallExpr"];return[{type:e,as:"left"},{type:"operator",as:"operator",value:["INTERSECT","UNION","EXCEPT"],autoSpacing:`
`},{type:"keyword",as:"all_or_distinct",value:["ALL","DISTINCT"],optional:!0},{type:e,as:"right",assert:!0,autoSpacing:`
`},...this.buildSyntaxRules(2)]}static get syntaxPriority(){return 100}left(){return this._get("left")}operator(){return this._get("operator")}allOrDistinct(){return this._get("all_or_distinct")}right(){return this._get("right")}orderByClause(){return this._get("order_by_clause")}offsetClause(){return this._get("offset_clause")}limitClause(){return this._get("limit_clause")}forClause(){return this._get("for_clause")}pgFetchClause(){return this._get("pg_fetch_clause")}get length(){return this.left()?.selectList()?.length??0}[Symbol.iterator](){return(this.left()?.selectList()||[])[Symbol.iterator]()}jsonfy(e={},t=null,s=null){let r=super.jsonfy(e,t,s);return{...r,result_schema:r.left?.result_schema}}};var Ks=class extends Ce{static get syntaxRules(){return[{type:"keyword",value:"TABLE"},{type:"keyword",as:"pg_only_kw",value:"ONLY",optional:!0,dialect:"postgres"},{type:"TableRef2",as:"table_ref",assert:!0},{type:"operator",as:"pg_star_ref",value:"*",booleanfy:!0,optional:!0,dialect:"postgres"}]}tableRef(){return this._get("table_ref")}pgOnlyKW(){return this._get("pg_only_kw")}pgStarRef(){return this._get("pg_star_ref")}querySchemas(){let e=this.tableRef(),t=registry.Identifier.fromJSON({value:e.value()}),s=e.resultSchema(transformer).clone({renameTo:t});return new Set([s])}};var ua={};ve(ua,{AggrNotation:()=>Hs,LQVersionSpec:()=>Vs});var Hs=class extends _{static get syntaxRules(){return{type:"bracket_block",syntax:{type:"Expr",as:"_",arity:0,assert:!0}}}static get syntaxPriority(){return-1}};var Vs=class extends _{static get syntaxRules(){return{type:"version_spec",as:"."}}static get syntaxPriority(){return-1}value(){return this._get("value")}};var pa={};ve(pa,{DataType:()=>Qs});var Qs=class extends _{static get syntaxRules(){return[{syntaxes:[{type:"data_type",as:"."},{type:"keyword",as:".",value:["SET"]}]},{type:"paren_block",syntax:{type:"Expr",as:"specificity",arity:1/0,itemSeparator:{type:"punctuation",value:","},assert:!0},optional:!0,optionalParens:!0,autoSpacing:!1},{type:"AggrNotation",as:"pg_is_aggr",autoSpacing:!1,optional:!0,dialect:"postgres"}]}value(){return this._get("value")}specificity(){return this._get("specificity")}pgIsAggr(){return this._get("pg_is_aggr")}};var Xs=class extends v{static get syntaxRules(){return{type:["JSONSchema","TableSchema","ColumnSchema","ColumnRef1"],as:"entries",arity:1/0}}};Object.assign(l,{...na,...oa,...ia,...la,...he,...ua,...pa,JSONSchema:Xs});var ca=class extends v{static get _contentTypes(){return["SelectStmt","TableStmt","InsertStmt","UpsertStmt","UpdateStmt","DeleteStmt","MYSetStmt","CTE","CreateTableStmt"]}static get syntaxRules(){let e={type:"punctuation",value:";"};return{type:this._contentTypes,as:"entries",arity:1/0,itemSeparator:e,autoSpacing:`
`}}static async parse(e,t={}){let s=await this.toStream(e,t),r=await super.parse(s,t);if(!s.done&&s.current()){let n=s.current(),a=`[${this.NODE_NAME}] Unexpected ${n.type} token:${typeof n.value=="string"?` "${n.value}"`:""} at <line ${n.line}, column ${n.column}>`;throw new SyntaxError(a)}return r}stringify(e={}){return`${super.stringify(e)};`}};})();
//# sourceMappingURL=main.js.map
