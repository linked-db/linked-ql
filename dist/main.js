(()=>{function bt(u){return u instanceof String||typeof u=="string"&&u!==null}function mt(u){return arguments.length&&(u===void 0||typeof u>"u")}function Ht(u){return typeof u=="function"}function Y(u){return Ht(u)||u&&{}.toString.call(u)==="[object function]"}function R(u){return Array.isArray(u)}function $e(u){return!bt(u)&&!mt(u.length)}function we(u){return u===null||u===""}function q(u){return Array.isArray(u)||typeof u=="object"&&u||Ht(u)}function Ue(u){return we(u)||mt(u)||u===!1||u===0||q(u)&&!Object.keys(u).length}function L(u){return!Array.isArray(u)&&typeof u=="object"&&u}function jt(u,t=!0){return R(u)?u:!t&&L(u)?[u]:u!==!1&&u!==0&&Ue(u)?[]:$e(u)?Array.prototype.slice.call(u):L(u)?Object.values(u):[u]}function xt(u){return u instanceof Number||typeof u=="number"}function Lt(u){return xt(u)||u!==!0&&u!==!1&&u!==null&&u!==""&&!isNaN(u*1)}var Ge=function(u,t=1,e=!0){return!Lt(t)||t<=0||(!R(u)&&L(u)&&e&&(u=Object.values(u)),!R(u))?u:u.reduce((r,s)=>R(s)||L(s)&&e?r.concat(Ge(R(s)?s:Object.values(s),t-1,e)):r.concat(s),[])},be=Ge;function Mt(u,t=1){var e=0;u.forEach(s=>{e++});var r=u.slice(u.length-e,t);return arguments.length>1?r:r[0]}function ot(u,t=1){return arguments.length>1?Mt(u.slice().reverse(),t).reverse():Mt(u.slice().reverse())}function Re(u,...t){return t.forEach(e=>{u.indexOf(e)<0&&u.push(e)}),u}function We(r,t){t=t||Object.prototype,t=t&&!R(t)?[t]:t;for(var e=[],r=r;r&&(!t||t.indexOf(r)<0)&&r.name!=="default";)e.push(r),r=r?Object.getPrototypeOf(r):null;return e}function Ke(u,t){var e=[];return We(u,t).forEach(r=>{Re(e,...Object.getOwnPropertyNames(r))}),e}function Dt(u,t,e=!1,r=!1,s=!1){var i=0,n=u.shift();if((Lt(n)||n===!0||n===!1)&&(i=n,n=u.shift()),!u.length)throw new Error("_merge() requires two or more array/objects.");return u.forEach((o,f)=>{!q(o)&&!Y(o)||(e?Ke(o):Object.keys(o)).forEach(c=>{if(t(c,n,o,f)){var l=n[c],h=o[c];if((R(l)&&R(h)||L(l)&&L(h))&&(i===!0||i>0))n[c]=R(l)&&R(h)?[]:{},Dt([Lt(i)?i-1:i,n[c],l,h],t,e,r,s);else if(R(n)&&R(o))r?n[c]=h:n.push(h);else try{s?Object.defineProperty(n,c,Object.getOwnPropertyDescriptor(o,c)):n[c]=o[c]}catch{}}})}),n}function Le(...u){return Dt(u,(t,e,r)=>!0,!1,!1,!1)}function Ie(u){return L(u)&&Object.getPrototypeOf(u)===Object.prototype}function te(u){return u===!0||u===!1}function Oe(u,t){var e=void 0;return q(u)&&Object.keys(u).forEach((r,s)=>{e!==!1&&(e=t(Lt(r)?parseFloat(r):r,u[r],s))}),e}function He(u,t,e=!0,r=!0,s=!1,i=!1){if(R(u)&&R(t)){var n=[],o=!0;return u.forEach(f=>{if(o){var c=!1;Oe(t,(l,h)=>{(!c||r&&q(f))&&(c=e(f,h),(R(c)&&!c.length||L(c)&&!Object.keys(c).length)&&(c=!1),q(c)&&r&&(f=c))}),q(c)?n.push(r?c:f):te(c)?s&&!c||!s&&c?n.push(f):i&&(o=!1):n.push(c)}}),n}if(L(u)&&L(t)){var n={},o=!0;return Object.keys(u).forEach(l=>{if(o){var h=e(u[l],t[l]);(R(h)&&!h.length||L(h)&&!Object.keys(h).length)&&(h=!1),q(h)?n[l]=r?h:u[l]:te(h)?s&&!h||!s&&h?n[l]=u[l]:i&&(o=!1):n[l]=h}}),n}}var xe=function(u,t,e=!0,r=1){if(R(u)&&R(t)&&u.length!==t.length)return!e;if(L(u)&&L(t)){var s=Object.keys(u),i=Object.keys(t);if(!s.length&&!i.length)return Ie(u)&&Ie(t)?e:u===t===e;if(!xe(s,i))return!e}if(r>0&&(R(u)&&R(t)||L(u)&&L(t))){var n=He(u,t,(o,f)=>xe(o,f,e,r-1),!1,!1,!0);return R(n)?n.length===u.length&&n.length===t.length:L(n)&&L(u)?Object.keys(n).length===Object.keys(u).length&&Object.keys(n).length===Object.keys(t).length:n}return Y(e)?e(u,t):xt(u)&&xt(t)&&isNaN(u)&&isNaN(t)?e:u===t===e},ke=xe;function Me(u,t=[]){return Dt([{},u],(e,r,s)=>{if(!Y(s[e]))return Y(t)?t(e):R(t)&&t.length?t.indexOf(e)>-1:!0},!1,!1,!1)}function Ce(u,t,e=null){return R(t)?u.filter(r=>e?t.filter(s=>e(r,s)).length:t.indexOf(r)!==-1):[]}var at=class u{static lex(t,e,r={}){if(!bt(t=t+""))throw new Error("Argument1 must be a string!");var s=c=>({delims:c.delims.slice(),options:Me(c.options),nesting:c.nesting.slice(),maxDepth:c.maxDepth,comments:c.comments.slice(),tokens:c.tokens.slice(),matches:c.matches.slice(),matchesi:Me(c.matchesi)});if(u.$cache[t]&&r.cache!==!1)for(var i=0;i<u.$cache[t].length;i++){var n=u.$cache[t][i];if(ke(n.delims,e))return s(n)}var o=new u(t,r),f=o.lex(e);return r.cache!==!1&&(u.$cache[t]=u.$cache[t]||[],u.$cache[t].push(f)),s(f)}static split(t,e,r){return u.lex(t,e,r).tokens}static match(t,e,r){return u.lex(t,e,r).matches}constructor(t,e){if(!bt(t))throw new Error("Lexer requires the first argument to be a string.");this.$str=t,this.$options=e||{},this.$options.blocks||(this.$options.blocks=u.$blocks),this.$options.quotes||(this.$options.quotes=u.$quotes),this.$options.comments||(this.$options.comments=u.$comments)}lex(t,e){for(var r={delims:jt(t),options:Le(!0,{},this.$options,e||{}),nesting:[],maxDepth:0,comments:[],tokens:[],matches:[],matchesi:{}},s=0;typeof s=="number";)s=this._evalCharsAt(r,s);if(r.nesting.length)throw new Error("Error parsing the string: "+this.$str+". Unterminated blocks: "+be(r.nesting).join(", "));return r}_evalCharsAt(t,e){if(!(e>=this.$str.length)){var r=1,s={},i={},n={};if(t.openComment||(i=this._testQuotes(t,e)),t.openQuote||(s=this._testComments(t,e)),t.openComment||s.ending)if(!t.nesting.length&&!n.ending){var o=s.starting||s.ending||this.$str[e];r=o.length,this._push(t,o,"comments",s.starting)}else this._push(t,this.$str[e]);else if(t.openQuote||i.ending)this._push(t,this.$str[e]);else{if(t.options.limit&&t.matches.length===t.options.limit)return this._push(t,this.$str[e]),e+1;n=this._testNesting(t,e);var n=this._testNesting(t,e),f=this._testChars(t.options.stopChars||[],t,e);if(!t.nesting.length&&f!==!1){t.options.stopChar=f,t.options.stopCharForward=this.$str.substr(e);return}if(!t.delims.length)t.nesting.length===2&&n.starting?(t.matches.push(null),this._push(t,n.starting),r=n.starting.length):!t.nesting.length&&n.ending?(this._push(t,n.ending),r=n.ending.length,t.matches.push(null)):this._push(t,this.$str[e]);else if(!t.nesting.length&&!n.ending){this._push(t,"");var c=this._testChars(t.delims,t,e);if(c!==!1&&(t.matches.push(c),t.matchesi[e]=c,r=c.length||1,!t.options.preserveDelims)){var l=e+(c.length||1);return l===this.$str.length&&this._push(t,""),l}this._push(t,c||this.$str[e])}else{var o=n.starting||n.ending||this.$str[e];r=o.length,this._push(t,o)}}return e+r}}_testQuotes(t,e){var r={};return(t.options.quotes||[]).forEach(s=>{this.$str.substr(e,1)===s&&(t.openQuote?s===t.openQuote&&(t.openQuote=!1,r.ending=s):(t.openQuote=s,r.starting=s))}),r}_testComments(t,e){var r={};return(t.options.comments||[]).forEach(s=>{if(t.openComment){if(ot(s)===ot(t.openComment)){var n=ot(s);this.$str.substr(e).startsWith(n)&&(t.openComment=!1,r.ending=n)}}else{var i=Mt(s);this.$str.substr(e).startsWith(i)&&(t.openComment=s,r.starting=i)}}),r}_testNesting(t,e){var r={};return(t.options.blocks||[]).forEach(s=>{let i=Mt(s),n;if(i instanceof RegExp?[n]=i.exec(this.$str.substr(e))||[]:this.$str.substr(e).startsWith(i)&&(n=i),n)t.nesting=t.nesting.concat([s]),r.starting=n;else if(t.nesting.length&&ot(s)===ot(ot(t.nesting))){var o=ot(s),f;o instanceof RegExp?[f]=o.exec(this.$str.substr(e))||[]:this.$str.substr(e).startsWith(o)&&(f=o),f&&(t.nesting=t.nesting.slice(0,-1),r.ending=f)}}),t.maxDepth=Math.max(t.maxDepth,t.nesting.length),r}_testChars(t,e,r){for(var s=0;s<t.length;s++){let o={useRegex:e.options.useRegex,ci:e.options.ci,...L(t[s])?t[s]:{test:t[s]}};if(Y(o.test)){var i=o.test(this.$str.substr(0,r),this.$str.substr(r),e.tokens.slice());if(i!==!1)return i;continue}if(o.useRegex){let c=o.useRegex!==!0?o.useRegex:"";var n=this.$str.substr(r).match(new RegExp("^"+o.test,c));if(n&&(!o.backtest||this.$str.substr(0,r).match(new RegExp(o.backtest,c))))return n[0];continue}let f=(c,l)=>o.ci?c.toLowerCase()===l.toLowerCase():c===l;if(f(this.$str.substr(r,o.test.length),o.test)&&(!o.backtest||f(this.$str.substr(r-o.backtest.length,r),o.backtest)))return o.test}return!1}_push(t,e,r="tokens",s=!1){var i=t.matches.length;if(mt(t.tokens[i])&&(t.tokens[i]=""),r==="comments"){t.tokens[i].comments||(t.tokens[i]=new String(t.tokens[i]),t.tokens[i].comments=[]);var n=t.tokens[i].comments.length-(!t.tokens[i].comments.length||s?0:1);t.tokens[i].comments[n]=(t.tokens[i].comments[n]||"")+e}else{var o=t.tokens[i].comments;t.tokens[i]=t.tokens[i]+e}}split(t,e,r){return this.lex(e,r).tokens}match(t,e,r){return this.lex(e,r).matches}regParse(t,e){return this.lex(t,Le({useRegex:!0},e||{}))}regSplit(t,e){return this.regParse(t,e).tokens}regMatch(t,e){return this.regParse(t,e).matches}};at.$blocks=[["(",")"],["[","]"],["{","}"]];at.$quotes=['"',"'","`"];at.$comments=[["/*","*/"],["//",`
`]];at.$cache=Object.create(null);var m=class extends at{static $blocks=[...at.$blocks,[new RegExp("^CASE ","i"),new RegExp("^ END","i")]]};var T=class u{CONTEXT;FLAGS=[];constructor(t){this.CONTEXT=t,this.CONTEXT?.$trace?.("event:connected",this)}$trace(t,...e){return t==="get:node:root"&&!(this.CONTEXT instanceof u)?this:this.CONTEXT?.$trace?.(t,...e)}get params(){return this.CONTEXT?.params||{}}get quoteChars(){return this.constructor.getQuoteChars(this)}static getQuoteChars(t,e=!1){return(e&&t?.params?.inputDialect||t?.params?.dialect)==="mysql"&&!t.params.ansiQuotes?["'",'"']:["'"]}get escChar(){return this.constructor.getEscChar(this)}autoEsc(t){let e=(Array.isArray(t)?t:[t]).map(r=>r&&!/^(\*|[\w]+)$/.test(r)?`${this.escChar}${r.replace(new RegExp(this.escChar,"g"),this.escChar.repeat(2))}${this.escChar}`:r);return Array.isArray(t)?e:e[0]}static autoUnesc(t,e,r=!1){let s=this.getEscChar(t,r);return(e||"").replace(new RegExp(s+s,"g"),s)}static getEscChar(t,e=!1){return(e&&t?.params?.inputDialect||t?.params?.dialect)==="mysql"&&!t.params.ansiQuotes?"`":'"'}static parseIdent(t,e,r=!1){let s=this.getEscChar(t,r),i=m.split(e,["."]),n=i.map(f=>new RegExp(`^(?:(\\*|[\\w]+)|(${s})((?:\\2\\2|[^\\2])+)\\2)$`).exec(f.trim())).filter(f=>f);if(n.length!==i.length)return;let o=f=>f?.[1]||this.autoUnesc(t,f?.[3]);return[o(n.pop()),o(n.pop())]}with(t){for(let e in t)this[e]=t[e];return this}withFlag(...t){return t=new Set(t.filter(e=>e)),this.FLAGS=this.FLAGS.reduce((e,r)=>{let s=r.split(":");for(let i of t){let n=i.split(":");n[0]===s[0]&&(r=[...new Set([...s,...n])].join(":"),t.delete(i))}return e.concat(r)},[]).concat(...t),this}getFlag(t){let e=t.toUpperCase().split(":");return this.FLAGS.find(r=>{let s=r.split(":");return e[0]===s[0]&&e.every(i=>s.includes(i))})}hasFlag(t){return!!this.getFlag(t)}build(t,e,r,s){let i=Array.isArray(r)?r:r?[r]:[];if(!i.length)throw new Error("At least one node type must be defined.");let n=f=>i.find(c=>f instanceof c)?f:i.reduce((c,l)=>c||l.fromJson(this,f),null),o=(...f)=>{for(let c of f)Array.isArray(this[t])?this[t].push(c):this[t]=c};if(e.length===1&&typeof e[0]!="function"){let f=n(e[0]);if(f)return o(f)}if(s){if(i.length!==1)throw new Error("To support argument delegation, number of node types must be 1.");let f=this[t]&&!Array.isArray(this[t])?this[t]:new i[0](this);return o(f),f[s](...e)}for(let f of e){if(typeof f=="function"){if(this[t]&&!Array.isArray(this[t])){f(this[t]);continue}if(i.length===1){let p=new i[0](this);o(p),f(p);continue}let h=p=>(...E)=>{let A=i.reduce((N,d)=>N||(d.factoryMethods?typeof d.factoryMethods[p]=="function"&&d.factoryMethods[p](this,...E):typeof d.prototype[p]=="function"&&new d(this)),null);if(!A)throw new Error(`Unknow method: ${p}()`);if(o(A),A[p])return A[p](...E);for(let N of E)N(A)};f(new Proxy({},{get:(p,E)=>h(E)}));continue}let c=n(f);if(c){o(c);continue}let l;if(typeof f=="object"&&f)try{l=JSON.stringify(f)}catch{l=f.constructor.name}else l=f+"";throw new Error(`Arguments must be of type ${i.map(h=>h.name).join(", ")} or a JSON equivalent. Recieved: ${l}`)}}clone(){return this.constructor.fromJson(this.CONTEXT,this.toJson())}static parse(t,e,r=null){}toString(){return this.stringify()}static fromJson(t,e){}toJson(){return{flags:this.FLAGS.slice(0)}}};var S=class extends T{BASENAME;NAME;name(t){let e=Array.isArray(t)?[...t]:[t];if(this.NAME=e.pop(),this.BASENAME=e.pop(),e.length)throw new Error(`Idents can be maximum of two parts. Recieved: ${e.reverse().join(".")}.${this.BASENAME}.${this.NAME}`);return this}toJson(){let t=this.BASENAME?[this.BASENAME,this.NAME]:this.NAME;return this.FLAGS.length?{name:t,flags:this.FLAGS}:t}static fromJson(t,e){if(typeof e=="string"||Array.isArray(e)&&e.every(s=>typeof s=="string"))e={name:e};else if(typeof e?.name!="string"&&!Array.isArray(e?.name))return;let r=new this(t).withFlag(...e?.flags||[]);return r.name(e.name),r}stringify(){return this.autoEsc([this.BASENAME,this.NAME].filter(t=>t)).join(".")+""}static parse(t,e){if(/^(TRUE|FALSE|NULL)$/i.test(e))return;let[r,s]=this.parseIdent(t,e,!0)||[];if(!r)return;let i=new this(t);return i.name(s?[s,r]:r),i}};function ye(u,t,e=!1){if(t=="")return u;var r=e?u.lastIndexOf(t):u.indexOf(t);return r===-1?"":u.substr(r+t.length)}function De(u,t,e=!1){if(t=="")return u;var r=e?u.lastIndexOf(t):u.indexOf(t);return r===-1?u:u.substr(0,r)}function Pe(u,t){return De(u,t,!0)}function ee(u,t){return u===void 0?"":u.split(/(?=[A-Z])/).join(t||" ")}function Je(u,t){return typeof u!="string"?u:u.replace(/\w\S*/g,function(e){return e.charAt(0).toUpperCase()+(typeof t!==void 0&&t?e.substr(1).toLowerCase():e.substr(1))})}function Fe(u,t){return u=Je(u.replace(/-/g," ")).replace(/ /g,""),t?u:u[0].toLowerCase()+u.substr(1)}function w(u,t,e){return Pe(ye(u,t),e)}function D(u,t,e){return u.startsWith(t)&&u.endsWith(e)}var et=class extends T{constructor(t){super(t),this._BINDINGS=[]}get BINDINGS(){return this._BINDINGS}$trace(t,...e){if(t==="get:node:statement")return this;if(t==="get:node:statement.bindings")return this._BINDINGS;if(t.startsWith("get:name:")){let r=this.$trace("get:node:table");if(r&&!(r.EXPR instanceof S)&&!this._ongoingNameTrace){this._ongoingNameTrace=!0;let s=r.EXPR.$trace(t,...e);return delete this._ongoingNameTrace,s}if(r&&t==="get:name:table")return r.EXPR.NAME;if(r&&t==="get:name:database"&&r.EXPR.BASENAME)return r.EXPR.BASENAME}return super.$trace?.(t,...e)}clone(){let t=super.clone();return this._BINDINGS.length&&(t._BINDINGS=this._BINDINGS.slice(0)),t}static mySubstitutePlaceholders(t,e){return(t?.params?.inputDialect||t?.params?.dialect)!=="mysql"||e.indexOf("?")===-1?e:m.split(e,["?"],{blocks:[]}).reduce((r,s,i)=>r?r+"?"+i+s:s,null)}get expandable(){return!1}async expand(t=!1){return t?this:this.clone()}};var kt=class extends T{CONDITION=null;CONSEQUENCE=null;condition(t){return this.build("CONDITION",[t],I.Types),this}then_(t){return this.build("CONSEQUENCE",[t],I.Types)}toJson(){return{condition:this.CONDITION?.toJson(),consequence:this.CONSEQUENCE?.toJson()}}static fromJson(t,e){if(!(typeof e=="object"&&e&&"condition"in e))return;let r=new this(t);return r.condition(e.condition),r.then_(e.consequence),r}stringify(){return`${this.CONDITION} THEN ${this.CONSEQUENCE}`}static parse(t,e,r){let s=m.split(e,["\\s+THEN\\s+"],{useRegex:"i"});if(s.length!==2)return;let i=new this(t),[n,o]=s.map(f=>r(i,f.trim()));return i.condition(n).then_(o),i}};var Pt=class extends T{BASE_VALUE;WHEN_CLAUSES=[];ELSE_CLAUSE;compare(t){if(this.WHEN_CLAUSES.length||this.ELSE_CLAUSE)throw new Error('A "case" clause must come before any "when" or "else" clauses.');return this.build("BASE_VALUE",[t],I.Types)}when(t){if(this.ELSE_CLAUSE)throw new Error('A "when" clause cannot come after an "else" clause.');return this.build("WHEN_CLAUSES",[t],kt,"condition"),this.WHEN_CLAUSES[this.WHEN_CLAUSES.length-1]}else(t){if(!this.WHEN_CLAUSES.length)throw new Error('An "else" clause cannot come before "when" clauses.');return this.build("ELSE_CLAUSE",[t],I.Types)}toJson(){return{base_value:this.BASE_VALUE?.toJson(),when_clauses:this.WHEN_CLAUSES.map(t=>t.toJson()),else_clause:this.ELSE_CLAUSE?.toJson(),flags:this.FLAGS}}static fromJson(t,e){if(!Array.isArray(e?.when_clauses))return;let r=new this(t).withFlag(...e.flags||[]);e.base_value&&r.compare(e.base_value);for(let s of e.when_clauses)r.when(s);return e.else_clause&&r.else(e.else_clause),r}stringify(){let t=[];return this.BASE_VALUE&&t.push(this.BASE_VALUE),t.push(`WHEN ${this.WHEN_CLAUSES.join(" WHEN ")}`),this.ELSE_CLAUSE&&t.push("ELSE",this.ELSE_CLAUSE),`CASE ${t.join(" ")} END${this.params.dialect==="mysql"?" CASE":""}`}static parse(t,e,r){let[s,i]=e.match(/^CASE\s+([\s\S]*)\s+END(\s+CASE)?$/i)||[];if(!s)return;let{tokens:[n,...o],matches:f}=m.lex(i,["WHEN","ELSE"],{useRegex:"i"}),c=new this(t);n.trim()&&c.compare(r(c,n.trim()));for(let l of f){let h=o.shift();if(/ELSE/i.test(l))c.else(r(c,h.trim()));else if(/WHEN/i.test(l))c.when(r(c,h.trim(),[kt]));else throw new Error(`Can't have multiple "${l}" clauses in a CASE construct.`)}return c}static factoryMethods={case:t=>new this(t)}};var P=class extends T{OPERATOR="";OPERANDS=[];constructor(t,e,...r){super(t),this.OPERATOR=e,this.OPERANDS=r}assert(t,...e){return this.OPERATOR&&this.OPERANDS.splice(0),this.OPERATOR=t,this.build("OPERANDS",e,I.Types),this}equals(...t){return this.assert("=",...t)}eq(...t){return this.equal(...t)}notEqual(...t){return this.assert("<>",...t)}notEq(...t){return this.notEqual(...t)}lesserThan(...t){return this.assert("<",...t)}lt(...t){return this.lesserThan(...t)}lessThanOrEqual(...t){return this.assert("<=",...t)}ltOrEq(...t){return this.lessThanOrEqual(...t)}greaterThan(...t){return this.assert(">",...t)}gt(...t){return this.greaterThan(...t)}greaterThanOrEqual(...t){return this.assert(">=",...t)}gtOrEq(...t){return this.greaterThanOrEqual(...t)}in(...t){return this.assert("IN",...t)}any(...t){return this.assert("ANY",...t)}like(...t){return this.assert("LIKE",...t)}isNull(...t){return this.assert("IS NULL",...t)}isNotNull(...t){return this.assert("IS NOT NULL",...t)}isTrue(...t){return this.assert("IS TRUE",...t)}isNotTrue(...t){return this.assert("IS NOT TRUE",...t)}isFalse(...t){return this.assert("IS FALSE",...t)}isNotFalse(...t){return this.assert("IS NOT FALSE",...t)}isUnknow(...t){return this.assert("IS UNKNOWN",...t)}isNotUnknow(...t){return this.assert("IS NOT UNKNOWN",...t)}isDistinctFrom(...t){return this.assert("IS DISTINCT FROM",...t)}isNotDistinctFrom(...t){return this.assert("IS NOT DISTINCT FROM",...t)}isBetween(...t){return this.assert("IS BETWEEN",...t)}isNotBetween(...t){return this.assert("IS NOT BETWEEN",...t)}isBetweenSymmetric(...t){return this.assert("IS BETWEEN SYMMETRIC",...t)}isNotBetweenSymmetric(...t){return this.assert("IS NOT BETWEEN SYMMETRIC",...t)}and(...t){return new y(this,"AND").and(this,...t)}or(...t){return new y(this,"OR").or(this,...t)}toJson(){return{operator:this.OPERATOR,operands:this.OPERANDS.map(t=>t.toJson()),flags:this.FLAGS}}static fromJson(t,e){if(!Array.isArray(e?.operands)||typeof e?.operator!="string"||!this.regexes.some(s=>new RegExp(s.regex||s.test||s).test(` ${e.operator} `)))return;let r=new this(t).withFlag(...e.flags||[]);return r.assert(e.operator,...e.operands),r}stringify(){let t=this.OPERANDS.slice(0),e=[t.shift(),this.OPERATOR.toUpperCase()],r=t;return this.OPERATOR==="IN"?e.push(`(${r.join(", ")})`):/BETWEEN/i.test(this.OPERATOR)?e.push(`(${r.join(" AND ")})`):e.push(`${r.join(" ")}`),e.filter(s=>s).join(" ")}static parse(t,e,r){let{tokens:[s,i=""],matches:[n]}=m.lex(e,this.regexes,{useRegex:"i"});if(!n)return;let o=n.trim().toUpperCase(),f=[s];return o==="IN"?f.push(...m.split(w(i.trim(),"(",")"),[","])):/BETWEEN/.test(o)?f.push(...m.split(i,[" AND "])):i&&f.push(i),new this(t,o,...f.map(c=>r(t,c.trim())))}static regexes=[{test:"<(?!~)"},{backtest:"^(?!.*~$)",test:">",regex:"(?<!~)>"},"((\\s+(?:NOT\\s+)?IS\\s+(?:NOT\\s+)?(TRUE|FALSE|NULL|UNKNOWN|DISTINCT\\s+FROM\\s+))|\\s+(ISNULL|NOTNULL|IN|ANY|LIKE|(?:NOT\\s+)?BETWEEN(?:\\s+SYMMETRIC)?)\\s+|(?:\\s+)?(=|<=|>=|!=|<>)(?:\\s+)?)"]};var Jt=class extends T{OFFSET;constructor(t,e){super(t),this.OFFSET=parseInt(e)}$var(t){this.OFFSET=t}$bind(t,e){this.OFFSET=t;let r=this.$trace("get:node:statement.bindings");r?.push(e),this.OFFSET===0&&(this.OFFSET=r?.length)}toJson(){return{offset:this.OFFSET}}static fromJson(t,e){if(typeof e?.offset=="number")return new this(t,e.offset)}stringify(){return this.params.dialect==="mysql"?"?":"$"+this.OFFSET}static parse(t,e){let r=(t?.params?.inputDialect||t?.params?.dialect)==="mysql"?"?":"$",[s,i]=new RegExp(`^\\${r}(\\d)$`).exec(e)||[];if(s)return new this(t,parseInt(i))}};var pt=class extends T{VALUE;true(){return this.VALUE=!0,this}false(){return this.VALUE=!1,this}null(){return this.VALUE=null,this}sql(t){return this.VALUE=t,this}toJson(){return this.VALUE}static fromJson(t,e){let r=new this(t);return e==!0?r.true():e==!1?r.false():e==null?r.null():r.sql(e)}stringify(){return`${this.VALUE}`}static parse(t,e){let r=new this(t);return/^TRUE$/i.test(e)?r.true():/^FALSE$/i.test(e)?r.false():/^NULL$/i.test(e)?r.null():r.sql(e)}};var Q=class extends T{NAME;$NAME;KEEP;static get WRITABLE_PROPS(){return["NAME"]}static get SUBTREE_PROPS(){return[]}get WRITABLE_PROPS(){return this.constructor.WRITABLE_PROPS}get SUBTREE_PROPS(){return this.constructor.SUBTREE_PROPS}name(t){return arguments.length?(this[this.smartKey("NAME",!0)]=t,this):this[this.smartKey("NAME")]}diffWith(t){typeof t.keep()=="boolean"&&this.keep(t.keep()),t.name()!==this.name()&&this.name(t.name())}smartKey(t,e=!1){if(this.keep()===!0)return e||Be(this[`$${t}`])?`$${t}`:t;if(this.keep()===!1){if(e)throw new Error(`Cannot alter ${this.constructor.name} after having been dropped.`);return t}return t}hardSet(...t){let e=t.pop();if(t.length){let i=t[0],n=()=>{if(this.keep()===!1)throw new Error(`Diffing cannot be done on a node ${this.constructor.name} after having been dropped.`);return typeof this.keep()!="boolean"&&this.keep(!0),e(i)};return typeof this.CONTEXT?.hardSet=="function"?this.CONTEXT.hardSet(i,n):Be(i)?n():void 0}let r=this.KEEP;this.KEEP=null;let s=e();return this.KEEP=r,s}keep(t,e=!1){if(!arguments.length)return this.KEEP;if(![void 0,!0,!1].includes(t))throw new Error(`Status can only be true, false, or undefined. Received: ${t}`);if(this.KEEP=t,e)for(let r of this.SUBTREE_PROPS.reduce((s,i)=>[...s,...this[i]],[]))t!==!0?r.keep(void 0,!0):r.keep(e==="auto"?r.keep():!0,e);return this}drop(){return this.keep(!1)}dropped(){return this.keep()===!1||this.CONTEXT?.dropped?.()}reverseAlt(t=!1){if(this.keep()===!0){for(let e of this.WRITABLE_PROPS)if(Be(this[`$${e}`])){let r=this[e];this[e]=this[`$${e}`],this[`$${e}`]=r}}else this.keep()===!1?this.keep(void 0):typeof this.keep()!="boolean"&&this.keep(!1);if(t)for(let e of this.SUBTREE_PROPS.reduce((r,s)=>[...r,...this[s]],[]))e.reverseAlt(t)}isSame(t,e,r=null){if(typeof t=="string"&&typeof e=="string"&&r==="ci")return t.toLowerCase()===e.toLowerCase();if(t===e)return!0;if(Array.isArray(t)&&Array.isArray(e)&&t.length===e.length){let i=e.slice(0).sort();return t.slice(0).sort().every((n,o)=>this.isSame(n,i[o],r))}let s={};return typeof t=="object"&&t&&typeof e=="object"&&e&&(s.keys_a=Object.keys(t)).length===(s.keys_b=Object.keys(e)).length?s.keys_a.reduce((i,n)=>i&&this.isSame(t[n],e[n],r),!0):!1}toJson(){return{...this.NAME?{name:this.NAME}:{},...this.$NAME?{$name:this.$NAME}:{},...typeof this.KEEP=="boolean"?{keep:this.KEEP}:{},...this.FLAGS.length?{flags:[...this.FLAGS]}:{}}}static fromJson(t,e,r=null){if(e?.name&&typeof e.name!="string"||e.$name&&typeof e.$name!="string")return;let s=r?r():new this(t);return s.hardSet(()=>s.name(e.name)),s.hardSet(e.$name,i=>s.name(i)),typeof e.keep=="boolean"&&s.keep(e.keep),e.flags&&s.withFlag(...e.flags),s}},Be=u=>Array.isArray(u)?u.length:typeof u=="object"&&u?Object.keys(u).length:![void 0,null,""].includes(u);var Ft=class extends Q{NAME;$NAME;KEEP;$trace(t,...e){return t==="get:node:schema"?this:super.$trace(t,...e)}name(t){return arguments.length?(this.build(this.smartKey("NAME",!0),[t],S,"name"),this):this[this.smartKey("NAME")]}diffWith(t){typeof t.keep()=="boolean"&&this.keep(t.keep()),this.isSame(t.name().toJson(),this.name().toJson())||this.name(t.name().toJson())}toJson(){return{name:this.NAME.toJson(),...this.$NAME?{$name:this.$NAME.toJson()}:{},...typeof this.KEEP=="boolean"?{keep:this.KEEP}:{},...this.FLAGS.length?{flags:[...this.FLAGS]}:{}}}static fromJson(t,e,r=null){if(!e?.name||!S.fromJson({},e.name))return;let s=r?r():new this(t);return s.hardSet(()=>s.name(e.name)),s.hardSet(e.$name,i=>s.name(i)),typeof e.keep=="boolean"&&s.keep(e.keep),e.flags&&s.withFlag(...e.flags),s}};var F=class extends T{get CLAUSE(){return this.constructor.CLAUSE}KIND;constructor(t,e){super(t),this.KIND=e}toJson(){return{clause:this.CLAUSE,...this.KIND?{kind:this.KIND}:{},...super.toJson()}}static fromJson(t,e){if(!(e?.clause&&e.clause!==this.CLAUSE||e?.kind&&!this.KINDS.includes(e.kind)))return new this(t,e.kind).withFlag(...e.flags||[])}static KINDS=[]};var It=u=>class extends u{$trace(t,...e){if(t==="get:node:statement")return this;if(t==="get:name:table"&&this.KIND==="TABLE")return this.NAME.NAME;if(t==="get:name:database"){if(["SCHEMA","DATABASE"].includes(this.KIND))return this.NAME.NAME;if(this.KIND==="TABLE"&&this.NAME.BASENAME)return this.NAME.BASENAME}return super.$trace(t,...e)}name(t=void 0){return arguments.length?(this.build("NAME",[t],S),this):this.NAME}};var Ot=class extends F{NAME;ARGUMENT;name(t=void 0){return arguments.length?(this.NAME=t,this):this.NAME}argument(t=void 0){return arguments.length?(this.ARGUMENT=t,this):this.ARGUMENT}toJson(){return{name:this.NAME,argument:this.ARGUMENT,...super.toJson()}}static fromJson(t,e){if(!(e?.kind&&typeof e.name!="string"||typeof e?.argument!="string"))return super.fromJson(t,e)?.name(e.name).argument(e.argument)}stringify(){return`${this.CLAUSE}${this.KIND?` ${this.KIND}`:""}${this.NAME?` ${this.autoEsc(this.NAME)}`:""} TO ${this.autoEsc(this.ARGUMENT)}`}static parse(t,e){let[r,s="",i,,n,o,,f]=new RegExp(`^${this.CLAUSE}\\s+(?:(${this.KINDS.map(l=>l).join("|")})\\s+)?(?:(?:(\\w+)|([\`"])((?:\\3\\3|[^\\3])+)\\3)\\s+)?(?:TO|AS)\\s+(?:(\\w+)|([\`"])((?:\\6\\6|[^\\6])+)\\6)$`,"i").exec(e.trim())||[];if(!r)return;let c=new this(t,s.replace(/\s+/g,"_").toUpperCase());return(i||n)&&c.name(i||this.autoUnesc(c,n)),c.argument(o||this.autoUnesc(c,f)),c}static get CLAUSE(){return"RENAME"}static KINDS=["COLUMN","CONSTRAINT","INDEX","KEY"]};var x=class extends Q{static get WRITABLE_PROPS(){return["TYPE"].concat(super.WRITABLE_PROPS)}static get TYPE(){return ee(this.name.replace(/TABLE|COLUMN|CONSTRAINT|CLAUSE/ig,""),"_").toUpperCase()}get TYPE(){return this.constructor.TYPE}toJson(){return{type:this.TYPE,...super.toJson()}}static fromJson(t,e,r=null){if(e?.type===this.TYPE)return super.fromJson(t,e,r)}stringify(){return this.TYPE==="AUTO_INCREMENT"?this.TYPE:`${this.stringifyName()}${this.TYPE.replace("_"," ")}`}static parse(t,e){let{name:r,expr:s}=this.parseName(t,e,!0);if(!(!s||!new RegExp(`^${this.TYPE==="AUTO_INCREMENT"?this.TYPE:this.TYPE.replace("_","\\s+")}$`,"i").test(s)))return new this(t).name(r)}stringifyName(){return this.name()?`CONSTRAINT ${this.autoEsc(this.name())} `:""}static parseName(t,e,r=!1){let i=`(?:CONSTRAINT(?:\\s+(\\w+)|\\s+(${this.getEscChar(t,r)})((?:\\2\\2|[^\\2])+)\\2)\\s+)?`,[,n,,o,f=""]=e.match(new RegExp(`^${i}([\\s\\S]+)$`,"i"))||[];return{name:n||this.autoUnesc(t,o),expr:f.trim()}}};var Bt=class extends x{static get TYPE(){return"AUTO_INCREMENT"}stringify(){return this.params.dialect!=="mysql"?new Et(this.CONTEXT).stringify():"AUTO_INCREMENT"}};var Et=class extends x{ALWAYS;$ALWAYS;static get WRITABLE_PROPS(){return["ALWAYS"].concat(super.WRITABLE_PROPS)}always(t){return arguments.length?(this[this.smartKey("ALWAYS",!0)]=!!t,this):this[this.smartKey("ALWAYS")]}diffWith(t){return super.diffWith(t),t.always()!==this.always()&&this.always(t.always()),this}toJson(){return{always:!!this.ALWAYS,...typeof this.$ALWAYS=="boolean"?{$always:this.$ALWAYS}:{},...super.toJson()}}static fromJson(t,e){return super.fromJson(t,e,()=>{let r=new this(t).always(e.always);return r.hardSet(e.$always,s=>r.always(s)),r})}stringify(){return this.params.dialect==="mysql"?new Bt(this.CONTEXT).stringify():`GENERATED ${this.always()?"ALWAYS":"BY DEFAULT"} AS IDENTITY`}static parse(t,e){let{name:r,expr:s}=this.parseName(t,e,!0);if(!(!s||!(s=s.match(new RegExp("^GENERATED\\s+(ALWAYS|BY[ ]+DEFAULT)(?:\\s+AS\\s+IDENTITY)?$","i"))?.[1])))return new this(t).name(r).always(/^ALWAYS$/i.test(s))}};var b=class extends x{columns(){return"COLUMNS"in this?[]:[this.CONTEXT.name()]}toJson(){let t={type:this.TYPE,...super.toJson()};return!("name"in t)&&this.params.dialect!=="mysql"&&(t={...t,name:void 0}),t}static fromJson(t,e,r=null){if(e?.type===this.TYPE)return!("name"in e)&&t?.params?.dialect!=="mysql"&&(e={...e,name:`auto_name_${(0|Math.random()*9e6).toString(36)}`}),super.fromJson(t,e,r)}static parseColumns(t,e,r=!1){return m.split(w(e,"(",")"),[","]).map(s=>this.parseIdent(t,s.trim(),r)[0])}};var Yt=class extends b{};var Xt=u=>class extends u{COLUMNS=[];$COLUMNS=[];static get WRITABLE_PROPS(){return["COLUMNS"].concat(super.WRITABLE_PROPS)}columns(t){return arguments.length?(this[this.smartKey("COLUMNS",!0)]=[].concat(t),this):this[this.smartKey("COLUMNS")]}diffWith(t){return super.diffWith(t),this.isSame(t.columns(),this.columns())||this.columns(t.columns()),this}toJson(){return{columns:this.COLUMNS,...this.$COLUMNS.length?{$columns:this.$COLUMNS}:{},...super.toJson()}}static fromJson(t,e){if(e?.columns?.length)return super.fromJson(t,e,()=>{let r=new this(t).columns(e.columns);return r.hardSet(e.$columns,s=>r.columns(s)),r})}stringify(){return this.TYPE==="FOREIGN_KEY"?super.stringify():`${super.stringify()} (${this.autoEsc(this.columns()).join(", ")})`}static parse(t,e,r){if(this.TYPE==="FOREIGN_KEY")return super.parse(t,e,r);let[s,i]=m.split(e,[]),n=super.parse(t,s.trim(),r);if(n)return n.columns(this.parseColumns(t,i))}};var Ct=class extends Xt(Yt){};var rt=class extends b{TARGET_TABLE;$TARGET_TABLE;TARGET_COLUMNS=[];$TARGET_COLUMNS=[];MATCH_RULE;$MATCH_RULE;UPDATE_RULE;$UPDATE_RULE;DELETE_RULE;$DELETE_RULE;static get WRITABLE_PROPS(){return["TARGET_TABLE","TARGET_COLUMNS","MATCH_RULE","UPDATE_RULE","DELETE_RULE"].concat(super.WRITABLE_PROPS)}targetTable(t){return arguments.length?(this.build(this.smartKey("TARGET_TABLE",!0),[t],S,"name"),this):this[this.smartKey("TARGET_TABLE")]}targetColumns(t){return arguments.length?(this[this.smartKey("TARGET_COLUMNS",!0)]=[].concat(t),this):this[this.smartKey("TARGET_COLUMNS")]}matchRule(t){return arguments.length?(this[this.smartKey("MATCH_RULE",!0)]=t,this):this[this.smartKey("MATCH_RULE")]}updateRule(t){return arguments.length?(this[this.smartKey("UPDATE_RULE",!0)]=t,this):this[this.smartKey("UPDATE_RULE")]}deleteRule(t){return arguments.length?(this[this.smartKey("DELETE_RULE",!0)]=t,this):this[this.smartKey("DELETE_RULE")]}diffWith(t){return super.diffWith(t),this.isSame(t.targetTable(),this.targetTable())||this.targetTable(t.targetTable()),this.isSame(t.targetColumns(),this.targetColumns())||this.targetColumns(t.targetColumns()),this.isSame(t.matchRule(),this.matchRule())||this.matchRule(t.matchRule()),this.isSame(t.updateRule(),this.updateRule())||this.updateRule(t.updateRule()),this.isSame(t.deleteRule(),this.deleteRule())||this.deleteRule(t.deleteRule()),this}toJson(){return{targetTable:this.TARGET_TABLE.toJson(),...this.$TARGET_TABLE?{$targetTable:this.$TARGET_TABLE.toJson()}:{},targetColumns:this.TARGET_COLUMNS,...this.$TARGET_COLUMNS.length?{$targetColumns:this.$TARGET_COLUMNS}:{},...this.MATCH_RULE?{matchRule:this.MATCH_RULE}:{},...this.$MATCH_RULE?{$matchRule:this.$MATCH_RULE}:{},...this.UPDATE_RULE?{updateRule:this.UPDATE_RULE}:{},...this.$UPDATE_RULE?{$updateRule:this.$UPDATE_RULE}:{},...this.DELETE_RULE?{deleteRule:this.DELETE_RULE}:{},...this.$DELETE_RULE?{$deleteRule:this.$DELETE_RULE}:{},...super.toJson()}}static fromJson(t,e,r=null){if(!(!e?.targetTable||!e.targetColumns?.length))return super.fromJson(t,e,()=>{let s=r?r():new this(t);return s.hardSet(()=>s.targetTable(e.targetTable)),s.hardSet(()=>s.targetColumns(e.targetColumns)),s.hardSet(()=>s.matchRule(e.matchRule)),s.hardSet(()=>s.updateRule(e.updateRule)),s.hardSet(()=>s.deleteRule(e.deleteRule)),s.hardSet(e.$targetTable,i=>s.targetTable(i)),s.hardSet(e.$targetColumns,i=>s.targetColumns(i)),s.hardSet(e.$matchRule,i=>s.matchRule(i)),s.hardSet(e.$updateRule,i=>s.updateRule(i)),s.hardSet(e.$deleteRule,i=>s.deleteRule(i)),s})}stringify(){let t=this.targetTable();if(!t.BASENAME){let s=this.$trace("get:name:database");t=t.clone().name([s,t.NAME])}let e=`${this.stringifyName()}REFERENCES ${t} (${this.autoEsc(this.targetColumns()).join(", ")})`,r=s=>typeof s=="object"&&s?`${s.rule} (${s.columns.join(", ")})`:s;return this.matchRule()&&(e+=` MATCH ${this.matchRule()}`),this.updateRule()&&(e+=` ON UPDATE ${r(this.updateRule())}`),this.deleteRule()&&(e+=` ON DELETE ${r(this.deleteRule())}`),e}static parse(t,e){let{name:r,expr:s}=this.parseName(t,e,!0);if(!s||!(s=s.match(/^REFERENCES\s+([\s\S]+)$/i)?.[1]))return;let[i,n,o=""]=m.split(s,[]),[f,c]=this.parseIdent(t,i.trim(),!0),l=m.split(w(n,"(",")"),[","]).map(p=>this.parseIdent(t,p.trim(),!0)[0]),h=(p,E)=>{if(E==="MATCH")return p.match(/MATCH\s+(\w+)/i)?.[1];let A=/(NO\s+ACTION|RESTRICT|CASCADE|(SET\s+NULL|SET\s+DEFAULT)(?:\s+\(([^\)]+)\))?)/,[,N,d,_]=p.match(new RegExp(`ON\\s+${E}\\s+${A.source}`,"i"))||[];return d?_?{rule:d,columns:_.split(",").map(g=>g.trim())}:d:N};return new this(t).name(r).targetTable(c?[c,f]:f).targetColumns(l).matchRule(h(o,"MATCH")).updateRule(h(o,"UPDATE")).deleteRule(h(o,"DELETE"))}};var ut=class extends Xt(rt){stringify(){let t=this.stringifyName(),e=this.NAME,r=this.$NAME;this.NAME=null,this.$NAME=null;let s=`${t}FOREIGN KEY (${this.autoEsc(this.columns()).join(", ")}) ${super.stringify()}`;return this.NAME=e,this.$NAME=r,s}static parse(t,e,r){let{name:s="",expr:i}=this.parseName(t,e,!0);if(!i||!/^FOREIGN\s+KEY/i.test(i))return;let[,n,...o]=m.split(i,[]);return super.parse(t,o.join("").trim(),r).name(s).columns(this.parseColumns(t,n))}};var vt=class extends b{stringify(){return`${this.stringifyName()}UNIQUE`}static parse(t,e){let{name:r,expr:s}=this.parseName(t,e,!0);if(!(!s||!/^UNIQUE(\s+KEY)?$/i.test(s)))return new this(t).name(r)}};var yt=class extends Xt(vt){};var $t=u=>class extends u{EXPR;$EXPR;static get WRITABLE_PROPS(){return["EXPR"].concat(super.WRITABLE_PROPS)}expr(t){return arguments.length?(this[this.smartKey("EXPR",!0)]=t,this):this[this.smartKey("EXPR")]}diffWith(t){return super.diffWith(t),t.expr()!==this.expr()&&this.expr(t.expr()),this}toJson(){return{expr:this.EXPR,...[void 0,null].includes(this.$EXPR)?{}:{$expr:this.$EXPR},...super.toJson()}}static fromJson(t,e){if(![void 0,null].includes(e?.expr))return super.fromJson(t,e,()=>{let r=new this(t).expr(e.expr);return r.hardSet(e.$expr,s=>r.expr(s)),r})}stringify(){return`${super.stringify()} (${this.expr()})`}static parse(t,e){let{name:r,expr:s}=this.parseName(t,e,!0);return!s||!(s=s.match(new RegExp(`^${this.TYPE.replace(/_/g,"\\s+")}\\s+([\\s\\S]+)$`,"i"))?.[1])?void 0:new this(t).expr(D(s.trim(),"(",")")?w(s.trim(),"(",")"):s).name(r)}};var st=class extends $t(b){};var X=class extends Q{TYPE;$TYPE;COLUMNS=[];$COLUMNS=[];static get WRITABLE_PROPS(){return["TYPE","COLUMNS"].concat(super.WRITABLE_PROPS)}type(t){return arguments.length?(this[this.smartKey("TYPE",!0)]=t,this):this[this.smartKey("TYPE")]}columns(t){return arguments.length?(this[this.smartKey("COLUMNS",!0)]=[].concat(t),this):this[this.smartKey("COLUMNS")]}diffWith(t){return super.diffWith(t),this.isSame(this.type(),t.type())||this.type(t.type()),this.isSame(this.columns(),t.columns())||this.columns(t.columns()),this}toJson(){return{type:this.TYPE,...this.$TYPE?{$type:this.$TYPE}:{},columns:this.COLUMNS,...this.$COLUMNS.length?{$columns:this.$COLUMNS}:{},...super.toJson()}}static fromJson(t,e){if(!(typeof e?.type!="string"||!/^(INDEX|KEY|FULLTEXT)$/i.test(e.type)||!e.columns?.length))return super.fromJson(t,e,()=>{let r=new this(t).columns(e.columns).type(e.type);return r.hardSet(e.$columns,s=>r.columns(s)),r.hardSet(e.$type,s=>r.type(s)),r})}stringify(){return`${this.type()}${this.name()?` ${this.name()}`:""} (${this.columns().join(", ")})`}static parse(t,e){let[r,s,i]=/^((?:(?:FULLTEXT|SPATIAL)(?:\s+INDEX|\s+KEY)?)|(?:INDEX|KEY))([\s\S]+)$/i.exec(e)||[];if(!r)return;let[n,o]=m.split(i,[]),[f]=this.parseIdent(t,n.trim(),!0),c=m.split(w(o,"(",")"),[","]).map(l=>this.parseIdent(t,l.trim(),!0)[0]);return new this(t).type(s.replace(/\s+(INDEX|KEY)/i,"").toUpperCase()).columns(c).name(f)}};var re=class extends $t(x){STORED;$STORED;static get WRITABLE_PROPS(){return["STORED"].concat(super.WRITABLE_PROPS)}stored(t){return arguments.length?(this[this.smartKey("STORED",!0)]=!!t,this):this[this.smartKey("STORED")]}diffWith(t){return super.diffWith(t),t.stored()!==this.stored()&&this.stored(t.stored()),this}toJson(){return{stored:!!this.STORED,...typeof this.$STORED=="boolean"?{$stored:this.$STORED}:{},...super.toJson()}}static fromJson(t,e){return super.fromJson(t,e,()=>{let r=new this(t).stored(e.stored);return r.hardSet(e.$stored,s=>r.stored(s)),r})}stringify(){return`GENERATED ALWAYS AS (${this.expr()})${this.stored()?" STORED":""}`}static parse(t,e){let r,{name:s,expr:i}=this.parseName(t,e,!0);if([,i,r=""]=i.match(new RegExp("^GENERATED\\s+ALWAYS\\s+AS\\s+\\(([\\s\\S]+)\\)(?:\\s+(VIRTUAL|STORED))?$","i"))||[],!!i)return new this(t).name(s).expr(i).stored(/^STORED$/i.test(r))}};var se=class extends $t(x){};var ie=class extends x{};var ne=class extends $t(x){};var oe=class extends x{};var W=class extends T{SPEC=[];constructor(t,e){super(t),this.SPEC=e}toJson(){return this.SPEC.length===1?this.SPEC[0]:this.SPEC}static fromJson(t,e){let r=[].concat(e);if(typeof r[0]!="string")return;let[s,i,n]=Ve.call(this,r[0]);if(s)return new this(t,qe(s,...i.split(","),...n,...r.slice(1)))}stringify(){let[t,e]=this.SPEC.slice(1).reduce(([r,s],i)=>/^\d+$/.test(i)?[r.concat(i),s]:[r,s.concat(i)],[[],[]]);return`${this.SPEC[0]}${t.length?`(${t.join(",")})`:""}${e.length?` ${e.join(" ")}`:""}`}static parse(t,e){let[r,s,i]=Ve.call(this,e);if(r)return new this(t,qe(r,...s.split(","),...i))}static pgFixedTypesRe=/^(bigint|int8|bigserial|serial8|boolean|bool|box|bytea|cidr|circle|date|double\s+precision|float8|inet|integer|int|int4|jsonb|json|line|lseg|macaddr8|macaddr|money|path|pg_lsn|pg_snapshot|point|polygon|real|float4|smallint|int2|smallserial|serial2|serial4|serial|text|timetz|timestamptz|tsquery|tsvector|txid_snapshot|uuid|xml)$/;static pgVariableTypesRe=/^(bit\s+varying|bit|varbit|character\s+varying|character|char|varchar|interval|numeric|timestamp|time)(?:\s+)?(?:\(([\d, ]+)\))?(\s+(?:with|without)\s+time\s+zone)?$/;static myFixedTypesRe=/^(tinyint|smallint|mediumint|enum|set|tinyblob|mediumblob|longblob|geometry|longstring|geometrycollection|multilinestring|multipoint|multipolygon)$/;static myVariableTypesRe=/^(float|decimal|double|tinytext|mediumtext|longtext|binary|varbinary|blob)(?:\s+)?(?:\(([\d, ]+)\))?$/};function Ve(u){let t,e,r;for(let s of["pgFixedTypesRe","pgVariableTypesRe","myFixedTypesRe","myVariableTypesRe"])if([,t,e="",...r]=u.match(new RegExp(this[s].source,"i"))||[],t)break;return[t,e,r]}function qe(...u){return u.map(t=>/^\d+$/.test(t)?parseFloat(t):t?.trim().replace(/\s+/," ").toUpperCase()).filter(t=>t)}var B=class extends Q{TYPE;$TYPE;CONSTRAINTS=[];static get WRITABLE_PROPS(){return["TYPE"].concat(super.WRITABLE_PROPS)}static get SUBTREE_PROPS(){return["CONSTRAINTS"]}static CONSTRAINT_TYPES=[Bt,Et,re,se,ie,oe,ne,Yt,rt,vt,st];type(t){return arguments.length?(this.build(this.smartKey("TYPE",!0),[t],W),this):this[this.smartKey("TYPE")]}autoIncrement(...t){return this.constraint("AUTO_INCREMENT",...t)}identity(...t){return this.constraint("IDENTITY",...t)}expression(...t){return this.constraint("EXPRESSION",...t)}default(...t){return this.constraint("DEFAULT",...t)}notNull(...t){return this.constraint("NOT_NULL",...t)}null(...t){return this.constraint("NULL",...t)}onUpdate(...t){return this.constraint("ON_UPDATE",...t)}primaryKey(...t){return this.constraint("PRIMARY_KEY",...t)}foreignKey(...t){return this.constraint("FOREIGN_KEY",...t)}uniqueKey(...t){return this.constraint("UNIQUE_KEY",...t)}check(...t){return this.constraint("CHECK",...t)}constraint(t,...e){let r,s=i=>this.CONSTRAINTS.find(n=>n.TYPE===i);if(typeof t=="string"){if(r=s(t),e.length){if(e[0]===!1)return r?.drop()}else return r;t={type:t,...typeof e[0]=="object"?e[0]:typeof e[0]=="string"?{expr:e[0]}:{}}}else t instanceof Q||(r=s(t.type));if(r){let i=this.constructor.CONSTRAINT_TYPES.reduce((n,o)=>n||o.fromJson(this,t));r.diffWith(i)}else this.build("CONSTRAINTS",[t],this.constructor.CONSTRAINT_TYPES);return this}diffWith(t){super.diffWith(t);let e=this.type().toJson(),r=t.type().toJson();this.isSame(e,r)||this.type(r);for(let s of["IDENTITY","EXPRESSION","NOT_NULL","NULL","DEFAULT","AUTO_INCREMENT","ON_UPDATE"]){let i=this.constraint(s),n=t.constraint(s);i&&(!n||n.dropped())?i.drop():!i&&n&&!n.dropped()?this.constraint(n.toJson()):i&&n&&i.diffWith(n)}return this}toJson(){let t={type:this.TYPE.toJson(),...this.$TYPE?{$type:this.$TYPE.toJson()}:{}};for(let e of this.CONSTRAINTS){let{type:r,...s}=e.toJson(),i=r==="FOREIGN_KEY"?"references":Fe(r.toLowerCase().replace("_"," ")),n=Object.keys(s),o=n.length===1?s[n[0]]:null,f=n.length?o===!1&&n[0]==="keep"?!1:n.length===1&&n[0]==="expr"?o:s:!0;t={...t,[i]:f}}return{...t,...super.toJson()}}static fromJson(t,e){let{type:r,$type:s,name:i,$name:n,keep:o,...f}=e;if(W.fromJson({},r))return super.fromJson(t,e,()=>{let c=new this(t);c.type(W.fromJson(c,r)),c.hardSet(s,h=>c.type(W.fromJson(c,h)));let l=Object.entries(f).reduce((h,[p,E])=>{if([void 0,null].includes(E))return h;if(!["boolean","number","string"].includes(typeof E)&&!(typeof E=="object"&&E))throw new Error(`Invalid value for constraint "${p}": ${E}`);let A={...E===!1?{keep:!1}:E===!0?{}:["number","string"].includes(typeof E)?{expr:E}:E};return p.startsWith("$")&&(A=Object.fromEntries(Object.entries(A).map(([N,d])=>[`$${N}`,d])),p=p.slice(1)),p==="references"&&(p="foreignKey"),p in h?Object.assign(h[p],A):h[p]=A,h},{});for(let h in l)c.constraint(ee(h,"_").toUpperCase(),l[h]);return c})}stringify(){let t=this.CONSTRAINTS;return this.params.dialect==="mysql"&&(t=t.filter(e=>e.TYPE!=="FOREIGN_KEY")),`${this.autoEsc(this.name())} ${this.type()}${t.length?` ${t.join(" ")}`:""}`}static parse(t,e,r){let[s,i]=m.split(e,["\\s+"],{useRegex:!0,limit:1}),[n]=this.parseIdent(t,s.trim(),!0)||[];if(!n)return;let o=new this(t).name(n),f="(CONSTRAINT\\s+.+?\\s+)?",c=[{test:`${f}(PRIMARY[ ]+KEY|NOT[ ]+NULL|GENERATED|REFERENCES|UNIQUE(?:[ ]+KEY)?|CHECK|AUTO_INCREMENT)`},{backtest:"^(?!.*\\s+(NOT|SET)\\s+$)",test:`${f}NULL`},{backtest:"^(?!.*\\s+BY\\s+$)",test:`${f}DEFAULT`},{backtest:"^(?!.*\\s+REFERENCES\\s+)",test:"ON\\s+UPDATE"}],[l,...h]=m.split(i,c,{useRegex:"i",preserveDelims:!0});o.type(r(o,l.trim(),[W]));for(let p of h){let E=r(o,p,this.CONSTRAINT_TYPES);o.build("CONSTRAINTS",[E],this.CONSTRAINT_TYPES)}return o}};var At=class extends F{ARGUMENT;argument(t=void 0){return arguments.length?(this.build("ARGUMENT",[t],this.constructor.NODE_TYPES),this):this.ARGUMENT}toJson(){return{argument:this.ARGUMENT.toJson(),...super.toJson()}}static fromJson(t,e){if(e?.argument)return super.fromJson(t,e)?.argument(e.argument)}stringify(){let t=[`${this.CLAUSE}${this.KIND&&/^(COLUMN|TABLE|SCHEMA|DATABASE)$/i.test(this.KIND)?` ${this.KIND.replace(/_/g," ")}${this.hasFlag("IF_NOT_EXISTS")?" IF NOT EXISTS":""}`:""} ${this.argument()}`];return this.argument()instanceof B&&(this.hasFlag("AFTER")?t.push(this.getFlag("AFTER")?.replace(":"," ")):this.hasFlag("FIRST")&&t.push("FIRST"),this.params.dialect==="mysql"&&this.argument().foreignKey())?[t.join(" "),`ADD ${ut.fromJson(this,constraint.toJson()).columns([this.argument().name()])}`].join(`;
`):t.join(" ")}static parse(t,e,r){let[s,i="",n,o]=new RegExp(`^${this.CLAUSE}\\s+(?:(${this.KINDS.map(c=>c.replace(/_/g,"\\s+")).join("|")})\\s+)?(IF\\s+NOT\\s+EXISTS\\s+)?([\\s\\S]+)$`,"i").exec(e.trim())||[];if(!s)return;let f=new this(t,i.replace(/\s+/g,"_").toUpperCase());if(n&&f.withFlag("IF_NOT_EXISTS"),!i||/^COLUMN$/i.test(i)){let[,c,l,h]=o.trim().match(/([\s\S]+)\s+(?:(FIRST)|AFTER\s+(.+))$/i)||[,o.trim()];l&&f.withFlag("FIRST"),h&&f.withFlag(`AFTER:${h}`),f.argument(r(f,c,[B]))}else/^TABLE|SCHEMA|DATABASE$/i.test(i)?f.argument(r(f,o,this.NODE_TYPES)):f.argument(r(f,`${i} ${o}`,this.NODE_TYPES));return f}static get CLAUSE(){return"ADD"}static NODE_TYPES=[Et,Ct,ut,yt,st,X,B];static KINDS=["COLUMN","CONSTRAINT","PRIMARY_KEY","FOREIGN_KEY","UNIQUE_KEY","CHECK","FULLTEXT_INDEX","SPATIAL_INDEX","INDEX","KEY"]};var Gt=class extends F{NAME;name(t=void 0){return arguments.length?(this.NAME=t,this):this.NAME}toJson(){return{name:this.NAME,...super.toJson()}}static fromJson(t,e){if(!(!e?.kind&&typeof e?.name!="string"))return super.fromJson(t,e)?.name(e.name)}stringify(){let t=this.getFlag("RESTRICT")||this.getFlag("CASCADE"),e=this.KIND?.replace(/_/g," "),r=this.NAME&&this.autoEsc(this.NAME);return["PRIMARY_KEY","FOREIGN_KEY","CHECK"].includes(this.KIND)&&(this.params.dialect==="mysql"?this.KIND==="PRIMARY_KEY"&&(r=null):e="CONSTRAINT"),`${this.CLAUSE}${e?` ${e}`:""}${this.hasFlag("IF_EXISTS")?" IF EXISTS":""}${r?` ${r}`:""}${t?` ${t}`:""}`}static parse(t,e){let[r,s="",i,n,,o,f]=new RegExp(`^${this.CLAUSE}(?:\\s+(${this.KINDS.map(l=>l.replace(/_/g,"\\s+")).join("|")}))?(\\s+IF\\s+EXISTS)?(?:\\s+(\\w+)|\\s+([\`"])((?:\\4\\4|[^\\4])+)\\4)?(?:\\s+(RESTRICT|CASCADE))?$`,"i").exec(e.trim())||[];if(!r)return;let c=new this(t,s.replace(/\s+/g,"_").toUpperCase());return(n||o)&&c.name(n||this.autoUnesc(c,o)),i&&c.withFlag("IF_EXISTS"),f&&c.withFlag(f),c}static get CLAUSE(){return"DROP"}static KINDS=["COLUMN","CONSTRAINT","PRIMARY_KEY","FOREIGN_KEY","UNIQUE_KEY","CHECK","INDEX","KEY","IDENTITY","EXPRESSION","DEFAULT","NOT_NULL","NULL","AUTO_INCREMENT","ON_UPDATE"]};var St=class extends F{ARGUMENT;argument(t=void 0){return arguments.length?(["DATA_TYPE","TYPE"].includes(this.KIND)?this.build("ARGUMENT",[t],W):this.KIND==="SCHEMA"?this.build("ARGUMENT",[t],S):this.ARGUMENT=t,this):this.ARGUMENT}toJson(){return{argument:this.ARGUMENT?.toJson?.()||this.ARGUMENT,...super.toJson()}}static fromJson(t,e){if(e?.kind)return super.fromJson(t,e)?.argument(e.argument)}stringify(){return this.KIND==="IDENTITY"?`SET GENERATED ${/^ALWAYS$/i.test(this.ARGUMENT)?"AS ALWAYS":"BY DEFAULT"}`:`${this.CLAUSE} ${this.KIND.replace(/_/g," ")}${this.ARGUMENT?` ${this.ARGUMENT}`:""}`}static parse(t,e,r){let[s,i,n]=new RegExp(`^${this.CLAUSE}\\s+(${this.KINDS.map(c=>c==="IDENTITY"?"GENERATED":c.replace(/_/g,"\\s+")).join("|")})(?:\\s+([\\s\\S]+))?$`,"i").exec(e.trim())||[];if(!s)return;let o=/^GENERATED$/i.test(i),f=new this(t,o?"IDENTITY":i.replace(/\s+/g,"_").toUpperCase());return/^(DATA\s+)?TYPE$/i.test(i)?f.argument(r(f,n,[W])):/^SCHEMA$/i.test(i)?f.argument(r(f,n,[S])):f.argument(o?/^AS\s+ALWAYS$/i.test(n)?"always":!0:n),f}static get CLAUSE(){return"SET"}static KINDS=["SCHEMA","DATA_TYPE","TYPE","IDENTITY","DEFAULT","NOT_NULL","NULL","AUTO_INCREMENT","ON_UPDATE"]};var Tt=class extends F{ARGUMENT;argument(t){return arguments.length?(this.build("ARGUMENT",[t],this.constructor.NODE_TYPES),this):this.ARGUMENT}toJson(){return{argument:this.ARGUMENT.toJson(),...super.toJson()}}static fromJson(t,e){if(!(!e?.kind||!e.argument))return super.fromJson(t,e)?.argument(e.argument)}stringify(){return`${this.CLAUSE} ${this.KIND} ${this.ARGUMENT}`}static parse(t,e,r){let[s,i,n]=new RegExp(`^${this.CLAUSE}\\s+(${this.KINDS.map(f=>f).join("|")})\\s+([\\s\\S]+)$`,"i").exec(e.trim())||[];if(!s)return;let o=new this(t,i.toUpperCase());return o.argument(r(o,n,this.NODE_TYPES)),o}static get CLAUSE(){return"MODIFY"}static NODE_TYPES=[B];static KINDS=["COLUMN"]};var ae=class extends Tt{NAME;name(t=void 0){return arguments.length?(this.NAME=t,this):this.NAME}add(t,e){return this.argument({clause:"ADD",kind:t,argument:e})}drop(t){return this.argument({clause:"DROP",kind:t})}set(t,e){return this.argument({clause:"SET",kind:t,argument:e})}toJson(){return{name:this.NAME,...super.toJson()}}static fromJson(t,e){if(typeof e?.name=="string")return super.fromJson(t,e)?.name(e.name)}stringify(){return`${this.CLAUSE} ${this.KIND} ${this.autoEsc(this.NAME)} ${this.ARGUMENT}`}static parse(t,e,r){let[s,i,n,,o,f]=new RegExp(`^${this.CLAUSE}\\s+(${this.KINDS.map(l=>l).join("|")})\\s+(?:(\\w+)|([\`"])((?:\\3\\3|[^\\3])+)\\3)?\\s+([\\s\\S]+)$`,"i").exec(e.trim())||[];if(!s)return;let c=new this(t,i.toUpperCase());return c.name(n||this.autoUnesc(c,o)),/^(DATA\+)?TYPE\s+/i.test(f)?c.argument(r(c,`SET ${f}`,[St])):c.argument(r(c,f,this.NODE_TYPES)),c}static get CLAUSE(){return"ALTER"}static NODE_TYPES=[At,Gt,St,pt];static KINDS=["COLUMN","CONSTRAINT","INDEX"]};var ue=class extends Tt{NAME;name(t=void 0){return arguments.length?(this.NAME=t,this):this.NAME}toJson(){return{name:this.NAME,...super.toJson()}}static fromJson(t,e){if(typeof e?.name=="string")return super.fromJson(t,e)?.name(e.name)}stringify(){let t=[`${this.CLAUSE} ${this.KIND} ${this.autoEsc(this.NAME)} ${this.ARGUMENT}`];return this.hasFlag("AFTER")?t.push(this.getFlag("AFTER")?.replace(":"," ")):this.hasFlag("FIRST")&&t.push("FIRST"),t.join(" ")}static parse(t,e,r){let[s,i,n,,o,f]=new RegExp(`^${this.CLAUSE}\\s+(${this.KINDS.map(E=>E).join("|")})\\s+(?:(\\w+)|([\`"])((?:\\3\\3|[^\\3])+)\\3)?\\s+([\\s\\S]+)$`,"i").exec(e.trim())||[];if(!s)return;let c=new this(t,i.toUpperCase());c.name(n||this.autoUnesc(c,o));let{tokens:[l,h],matches:p}=m.lex(f,["FIRST","AFTER"],{useRegex:"i"});return c.argument(r(c,l,this.NODE_TYPES)),h?c.withFlag(`AFTER:${h}`):p.length&&c.withFlag("FIRST"),c}static get CLAUSE(){return"CHANGE"}};var V=class extends It(F){NAME;ACTIONS=[];SUBTREE=[];get length(){return this.ACTIONS.length+this.SUBTREE.length}action(...t){return arguments.length?(this.build("ACTIONS",t,this.constructor.NODE_TYPES),this):this.ACTIONS[this.ACTIONS.length-1]}create(t,e){return this.action({clause:"CREATE",kind:t,argument:e})}rename(t,e,r){return this.action({clause:"RENAME",kind:t,name:e,argument:r})}modify(t,e){return this.action({clause:"MODIFY",kind:t,argument:e})}change(t,e,r){return this.action({clause:"CHANGE",kind:t,name:e,argument:r})}alter(t,e,r){return this.action({clause:"ALTER",kind:t,name:e,argument:r})}add(t,e){return this.action({clause:"ADD",kind:t,argument:e})}drop(t,e){return this.action({clause:"DROP",kind:t,name:e})}set(t,e){return this.action({clause:"SET",kind:t,argument:e})}toJson(){return{name:this.NAME.toJson(),actions:this.ACTIONS.map(t=>t.toJson()),...super.toJson()}}static fromJson(t,e){if(!e?.kind||!e.name||!Array.isArray(e.actions))return;let r=super.fromJson(t,e)?.name(e.name);return r.action(...e.actions),r}stringify(){if(!this.length)return"";let t=c=>{if(c.BASENAME||["SCHEMA","DATABASE"].includes(this.KIND))return c;let l=this.$trace("get:name:database");return c.clone().name([l,c.NAME])},[e,r,s,i]=this.ACTIONS.reduce(([c,l,h,p],E)=>E instanceof Ot?E.KIND?[c,l.concat(E),h,p]:[c,l,E,p]:E instanceof St&&E.KIND==="SCHEMA"?[c,l,h,E]:[c.concat(E),l,h,p],[[],[]]),n=c=>`${this.CLAUSE} ${this.KIND}${this.hasFlag("IF_EXISTS")?" IF EXISTS":""} ${c}`,o=[...this.SUBTREE],f=t(this.name());e.length&&o.push(`${n(f)}
	${e.join(`,
	`)}`);for(let c of r.concat(s||[]))o.push(`${n(f)} ${c}`);return i&&o.push(`${n(s&&t(S.fromJson(this,s.ARGUMENT))||f)} ${i}`),o.join(`;
`)}static parse(t,e,r){let[s,i,n,o]=new RegExp(`^${this.CLAUSE}\\s+(${this.KINDS.map(h=>h).join("|")})\\s+(?:(IF\\s+EXISTS)\\s+)?([\\s\\S]+)$`,"i").exec(e.trim())||[];if(!s)return;let f=new this(t,i.toUpperCase()),[c,l]=m.split(o,["\\s+"],{useRegex:!0,limit:1});return f.name(r(f,c,[S])),f.action(...m.split(l,[","]).map(h=>r(f,h,this.NODE_TYPES))),n&&f.withFlag("IF_EXISTS"),f}static get CLAUSE(){return"ALTER"}static NODE_TYPES=[Ot,ae,ue,Tt,At,Gt,St];static KINDS=["TABLE","SCHEMA","DATABASE"]};var k=class extends Ft{COLUMNS=[];CONSTRAINTS=[];INDEXES=[];NODES=new Set;static get WRITABLE_PROPS(){return["BASENAME"].concat(super.WRITABLE_PROPS)}static get SUBTREE_PROPS(){return["COLUMNS","CONSTRAINTS","INDEXES"]}static CONSTRAINT_TYPES=[Ct,ut,yt,st];$trace(t,...e){return t==="get:schema:table"?this:t==="get:name:table"?this.NAME.NAME:t==="get:name:database"&&this.NAME.BASENAME?this.NAME.BASENAME:(t==="event:connected"&&[B,b,X].some(r=>e[0]instanceof r)&&this.NODES.add(e[0]),super.$trace(t,...e))}primaryKey(){return[...this.NODES].find(t=>t.TYPE==="PRIMARY_KEY")}column(t){return typeof t=="string"?this.COLUMNS.find(e=>this.isSame(e.name(),t,"ci")):(this.build("COLUMNS",[t],B),this.COLUMNS[this.COLUMNS.length-1])}constraint(t){return typeof t=="string"?this.CONSTRAINTS.find(e=>this.isSame(e.name(),t,"ci")):(this.build("CONSTRAINTS",[t],this.constructor.CONSTRAINT_TYPES),this.CONSTRAINTS[this.CONSTRAINTS.length-1])}index(t){return typeof t=="string"?this.INDEXES.find(e=>this.isSame(e.name(),t,"ci")):(this.build("INDEXES",[t],X),this.INDEXES[this.INDEXES-1])}diffWith(t){super.diffWith(t);let e=(f,c)=>[...f.NODES].find(l=>l.NAME===c),r=f=>[...f.NODES].reduce(([c,l],h)=>[B,b,X].some(p=>h instanceof p)?h.NAME?[c.add(h.NAME),l]:[c,l.add(h)]:[c,l],[new Set,new Set]),[s]=r(this),[i,n]=r(t),o=f=>{if(f instanceof b)if(f.CONTEXT instanceof B){let c=f.CONTEXT.NAME;if(!s.has(c))return;e(this,c).constraint(f.toJson())}else this.constraint(f.toJson());else f instanceof X?this.index(f.toJson()):this.column(f.toJson())};for(let f of new Set([...s,...i])){let c=e(this,f),l=e(t,f);s.has(f)&&!i.has(f)?c.drop():s.has(f)?c.diffWith(l):o(l)}for(let f of n)o(f);return this}alterWith(t){let e=(r,s=!1)=>{let i=[...this.NODES].find(n=>(r.kind==="COLUMN"?n instanceof B:r.kind==="CONSTRAINT"?n instanceof b:n.TYPE===r.kind)&&(r.name?this.isSame(n.NAME,r.name,"ci"):r.kind==="PRIMARY_KEY"));if(!i&&!s)throw new Error(`${r.kind}${r.name?` "${r.name}"`:""} does not exist.`);return i};for(let r of t.ACTIONS)if(r.CLAUSE==="RENAME")r.KIND?e({kind:r.KIND,name:r.name()}).name(r.argument()):this.name([this.name().BASENAME,r.argument()]);else if(r.CLAUSE==="ADD")r.argument()instanceof b?r.argument().columns().length===1?e({kind:"COLUMN",name:r.argument().columns()[0]}).constraint(r.argument().toJson()):this.constraint(r.argument().toJson()):r.argument()instanceof X?this.index(r.argument().toJson()):(!r.hasFlag("IF_NOT_EXISTS")||!e({kind:"COLUMN",name:r.argument().name()},!0))&&this.column(r.argument().toJson());else if(r.CLAUSE==="DROP")e(r.toJson(),r.hasFlag("IF_EXISTS"))?.drop();else if(r.CLAUSE==="SET")r.KIND==="SCHEMA"&&this.name([r.argument(),this.name().NAME]);else if(["CHANGE","MODIFY"].includes(r.CLAUSE))(r.CLAUSE==="CHANGE"?e({kind:"COLUMN",name:r.name()}):e({kind:"COLUMN",name:r.argument().name()})).diffWith(r.argument());else if(r.CLAUSE==="ALTER"){let s=e({kind:r.KIND,name:r.name()},r.hasFlag("IF_EXISTS"));if(!s)continue;let i=r.argument();if(i.CLAUSE==="ADD"){if(i.argument().TYPE==="EXPRESSION")throw new Error("Cannot add EXPRESSION constraint after column creation.");if(s.constraint(i.argument().TYPE))throw new Error(`Constraint ${i.argument().TYPE} already exists on ${s.name()}.`);s.constraint(i.argument())}else if(i.CLAUSE==="DROP"){let n=s.constraint(i.KIND);if(n)n.drop();else if(["IDENTITY","EXPRESSION"].includes(i.KIND)&&!i.hasFlag("IF_EXISTS"))throw new Error(`Cannot drop ${i.KIND}; does not exist.`)}else if(i.CLAUSE==="SET"){if(i.argument()instanceof W)s.type(i.argument().toJson());else if(["DEFAULT","ON_UPDATE"].includes(i.KIND))s.constraint(i.KIND,i.argument());else if(["NOT_NULL","NULL","AUTO_INCREMENT"].includes(i.KIND))s.constraint(i.KIND,!0);else if(i.KIND==="IDENTITY"){let n=s.identity();if(!n)throw new Error(`Cannot modify IDENTITY constraint on ${s.name()}; does not exist.`);n.always(/^ALWAYS$/i.test(i.argument()))}}}return this}getAlt(){let t=V.fromJson(this.CONTEXT,{kind:"TABLE",name:this.NAME.toJson(),actions:[]});this.$NAME&&this.NAME&&(this.isSame(this.$NAME.NAME,this.NAME.NAME,"ci")||t.rename(null,null,this.$NAME.NAME),this.$NAME.BASENAME&&!this.isSame(this.$NAME.BASENAME,this.NAME.BASENAME,"ci")&&t.set("SCHEMA",this.$NAME.BASENAME));let e=(s,i=!1)=>s.keep()!==!0||["$EXPR","$ALWAYS","$TARGET_TABLE","$TARGET_COLUMNS","$MATCH_RULE","$UPDATE_RULE","$DELETE_RULE"].concat(i?"$NAME":[]).some(n=>n in s&&(Array.isArray(s[n])?s[n].length:![void 0,null].includes(s[n]))&&!this.isSame(s[n.slice(1)],s[n],"ci"));for(let s of this.COLUMNS){if(s.keep()===!1){t.drop("COLUMN",s.NAME);continue}if(s.keep()!==!0){t.add("COLUMN",s.clone());continue}if(s.keep()===!0){if(this.params.dialect==="mysql")if(s.$TYPE&&!this.isSame(s.$TYPE.toJson(),s.TYPE.toJson(),"ci")||s.CONSTRAINTS.some(n=>["EXPRESSION","NOT_NULL","NULL","AUTO_INCREMENT","ON_UPDATE"].includes(n.TYPE)&&e(n,!0))){let n=s.clone();n.CONSTRAINTS=n.CONSTRAINTS.filter(o=>!(o instanceof b)),t.modify("COLUMN",n)}else{let n=s.CONSTRAINTS.find(o=>o.TYPE==="DEFAULT"&&e(o,!0));n&&t.alter("COLUMN",s.NAME,o=>{n.keep()===!1?o.drop("DEFAULT"):a.set("DEFAULT",n.expr())}),s.$NAME&&!this.isSame(s.$NAME,s.NAME,"ci")&&t.rename("COLUMN",s.NAME,s.$NAME)}else{s.$TYPE&&!this.isSame(s.$TYPE.toJson(),s.TYPE.toJson(),"ci")&&t.alter("COLUMN",s.NAME,{clause:"SET",kind:"DATA_TYPE",argument:W.fromJson(s,s.$TYPE.toJson())});let n=s.CONSTRAINTS.filter(o=>!(o instanceof b)&&e(o,!0));for(let o of n)t.alter("COLUMN",s.NAME,(()=>{if(o.keep()===!1)return{clause:"DROP",kind:o.TYPE};if(o.TYPE==="EXPRESSION")throw new Error("EXPRESSION constraints cannot be added or modified after column creation.");if(o.TYPE==="IDENTITY")return o.keep()?{clause:"SET",kind:"IDENTITY",argument:o.always()?"ALWAYS":!0}:{clause:"ADD",argument:o.clone()};if(["DEFAULT"].includes(o.TYPE))return{clause:"SET",kind:o.TYPE,argument:o.expr()};if(["NOT_NULL"].includes(o.TYPE))return{clause:"SET",kind:o.TYPE}})());s.$NAME&&!this.isSame(s.$NAME,s.NAME,"ci")&&t.rename("COLUMN",s.NAME,s.$NAME)}let i=s.CONSTRAINTS.filter(n=>n instanceof b);for(let n of i)if(e(n)){if([!0,!1].includes(n.keep())&&t.drop(n.TYPE,n.NAME),n.keep()!==!1){let o=s.$trace("get:schema:table").altsCascaded?s.name():s.NAME,f=this.constructor.CONSTRAINT_TYPES.find(c=>c.TYPE===n.TYPE).fromJson(n.CONTEXT,{...n.toJson(),columns:[o]});t.add(f.TYPE,f)}}else n.keep()===!0&&n.$NAME&&!this.isSame(n.$NAME,n.NAME,"ci")&&t.rename("CONSTRAINT",n.NAME,n.$NAME)}}let r=s=>e(s)||s.$COLUMNS?.length&&!this.isSame(s.$COLUMNS,s.COLUMNS,"ci");for(let s of this.CONSTRAINTS)r(s)?([!0,!1].includes(s.keep())&&t.drop(s.TYPE,s.NAME),s.keep()!==!1&&t.add(s.TYPE,s.clone())):s.keep()===!0&&s.$NAME&&!this.isSame(s.$NAME,s.NAME,"ci")&&t.rename("CONSTRAINT",s.NAME,s.$NAME);return t}cascadeAlt(){this.keep(this.keep(),"auto");let t=r=>r.dropped()?"DOWN":r.$NAME&&!this.isSame(r.$NAME,r.NAME,"ci")?"RENAME":null,e=t(this);for(let r of this.COLUMNS){let s=t(r);if(s)for(let i of this.CONSTRAINTS){if(i instanceof st)continue;let n=i.$COLUMNS.length?i.$COLUMNS:i.COLUMNS,o=n.indexOf(r.NAME);o>-1&&(s==="DOWN"?n.splice(o,1):s==="RENAME"&&(n[o]=r.$NAME))}}return this.altsCascaded=!0,this}updateDatabaseReferences(t,e){for(let r of this.NODES)r instanceof rt&&r.targetTable().basename()===t.NAME&&(e==="DOWN"?r.drop():e==="RENAME"&&r.targetTable().basename(t.$NAME))}updateTableReferences(t,e){for(let r of this.NODES)r instanceof rt&&(r.targetTable().basename()&&t.basename()&&r.targetTable().basename()!==t.basename()||r.targetTable().name()===t.NAME&&(e==="DOWN"?r.drop():e==="RENAME"&&r.targetTable().name(t.$NAME)))}updateColumnReferences(t,e){for(let r of this.NODES){if(!(r instanceof rt)||r.targetTable().basename()&&t.$trace("get:name:database")&&r.targetTable().basename()!==t.$trace("get:name:database")||r.targetTable().name()!==t.$trace("get:table:name"))continue;let s=cons.$TARGET_COLUMNS.length?cons.$TARGET_COLUMNS:cons.TARGET_COLUMNS,i=s.indexOf(t.NAME);i>-1&&(e==="DOWN"?s.splice(i,1):e==="RENAME"&&(s[i]=t.$NAME))}}toJson(){return{columns:this.COLUMNS.map(t=>t.toJson()),constraints:this.CONSTRAINTS.map(t=>t.toJson()),indexes:this.INDEXES.map(t=>t.toJson()),...super.toJson()}}static fromJson(t,e){if(!(!Array.isArray(e?.columns)||["constraints","indexes"].some(r=>r in e&&!Array.isArray(e[r]))))return super.fromJson(t,e,()=>{let r=new this(t);for(let s of e.columns)r.column(s);for(let s of e.constraints||[])r.constraint(s);for(let s of e.indexes||[])r.index(s);return r})}stringify(){let t=[this.COLUMNS.map(i=>i.stringify()).join(`,
	`)],e=this.CONSTRAINTS.slice(0),r=this.INDEXES.slice(0);this.params.dialect==="mysql"&&e.push(...this.COLUMNS.reduce((i,n)=>{let o=n.foreignKey();return o?i.concat(ut.fromJson(this,{...o.toJson(),columns:[n.name()]})):i},[])),e.length&&t.push(e.map(i=>i.stringify()).join(`,
	`)),r.length&&t.push(r.map(i=>i.stringify()).join(`,
	`));let s=this.name();if(!s.BASENAME){let i=this.$trace("get:name:database");s=s.clone().name([i,s.NAME])}return`${s} (
	${t.join(`,
	`)}
)`}static parse(t,e,r){let[s,i,...n]=m.split(e,[],{limit:2});if(!s||!D(i||"","(",")"))return;let o=new this(t);o.name(r(o,s.trim(),[S]));let f=m.split(w(i,"(",")"),[","]).map(c=>r(o,c.trim(),[Ct,ut,yt,st,X,B]));for(let c of f)c instanceof B?o.column(c):c instanceof X?o.index(c):o.constraint(c);return o}};var ft=class extends T{VALUE="";QUOTE="";constructor(t,e,r="'"){super(t),this.VALUE=e,this.QUOTE=r}value(t){this.VALUE=t}stringify(){let t=this.QUOTE||this.quoteChars[0];return`${t}${(this.VALUE+"").replace(new RegExp(t,"g"),t.repeat(2))}${t}`}toJson(){return{value:this.VALUE}}static fromJson(t,e){if(typeof e?.value=="string")return new this(t,e.value,e.quote)}static parse(t,e){let[r,s]=this.parseText(t,e,!0)||[];if(s)return new this(t,r,s)}static parseText(t,e,r=!1){let s=this.getQuoteChars(t,r),i={};if(!(!(i.quote=s.find(n=>D(e,n,n)))||m.match(e,[" "]).length))return[w(e,i.quote,i.quote).replace(new RegExp(i.quote+i.quote,"g"),i.quote),i.quote]}};var wt=class extends T{VALUE=0;constructor(t,e){super(t),this.VALUE=e}value(t){this.VALUE=t}toJson(){return{value:this.VALUE,flags:this.FLAGS}}static fromJson(t,e){if(typeof e=="number"||typeof e=="string"&&/^[.\d]+$/.test(e)&&(e=parseFloat(e)))e={value:e};else if(typeof e?.value!="number")return;return new this(t,e.value).withFlag(...e.flags||[])}stringify(){return`${this.VALUE}`}static parse(t,e){if(/^\d+$/.test(e))return new this(t,parseFloat(e))}static factoryMethods={value:(t,e)=>/^\d+$/.test(e)&&new this(t)}};var ct=class extends ft{TYPE;constructor(t,e,r,s){super(t,e,s),this.TYPE=r}array(t){this.VALUE=Array.isArray(t)?JSON.stringify(t):t,this.TYPE="ARRAY"}object(t){this.VALUE=L(t)?JSON.stringify(t):t,this.TYPE="OBJECT"}toJson(){return{type:this.TYPE,...super.toJson()}}static fromJson(t,e){if(typeof e?.type!="string"||!/OBJECT|ARRAY/i.test(e.type)||!e.value)return;let r=new this(t);return r[e.type.toLowerCase()](e.value),r}stringify(){return`${super.stringify()}`}static parse(t,e){let r=[["{","}"],["[","]"]],s={},[i,n]=this.parseText(t,e)||[];if(n&&!(!(s.braces=r.find(o=>D(e,o[0],o[1])))||m.match(e,[" "]).length))return new this(t,i,s.braces[0]==="{"?"OBJECT":"ARRAY",n)}static factoryMethods={array:(t,e)=>Array.isArray(e)&&new this(t),object:(t,e)=>L(e)&&new this(t)}};var it=class extends T{static OPERATORS=["->","->>","#>","#>>"];OPERATOR="";LHS=null;RHS=null;path(t,e,r){if(!this.constructor.OPERATORS.includes(e))throw new Error(`Unknown operator: "${e}".`);this.build("LHS",[t],[ct,S]),this.build("RHS",[r],[ct,wt,ft]),this.OPERATOR=e}toJson(){return{lhs:this.LHS?.toJson(),rhs:this.RHS?.toJson(),operator:this.OPERATOR,flags:this.FLAGS}}static fromJson(t,e){if(!this.OPERATORS.includes(e?.operator))return;let r=new this(t).withFlag(...e.flags||[]);return r.path(e.lhs,e.operator,e.rhs),r}stringify(){return`${this.LHS} ${this.OPERATOR} ${this.RHS}`}static parse(t,e,r){if((t?.params?.inputDialect||t?.params?.dialect)==="mysql")return;let{tokens:s,matches:i}=m.lex(e,this.OPERATORS,{limit:1});if(!i.length)return;let n=new this(t),o=r(n,s[0],[ct,S]),f=r(n,s[1].trim(),[ct,wt,ft]);return n.path(o,i[0],f),n}static factoryMethods={path:(t,e,r,s)=>this.OPERATORS.includes(r)&&new this(t)}};var z=class u extends T{static ARR_RIGHT="~>";static ARR_LEFT="<~";OPERATOR="";LHS=null;RHS=null;UUID=null;get isOutgoing(){return this.OPERATOR===this.constructor.ARR_RIGHT}get isIncoming(){return this.OPERATOR===this.constructor.ARR_LEFT}get uuid(){return this.UUID||(this.UUID=`$path:${(0|Math.random()*9e6).toString(36)}`),this.UUID}path(t,e,r){let s=this.constructor;if(![s.ARR_LEFT,s.ARR_RIGHT].includes(e))throw new Error(`Unknown operator: "${e}".`);this.build("LHS",[t],S),this.build("RHS",[r],[s,it,S]),this.OPERATOR=e}async eval(){let t=this.$trace("get:api:client");if(!t)throw new Error("No client API in context.");let e=p=>p.primaryKey()?.columns()[0],r=async(p,E)=>{let A=[...p.NODES].find(N=>N.TYPE==="FOREIGN_KEY"&&N.columns().includes(E.NAME))?.targetTable();return A&&!A.BASENAME?S.fromJson(this,[await t.basenameGet(A.NAME),A.NAME]):A},s=async(p,E)=>{let A=t.database(E);if(await A.hasTable(p))return k.fromJson(A,await A.describeTable(p))};if(this.isIncoming){if(!(this.RHS instanceof u))throw new Error(`Unterminated path: ${this.RHS}`);let p,E,A,N;if(this.RHS.isIncoming){if(!(this.RHS.RHS instanceof u))throw new Error(`Unterminated path: ${this.RHS.RHS}`);({LHS:p,RHS:N}=this),{schema:A,table:E}=(await N.eval()).lhs}else if({LHS:p,RHS:{LHS:E,RHS:N}}=this,E.BASENAME||(E=S.fromJson(this,[await t.basenameGet(E.NAME),E.NAME])),A=await s(E.NAME,E.BASENAME),!A)throw new Error(`[${this}]: The implied table ${E} does not exist.`);let d=await r(A,p);if(!d)throw new Error(`[${this}]: Table ${E} does not define the implied foreign key: ${p}.`);let _=await s(d.NAME,d.BASENAME);if(!_)throw new Error(`[${this}]: The implied table ${d} does not exist.`);let g=e(_);if(!g)throw new Error(`[${this}]: Table ${_} does not define a primary key.`);return{lhs:{table:d,schema:_,primaryKey:g},rhs:{table:E,schema:A,foreignKey:p,path:N}}}let i=await Qe.call(this);if(!i)throw new Error("No tables in query.");let n=await s(i.NAME,i.BASENAME);if(!n)throw new Error(`[${this}]: The implied table ${i} does not exist.`);let{LHS:o,RHS:f}=this,c=await r(n,o);if(!c)throw new Error(`[${this}]: Table ${i} does not define the implied foreign key: ${o}.`);let l=await s(c.NAME,c.BASENAME);if(!l)throw new Error(`[${this}]: The implied table ${c} does not exist.`);let h=e(l);if(!h)throw new Error(`[${this}]: Table ${c} does not define a primary key.`);return{lhs:{table:i,schema:n,foreignKey:o},rhs:{table:c,schema:l,primaryKey:h,path:f}}}async plot(){if(this.JOINT)return;let t=this.$trace("get:node:statement"),e=await Qe.call(this);if(!e)throw new Error("No tables in query.");let{lhs:r,rhs:s}=await this.eval(),i=r.foreignKey?.NAME||r.primaryKey,n=s.primaryKey||s.foreignKey.NAME;if(r.primaryKey&&(r.table.NAME.toLowerCase()!==e.NAME.toLowerCase()||r.table.BASENAME.toLowerCase()!==e.BASENAME.toLowerCase()))throw new Error(`[${this}]: Cannot resolve incoming path to base table ${e.EXPR}.`);let o=`_view:${[i,s.table.BASENAME,s.table.NAME,n].join(":")}`,f=()=>this.JOINT=t.JOIN_LIST.find(c=>c.ALIAS.NAME.toLowerCase()===o.toLowerCase());if(!f()){let c=this.$trace("get:node:table").ALIAS?.NAME||e.NAME,l=`${n}:${(0|Math.random()*9e6).toString(36)}`;t.leftJoin(h=>h.query(p=>p.select(E=>E.name(n).as(l)),p=>p.from([s.table.BASENAME,s.table.NAME].filter(E=>E)))).with({IS_SMART_JOIN:!0}).as(o).on(h=>h.equals([o,l],[c,i])),f()}this.JOINT.EXPR.select(c=>c.expr(s.path.toJson()).as(this.uuid))}toJson(){return{lhs:this.LHS?.toJson(),rhs:this.RHS?.toJson(),operator:this.OPERATOR,flags:this.FLAGS}}static fromJson(t,e){if(![this.ARR_LEFT,this.ARR_RIGHT].includes(e?.operator))return;let r=new this(t).withFlag(...e.flags||[]);return r.path(e.lhs,e.operator,e.rhs),r}stringify(){return this.JOINT?this.autoEsc([this.JOINT.ALIAS.NAME,this.uuid]).join("."):`${this.LHS} ${this.OPERATOR} ${this.RHS}`}static parse(t,e,r){let{tokens:s,matches:i}=m.lex(e,[this.ARR_LEFT,this.ARR_RIGHT],{limit:1});if(!i.length)return;let n=new this(t),o=r(n,s[0],[S]),f=r(n,s[1],i[0]===this.ARR_LEFT?[this]:[this,it,S]);return n.path(o,i[0],f),n}static factoryMethods={path:(t,e,r,s)=>[this.ARR_LEFT,this.ARR_RIGHT].includes(r)&&new this(t)}};async function Qe(){let u=this.$trace("get:name:table");if(u){let t=this.$trace("get:name:database");return S.fromJson(this,[t||await this.$trace("get:api:client")?.basenameGet(u),u])}}var Wt=class extends T{$EXPR;ALIAS;CLAUSED;get NAME(){return this.$EXPR?.NAME}get BASENAME(){return this.$EXPR?.BASENAME}get EXPR(){return this.$EXPR?.EXPR||this.$EXPR}name(t){return this.build("$EXPR",[t],S,"name"),this}query(...t){return this.build("$EXPR",t,Z,"query"),this}expr(t){return this.build("$EXPR",[t],this.constructor.exprTypes),this}as(t,e=!0){return this.build("ALIAS",[t],S),this.CLAUSED=e,this}toJson(){return{expr:this.$EXPR?.toJson(),alias:this.ALIAS?.toJson(),claused:this.CLAUSED,flags:this.FLAGS}}static fromJson(t,e){let r=new this(t).withFlag(...e.flags||[]);return e?.expr?(r.expr(e.expr),e.alias&&r.as(e.alias,e.claused)):e&&r.expr(e),r}stringify(){let t=this.ALIAS||this.$EXPR instanceof z&&this.$EXPR.JOINT&&this.autoEsc(this.$EXPR.clone().stringify());return[this.$EXPR,this.CLAUSED?"AS":"",t].filter(e=>e).join(" ")}static parse(t,e,r){let s=new this(t),i=this.getEscChar(t,!0),[,n,o,f,,c]=new RegExp(`^([\\s\\S]+?)(?:(\\s+AS\\s+|(?<!(?:~>|<~))\\s+)(?:([\\w]+)|(${i})((?:\\4\\4|[^\\4])+)\\4))?$`,"i").exec(e.trim())||[],l,h=f||c;if(h&&!o?.trim()&&!n.trim().endsWith(")")){try{l=r(s,n,this.exprTypes)}catch{}l||(h=f=c=null,n=e)}if(l||(l=r(s,n,this.exprTypes)),s.expr(l),h){let p=f||this.autoUnesc(s,c),E=!!o?.trim();s.as(p,E)}return s}static get exprTypes(){return I.Types.filter(t=>t!==pt)}};var M=class extends Wt{static get exprTypes(){return[Z,S]}};var $=class extends M{TYPE="";CORRELATION=null;full(t){return this.TYPE="JOIN",this.expr(t),this}left(t){return this.TYPE="LEFT_JOIN",this.expr(t),this}right(t){return this.TYPE="RIGHT_JOIN",this.expr(t),this}inner(t){return this.TYPE="INNER_JOIN",this.expr(t),this}cross(t){return this.TYPE="CROSS_JOIN",this.expr(t),this}on(...t){return this.build("CORRELATION",t,y,"and")}using(t){return this.build("CORRELATION",[t],S)}toJson(){return{type:this.TYPE,correlation:this.CORRELATION?.toJson(),...super.toJson()}}static fromJson(t,e){let r=super.fromJson(t,e);if(!(!r||!e.type))return e?.expr&&e.type&&(r.TYPE=e.type),e?.expr&&e.correlation&&r.build("CORRELATION",[e.correlation],[S,y]),r}stringify(){return[this.TYPE?.replace(/_/," ").toUpperCase()||"JOIN",super.stringify(),this.CORRELATION instanceof S?`USING ${this.CORRELATION}`:`ON ${this.CORRELATION}`].filter(t=>t).join(" ")}static parse(t,e,r){let[s,i,n]=e.match(new RegExp(`^${this.regex}([\\s\\S]*)$`,"i"))||[];if(!s)return;let{tokens:[o,f],matches:c}=m.lex(n,["\\s+(?:ON|USING)\\s+"],{useRegex:"i"}),l=super.parse(t,o.trim(),r);return l.TYPE=i.trim().toUpperCase()+"_JOIN",/USING/i.test(c[0])?l.using(r(l,f.trim(),[S])):/ON/i.test(c[0])&&l.on(r(l,f.trim(),[y,P])),l}static regex="(INNER\\s+|CROSS\\s+|(?:LEFT|RIGHT)(?:\\s+OUTER)?\\s+)?JOIN"};var dt=class extends T{NAME="";ARGS=[];fn(t,...e){return this.NAME=t,this.build("ARGS",e,I.Types)}toJson(){return{name:this.NAME,args:this.ARGS.map(t=>t.toJson()),flags:this.FLAGS}}static fromJson(t,e){if(typeof e?.name!="string"||!Array.isArray(e.args))return;let r=new this(t).withFlag(...e.flags||[]);return r.fn(e.name,...e.args),r}stringify(){return`${this.NAME.toUpperCase()}(${this.ARGS.join(", ")})`}static parse(t,e,r){if(!e.endsWith(")")||m.match(e,[" "]).length)return;let[,s,i=""]=/^(\w+)\(([\s\S]+)?\)$/i.exec(e),n=new this(t);return n.fn(s,...m.split(i,[","]).map(o=>r(n,o.trim()))),n}};var fe=class extends T{CRITERIA=[];criterion(...t){return this.build("CRITERIA",t,I.Types)}toJson(){return{criteria:this.CRITERIA.map(t=>t.toJson()),flags:this.FLAGS}}static fromJson(t,e){if(!Array.isArray(e?.criteria))return;let r=new this(t).withFlag(...e.flags||[]);return r.criterion(...e.criteria),r}stringify(){return this.CRITERIA.map(t=>[t,...t.FLAGS].join(" ")).join(", ")}static parse(t,e,r){let[s,i]=e.match(new RegExp(`^${this.regex}([\\s\\S]*)$`,"i"))||[];if(!s)return;let n=new this(t);for(let o of m.split(i.trim(),[","])){let[,f,c]=/([\s\S]+)\s+(ASC|DESC)$/i.exec(o)||[,o];n.criterion(r(n,f).withFlag(c))}return n}static regex="ORDER\\s+BY"};var J=class extends fe{withRollup(){return this.withFlag("WITH_ROLLUP")}stringify(){return["ORDER BY",super.stringify(),...this.FLAGS.map(t=>t.replace(/_/g," "))].join(" ")}static parse(t,e,r){let{tokens:[s],matches:i}=m.lex(e,["\\s+WITH\\s+ROLLUP$"],{useRegex:"i"}),n=super.parse(t,s.trim(),r);if(n)return i.length&&n.withFlag("WITH_ROLLUP"),n}};var Kt=class extends T{CRITERIA=[];criterion(...t){return this.build("CRITERIA",t,I.Types)}stringify(){return this.CRITERIA.map(t=>t.stringify()).join(",")}toJson(){return{criteria:this.CRITERIA.map(t=>t.toJson()),flags:this.FLAGS}}static fromJson(t,e){if(!Array.isArray(e?.criteria))return;let r=new this(t).withFlag(...e.flags||[]);return r.criterion(...e.criteria),r}static parse(t,e,r){let[s,i]=e.match(new RegExp(`^${this.regex}([\\s\\S]*)$`,"i"))||[];if(!s)return;let n=new this(t);for(let o of m.split(i.trim(),[","]))n.criterion(r(n,o));return n}static regex="GROUP\\s+BY"};var Vt=class extends Kt{stringify(){return["PARTITION BY",super.stringify()].join(" ")}static regex="PARTITION\\s+BY"};var Ut=class extends T{NAME;WINDOW_REF;PARTITION_BY_CLAUSE;ORDER_BY_CLAUSE;name(t){return this.NAME=t,this}existing(t){return this.WINDOW_REF=t,this}extends(t){return this.WINDOW_REF=t,this}partitionBy(...t){if(this.WINDOW_REF)throw new Error("The PARTITION BY clause is not allowed when inheriting from a base window.");return this.build("PARTITION_BY_CLAUSE",t,Vt,"criterion")}orderBy(...t){return this.build("ORDER_BY_CLAUSE",t,J,"criterion")}toJson(){return{name:this.NAME,window_ref:this.WINDOW_REF,partition_by_clause:this.PARTITION_BY_CLAUSE?.toJson(),order_by_clause:this.ORDER_BY_CLAUSE?.toJson()}}static fromJson(t,e){if(typeof e=="string")e={window_ref:e};else if(!(typeof e=="object"&&e)||!["name","window_ref","partition_by_clause","order_by_clause"].some(s=>s in e))return;let r=new this(t);return e.name&&r.name(e.name),e.window_ref&&r.extends(e.window_ref),e.partition_by_clause&&r.partitionBy(e.partition_by_clause),e.order_by_clause&&r.orderBy(e.order_by_clause),r}stringify(){let t=[];return!this.NAME&&this.WINDOW_REF&&!this.PARTITION_BY_CLAUSE&&!this.ORDER_BY_CLAUSE?t.push(this.WINDOW_REF):(this.NAME&&t.push(`${this.NAME} AS `),t.push(`(${[this.WINDOW_REF,this.PARTITION_BY_CLAUSE,this.ORDER_BY_CLAUSE].filter(e=>e).join(" ")})`)),t.join("")}static parse(t,e,r){let s=new this(t),i=async f=>{let{tokens:[c,...l],matches:h}=m.lex(w(f.trim(),"(",")"),["PARTITION\\s+BY","ORDER\\s+BY"],{useRegex:"i",preserveDelims:!0});c.trim()&&s.extends(c.trim());for(let p of h){if(/PARTITION\s+BY/i.test(p)){s.partitionBy(r(s,l.shift().trim(),[Vt]));continue}s.orderBy(r(s,l.shift().trim(),[J]))}},n=e.endsWith(")");if(n&&!e.startsWith("(")){let[f,c]=spec.split(new RegExp(" AS ","i"));s.name(f.trim()),i(c)}else n?i(e):s.existing(e);return s}static regex="WINDOW|OVER"};var lt=class extends dt{ORDER_BY_CLAUSE;OVER_CLAUSE;fn(...t){return super.fn(...t),this}orderBy(...t){return this.build("ORDER_BY_CLAUSE",t,J,"criterion"),this}over(t){return t||(t={name:""}),this.build("OVER_CLAUSE",[t],Ut),this.OVER_CLAUSE}toJson(){return{...super.toJson(),order_by_clause:this.ORDER_BY_CLAUSE?.toJson(),over_clause:this.OVER_CLAUSE?.toJson()}}static fromJson(t,e){let r=super.fromJson(t,e);if(r)return this.names.flat().includes(r.NAME.toUpperCase())&&(e.order_by_clause&&r.orderBy(e.order_by_clause),e.over_clause&&r.over(e.over_clause)),r}stringify(){return`${this.NAME.toUpperCase()}(${[...this.FLAGS,this.ARGS.join(","),this.ORDER_BY_CLAUSE].filter(e=>e).join(" ")})`+(this.OVER_CLAUSE?` OVER ${this.OVER_CLAUSE}`:"")}static parse(t,e,r){let[s,i]=m.split(e,["OVER\\s+"],{useRegex:"i"}).map(p=>p.trim());if(!s.endsWith(")")||m.match(s,[" "]).length)return;let[,n,o,f=""]=/^(\w+)\((?:\s+)?(?:(ALL|DISTINCT)\s+)?([\s\S]+)?\)$/i.exec(s);if(!this.names.flat().includes(n.toUpperCase()))return;let[,c,l]=/^([\s\S]+)(?:\s+(ORDER\s+BY\s+.+))$/i.exec(f)||[,f],h=super.parse(t,`${n}(${c})`,r);return o&&h.withFlag(o),l?h.orderBy(r(h,l,[J])):i&&h.over(r(h,i,[Ut])),h}static factoryMethods={fn:(t,e,...r)=>this.names.flat().includes(e?.toUpperCase())&&new this(t)};static names=[["AVG","BIT_AND","BIT_OR","BIT_XOR","COUNT","JSON_ARRAYAGG","JSON_OBJECTAGG","MAX","MIN","STDDEV_POP","STDDEV","STD","STDDEV_SAMP","SUM","VAR_POP","VARIANCE","VAR_SAMP","GROUP_CONCAT","GROUP_CONCAT_WS"],["CUME_DIST","DENSE_RANK","FIRST_VALUE","LAG","LAST_VALUE","LEAD","NTH_VALUE","NTLE","PERCENT_RANK","RANK","ROW_NUMBER"],["ANY_VALUE","COLUMN","COLUMNS","GROUPING"]]};var K=class extends Wt{path(t,e,r){return this.build("$EXPR",[t,e,r],it.OPERATORS.includes(e)?it:z,"path"),this}fn(t,...e){return this.build("$EXPR",[t,...e],lt.names.flat().includes(t.toUpperCase())?lt:dt,"fn"),this}case(...t){return this.build("$EXPR",t,Pt),this}};var qt=class extends T{WINDOWS_LIST=[];define(...t){return this.build("WINDOWS_LIST",t,Ut)}toJson(){return{window_list:this.WINDOWS_LIST.map(t=>t.toJson())}}static fromJson(t,e){if(!Array.isArray(e?.window_list))return;let r=new this(t);return r.define(...e.window_list),r}stringify(){return`WINDOW ${this.WINDOWS_LIST.join(",")}`}static parse(t,e,r){let[s,i]=e.match(new RegExp(`^${this.regex}([\\s\\S]*)$`,"i"))||[];if(!s)return;let n=new this(t);for(let o of m.split(i,[","]))n.define(r(n,o.trim(),[Window]));return n}static regex="WINDOW"};var Qt=class extends Kt{withRollup(){return this.withFlag("WITH_ROLLUP")}stringify(){return["GROUP BY",super.stringify(),...this.FLAGS.map(t=>t.replace(/_/g," "))].join(" ")}static parse(t,e,r){let{tokens:[s],matches:i}=m.lex(e,["\\s+WITH\\s+ROLLUP$"],{useRegex:"i"}),n=super.parse(t,s,r);if(n)return i.length&&n.withFlag("WITH_ROLLUP"),n}};var H=class u extends et{SELECT_LIST=[];FROM_LIST=[];JOIN_LIST=[];WHERE_CLAUSE=null;GROUP_BY_CLAUSE=null;HAVING_CLAUSE=null;WINDOW_CLAUSE=null;ORDER_BY_CLAUSE=null;OFFSET_CLAUSE=null;LIMIT_CLAUSE=null;UNION_CLAUSE=null;AGGRS=[];PATHS=[];VARS=[];SUBQUERIES=[];$trace(t,...e){return t==="get:node:table"?this.FROM_LIST[0]:(t==="event:connected"&&(e[0]instanceof lt&&this.AGGRS.push(e[0]),e[0]instanceof z&&!(e[0].CONTEXT instanceof z)&&this.PATHS.push(e[0]),e[0]instanceof Jt&&this.VARS.push(e[0]),e[0]instanceof u&&this.SUBQUERIES.push(e[0])),super.$trace(t,...e))}select(...t){return this.build("SELECT_LIST",t,K)}from(...t){return this.build("FROM_LIST",t,M),this.FROM_LIST[this.FROM_LIST.length-1]}join(t){return this.build("JOIN_LIST",[t],$,"full")}leftJoin(t){return this.build("JOIN_LIST",[t],$,"left")}rightJoin(t){return this.build("JOIN_LIST",[t],$,"right")}innerJoin(t){return this.build("JOIN_LIST",[t],$,"inner")}crossJoin(t){return this.build("JOIN_LIST",[t],$,"cross")}where(...t){return this.build("WHERE_CLAUSE",t,y,"and")}groupBy(...t){return this.build("GROUP_BY_CLAUSE",t,Qt,"criterion"),this.GROUP_BY_CLAUSE}having(...t){return this.build("HAVING_CLAUSE",t,y,"and")}window(...t){return this.build("WINDOW_CLAUSE",t,qt,"define")}orderBy(...t){return this.build("ORDER_BY_CLAUSE",t,J,"criterion"),this.ORDER_BY_CLAUSE}offset(t){if(typeof t!="number")throw new Error("Offsets must be of type number.");this.OFFSET_CLAUSE=t}limit(...t){if(!t.every(e=>typeof e=="number"))throw new Error("Limits must be of type number.");this.LIMIT_CLAUSE=t}union(...t){return this.build("UNION_CLAUSE",t,this.constructor,"select"),this.UNION_CLAUSE}get expandable(){return this.PATHS.length>0||this.SUBQUERIES.some(t=>t.expandable)}async expand(t=!1){let e=t?this:this.clone();if(!e.expandable)return e;for(let r of e.PATHS)await r.plot();for(let r of e.SUBQUERIES)await r.expand(!0);return e}toJson(){return{select_list:this.SELECT_LIST.map(t=>t.toJson()),from_list:this.FROM_LIST.map(t=>t.toJson()),join_list:this.JOIN_LIST.map(t=>t.toJson()),where_clause:this.WHERE_CLAUSE?.toJson(),group_by_clause:this.GROUP_BY_CLAUSE?.toJson(),having_clause:this.HAVING_CLAUSE?.toJson(),window_clause:this.WINDOW_CLAUSE?.toJson(),order_by_clause:this.ORDER_BY_CLAUSE?.toJson(),offset_clause:this.OFFSET_CLAUSE,limit_clause:this.LIMIT_CLAUSE,union_clause:this.UNION_CLAUSE,flags:this.FLAGS}}static fromJson(t,e){if(!Array.isArray(e?.select_list))return;let r=new this(t).withFlag(...e.flags||[]);return r.select(...e.select_list),e.from_list?.length&&r.from(...e.from_list),e.join_list?.length&&r.join(...e.join_list),e.where_clause&&r.where(e.where_clause),e.group_by_clause&&r.groupBy(e.group_by_clause),e.having_clause&&r.having(e.having_clause),e.window_clause&&r.window(e.window_clause),e.order_by_clause&&r.orderBy(e.order_by_clause),e.offset_clause&&r.offset(e.offset_clause),e.limit_clause&&r.limit(e.limit_clause),e.union_clause&&r.union(e.union_clause),r}stringify(t={}){let e=["SELECT"];return this.FLAGS.length&&e.push(this.FLAGS.map(r=>r.replace(/_/g," "))),e.push(this.SELECT_LIST.join(", ")),this.FROM_LIST.length&&e.push("FROM",this.FROM_LIST.join(", ")),this.JOIN_LIST.length&&e.push(...this.JOIN_LIST),this.WHERE_CLAUSE&&e.push("WHERE",this.WHERE_CLAUSE),this.GROUP_BY_CLAUSE&&e.push(this.GROUP_BY_CLAUSE),this.HAVING_CLAUSE&&e.push("HAVING",this.HAVING_CLAUSE),this.WINDOW_CLAUSE&&e.push(this.WINDOW_CLAUSE),this.ORDER_BY_CLAUSE&&e.push(this.ORDER_BY_CLAUSE),this.OFFSET_CLAUSE&&e.push("OFFSET",this.OFFSET_CLAUSE),this.LIMIT_CLAUSE&&e.push("LIMIT",(Array.isArray(this.LIMIT_CLAUSE)?this.LIMIT_CLAUSE:[this.LIMIT_CLAUSE]).join(",")),this.UNION_CLAUSE&&e.push("UNION",this.UNION_CLAUSE),e.join(" ")}static parse(t,e,r){let[s,i,n,o]=/^SELECT\s+(?:(WITH\s+UAC)\s+)?(ALL|DISTINCT)?([\s\S]+)$/i.exec(e.trim())||[];if(!s)return;let f=new this(t);i&&f.withFlag("WITH_UAC"),n&&f.withFlag(n);let c=this.mySubstitutePlaceholders(f,o.trim()),l={from:{backtest:"^(?!.*\\s+DISTINCT\\s+$)",test:"FROM"},join:$,where:"WHERE",groupBy:Qt,having:"HAVING",window:qt,orderBy:J,offset:"OFFSET",limit:"LIMIT",union:"UNION"},{tokens:[h,...p],matches:E}=m.lex(c,Object.values(l).map(A=>typeof A=="string"||A.test?A:A.regex),{useRegex:"i"});for(let A of m.split(h,[","])){let N=r(f,A.trim(),[K]);f.select(N)}for(let A of E){let N=A.replace(/\s+/g,""),d=Object.keys(l).find(_=>new RegExp(_,"i").test(N));if(d==="from")for(let _ of m.split(p.shift(),[","])){let g=r(f,_.trim(),[M]);f.from(g)}else if(["where","having"].includes(d)){let _=r(f,p.shift().trim(),[y,P]);f[d](_)}else if(d==="UNION"){let _=r(f,p.shift().trim(),[this]);f[d](_)}else if(["offset","limit"].includes(d)){let _=p.shift().split(",").map(g=>parseInt(g.trim()));f[d](..._)}else{let _=r(f,`${A} ${p.shift().trim()}`,[l[d]]);f[d](_)}}return f}};var Z=class extends T{$EXPR;constructor(t,e){super(t),this.$EXPR=e}get NAME(){return this.$EXPR?.NAME}get BASENAME(){return this.$EXPR?.BASENAME}get EXPR(){return this.$EXPR?.EXPR||this.$EXPR}query(...t){return this.build("$EXPR",t,H),this.$EXPR}expr(...t){return this.build("$EXPR",t,[H,...I.Types]),this.$EXPR}toJson(){return{expr:this.$EXPR?.toJson(),flags:this.FLAGS}}static fromJson(t,e){if(!e?.expr||Object.keys(e).length!==(e.flags?2:1))return;let r=new this(t).withFlag(...e.flags||[]);return r.expr(e.expr),r}stringify(){return"("+this.$EXPR.stringify()+")"}static parse(t,e,r){if(!(!D(e,"(",")")||m.match(e,[" "]).length&&m.split(e,[]).length===2))return new this(t,r(t,w(e,"(",")"),[H,...I.Types]))}};var y=class u extends T{LOGIC="";ASSERTIONS=[];constructor(t,e){super(t),this.LOGIC=e}and(...t){return this.LOGIC==="OR"?new this.constructor(this).and(this,...t):(this.LOGIC="AND",this.build("ASSERTIONS",t,[u,P,Z]),this)}or(...t){return this.LOGIC==="AND"?new this.constructor(this).or(this,...t):(this.LOGIC="OR",this.build("ASSERTIONS",t,[u,P,Z]),this)}toJson(){return{logic:this.LOGIC,assertions:this.ASSERTIONS.map(t=>t.toJson()),flags:this.FLAGS}}static fromJson(t,e){if(typeof e?.logic!="string"||!/AND|OR/i.test(e.logic)||!Array.isArray(e.assertions))return;let r=new this(t).withFlag(...e.flags||[]);return r[e.logic.toLowerCase()](...e.assertions),r}stringify(){return this.ASSERTIONS.map(t=>t instanceof u?`(${t.stringify()})`:t.stringify()).join(" "+this.LOGIC+" ")}static parse(t,e,r){for(let s of["AND","OR"]){let i=m.split(e,[`\\s+${s}\\s+`],{useRegex:"i"});if(i.length>1){let n=new this(t,s);for(let o of i)n[s.toLowerCase()](r(n,o));return n}}}};var ce=class extends T{OPERAND=null;TYPE="";SYNTAX2=!1;cast(t,e,r=!1){return this.TYPE=e,this.SYNTAX2=r,this.build("OPERAND",[t],I.Types)}toJson(){return{operand:this.OPERAND?.toJson(),type:this.TYPE,syntax2:this.SYNTAX2,flags:this.FLAGS}}static fromJson(t,e){if(!e?.operand||!e?.type)return;let r=new this(t).withFlag(...e.flags||[]);return r.cast(e.operand,e.type,e.syntax2),r}stringify(){return this.SYNTAX2?`${this.OPERAND}::${this.TYPE}`:`CAST(${this.OPERAND} AS ${this.TYPE})`}static parse(t,e,r){let s,i,n=!1;if(/^CAST(?:\s+)?\([\s\S]+\)$/i.test(e)){let[,f]=m.split(e,[]);[s,i]=m.split(f.slice(1,-1),["AS"],{useRegex:"i"})}else{if((t?.params?.inputDialect||t?.params?.dialect)==="mysql"||([s,i]=m.split(e,["::"]),!i))return;n=!0}let o=new this(t);return o.cast(r(o,s.trim()),i.trim(),n),o}};var le=class extends T{OPERATOR="";OPERANDS=[];constructor(t,e,...r){super(t),this.OPERATOR=e,this.OPERANDS=r}calc(t,...e){return this.OPERATOR&&this.OPERATOR!==t?new this.constructor(this).calc(t,this,...e):(this.OPERATOR=t,this.build("OPERANDS",e,I.Types),this)}sum(...t){return this.calc("+",...t)}sub(...t){return this.calc("-",...t)}div(...t){return this.calc("/",...t)}times(...t){return this.calc("*",...t)}toJson(){return{operator:this.OPERATOR,operands:this.OPERANDS.map(t=>t.toJson()),flags:this.FLAGS}}static fromJson(t,e){if(typeof e?.operator!="string"||!/\+|\-|\*|\//.test(e.operator)||!Array.isArray(e.operands))return;let r=new this(t).withFlag(...e.flags||[]);return r.calc(e.operator,...e.operands),r}stringify(){return this.OPERANDS.join(` ${this.OPERATOR} `)}static parse(t,e,r){for(let s of["\\*","\\/","\\+","\\-"]){let{tokens:i,matches:n}=m.lex(e,[`(\\s+)?${s}(\\s+)?`],{useRegex:"i"});if(!(i.filter(o=>o.trim()).length<2))return new this(t,n.pop().trim(),...i.map(o=>r(t,o.trim())))}}};var he=class extends T{STRINGS=[];join(...t){return this.build("STRINGS",t,I.Types)}toJson(){return{strings:this.STRINGS.map(t=>t.toJson()),flags:this.FLAGS}}static fromJson(t,e){if(!Array.isArray(e?.strings))return;let r=new this(t).withFlag(...e.flags||[]);return r.join(...e.strings),r}stringify(){return this.STRINGS.join(" || ")}static parse(t,e,r){if((t?.params?.inputDialect||t?.params?.dialect)==="mysql")return;let s=m.split(e,["||"]);if(s.length<2)return;let i=new this(t);return i.join(...s.map(n=>r(i,n.trim()))),i}};var I=class{static cast(t,e,r=this.Types){if(typeof e=="function"){if(r.length===1){let n=new r[0](t);return e(n),n}let s,i=n=>(...o)=>{let f=r.reduce((c,l)=>c||(l.factoryMethods?typeof l.factoryMethods[n]=="function"&&l.factoryMethods[n](t,...o):typeof l.prototype[n]=="function"&&new l(t)),null);if(!f)throw new Error(`Unknown method: ${n}()`);if(s=f,f[n])return f[n](...o);for(let c of o)c(f)};return e(new Proxy({},{get:(n,o)=>i(o)})),s}return this.fromJson(t,e,r)}static fromJson(t,e,r=this.Types){let s=r.find(i=>e instanceof i)?e:r.reduce((i,n)=>i||n.fromJson(t,e),null);if(!s)throw new Error("");return s}static parse(t,e,r){return r(t,e,this.Types)}static get Types(){return[Z,Pt,he,y,z,it,P,le,ce,lt,dt,ct,wt,ft,Jt,S,pt]}};var Nt=class extends T{LIST=[];list(...t){return this.build("LIST",t,S),this}toJson(){return{list:this.LIST.map(t=>t.toJson())}}static fromJson(t,e){if(Array.isArray(e?.list))return new this(t).list(...e.list)}stringify(){return`(${this.LIST.join(", ")})`}static parse(t,e,r){if(!D(e,"(",")"))return;let s=new this(t);return s.list(...m.split(w(e,"(",")"),[","]).map(i=>r(s,i.trim(),[S]))),s}};var _t=class extends T{LIST=[];list(...t){return this.build("LIST",t,I.Types),this}toJson(){return{list:this.LIST.slice(0)}}static fromJson(t,e){if(Array.isArray(e?.list))return new this(t).list(...e.list)}stringify(){return`(${this.LIST.join(", ")})`}static parse(t,e,r){if(!D(e,"(",")"))return;let s=new this(t);return s.list(...m.split(w(e,"(",")"),[","]).map(i=>r(s,i.trim(),I.Types))),s}};var nt=class extends T{ENTRIES=[];set(t,e){return Array.isArray(t)?(t=Nt.fromJson(this,t),Array.isArray(e)?e=_t.fromJson(this,e):e=I.cast(this,e)):(t=t instanceof T?t:S.fromJson(this,t),e=e instanceof T?e:I.cast(this,e)),this.ENTRIES.push([t,e]),this}toJson(){return{entries:this.ENTRIES.map(([t,e])=>[t.toJson(),e.toJson()])}}static fromJson(t,e){if(!Array.isArray(e?.entries))return;let r=new this(t);for(let[s,i]of e.entries)r.set(s,i);return r}stringify(){return`
	${this.ENTRIES.map(([t,e])=>`${t} = ${e}`).join(`,
	`)}`}static parse(t,e,r){let s=new this(t);for(let i of m.split(e,[","])){let[n,o]=m.split(i,["="]).map(f=>f.trim()).filter(f=>f);if(!o)return;if(D(n,"(",")")){let f=r(s,o.trim(),[Nt]);if(!D(o,"(",")"))return;let c=/^\((\s+)?SELECT\s+/i.test(o)?r(s,o.trim()):r(s,o.trim(),[_t]);s.set(f,c)}else{let f=r(s,n),c=r(s,o);s.set(f,c)}}return s}};var zt=class extends nt{WHERE_CLAUSE=null;where(...t){return this.build("WHERE_CLAUSE",t,y,"and")}toJson(){return{...super.toJson(),where_clause:this.WHERE_CLAUSE?.toJson()}}static fromJson(t,e){let r=super.fromJson(t,e);if(r)return e.where_clause&&r.where(e.where_clause),r}stringify(){let t=[];return this.params.dialect==="mysql"?t.push("ON DUPLICATE KEY UPDATE"):t.push(`ON CONFLICT ${this.ENTRIES.length?"DO UPDATE SET":"DO NOTHING"}`),t.push(super.stringify()),this.WHERE_CLAUSE&&t.push("WHERE",this.WHERE_CLAUSE),t.join(" ")}static parse(t,e,r){let[s,i,n,o]=e.match(new RegExp(`^${this.regex}([\\s\\S]*)$`,"i"))||[];if(!s)return;if(/DO\s+NOTHING/i.test(n))return new this(t);let[f,c]=m.split(o,["WHERE"],{ci:!0}),l=super.parse(t,f,r);return c&&l.where(r(l,c.trim(),[y,P])),l}static regex="ON\\s+(?:DUPLICATE\\s+KEY|CONFLICT(?:\\s+([\\s\\S]+))?)\\s+(UPDATE|DO\\s+NOTHING|DO\\s+UPDATE\\s+SET\\s+)"};var j=class extends et{TABLE=null;COLUMNS_CLAUSE=null;VALUES_LIST=[];SET_CLAUSE=null;SELECT_CLAUSE=null;ON_CONFLICT_CLAUSE=null;RETURNING_LIST=[];$trace(t,...e){return t==="get:node:table"?this.TABLE:super.$trace(t,...e)}into(t){return this.build("TABLE",[t],M)}columns(...t){return this.build("COLUMNS_CLAUSE",t,Nt,"list")}values(...t){return this.build("VALUES_LIST",t,_t,"list")}set(...t){return this.build("SET_CLAUSE",t,nt,"set")}select(t){return this.build("SELECT_CLAUSE",[t],H)}onConflict(...t){return this.build("ON_CONFLICT_CLAUSE",t,zt)}returning(...t){return this.build("RETURNING_LIST",t,K)}toJson(){return{table:this.TABLE.toJson(),columns_clause:this.COLUMNS_CLAUSE?.toJson(),values_list:this.VALUES_LIST.map(t=>t.toJson()),set_clause:this.SET_CLAUSE?.toJson(),select_clause:this.SELECT_CLAUSE?.toJson(),on_conflict_clause:this.ON_CONFLICT_CLAUSE?.toJson(),returning_list:this.RETURNING_LIST.slice(0),flags:this.FLAGS}}static fromJson(t,e){if(!e?.table)return;let r=new this(t).withFlag(...e.flags||[]);return r.into(e.table),e.columns_clause&&r.columns(e.columns_clause),e.values_list?.length&&r.values(...e.values_list),e.set_clause&&r.set(e.set_clause),e.select_clause&&r.select(e.select_clause),e.on_conflict_clause&&r.onConflict(e.on_conflict_clause),e.returning_list?.length&&r.returning(...e.returning_list),r}stringify(){let t=["INSERT"];return this.FLAGS.length&&t.push(this.FLAGS.map(e=>e.replace(/_/g," "))),t.push("INTO",this.TABLE),this.SET_CLAUSE?t.push("SET",this.SET_CLAUSE):(this.COLUMNS_CLAUSE&&t.push(this.COLUMNS_CLAUSE),this.SELECT_CLAUSE?t.push(this.SELECT_CLAUSE):t.push("VALUES",this.VALUES_LIST)),this.ON_CONFLICT_CLAUSE&&t.push(this.ON_CONFLICT_CLAUSE),this.RETURNING_LIST.length&&t.push("RETURNING",this.RETURNING_LIST.join(", ")),t.join(" ")}static parse(t,e,r){let[s,i,n,o]=/^INSERT(\s+WITH\s+UAC)?(?:\s+(IGNORE))?(?:\s+INTO)?([\s\S]+)$/i.exec(e.trim())||[];if(!s)return;let f=this.mySubstitutePlaceholders(t,o.trim()),{tokens:[c,l,h,p],matches:[E,A]}=m.lex(f,["(VALUES|VALUE|SET|SELECT)","ON\\s+(DUPLICATE\\s+KEY|CONFLICT)","RETURNING"],{useRegex:"i"}),N=new this(t);if(i&&N.withFlag("WITH_UAC"),n&&N.withFlag(n),/^SET$/i.test(E))N.into(r(N,c,[M])),N.set(r(N,l.trim(),[nt]));else{let d=m.split(c,[]);if(N.into(r(N,d.shift().trim(),[M])),d.length&&N.columns(r(N,d.shift().trim(),[Nt])),/^SELECT$/i.test(E))N.select(r(N,`SELECT ${l}`));else for(let _ of m.split(l,[","]))N.values(r(N,_.trim(),[_t]))}return A&&N.onConflict(r(N,`${A} ${h}`,[zt])),p&&N.returning(...m.split(p,[","]).map(d=>r(N,d.trim(),[K]))),N}};var gt=class extends et{TABLE_LIST=[];JOIN_LIST=[];SET_CLAUSE=null;WHERE_CLAUSE=null;ORDER_BY_CLAUSE=null;LIMIT_CLAUSE=null;RETURNING_LIST=[];$trace(t,...e){return t==="get:node:table"?this.TABLE_LIST[0]:super.$trace(t,...e)}table(...t){return this.build("TABLE_LIST",t,M)}join(t){return this.build("JOIN_LIST",[t],$,"full")}leftJoin(t){return this.build("JOIN_LIST",[t],$,"left")}rightJoin(t){return this.build("JOIN_LIST",[t],$,"right")}innerJoin(t){return this.build("JOIN_LIST",[t],$,"inner")}crossJoin(t){return this.build("JOIN_LIST",[t],$,"cross")}set(...t){return this.build("SET_CLAUSE",t,nt,"set")}where(...t){return this.build("WHERE_CLAUSE",t,y,"and")}orderBy(...t){return this.build("ORDER_BY_CLAUSE",t,J,"criterion"),this.ORDER_BY_CLAUSE}limit(...t){if(!t.every(e=>typeof e=="number"))throw new Error("Limits must be of type number.");this.LIMIT_CLAUSE=t}returning(...t){return this.build("RETURNING_LIST",t,K)}toJson(){return{table_list:this.TABLE_LIST.map(t=>t.toJson()),join_list:this.JOIN_LIST.map(t=>t.toJson()),set_clause:this.SET_CLAUSE?.toJson(),where_clause:this.WHERE_CLAUSE?.toJson(),order_by_clause:this.ORDER_BY_CLAUSE?.toJson(),limit_clause:this.LIMIT_CLAUSE,returning_list:this.RETURNING_LIST,flags:this.FLAGS}}static fromJson(t,e){if(!Array.isArray(e?.table_list))return;let r=new this(t).withFlag(...e.flags||[]);return r.table(...e.table_list),e.join_list?.length&&r.join(...e.join_list),e.set_clause&&r.set(e.set_clause),e.where_clause&&r.where(e.where_clause),e.order_by_clause&&r.orderBy(e.order_by_clause),e.limit_clause&&r.limit(e.limit_clause),e.returning_list?.length&&r.returning(...e.returning_list),r}stringify(){let t=["UPDATE"];return this.FLAGS.length&&t.push(this.FLAGS.map(e=>e.replace(/_/g," "))),t.push(this.TABLE_LIST.join(", ")),this.JOIN_LIST.length&&t.push(...this.JOIN_LIST),t.push("SET",this.SET_CLAUSE),this.WHERE_CLAUSE&&t.push("WHERE",this.WHERE_CLAUSE),this.ORDER_BY_CLAUSE&&t.push(this.ORDER_BY_CLAUSE),this.LIMIT_CLAUSE&&t.push("LIMIT",this.LIMIT_CLAUSE),this.RETURNING_LIST.length&&t.push("RETURNING",this.RETURNING_LIST.join(", ")),t.join(" ")}static parse(t,e,r){let[s,i,n,o]=/^UPDATE(\s+WITH\s+UAC)?(?:\s+(IGNORE))?([\s\S]+)$/i.exec(e.trim())||[];if(!s)return;let f=new this(t);i&&f.withFlag("WITH_UAC"),n&&f.withFlag(n);let c=this.mySubstitutePlaceholders(f,o.trim()),l={join:$,set:"SET",where:"WHERE",orderBy:J,limit:"LIMIT",returning:"RETURNING"},{tokens:[h,...p],matches:E}=m.lex(c,Object.values(l).map(A=>typeof A=="string"||A.test?A:A.regex),{useRegex:"i"});for(let A of m.split(h,[","])){let N=r(f,A.trim(),[M]);f.table(N)}for(let A of E){let N=A.replace(/\s+/g,""),d=Object.keys(l).find(_=>new RegExp(_,"i").test(N));if(d==="set"){let _=r(f,p.shift().trim(),[nt]);f.set(_)}else if(d==="where"){let _=r(f,p.shift().trim(),[y,P]);f.where(_)}else if(d==="limit")f.limit(parseInt(p.shift().trim()));else if(d==="returning")f.returning(...m.split(p.shift(),[","]).map(_=>r(f,_.trim(),[K])));else{let _=r(f,`${A} ${p.shift().trim()}`,[l[d]]);f[d](_)}}return f}};var ht=class extends et{DELETE_LIST=[];FROM_LIST=[];USING_LIST=[];JOIN_LIST=[];WHERE_CLAUSE=null;ORDER_BY_CLAUSE=null;LIMIT_CLAUSE=null;RETURNING_LIST=[];$trace(t,...e){return t==="get:node:table"?this.USING_LIST[0]||this.FROM_LIST[0]:super.$trace(t,...e)}delete(...t){return this.build("DELETE_LIST",t,S)}from(...t){return this.build("FROM_LIST",t,[S,M])}using(...t){return this.build("USING_LIST",t,M)}join(t){return this.build("JOIN_LIST",[t],$,"full")}leftJoin(t){return this.build("JOIN_LIST",[t],$,"left")}rightJoin(t){return this.build("JOIN_LIST",[t],$,"right")}innerJoin(t){return this.build("JOIN_LIST",[t],$,"inner")}crossJoin(t){return this.build("JOIN_LIST",[t],$,"cross")}where(...t){return this.build("WHERE_CLAUSE",t,y,"and")}orderBy(...t){return this.build("ORDER_BY_CLAUSE",t,J,"criterion"),this.ORDER_BY_CLAUSE}limit(...t){if(!t.every(e=>typeof e=="number"))throw new Error("Limits must be of type number.");this.LIMIT_CLAUSE=t}returning(...t){return this.build("RETURNING_LIST",t,K)}toJson(){return{delete_list:this.DELETE_LIST.map(t=>t.toJson()),from_list:this.FROM_LIST.map(t=>t.toJson()),using_list:this.USING_LIST.map(t=>t.toJson()),join_list:this.JOIN_LIST.map(t=>t.toJson()),where_clause:this.WHERE_CLAUSE?.toJson(),order_by_clause:this.ORDER_BY_CLAUSE?.toJson(),limit_clause:this.LIMIT_CLAUSE,returning_list:this.RETURNING_LIST,flags:this.FLAGS}}static fromJson(t,e){if(!Array.isArray(e?.from_list))return;let r=new this(t).withFlag(...e.flags||[]);return e.delete_list?.length&&r.delete(...e.delete_list),r.from(...e.from_list),e.using_list?.length&&r.using(...e.using_list),e.join_list?.length&&r.join(...e.join_list),e.where_clause&&r.where(e.where_clause),e.order_by_clause&&r.orderBy(e.order_by_clause),e.limit_clause&&r.limit(e.limit_clause),e.returning_list&&r.returning(...e.returning_list),r}stringify(){let t=["DELETE"];return this.FLAGS.length&&t.push(this.FLAGS.map(e=>e.replace(/_/g," "))),this.DELETE_LIST.length&&t.push(this.DELETE_LIST.join(", ")),t.push("FROM",this.FROM_LIST.join(", ")),this.USING_LIST.length&&t.push("USING",this.USING_LIST.join(", ")),this.JOIN_LIST.length&&t.push(...this.JOIN_LIST),this.WHERE_CLAUSE&&t.push("WHERE",this.WHERE_CLAUSE),this.ORDER_BY_CLAUSE&&t.push(this.ORDER_BY_CLAUSE),this.LIMIT_CLAUSE&&t.push("LIMIT",this.LIMIT_CLAUSE),this.RETURNING_LIST.length&&t.push("RETURNING",this.RETURNING_LIST.join(", ")),t.join(" ")}static parse(t,e,r){let[s,i,n,o]=/^DELETE(\s+WITH\s+UAC)?(?:\s+(IGNORE))?([\s\S]+)$/i.exec(e.trim())||[];if(!s)return;let f=new this(t);i&&f.withFlag("WITH_UAC"),n&&f.withFlag(n);let c=this.mySubstitutePlaceholders(f,o.trim()),l={from:{backtest:"^(?!.*\\s+DISTINCT\\s+$)",test:"FROM"},using:{backtest:"^(?!.*\\s+JOIN\\s+)",test:"USING"},join:$,where:"WHERE",orderBy:J,limit:"LIMIT",returning:"RETURNING"},{tokens:[h,...p],matches:E}=m.lex(c,Object.values(l).map(A=>typeof A=="string"||A.test?A:A.regex),{useRegex:"i"});for(let A of m.split(h,[","])){let N=r(f,A.trim(),[S]);f.delete(N)}for(let A of E){let N=A.replace(/\s+/g,""),d=Object.keys(l).find(_=>new RegExp(_,"i").test(N));if(["from","using"].includes(d))for(let _ of m.split(p.shift(),[","])){let g=d==="from"&&E.some(U=>U.toLowerCase()==="using")?S:M,O=r(f,_.trim(),[g]);f[d](O)}else if(d==="where"){let _=r(f,p.shift().trim(),[y,P]);f.where(_)}else if(d==="limit")f.limit(parseInt(p.shift().trim()));else if(d==="returning")f.returning(...m.split(p.shift(),[","]).map(_=>r(f,_.trim(),[K])));else{let _=r(f,`${A} ${p.shift().trim()}`,[l[d]]);f[d](_)}}return f}};var v=class extends It(F){toJson(){return{name:this.NAME.toJson(),...super.toJson()}}static fromJson(t,e){if(e.name)return super.fromJson(t,e)?.name(e.name)}stringify(){let t=this.getFlag("RESTRICT")||this.getFlag("CASCADE"),r=(s=>{if(s.BASENAME||["SCHEMA","DATABASE"].includes(this.KIND))return s;let i=this.$trace("get:name:database");return s.clone().name([i,s.NAME])})(this.name());return`${this.CLAUSE}${this.getFlag("TEMPORARY")?" TEMPORARY":""} ${this.KIND}${this.hasFlag("IF_EXISTS")?" IF EXISTS":""} ${r}${t?` ${t}`:""}`}static parse(t,e,r){let[s,i,n,o,f,c]=new RegExp(`^${this.CLAUSE}\\s+(TEMPORARY\\s+)?(${this.KINDS.map(h=>h).join("|")})\\s+(?:(IF\\s+EXISTS)\\s+)?([\\s\\S]+?)(?:\\s+(RESTRICT|CASCADE|FORCE))?$`,"i").exec(e.trim())||[];if(!s)return;let l=new this(t,n.toUpperCase());return l.name(r(l,f,[S])),i&&l.withFlag("TEMPORARY"),o&&l.withFlag("IF_EXISTS"),c&&l.withFlag(c),l}static get CLAUSE(){return"DROP"}static KINDS=["TABLE","SCHEMA","DATABASE"]};var tt=class extends Ft{TABLES=[];static get SUBTREE_PROPS(){return["TABLES"]}$trace(t,...e){return t==="get:schema:database"?this:t==="get:name:database"?this.NAME.NAME:super.$trace(t,...e)}table(t){return typeof t=="string"?this.TABLES.find(e=>this.isSame(e.name().NAME,t,"ci")):(this.build("TABLES",[t],k),this.TABLES[this.TABLES.length-1])}diffWith(t){super.diffWith(t);let e=(n,o)=>n.TABLES.find(f=>this.isSame(f.NAME.NAME,o,"ci")),r=n=>new Set(n.TABLES.map(o=>o.NAME.NAME)),s=r(this),i=r(t);for(let n of new Set([...s,...i])){let o=e(this,n),f=e(t,n);s.has(n)&&!i.has(n)?o.drop():s.has(n)?o.diffWith(f):this.table(f.toJson())}return this}alterWith(t){let e=(r,s=!1)=>{let i=this.TABLES.find(n=>this.isSame(n.NAME.NAME,r,"ci"));if(!i&&!s)throw new Error(`TABLE ${r} does not exist.`);return i};for(let r of t.ACTIONS)if(r.CLAUSE==="RENAME")r.KIND?e(r.name()).name(r.argument()):this.name(r.argument());else if(r.CLAUSE==="DROP")e(r.name(),r.hasFlag("IF_EXISTS"))?.drop();else if(r.CLAUSE==="ADD")(!r.hasFlag("IF_NOT_EXISTS")||!e(r.argument().name().NAME,!0))&&this.table(r.argument().toJson());else if(r.CLAUSE==="MODIFY"){let s=e(r.argument().name().NAME,r.hasFlag("IF_EXISTS"));if(!s)continue;s.diffWith(r.argument())}return this}getAlt(){let t=V.fromJson(this.CONTEXT,{kind:"SCHEMA",name:this.NAME.toJson(),actions:[]});this.$NAME&&!this.isSame(this.$NAME.NAME,this.NAME.NAME,"ci")&&t.rename(null,null,this.$NAME.NAME);for(let e of this.TABLES)if(typeof e.keep()!="boolean")t.SUBTREE.push(G.fromJson(this,{kind:"TABLE",argument:e.clone()}));else if(e.keep()===!1)t.SUBTREE.push(v.fromJson(this,{kind:"TABLE",name:e.name().toJson()}));else{let r=e.getAlt();r.length&&t.SUBTREE.push(r)}return t}cascadeAlt(){this.keep(this.keep(),"auto");let t=this.dropped()?"DOWN":this.$NAME&&this.$NAME!==this.NAME?"RENAME":null;for(let e of this.TABLES)e.cascadeAlt();return this.altsCascaded=!0,this}toJson(){return{...super.toJson(),tables:this.TABLES.map(t=>t.toJson())}}static fromJson(t,e){if(!(!e||["tables"].some(r=>r in e&&!Array.isArray(e[r]))))return super.fromJson(t,e,()=>{let r=new this(t);for(let s of e.tables||[])r.table(s);return r})}stringify(){return this.name()+""}static parse(t,e,r){let s=new this(t);return s.name(r(s,e.trim(),[S])),s}};var G=class extends It(At){get NAME(){return this.ARGUMENT?.NAME}stringify(){let t=[super.stringify()];return["SCHEMA","DATABASE"].includes(this.KIND)&&t.push(...this.argument().TABLES.map(e=>this.constructor.fromJson(this,{kind:"TABLE",argument:e}))),t.join(`;
`)}static get CLAUSE(){return"CREATE"}static NODE_TYPES=[k,tt];static KINDS=["TABLE","SCHEMA","DATABASE"]};var me=class extends It(Ot){static KINDS=["TABLE","SCHEMA","DATABASE"]};var ze=[G,V,v,me,j,gt,ht,H,...I.Types];var pe=class{static grammar=ze;static parse(t,e,r,s={}){if(!e?.length)return;let i=r?.length?r:this.grammar;for(let n of i){let o=this.parseOne(t,e,n,s);if(o)return s.log&&console.log(".................",e,".................>",o.constructor.name),o}if(s.assert!==!1)throw new SyntaxError(e)}static parseOne(t,e,r,s={}){return r.parse(t,e,(i,n,o,f={})=>this.parse(i,n,o,{...s,...f}))}};var Zt=class{constructor(t,e,r="backward"){Object.defineProperty(this,"$",{value:{client:t,json:e,direction:r}})}get client(){return this.$.client}get direction(){return this.$.direction}get id(){return this.$.json.id}get databaseTag(){return this.$.json.database_tag}get versionTag(){return this.$.json.version_tag}get versionMax(){return this.$.json.version_max}get cursor(){return this.$.json.$cursor}get description(){return this.$.json.savepoint_description}get savepointDate(){return this.$.json.savepoint_date}get rollbackDate(){return this.$.json.rollback_date}get rollbackEffect(){let t=typeof this.$.json.keep!="boolean"?["DROP","RECREATE"]:this.$.json.keep===!1?["RECREATE","DROP"]:["ALTER"];return this.direction==="forward"?t.reverse()[0]:t[0]}get rollbackQuery(){let t=tt.fromJson(this.client,this.schema());return this.direction!=="forward"&&(t.reverseAlt(!0),t.keep(t.keep(),"auto")),t.keep()===!1?v.fromJson(this.client,{kind:"SCHEMA",name:t.name()}).withFlag(this.client.params.dialect==="mysql"?"":"CASCADE"):t.keep()===!0?t.getAlt().with({resultSchema:t}):G.fromJson(this.client,{kind:"SCHEMA",argument:t})}name(t=!1){return t?this.direction==="forward"&&this.$.json.$name||this.$.json.name:this.direction!=="forward"&&this.$.json.$name||this.$.json.name}schema(){let{name:t,$name:e,tables:r=[],keep:s}=this.$.json;return{name:t,...e?{$name:e}:{},tables:r,keep:s}}toJson(){let{id:t,database_tag:e,version_tag:r,version_max:s,$cursor:i,savepoint_description:n,savepoint_date:o,rollback_date:f}=this.$.json;return{id:t,name:this.name(),databaseTag:e,versionTag:r,versionMax:s,cursor:i,description:n,savepointDate:o,rollbackDate:f,rollbackEffect:this.rollbackEffect}}async isNextPointInTime(){return(await this.client.database(this.name()).savepoint({direction:this.direction})||{}).id===this.$.json.id}async rollback(){if(!await this.isNextPointInTime())throw new Error("Invalid rollback order.");await this.client.query(this.rollbackQuery,{noCreateSavepoint:!0});let t=[this.client.constructor.OBJ_INFOSCHEMA_DB,"database_savepoints"].join("."),e=await this.client.query(`UPDATE ${t} SET rollback_date = ${this.direction==="forward"?"NULL":"now()"} WHERE id = '${this.$.json.id}' RETURNING rollback_date`);return this.$.json.rollback_date=e[0].rollback_date,!0}};var Ee=class{static get OBJ_INFOSCHEMA_DB(){return"obj_information_schema"}constructor(t,e={}){Object.defineProperty(this,"$",{value:{driver:t,params:e}})}get driver(){return this.$.driver}get params(){return this.$.params}$trace(t,...e){if(t==="get:api:client")return this;if(t==="get:client:kind")return this.constructor.kind}database(t,e={}){return new this.constructor.Database(this,...arguments)}async databases(){return[]}async hasDatabase(t){return(await this.databases()).includes(t)}async createDatabase(t,e={}){if(typeof t=="string")t={name:t};else if(typeof t?.name!="string")throw new Error("createDatabase() called with invalid arguments.");let r=G.fromJson(this,{kind:"SCHEMA",argument:t});return e.ifNotExists&&r.withFlag("IF_NOT_EXISTS"),await this.query(r,e)}async alterDatabase(t,e,r={}){if(typeof e!="function")throw new Error("alterDatabase() called with invalid arguments.");if(typeof t=="string")t={name:t};else if(typeof t?.name!="string")throw new Error("alterDatabase() called with invalid arguments.");let s=await this.describeDatabase(t.name,t.tables);if(!s)throw new Error(`Database "${t.name}" does not exist.`);let i=tt.fromJson(this,s)?.keep(!0,!0);await e(i);let n=i.getAlt().with({resultSchema:i});if(n.length)return await this.query(n,r)}async dropDatabase(t,e={}){if(typeof t!="string")throw new Error(`dropDatabase() called with an invalid name: ${t}.`);let r=v.fromJson(this,{kind:"SCHEMA",name:t});return e.ifExists&&r.withFlag("IF_EXISTS"),e.cascade&&r.withFlag("CASCADE"),await this.query(r,e)}async describeDatabase(t,e=["*"]){return this.describeDatabaseCallback(async(r,s)=>{let i=s&&await this.database(r).describeTable(s)||[];return{name:r,tables:i}},...arguments)}async describeDatabaseCallback(t,e,r=["*"]){let s;typeof e=="string"?s=[{name:e,tables:r}]:Array.isArray(e)?s=e.map(c=>typeof c=="object"?c:{name:c}):s=[].concat(e);let i=s.length===1&&s[0].name!=="*",n=s.length===1&&s[0].name==="*",o=await this.databases(),f=await Promise.all(o.map(c=>{let l=n?{name:c,tables:s[0].tables}:s.find(h=>h.name.toLowerCase()===c.toLowerCase());return l&&t(l.name,l.tables)}).filter(c=>c));return i?f[0]:f}async queryCallback(t,e,r={}){if(typeof e=="string")e=pe.parse(this,e,null,{log:r.log});else if(!(e instanceof T))throw new Error("query() called with invalid arguments.");let s={},i=f=>f&&!new RegExp(f,"i").test(this.constructor.OBJ_INFOSCHEMA_DB)&&(!r.noCreateSavepoint||r.$resultSchema==="always");if(((f,c)=>c.some(l=>f instanceof l))(e,[G,V,v])){let f=e.KIND==="TABLE"&&e.$trace("get:name:table"),c=e.$trace("get:name:database")||e.KIND==="TABLE"&&await this.basenameGet(f,!0);if(["DATABASE","SCHEMA"].includes(e.KIND)&&i(c)){if(e instanceof v){let l=tt.fromJson(this,await this.describeDatabase(c)).drop();e.with({resultSchema:l})}else if(e instanceof V&&!e.resultSchema){let l=e.ACTIONS.map(p=>p.CLAUSE==="MODIFY"?p.ARGUMENT.$trace("get:name:table"):p.CLAUSE==="DROP"?p.name():null).filter(p=>p),h=tt.fromJson(this,await this.describeDatabase(c,l)).keep(!0,!0).alterWith(e);e.with({resultSchema:h})}else e instanceof G&&e.with({resultSchema:e.ARGUMENT});s.savepoint=e.resultSchema}else if(e.KIND==="TABLE"&&i(c)){let l=this.database(c);if(e instanceof v&&c){let h=k.fromJson(l,await l.describeTable(f)).drop();e.with({resultSchema:h})}else if(e instanceof V&&!e.resultSchema&&c){let h=k.fromJson(l,await l.describeTable(f)).keep(!0,!0).alterWith(e);e.with({resultSchema:h})}else e instanceof G&&c&&e.with({resultSchema:e.ARGUMENT});!r.noCreateSavepoint&&c&&(s.savepoint=tt.fromJson(this,{name:l.name,tables:[e.resultSchema]}).keep(!0))}}let o=await t(e,r);return!r.noCreateSavepoint&&s.savepoint?(s.savepoint.keep(s.savepoint.keep(),"auto"),await this.createSavepoint(s.savepoint,r.description)):o}async basenameResolution(t=[]){return arguments.length?(this.$.resolutionPath=[].concat(t),this):new BasenameResolutor(this.$.basenameResolution)}async basenameGet(t,e=!1){let r=await this.basenameResolution();return await r.reduce(async(s,i)=>await s||await this.database(i).hasTable(t)?i:null,null)||(e?r.find(s=>!s.startsWith("$"))||r[0]:null)}async getSavepoints(t={}){let e=this.constructor.OBJ_INFOSCHEMA_DB;if(!await this.hasDatabase(e))return[];let r=[e,"database_savepoints"].join(".");return(await this.query(`
            SELECT id, database_tag, name, ${S.fromJson(this,"$name")}, keep, version_tag, version_max, CONCAT(rank_for_cursor, '/', total) AS ${S.fromJson(this,"$cursor")}, savepoint_description, tables, savepoint_date, rollback_date FROM (
                SELECT *,
                ROW_NUMBER() OVER (PARTITION BY database_tag ORDER BY rollback_date IS NOT NULL ${t.direction==="forward"?"DESC":"ASC"}, version_tag ${t.direction==="forward"?"ASC":"DESC"}) AS rank_for_target,
                ROW_NUMBER() OVER (PARTITION BY database_tag ORDER BY version_tag ASC) AS rank_for_cursor,
                MAX(version_tag) OVER (PARTITION BY database_tag) AS version_max,
                COUNT(version_tag) OVER (PARTITION BY database_tag) AS total
                FROM ${r}
            ) AS savepoint WHERE rollback_date IS ${t.direction==="forward"?"NOT NULL":"NULL"} AND rank_for_target = 1${t.name?t.direction==="forward"?` AND name = '${t.name}'`:` AND COALESCE(${S.fromJson(this,"$name")}, name) = '${t.name}'`:""}
        `)).map(i=>new Zt(this,i,t.direction))}async createSavepoint(t,e=null){let r=this.constructor.OBJ_INFOSCHEMA_DB;await this.hasDatabase(r)||await this.createDatabase({name:r,tables:[{name:"database_savepoints",columns:[{name:"id",...this.params.dialect==="mysql"?{type:"char(36)",default:{expr:"uuid()"}}:{type:"uuid",default:{expr:"gen_random_uuid()"}},primaryKey:!0},{name:"name",type:["varchar",255],notNull:!0},{name:"$name",type:["varchar",255]},{name:"tables",type:"json"},{name:"keep",type:this.params.dialect==="mysql"?["bit",1]:"boolean"},{name:"savepoint_description",type:["varchar",255]},{name:"database_tag",type:["varchar",12],notNull:!0},{name:"version_tag",type:"int",notNull:!0},{name:"savepoint_date",type:["timestamp",3],notNull:!0},{name:"rollback_date",type:["timestamp",3]}]}]},{noCreateSavepoint:!0});let{name:s,$name:i,...n}=t.toJson(),o={name:s,$name:i,database_tag:null,...n,version_tag:null,savepoint_description:e,savepoint_date:new Date},f=t.NAME,c=await this.database(f).savepoint({direction:"forward"})||await this.database(f).savepoint();if(c){let h=[r,"database_savepoints"].join(".");o.database_tag=c.databaseTag,o.version_tag=c.versionMax+1,c.direction==="forward"?await this.query(`DELETE FROM ${h} WHERE database_tag = '${c.databaseTag}' AND rollback_date IS NOT NULL`):o.version_tag=c.versionTag+1}else o.database_tag=`db:${(0|Math.random()*9e6).toString(36)}`,o.version_tag=1;let l=await this.database(r).table("database_savepoints").insert(o,"*");return new Zt(this,{...l[0],version_max:o.version_tag,$cursor:null})}};var Ae=class{constructor(t,e,r={}){Object.defineProperty(this,"$",{value:{client:t,name:e,params:r}})}get client(){return this.$.client}get name(){return this.$.name}get params(){return this.$.params}$trace(t,...e){return t==="get:api:database"?this:t==="get:name:database"?this.name:this.client.$trace(t,...e)}table(t,e={}){return new this.constructor.Table(this,...arguments)}async tables(){return[]}async hasTable(t){return(await this.tables()).includes(t)}async createTable(t,e={}){if(typeof t?.name!="string")throw new Error("createTable() called with invalid arguments.");let r=G.fromJson(this,{kind:"TABLE",argument:t});return e.ifNotExists&&r.withFlag("IF_NOT_EXISTS"),this.client.query(r,e)}async alterTable(t,e,r={}){if(typeof e!="function"||typeof t!="string")throw new Error("alterTable() called with invalid arguments.");let s=await this.describeTable(t);if(!s)throw new Error(`Table "${t}" does not exist.`);let i=k.fromJson(this,s)?.keep(!0,!0);await e(i);let n=i.getAlt().with({resultSchema:i});if(n.length)return r.ifExists&&n.withFlag("IF_EXISTS"),this.client.query(n,r)}async dropTable(t,e={}){if(typeof t!="string")throw new Error("dropTable() called with invalid arguments.");let r=v.fromJson(this,{kind:"TABLE",name:t});return e.ifExists&&r.withFlag("IF_EXISTS"),e.cascade&&r.withFlag("CASCADE"),this.client.query(r,e)}async savepoint(t={}){return(await this.client.getSavepoints({...t,name:this.name}))[0]}async describeTableCallback(t,e){let r=[].concat(e),s=r.length===1&&r[0]!=="*",i=r.length===1&&r[0]==="*",n=await t(r,i),o=await this.tables(),f=(i?o:r).reduce((c,l)=>{let h=l.toLowerCase(),p=n.find(E=>E.name===h);return!p&&(i||o.includes(h))&&(p={name:h,columns:[],constraints:[],indexes:[]}),c.concat(p||[])},[]);return s?f[0]:f}};var Se=class{constructor(t,e,r={}){this.$={database:t,name:e,params:r}}get database(){return this.$.database}get name(){return this.$.name}get params(){return this.$.params}$trace(t,...e){return t==="get:api:table"?this:t==="get:table:name"?this.name:this.database.$trace(t,...e)}async count(t="*"){let e=await this.select([r=>r.fn("COUNT",t).as("c")]);return(e.rows||e)[0].c}async select(...t){let e=new H(this.database.client);return/^\d+$/.test(t[0])||L(t[0])||Y(t[0])?await this.$resolveWhere(e,t[0]):(e.select(...t[0]||["*"]),await this.$resolveWhere(e,t[1])),e.from([this.database.name,this.name]),await this.database.client.query(e)}async insert(...t){let e=new j(this.database.client),[r=[],s=[],i]=await this.$resolvePayload(...t);r.length&&e.columns(...r);for(let n of s)e.values(...n);return e.into([this.database.name,this.name]),i&&e.returning(i),await this.database.client.query(e)}async upsert(...t){let e=new j(this.database.client),[r=[],s=[],i]=await this.$resolvePayload(...t);r.length&&e.columns(...r);for(let n of s)e.values(...n);return e.onConflict({entries:r.map((n,o)=>[n,s[0][o]])}),i&&e.returning(i),e.into([this.database.name,this.name]),await this.database.client.query(e)}async update(...t){if(t.length<2)throw new Error('A "where" match cannot be ommitted.');let e=new gt(this.database.client);e.table([this.database.name,this.name]);let{where:r,payload:s,returnList:i}=t;await this.$resolveWhere(e,r);for(let[n,o]of Object.entries(s))e.set(n,ve(o,this.params.autoBindings));return i&&e.returning(i),await this.database.client.query(e)}async delete(t,e=null){if(!t)throw new Error('A "where" match cannot be ommitted.');let r=new ht(this.database.client);return r.from([this.database.name,this.name]),await this.$resolveWhere(r,t),e&&r.returning(e),await this.database.client.query(r)}async $resolveWhere(t,e){if(e!==!0){if(/^\d+$/.test(e)){let r=await this.database.describeTable(this.name),s=r.columns?.find(i=>i.primaryKey)?.name||r.constraints?.find(i=>i.type==="PRIMARY_KEY")?.targetColumns[0];if(!s)throw new Error("Cannot resolve primary key name for implied record.");e={[s]:e}}L(e)?t.where(...Object.entries(e).map(([r,s])=>i=>i.equals(r,ve(s,this.params.autoBindings)))):e&&t.where(e)}}async $resolvePayload(...t){let e=[],r=[],s;if(Array.isArray(t[0])&&t[0].every(i=>typeof i=="string")&&Array.isArray(t[1])){if(!t[1].every(i=>Array.isArray(i)))throw new TypeError("Invalid payload format.");[e,r,s]=t.splice(0,3)}else{let i=[].concat(t.shift());if(!L(i[0]))throw new TypeError("Invalid payload format.");e=Object.keys(i[0]),r=i.map(n=>Object.values(n)),s=t.shift()}return r=r.map(i=>i.map(n=>ve(n,this.params.autoBindings))),[e,r,s]}},ve=(u,t)=>u instanceof Date?e=>e.value(u.toISOString().split(".")[0]):t!==!1?e=>e.$bind(0,u):[!0,!1,null].includes(u)?e=>e.literal(u):Array.isArray(u)?e=>e.array(u):L(u)?e=>e.object(u):e=>e.value(u);var Te=class{_pos=0;_eof=!1;_onfinish=[];constructor(t){this._cache=t}get eof(){return!this._cache.length||this._pos===this._cache.length-1}onfinish(t){this._onfinish.push(t)}next(){if(this.eof){this._onfinish.forEach(t=>t()),this._pos=0;return}this._pos++}async fetch(){if(!this.eof)return this._cache[this._pos]}};var de=class extends Te{constructor(t){super([]),this._store=t,this._storeFetch=new Promise(async e=>{this.cache=await this._store.getAll(),e()})}async fetch(){return await this._storeFetch,super.fetch()}};var Ne=class extends Se{getCursor(){return new de(this)}};var _e=class extends Ae{static Table=Ne;async tables(){let t=`SELECT table_name FROM information_schema.tables WHERE table_schema = '${this.name}'`,e=await this.client.driver.query(t);return(e.rows||e).map(r=>r.table_name)}async describeTable(t){return this.describeTableCallback(async(e,r)=>{let[s,i]=this.getDescribeTableSql(e),n=await this.client.driver.query(s),o=await this.client.driver.query(i);return this.formatDescribeTableResult(e,n.rows||n,o.rows||o,[])},...arguments)}getDescribeTableSql(t){let e=`
        SELECT
            COLUMNS.column_name,
            COLUMNS.table_name,
            COLUMNS.ordinal_position,
            COLUMNS.column_default,
            COLUMNS.is_nullable,
            COLUMNS.data_type,
            COLUMNS.character_maximum_length,
            ${this.client.params.dialect==="mysql"?`
            COLUMNS.extra,
            `:`
            COLUMNS.is_identity,
            COLUMNS.identity_generation,
            COLUMNS.identity_start,
            COLUMNS.identity_increment,
            COLUMNS.identity_maximum,
            COLUMNS.identity_minimum,
            COLUMNS.identity_cycle,
            `}
            COLUMNS.is_generated,
            COLUMNS.generation_expression

        FROM INFORMATION_SCHEMA.COLUMNS AS COLUMNS

        WHERE COLUMNS.TABLE_SCHEMA='${this.name}'
            ${t.length&&t[0]!=="*"?`AND COLUMNS.TABLE_NAME IN ('${t.join("','")}')`:""}
        ORDER BY COLUMNS.ordinal_position
        `,r=n=>this.client.params.dialect==="mysql"?n:`ANY_VALUE(${n})`,s=(n,o)=>this.client.params.dialect==="mysql"?`GROUP_CONCAT(${n}${o?` ORDER BY ${o}`:""} SEPARATOR ',')`:`STRING_AGG(${n}, ','${o?` ORDER BY ${o}`:""})`,i=`
        SELECT
            ${r("TABLE_CONSTRAINTS.table_name")} AS table_name,
            ${s("TABLE_CONSTRAINTS_DETAILS.column_name","TABLE_CONSTRAINTS_DETAILS.ordinal_position")} AS column_name,
            TABLE_CONSTRAINTS.constraint_name AS constraint_name,
            ${r("TABLE_CONSTRAINTS.constraint_type")} AS constraint_type,
            ${r("CHECK_CONSTRAINTS_DETAILS.check_clause")} AS check_clause,
                
            ${this.client.params.dialect==="mysql"?`
            ${r("CHECK_CONSTRAINTS_DETAILS.level")} AS check_constraint_level,
            ${s("TABLE_CONSTRAINTS_DETAILS.referenced_column_name")} AS referenced_column_name,
            ${r("TABLE_CONSTRAINTS_DETAILS.referenced_table_name")} AS referenced_table_name,
            ${r("TABLE_CONSTRAINTS_DETAILS.referenced_table_schema")} AS referenced_table_schema,
            `:`
            ${s("RELATION_DETAILS.column_name")} AS referenced_column_name,
            ${r("RELATION_DETAILS.table_name")} AS referenced_table_name,
            ${r("RELATION_DETAILS.table_schema")} AS referenced_table_schema,
            `}
            --${s("RELATION.unique_constraint_name")} AS referenced_constraint_name,
            ${r("RELATION.match_option")} AS match_rule,
            ${r("RELATION.update_rule")} AS update_rule,
            ${r("RELATION.delete_rule")} AS delete_rule

        FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS TABLE_CONSTRAINTS

        LEFT JOIN INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS TABLE_CONSTRAINTS_DETAILS
            ON TABLE_CONSTRAINTS_DETAILS.CONSTRAINT_NAME = TABLE_CONSTRAINTS.CONSTRAINT_NAME
            AND TABLE_CONSTRAINTS_DETAILS.TABLE_NAME = TABLE_CONSTRAINTS.TABLE_NAME
            AND TABLE_CONSTRAINTS_DETAILS.CONSTRAINT_SCHEMA = TABLE_CONSTRAINTS.CONSTRAINT_SCHEMA
            AND TABLE_CONSTRAINTS_DETAILS.CONSTRAINT_CATALOG = TABLE_CONSTRAINTS.CONSTRAINT_CATALOG
        LEFT JOIN INFORMATION_SCHEMA.CHECK_CONSTRAINTS AS CHECK_CONSTRAINTS_DETAILS
            ON CHECK_CONSTRAINTS_DETAILS.CONSTRAINT_NAME = TABLE_CONSTRAINTS.CONSTRAINT_NAME
            AND CHECK_CONSTRAINTS_DETAILS.CONSTRAINT_SCHEMA = TABLE_CONSTRAINTS.CONSTRAINT_SCHEMA
            AND CHECK_CONSTRAINTS_DETAILS.CONSTRAINT_CATALOG = TABLE_CONSTRAINTS.CONSTRAINT_CATALOG

        LEFT JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS RELATION
            ON RELATION.CONSTRAINT_NAME = TABLE_CONSTRAINTS.CONSTRAINT_NAME
            AND RELATION.CONSTRAINT_SCHEMA = TABLE_CONSTRAINTS.CONSTRAINT_SCHEMA
            AND RELATION.CONSTRAINT_CATALOG = TABLE_CONSTRAINTS.CONSTRAINT_CATALOG
        ${this.client.params.dialect==="mysql"?"":`
        LEFT JOIN INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS RELATION_DETAILS
            ON RELATION_DETAILS.CONSTRAINT_NAME = RELATION.UNIQUE_CONSTRAINT_NAME
            AND RELATION_DETAILS.CONSTRAINT_SCHEMA = RELATION.UNIQUE_CONSTRAINT_SCHEMA
            AND RELATION_DETAILS.CONSTRAINT_CATALOG = RELATION.UNIQUE_CONSTRAINT_CATALOG
            `}

        WHERE TABLE_CONSTRAINTS.CONSTRAINT_SCHEMA = '${this.name}'
            ${t.length&&t[0]!=="*"?`AND TABLE_CONSTRAINTS.TABLE_NAME IN ('${t.join("','")}')`:""}
        GROUP BY (TABLE_CONSTRAINTS.constraint_name)
        `;return[e,i]}formatDescribeTableResult(t,e,r,s){let i=o=>o==="character varying"?"varchar":o==="integer"?"int":o,n=(o,f=!1)=>({...f?{}:{name:o.constraint_name},targetTable:[o.referenced_table_schema,o.referenced_table_name],targetColumns:o.referenced_column_name.split(",").map(c=>c.trim()),...o.match_rule!=="NONE"?{matchRule:o.match_rule}:{},updateRule:o.update_rule,deleteRule:o.delete_rule});return(t.length&&t[0]!=="*"?t:[...new Set(e.map(o=>o.table_name))]).map(o=>{let f=e.filter(g=>g.table_name===o),c=r.filter(g=>g.table_name===o),l=s.filter(g=>g.table_name===o),h=f.map(g=>g.column_name),p=g=>{let O=(g.check_clause.replace(/(["'])(?:(?=(\\?))\2.)*?\1/g,"").match(/\w+/g)||[]).map(U=>U.toLowerCase());return g.columns=Ce(h,O),g},[E,A,N,d]=c.reduce(([g,O,U,Rt],C)=>C.constraint_type==="PRIMARY KEY"?[g.concat(C),O,U,Rt]:C.constraint_type==="UNIQUE"?[g,O.concat(C),U,Rt]:C.constraint_type==="FOREIGN KEY"?[g,O,U.concat(C),Rt]:C.constraint_type==="CHECK"&&!(this.client.params.dialect==="postgres"&&/^[\d_]+not_null/.test(C.constraint_name))?[g,O,U,Rt.concat(p(C))]:[g,O,U,Rt],[[],[],[],[]]),_={name:o,columns:f.reduce((g,O)=>{let U={},Rt=O.extra?.split(",").map(C=>C.trim())||[];return Rt.includes("INVISIBLE"),g.concat({name:O.column_name,type:O.character_maximum_length?[i(O.data_type),O.character_maximum_length]:i(O.data_type),...E.length===1&&E[0].column_name===O.column_name&&(U.pKeys=E.pop())?{primaryKey:{name:U.pKeys.constraint_name}}:{},...(U.uKeys=A.filter(C=>C.column_name===O.column_name)).length===1&&(A=A.filter(C=>C!==U.uKeys[0]))?{uniqueKey:{name:U.uKeys[0].constraint_name}}:{},...(U.fKeys=N.filter(C=>C.column_name===O.column_name)).length===1&&(N=N.filter(C=>C!==U.fKeys[0]))?{references:n(U.fKeys[0])}:{},...(U.cKeys=d.filter(C=>C.check_constraint_level!=="Table"&&C.columns.length===1&&C.columns[0]===O.column_name)).length===1&&(d=d.filter(C=>C!==U.cKeys[0]))?{check:{name:U.cKeys[0].constraint_name,expr:U.cKeys[0].check_clause}}:{},...O.is_identity==="YES"?{identity:{always:O.identity_generation==="ALWAYS"}}:{},...O.is_generated!=="NEVER"?{expression:{always:O.is_generated==="ALWAYS",expr:O.generation_expression}}:{},...Rt.includes("auto_increment")?{autoIncrement:!0}:{},...O.is_nullable==="NO"?{notNull:!0}:{},...O.column_default&&O.column_default!=="NULL"?{default:{expr:O.column_default}}:{}})},[]),constraints:[],indexes:[]};return _.constraints.push(...[...E,...A,...N].map(g=>({name:g.constraint_name,type:g.constraint_type==="UNIQUE"?"UNIQUE_KEY":g.constraint_type.replace("_",""),columns:g.column_name.split(",").map(O=>O.trim()),...g.constraint_type==="FOREIGN KEY"?{references:n(g,!0)}:{}}))),_.constraints.push(...d.map(g=>({name:g.constraint_name,type:g.constraint_type,columns:g.columns,expr:g.check_clause}))),_})}};var ge=class extends Ee{constructor(t,e={}){if(typeof t!="object")throw new Error("The options.driver parameter is required and must be an object.");if(typeof t.query!="function")throw new Error("The provided driver must expose a .query() function.");super(t,e)}static kind="sql";static Database=_e;async databases(){let e=await this.driver.query("SELECT schema_name FROM information_schema.schemata");return(e.rows||e).map(r=>r.schema_name)}async query(t,e={}){return await this.queryCallback(async(r,s)=>{r.expandable&&await r.expand(!0);let i=[j,gt,ht].some(c=>r instanceof c),n;if(i&&this.params.dialect==="mysql"&&r.RETURNING_LIST.length){if(this.params.returningClause===!1)throw new Error('Support for the "RETURNING" clause has been disabled.');[r,n]=await this.$myReturningMagic(r)}let o=(r.BINDINGS||[]).concat(s.values||[]).map(c=>Array.isArray(c)||typeof c=="object"&&c?JSON.stringify(c):c),f=await this.driver.query(r.toString(),o);return n&&(f=await n()),r instanceof H||i&&r.RETURNING_LIST.length||n?f.rows||f:"rowCount"in f?f.rowCount:f.affectedRows},...arguments)}async $myReturningMagic(t){t=t.clone();let e=t.RETURNING_LIST.splice(0),r=t.$trace("get:name:table"),s=t.$trace("get:name:database"),i=S.fromJson(this,[s,r]);if(t instanceof ht){let c=await this.driver.query(`SELECT ${e.join(", ")} FROM ${i}${t.WHERE_CLAUSE?` WHERE ${t.WHERE_CLAUSE}`:""}`);return[t,()=>c]}let n="obj_column_for_returning_clause_support",o=S.fromJson(this,n);await this.driver.query(`ALTER TABLE ${i} ADD COLUMN ${o} char(36) INVISIBLE`);let f=(0|Math.random()*9e6).toString(36);if(!t.SET_CLAUSE&&t instanceof j){if(!t.COLUMNS_CLAUSE&&(t.SELECT_CLAUSE||t.VALUES_LIST.length))throw new Error("Support for the RETURNING clause currently requires explicit column list in INSERT statements.");if(t.columns(n),t.SELECT_CLAUSE)t.SELECT_CLAUSE.select(c=>c.value(f));else if(t.VALUES_LIST.length)for(let c of t.VALUES_LIST)c.list(l=>l.value(f));else t.values(f)}else t.set(n,c=>c.value(f));return t instanceof j&&t.ON_CONFLICT_CLAUSE&&t.ON_CONFLICT_CLAUSE.set(n,c=>c.value(f)),[t,async()=>{let c=await this.driver.query(`SELECT ${e.join(", ")} FROM ${i} WHERE ${o} = '${f}'`);return await this.driver.query(`ALTER TABLE ${i} DROP COLUMN ${o}`),c}]}async basenameResolution(t=[]){if(arguments.length){t=[].concat(t).map(o=>S.fromJson(this,o));let n=this.params.dialect==="mysql"?`USE ${t[0]}`:`SET SEARCH_PATH TO ${t.join(",")}`;return await this.driver.query(n)}let e,r;this.params.dialect==="mysql"?(e="SELECT database() AS default_db",r="default_db"):(e="SHOW SEARCH_PATH",r="search_path",e="SELECT current_setting('SEARCH_PATH')",r="current_setting");let s=await this.driver.query(e),i=((s.rows||s)[0]||{})[r];return m.split(i,[","]).map(n=>S.parseIdent(this,n.trim())[0])}};self.webqit||(self.webqit={});self.webqit.ObjectiveSQL={SQL:ge};})();
//# sourceMappingURL=main.js.map
