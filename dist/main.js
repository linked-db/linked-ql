(()=>{var bs=Object.defineProperty;var z=(n,e)=>{for(var r in e)bs(n,r,{get:e[r],enumerable:!0})};var Br={};z(Br,{CTE:()=>Pe,CTEBinding:()=>Be,PGCycleClause:()=>Le,PGSearchClause:()=>Me});function $(n){return!Array.isArray(n)&&typeof n=="object"&&n}function oe(n,e,r=null,t=null){if(Array.isArray(n)&&Array.isArray(e))return n.length===e.length&&(e=e.slice(0).sort())&&n.slice(0).sort().every((a,o)=>oe(a,e[o],r,t));if(typeof n?.jsonfy=="function"&&(n=n.jsonfy()),typeof e?.jsonfy=="function"&&(e=e.jsonfy()),$(n)&&$(e)){let a={indexs_a:Object.keys(n),indexs_b:Object.keys(e)};if(t?.length){let o=[].concat(t);a.indexs_a=a.indexs_a.filter(s=>!o.includes(s)),a.indexs_b=a.indexs_b.filter(s=>!o.includes(s))}return a.indexs_a.length===a.indexs_b.length&&a.indexs_a.reduce((o,s)=>o&&oe(n[s],e[s],r,t),!0)}return typeof n=="string"&&typeof e=="string"&&r==="ci"?n.toLowerCase()===e.toLowerCase():n===e}function os(n){let e=n.replace(/([a-z0-9])([A-Z])/g,"$1_$2");return e=e.replace(/([A-Z])([A-Z][a-z])/g,"$1_$2"),e.toUpperCase()}var Mr={};z(Mr,{TOK_TYPES:()=>we,aggrFunctionNames:()=>Ps,dataTypes:()=>Bs,functionNames:()=>Ms,keywords:()=>Ls,operators:()=>$s,statements:()=>Ds});var we={data_type:{type:"data_type",value:void 0,resolve(){return this}},identifier:{type:"identifier",value:void 0,delim:[void 0],resolve({dialect:n,mysqlAnsiQuotes:e}={}){return{...this,delim:this.delim.concat(n==="mysql"?e?['"',"`"]:["`"]:['"'])}}},keyword:{type:"keyword",value:void 0,resolve(){return this}},operator:{type:"operator",value:void 0,prec:void 0,assoc:void 0,resolve(){return this}},punctuation:{type:"punctuation",value:void 0,resolve(){return this}},string_literal:{type:"string_literal",value:void 0,delim:["'"],modifier:[void 0],resolve({dialect:n,mysqlAnsiQuotes:e}={}){return{...this,delim:this.delim.concat(n==="mysql"?e?[]:['"']:[/^(\$\$|\$[a-zA-Z_][a-zA-Z0-9_]*\$)$/]),modifier:this.modifier.concat(n==="mysql"?["N"]:["E"])}}},number_literal:{type:"number_literal",value:void 0,match({value:n}){return!!/^[+-]?(?:\d+(?:\.\d*)?|\.\d+)(?:[eE][+-]?\d+)?$/.test(n)}},null_literal:{type:"null_literal",value:void 0,resolve(){return this}},unknown_literal:{type:"unknown_literal",value:void 0,resolve(){return this}},bool_literal:{type:"bool_literal",value:void 0,resolve(){return this}},hex_literal:{type:"hex_literal",value:void 0,resolve(){return this}},bit_literal:{type:"bit_literal",value:void 0,resolve(){return this}},bind_var:{type:"bind_var",value:void 0,delim:[],resolve({dialect:n}={}){return{...this,delim:this.delim.concat(n==="mysql"?["?"]:["$"])}}},version_spec:{type:"version_spec",value:void 0,delim:[void 0,"'"],resolve(){return this}},user_var:{type:"user_var",value:void 0,delim:[void 0],resolve({dialect:n}={}){return{...this,delim:this.delim.concat(n==="mysql"?["'"]:[])}}},system_var:{type:"system_var",value:void 0,resolve(){return this}},brace_block:{type:"brace_block",value:void 0,resolve(){return this}},bracket_block:{type:"bracket_block",value:void 0,resolve(){return this}},parent_block:{type:"paren_block",value:void 0,resolve(){return this}},block_comment:{type:"block_comment",value:void 0,resolve(){return this}},line_comment:{type:"line_comment",value:void 0,delim:["--"],resolve({dialect:n}={}){return{...this,delim:this.delim.concat(n==="mysql"?["#"]:[])}}}},Ds={common:["ALTER","CREATE","DROP","SELECT","INSERT","UPSERT","UPDATE","MERGE","DELETE","BEGIN","COMMIT","ROLLBACK","RELEASE","DESCRIBE","EXPLAIN","USE"],postgres:["ANALYZE","CLUSTER","COMMENT ON","REFRESH","REINDEX","VACUUM"],mysql:["ANALYZE","FLUSH","LOCK","OPTIMIZE","RENAME","REPAIR","RESET","SET","SHOW","TRUNCATE","UNLOCK"]},Ls={common:["ALL","ON","NO","KEY","ANY","AS","BY","ASC","CASE","CAST","DEFAULT","DESC","DO","DISTINCT","ELSE","END","ESCAPE","FIRST","LAST","FOLLOWING","FOR","HAVING","FILTER","SHARE","JOIN","SEPARATOR","SKIP","LOCKED","NOWAIT","OF","RECURSIVE","LIMIT","LOAD","NEXT","NOTHING","NULLS","OFFSET","ONLY","TIES","OVER","PARTITION","PRECEDING","RANGE","RETURNING","ROW","ROWS","EXCLUDE","SET","SOME","THEN","USING","MATERIALIZED","MODE","TEMPORARY","WITHIN","BOTH","DATABASE","TABLE","COLUMN","INDEX","SEQUENCE","TRIGGER","VIEW","SAVEPOINT","VALUES","WHEN","WHERE","WINDOW","WITH","WITHOUT","TO","INTO","FROM","GROUP","ORDER","PARTITION","BREADTH","DEPTH","INNER","LEFT","RIGHT","OUTER","FULL","CROSS","NATURAL","NO OTHERS","ROLLUP","UNBOUNDED","CURRENT ROW","GROUPS","IGNORE","RESPECT"],postgres:["ARRAY","GROUPING SETS","CUBE","TABLESAMPLE","REPEATABLE","SEARCH","LATERAL","ORDINALITY","OVERLAPS","SIMILAR","BERNOULLI","SYSTEM","TABLESPACE","UNLOGGED","PERFORM","CURRENT OF","TYPE","EXTENSION","IMMUTABLE","STABLE","VOLATILE","CYCLE","CONFLICT","TEMP","TIME ZONE","FETCH","LOCAL"],mysql:["LOCK","RENAME","REPLACE","SHOW","UNLOCK","HIGH_PRIORITY","CACHE","SQL_CACHE","SQL_NO_CACHE","STRAIGHT_JOIN","DATABASES","TABLES","COLUMNS","STATUS","PROCEDURE","FUNCTION","AUTO_INCREMENT","CHARACTER SET","ENGINE","VALUE","DUPLICATE"]},Ms={common:["NOW","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","IF","NULLIF","IFNULL","COALESCE","GREATEST","LEAST","CONCAT","GROUPING","CONCAT_WS","FORMAT","UNNEST","MD5","SHA1","ST_ASTEXT","ST_ASGEOJSON","ST_GEOMFROMTEXT","ST_WITHIN","ST_CONTAINS","ST_INTERSECTS","ST_DISTANCE","ST_BUFFER"],postgres:["MAKE_DATE","MAKE_TIME","MAKE_TIMESTAMP","TO_JSON","TO_JSONB","JSON_TYPEOF","JSONB_TYPEOF","JSON_BUILD_ARRAY","JSONB_BUILD_ARRAY","JSON_BUILD_OBJECT","JSONB_BUILD_OBJECT","JSON_POPULATE_RECORD","JSONB_POPULATE_RECORD","JSON_PATH_QUERY","JSON_PATH_EXISTS"],mysql:["CURDATE","CURTIME","SYSDATE","STR_TO_DATE","MAKEDATE","MAKETIME","JSON_ARRAY","JSON_OBJECT","JSON_EXTRACT","JSON_UNQUOTE","JSON_SET","JSON_INSERT","JSON_REPLACE","JSON_REMOVE","JSON_SEARCH","JSON_CONTAINS","JSON_CONTAINS_PATH","JSON_KEYS","JSON_ARRAY_APPEND","JSON_ARRAY_INSERT","JSON_DEPTH","JSON_LENGTH","JSON_MERGE_PRESERVE","JSON_MERGE_PATCH","JSON_PRETTY","JSON_STORAGE_FREE"]},Ps={common:["COUNT","SUM","AVG","MIN","MAX","COVAR_POP","COVAR_SAMP","CORR","ROW_NUMBER","BIT_AND","BIT_OR","STDDEV_POP","STDDEV_SAMP","VAR_POP","VAR_SAMP","VARIANCE","STD","LEAD","LAG","NTILE","FIRST_VALUE","LAST_VALUE"],postgres:["ARRAY_AGG","STRING_AGG","REGR_SLOPE","PERCENTILE_CONT","PERCENTILE_DISC","MODE","RANK","DENSE_RANK","EVERY","BOOL_AND","BOOL_OR","JSON_AGG","JSON_OBJECT_AGG","JSONB_OBJECT_AGG","XMLAGG"],mysql:["GROUP_CONCAT","BIT_XOR","JSON_ARRAYAGG","JSON_OBJECTAGG"]},Bs={common:["SMALLINT","INTEGER","INT","BIGINT","DECIMAL","DEC","NUMERIC","REAL","FLOAT","DATE","TIME","TIMESTAMP","INTERVAL","CHAR","CHARACTER","VARCHAR","TEXT","BINARY","VARBINARY","BOOLEAN","JSON","GEOMETRY","POINT","LINESTRING","POLYGON","DOUBLE PRECISION","CHARACTER VARYING"],postgres:["SERIAL","BIGSERIAL","MONEY","BIT","CIDR","INET","MACADDR","MACADDR8","TIMESTAMPTZ","TIMETZ","TSVECTOR","TSQUERY","UUID","XML","INT4RANGE","INT8RANGE","NUMRANGE","TSRANGE","TSTZRANGE","DATERANGE","BOX","PATH","CIRCLE","LINE","LSEG","POLYGON","OID","BIT VARYING","JSONB","REGCLASS"],mysql:["TINYINT","MEDIUMINT","BIT","YEAR","DATETIME","TINYTEXT","QUERY","MEDIUMTEXT","LONGTEXT","TINYBLOB","BLOB","MEDIUMBLOB","LONGBLOB","ENUM","GEOMETRYCOLLECTION","MULTIPOINT","MULTILINESTRING","MULTIPOLYGON","BOOL"]},$s={common:[["<~",{prec:90,assoc:"left"}],["~>",{prec:90,assoc:"right"}],["BETWEEN",{prec:85,assoc:"left"}],["EXISTS",{prec:83,assoc:"left"}],["UNIQUE",{prec:83,assoc:"left"}],["NOT",{prec:80,assoc:"right"}],["*",{prec:70,assoc:"left"}],["/",{prec:70,assoc:"left"}],["%",{prec:70,assoc:"left"}],["+",{prec:60,assoc:"left"}],["-",{prec:60,assoc:"left"}],["&",{prec:60,assoc:"left"}],["|",{prec:60,assoc:"left"}],["<<",{prec:60,assoc:"left"}],[">>",{prec:60,assoc:"left"}],["=",{prec:50,assoc:"left"}],["!=",{prec:50,assoc:"left"}],["<>",{prec:50,assoc:"left"}],["<",{prec:50,assoc:"left"}],["<=",{prec:50,assoc:"left"}],[">",{prec:50,assoc:"left"}],[">=",{prec:50,assoc:"left"}],["IS",{prec:50,assoc:"left"}],["IS NOT",{prec:50,assoc:"left"}],["DISTINCT FROM",{prec:50,assoc:"left"}],["IN",{prec:50,assoc:"left",negatable:!0}],["LIKE",{prec:50,assoc:"left",negatable:!0}],["AND",{prec:40,assoc:"left"}],["OR",{prec:30,assoc:"left"}],["INTERSECT",{prec:20,assoc:"left"}],["UNION",{prec:10,assoc:"left"}],["EXCEPT",{prec:10,assoc:"left"}]],postgres:[["COLLATE",{prec:83,assoc:"left"}],["||",{prec:60,assoc:"left"}],["::",{prec:100,assoc:"left"}],["AT",{prec:95,assoc:"left"}],["^",{prec:90,assoc:"left"}],["#",{prec:60,assoc:"left"}],["->",{prec:80,assoc:"left"}],["->>",{prec:80,assoc:"left"}],["#>",{prec:80,assoc:"left"}],["#>>",{prec:80,assoc:"left"}],["@>",{prec:80,assoc:"left"}],["<@",{prec:80,assoc:"left"}],["?",{prec:80,assoc:"left"}],["?|",{prec:80,assoc:"left"}],["?&",{prec:80,assoc:"left"}],["-@",{prec:80,assoc:"left"}],["#-",{prec:80,assoc:"left"}],["@?",{prec:80,assoc:"left"}],["@@",{prec:80,assoc:"left"}],["ILIKE",{prec:50,assoc:"left",negatable:!0}],["~",{prec:50,assoc:"left"}],["!~",{prec:50,assoc:"left"}],["~*",{prec:50,assoc:"left"}],["!~*",{prec:50,assoc:"left"}],["SIMILAR TO",{prec:50,assoc:"left"}],["&&",{prec:60,assoc:"left"}],["<->",{prec:60,assoc:"left"}],["@",{prec:60,assoc:"left"}],["&<",{prec:60,assoc:"left"}],["&>",{prec:60,assoc:"left"}],["|-",{prec:60,assoc:"left"}],["-|",{prec:60,assoc:"left"}],["<<",{prec:60,assoc:"left"}],[">>",{prec:60,assoc:"left"}],["<<|",{prec:60,assoc:"left"}],["|>>",{prec:60,assoc:"left"}],["&<|",{prec:60,assoc:"left"}],["|&>",{prec:60,assoc:"left"}],["~=",{prec:50,assoc:"left"}],["?#",{prec:60,assoc:"left"}],["?-",{prec:60,assoc:"left"}],["?-|",{prec:60,assoc:"left"}],["?|",{prec:60,assoc:"left"}],["?||",{prec:60,assoc:"left"}],["#",{prec:60,assoc:"left"}],["##",{prec:60,assoc:"left"}],["@-@",{prec:60,assoc:"left"}]],mysql:[["DIV",{prec:70,assoc:"left"}],["MOD",{prec:70,assoc:"left"}],["BINARY",{prec:90,assoc:"right"}],["^",{prec:80,assoc:"left"}],["~",{prec:85,assoc:"right"}],["<=>",{prec:50,assoc:"left"}],["REGEXP",{prec:50,assoc:"left"}],["RLIKE",{prec:50,assoc:"left"}],["!",{prec:80,assoc:"right"}],["XOR",{prec:40,assoc:"left"}],["&&",{prec:40,assoc:"left"}],["||",{prec:30,assoc:"left"}],[":=",{prec:10,assoc:"right"}],["SOUNDS LIKE",{prec:50,assoc:"left"}]]};var be=class{buffer="";cursor=0;line=1;column=1;mysqlBindingIndex=0;nestingContext=[];nextTokenEscape=0;next(e=1,r=!1){r&&(this.line++,this.column=0),this.column+=e,this.cursor+=e,this.nextTokenEscape===1?this.nextTokenEscape=2:this.nextTokenEscape===2&&(this.nextTokenEscape=0)}},ve=class{#e;#s;#o=!1;#t=!1;#l=!1;#r=null;#a=[];#n;#i=[];constructor(e,{state:r,...t}={}){this.#e=e,this.#s=t}[Symbol.asyncIterator](){return this}get options(){return this.#s}get locked(){return this.#o}get started(){return this.#t}get done(){return this.#l&&!this.#i.length}previous(){return this.#a[this.#a.length-1]}current(){return this.#n}async next(){this.#u("next()"),this.#t=!0;let e,r=!1;return this.#i.length?(this.#p(this.#n),this.#n=this.#y(),e=this.#n):({value:e,done:r}=await this.#e.next(),this.#p(this.#n),this.#n=e,this.#l=r),this.#r!==null&&e?.type.endsWith("_block")&&e.value.savepoint(),{value:e,done:r}}async match(e,r=void 0){let[t,a,o]=typeof arguments[0]=="number"?arguments:[0,e,r],s=u=>u&&(Array.isArray(a)?a.includes(u.type):a===u.type)&&(o===void 0||(Array.isArray(o)?o.includes(u.value)||o.includes(void 0):o===u.value))&&u||void 0;if(t===1/0){let u=0,c;for(;c=await this.peek(u++);)if(s(c))return c;return}return s(t?await this.peek(t):this.current())}async peek(e=1){if(e===0)return this.#n;let r=e-this.#i.length;for(;r;){let a=await this.#e.next();if(a.done)break;this.#m(a.value),r--}return this.#i[e-1]}async eat(e=void 0,r=void 0){let t=e?await this.match(e,r):this.current();return t&&(await this.next())?.value,t}async expect(e,r=void 0){let t=await this.eat(e,r);if(!t)throw new Error(`Expected token: ${e}${r?` (${r})`:""}`);return t}#p(e){e?.type.endsWith("_block"),this.#r!==null?this.#a.push(e):this.#a=[e]}#y(){let e=this.#i.shift();return e?.type.endsWith("_block")&&(e.value.#o=!1),e}#c(){let e=this.#a.pop();return e?.type.endsWith("_block")&&e.value.restore(e.value.#r),e}#f(e){e?.type.endsWith("_block")&&(e.value.restore(e.value.#r),e.value.#o=!0),this.#i.unshift(e)}#m(e){e?.type.endsWith("_block")&&(e.value.#o=!0),this.#i.push(e)}#u(e){if(this.#o)throw new Error(`Can't execute ${e}; TokenStream is locked`)}savepoint(){this.#u("savepoint()");let e=this.#a.length;return this.#r===null&&(this.#r=e),e}savepointStatus(){return this.#r!==null?this.#a.length:null}restore(e){if(this.#u("restore()"),this.#r===null||typeof e!="number"||e>this.#a.length)throw new Error(`Invalid restore point ${e}${this.#r===null?". Not in savepoint mode":""}`);for(;e<this.#a.length;)this.#n&&this.#f(this.#n),this.#n=this.#c()}commit(e){if(this.#u("commit()"),e!==this.#r)return;let r;for(;e<this.#a.length&&(r=this.#c());)r.type.endsWith("_block")&&r.value.commit(r.value.#r);this.#r=null}static toStream(e){return typeof e[Symbol.asyncIterator]=="function"?typeof e.next=="function"?e:e[Symbol.asyncIterator]():typeof e[Symbol.iterator]=="function"&&typeof e!="string"&&!(e instanceof String)?typeof e.next=="function"?e:e[Symbol.iterator]():function*(){yield e+""}()}static async create(e,{dialect:r="postgres",state:t=new be,...a}={}){return a.normalized||(a=us({dialect:r,...a,normalized:!0})),new this(await this.createIterator(e,{dialect:r,state:t,...a,extendedAPI:!0}),{dialect:r,...a})}static async*createIterator(e,{dialect:r="postgres",state:t=new be,...a}={}){let o=this.toStream(e);if(!["postgres","mysql"].includes(r))throw new Error(`Unknown dialect: ${r}`);if(!(t instanceof be))throw new Error("options.state must be an instance of TokenStreamState");a.normalized?a={dialect:r,...a}:a=us({dialect:r,...a,normalized:!0});let s={token:null,prevEmittedToken:null,nextTokenSpaceBefore:"",multiwordBuffer:[]},u=(i,_=!1)=>i?ls(i,{options:a,state:t,localState:s},_):[],c={value:""};do{t.buffer+=c.value||"";let i;for(;i=t.buffer[t.cursor];){let _=t.buffer[t.cursor+1]===void 0&&!c.done,d=is.has(i),y=()=>{throw new SyntaxError(`Unexpected token: ${i} at line ${t.line}, column ${t.column}`)};if(s.token?.type==="hex_literal"||s.token?.type==="bit_literal"){(s.token.delim?i===s.token.delim:d)?(yield*u(s.token),s.token=null,d&&a.spaces&&(s.nextTokenSpaceBefore+=i)):(s.token?.type==="hex_literal"?/[0-9A-Fa-f]/.test(i)||y():/[01]/.test(i)||y(),s.token.value+=i),t.next();continue}if(s.token?.type==="version_spec"&&((s.token.delim?i===s.token.delim:i==="."||d)?(yield*u(s.token),s.token=null,d&&a.spaces&&(s.nextTokenSpaceBefore+=i)):(s.token.value&&(i==="="?["<",">"].includes(s.token.value)||y():i==="_"?/\d$/.test(s.token.value)||y():/\d/.test(i)||y()),s.token.value+=i),i!==".")){t.next();continue}if(d){let p=s.token?.type==="string_literal",E=s.token?.type==="identifier"&&s.token.delim,x=s.token?.type==="block_comment",N=s.token?.type==="line_comment";if(p||E||x||N&&!(i==="\r"||i===`
`))s.token.value+=i;else{let h=t.buffer[t.cursor-1];!is.has(h)&&s.token&&(yield*u(s.token),s.token=null),a.spaces&&(s.nextTokenSpaceBefore+=i)}i===`
`||i==="\r"?t.next(1,!0):t.next();continue}if(i==="\\"){if(_)break;let p=t.buffer[t.cursor+1],E=s.token?.type==="string_literal"&&(a.dialect==="mysql"?!a.mysqlNoBackslashEscapes:s.token.modifier==="E"),x=p===s.token?.delim||p==="\\"||p==="0"||p==="b"||p==="f"||p==="n"||p==="r"||p==="t"||p==="v"||p==="Z";if(E&&x){p={"\\":"\\",0:"\0",b:"\b",f:"\f",n:`
`,r:"\r",t:"	",v:"\v",Z:""}[p]||p,s.token.value+=p,t.next(2);continue}t.nextTokenEscape=1,t.next();continue}if(s.token?.type==="block_comment"||s.token?.type==="line_comment"||s.token?.type==="string_literal"||s.token?.type==="identifier"&&s.token.delim||s.token?.type==="user_var"&&s.token.delim){let p;if(s.token.type==="block_comment"){if(i==="*"){if(_)break;p=t.buffer[t.cursor+1]==="/"?2:0}}else if(i===s.token.delim){if(s.token.type==="identifier"||s.token.type==="string_literal"&&(a.dialect==="mysql"?a.mysqlNoBackslashEscapes:s.token.modifier!=="E")){if(_)break;if(t.buffer[t.cursor+1]===i){s.token.value+=i,t.next(2);continue}}p=1}else if(s.token.type==="string_literal"&&s.token.delim.startsWith("$")&&i==="$"){let E=t.cursor+1;t.buffer.slice(E-s.token.delim.length,E)===s.token.delim&&(s.token.value=s.token.value.slice(0,-s.token.delim.length+1),p=1)}if(p){yield*u(s.token),s.token=null,t.next(p);continue}s.token.value+=i,t.next();continue}if(t.nestingContext.length&&i==={"{":"}","[":"]","(":")"}[t.nestingContext[0]]){if(yield*u(s.token,!0),t.nestingContext.shift(),a.structured){t.next(),s.nestingEndTagSeen=!0;return}s.token=null}let l,g=0,m=0;if(a.dialect==="postgres"){if(s.token?.type==="pg_possible_dollar_delim"||i==="$"){if(s.token?.type==="pg_possible_dollar_delim"){if(i==="$"){let{type:E,value:x,delim:N,...h}=s.token;s.token={type:"string_literal",value:"",delim:`$${x}$`,...h}}else s.token.value+=i;t.next();continue}if(_)break;let p=t.buffer[t.cursor+1];/[0-9]/.test(p)?l={type:"bind_var"}:l={type:"pg_possible_dollar_delim",delim:i}}}else a.dialect==="mysql"&&(i==="?"&&(l={type:"bind_var"}),i==="#"&&(l={type:"line_comment",delim:i}),i==="`"&&(l={type:"identifier",delim:i}));if(i==="'"){let p=new RegExp(`(@)$|^\\W?(${a.dialect==="postgres"?"E|X|B":"N|X"})$`,"i"),E=t.buffer.slice(Math.max(t.cursor-2,0),t.cursor).match(p),x=E?.[1]||E?.[2];if(x==="@"&&s.prevEmittedToken?.type==="identifier"){if(_)break;let N=t.buffer[t.cursor+1];/[\^~=\d<>!]/.test(N)&&(l={type:"version_spec",delim:i},g=1)}if(!l)if(x&&(x!=="@"||a.dialect==="mysql")){let N=/^(E|N)/i.test(x)?"string_literal":x==="@"?"user_var":(x==="X"?"hex_":"bit_")+"literal";l={type:N,...N==="string_literal"?{modifier:x.toUpperCase()}:{},delim:i},g=x==="@"?1:x.length}else l={type:"string_literal",delim:i}}else i==='"'&&(l={type:a.dialect!=="mysql"||a.mysqlAnsiQuotes?"identifier":"string_literal",delim:i});if(i==="@"){if(_)break;let p=t.buffer[t.cursor+1];(s.token||s.prevEmittedToken)?.type==="identifier"&&/[\^~=\d<>!]/.test(p)?l={type:"version_spec"}:a.dialect==="mysql"&&(p==="@"?(l={type:"system_var"},m=1):/[a-zA-Z_$]/.test(p)&&(l={type:"user_var"}))}if(i==="/"||i==="-"){if(_)break;let p=t.buffer[t.cursor+1];i==="/"&&p==="*"?(l={type:"block_comment"},m=1):i==="-"&&p==="-"&&(l={type:"line_comment",delim:i+p},m=1)}if(l){s.token&&!g&&(yield*u(s.token)),s.token={type:l.type,value:"",...l,line:t.line,column:g?t.column-g:t.column},t.next(1+m);continue}if((i==="{"||i==="["||i==="(")&&(yield*u(s.token),s.token=null,t.nestingContext.unshift(i),a.structured)){t.next();let p={type:{"{":"brace_block","[":"bracket_block","(":"paren_block"}[i],value:await this[a.extendedAPI?"create":"createIterator"](o,{state:t,...a})};if(yield*u(p),a.extendedAPI)await p.value.peek(1/0);else for(;!(await p.value.next()).done;);continue}if(/[0-9]/.test(i)){if(s.token?.type!=="identifier"&&s.token?.type!=="bind_var"&&s.token?.type!=="version_spec"&&!s.token?.type.endsWith("_literal")&&!s.token?.type.endsWith("_var")){if(yield*u(s.token),i==="0"){if(_)break;let p=t.buffer[t.cursor+1]?.toUpperCase();if((p==="X"||p==="B")&&a.dialect==="mysql"){s.token={type:(p==="X"?"hex_":"bit_")+"literal",value:"",line:t.line,column:t.column},t.next(2);continue}}s.token={type:"number_literal",value:i,line:t.line,column:t.column},t.next();continue}}else if(/[a-zA-Z_]/.test(i)){if(s.token?.type!=="identifier"&&!s.token?.type.endsWith("_var")&&!(s.token?.type==="number_literal"&&/\d$/.test(s.token.value)&&/E/i.test(i))){s.token?.type==="number_literal"&&y(),yield*u(s.token),s.token={type:"identifier",value:i,line:t.line,column:t.column},t.next();continue}}else{let p="operator";if(i===";"||i===","||i===":"||i==="{"||i==="}"||i==="["||i==="]"||i==="("||i===")"){if(i===":"&&(t.nestingContext[0]!=="{"||t.nextTokenEscape)?p="operator":p="punctuation",a.dialect==="postgres"&&i===":"&&p==="operator"&&s.token?.type!=="operator"){let E=t.buffer[t.cursor-1];if(_)break;let x=t.buffer[t.cursor+1];E!==":"&&/[a-zA-Z_]/.test(x)&&a.PL_SQL!==!1&&(p="user_var",i="")}}else if(i===".")if(s.token?.type==="number_literal")s.token.value.includes(".")&&y(),p="number_literal";else{if(_)break;let E=t.buffer[t.cursor+1];/\d/.test(E)?p="number_literal":(p="punctuation",s.token?.type==="system_var"&&(p="system_var"))}else(i==="+"||i==="-")&&s.token?.type==="number_literal"&&/E$/i.test(s.token.value)&&(/\+|\-/.test(s.token.value)&&y(),p="number_literal");if(s.token?.type!==p||p==="punctuation"||p==="operator"&&!a.operators.classic.has(`${s.token.value}${i}`)){yield*u(s.token),s.token={type:p,value:i,line:t.line,column:t.column},t.next();continue}}s.token.value+=i,t.next()}if(c.done)break;t.buffer=t.buffer.slice(t.cursor),t.cursor=0}while(c=await o.next());if(s.token){if(s.token.type==="operator"&&s.token.value!=="*"||s.token.type==="number_literal"&&/E$/i.test(s.token.value)||s.token.type==="block_comment"||s.token.type==="pg_possible_dollar_delim"||["string_literal","hex_literal","bit_literal","identifier","version_spec","user_var"].includes(s.token.type)&&s.token.delim)throw new SyntaxError(`Unterminated ${s.token.type} at line ${t.line}, column ${t.column}`);yield*u(s.token,!0)}if(t.nestingContext.length&&!s.nestingEndTagSeen)throw new SyntaxError(`Unterminated nesting "${t.nestingContext[0]}" at line ${t.line}, column ${t.column}`)}},is=new Set([" ","\f",`
`,"\r","	","\v"]);function us(n){let e=(r,t,a,o)=>{a.split(" ").reduce((s,u)=>(s=s?`${s} ${u}`:u,r.set(s,o),s),t)};for(let r of["statements","functionNames","aggrFunctionNames","keywords","operators","dataTypes"]){let t=["statements","functionNames","aggrFunctionNames"].includes(r)?"keywords":r,a=n[t]||{classic:new Map,compound:new Map};for(let o of["common",n.dialect==="mysql"?"mysql":"postgres"]){let s=Mr[r][o];for(let u of s){let[c,i]=Array.isArray(u)?[u[0],{...u[1],value:u[0]}]:[u,{value:u}];c.includes(" ")?e(a.compound,"",c,i):a.classic.set(c,i)}}n={...n,[t]:a}}return n}function ls(n,{options:e,state:r,localState:t},a=!1){if(t.nextTokenSpaceBefore){let{type:u,...c}=n;n={type:u,spaceBefore:t.nextTokenSpaceBefore,...c},t.nextTokenSpaceBefore=""}if(n.type==="block_comment"||n.type==="line_comment")return Us(n,{options:e});let o,s=!1;if(e.dialect==="mysql"&&n.type==="bind_var")o=[{...n,value:`${++r.mysqlBindingIndex}`}];else if(n.type==="operator"){let{line:u,column:c,...i}=n;o=[{...i,...e.operators.classic.get(n.value)||{},line:u,column:c}]}else n.type==="identifier"&&!n.delim&&(o=js(n,{options:e,state:r,localState:t},a),s=!0);return o||(o=[n]),o?.length?t.prevEmittedToken=o[0]:t.prevEmittedToken=n,!s&&o.length&&t.multiwordBuffer.length?t.multiwordBuffer.splice(0).concat(o):o}function Us(n,{options:e}){return e.comments?(n.type==="block_comment"?n={...n,value:n.value.split(`
`).map(r=>r.replace(/^[ ]+\*[ ]+?/,"").trim()).join(`
`)}:n={...n,value:n.value.trim()},[n]):[]}function js(n,{options:e,state:r,localState:t},a=!1){let o,s=t.multiwordBuffer.length,u=(s?t.multiwordBuffer.map(g=>g.value).concat(n.value).join(" "):n.value).toUpperCase(),c=g=>{for(let m of["keywords","operators","dataTypes"]){let p=e[m][g].get(u);if(p)return[m,p]}return[]},i=()=>{let{type:g,spaceBefore:m,line:p,column:E,...x}=n;s&&(m=t.multiwordBuffer[0].spaceBefore,p=t.multiwordBuffer[0].line,E=t.multiwordBuffer[0].column);let N={type:y==="dataTypes"?"data_type":y.replace(/s$/,""),...m?{spaceBefore:m}:{},...x,...l,value:u,line:p,column:E};s?(o=[N],t.multiwordBuffer.splice(0),s=0):o=[N]},_=()=>{let g={...n,type:y==="dataTypes"?"data_type":y.replace(/s$/,"")};t.multiwordBuffer.push(g),o=[]},d=!1,[y,l]=c("compound");if(l?.value===u||a&&l)i(),d=!0;else if(l){let[g,m]=c("classic");m&&g!==y&&([y,l]=[g,m]),_(),d=!0}else[y,l]=c("classic"),l&&(i(),d=!0);if(!d&&s){let g=t.multiwordBuffer.splice(0),m=ls(n,{options:e,state:r,localState:t});return[...g,...m]}if(!o&&/^(TRUE|FALSE|NULL|UNKNOWN)$/i.test(n.value)){let{type:g,...m}=n;o=[{type:/UNKNOWN/.test(n.value)?"unknown_literal":/NULL/i.test(n.value)?"null_literal":"bool_literal",...m}]}return o}var T=Object.create(null);var f=class n{static get NODE_NAME(){return os(this.name)}get NODE_NAME(){return this.constructor.NODE_NAME}#e;#s;#o;constructor(e={},r={}){this.#e=e,this.#s=r,this.#o=this.constructor.compileASTSchemaFromSyntaxRules(this.options);for(let t of Object.values(this.#e))this._adoptNodes(...[].concat(t))}#t;get contextNode(){return this.#t}get statementNode(){return this.#t?.statementNode}get rootNode(){return this.#t?.rootNode||this}get options(){return this.#s}get _astSchema(){return this.#e}_fieldSchema(e,r=void 0){let t=this.#o[e]||{};if(typeof r<"u"){let a=`${this.NODE_NAME}.<${e}>.<${r}>`;if([void 0,null].includes(t.arity))throw new Error(`[${a}] Can't use index on "${e}". Not index-based.`);if(!t.keyed&&typeof r!="number")throw new Error(`[${a}] Can't use non-numeric index on "${e}". Not keyed.`)}return t}_set(e,r,t=void 0){let a=arguments.length>2?r:void 0,o=arguments.length>2?t:r,s=this._fieldSchema(e,a),u=this._get(e,a),c=`${this.NODE_NAME}.<${e}>`;if(u&&this._unadoptNodes(...[].concat(u)),typeof a<"u")this.#e[e]=u?this.#e[e].reduce((i,_)=>_===u?i:i.concat(_),[]):this.#e[e].concat(o);else{if(![void 0,null].includes(s.arity)){if(!Array.isArray(o))throw new Error(`[${c}] Invalid "${e}" type provided. Array expected.`);if(s.arity!==1/0){let i=o.length;if($(s.arity)){if("min"in s.arity&&i<s.arity.min)throw new Error(`[${c}] A minimum of ${s.arity.min} argument(s) expected but got ${i}.`);if("max"in s.arity&&i>s.arity.max)throw new Error(`[${c}] A maximum of ${s.arity.max} argument(s) expected but got ${i}.`)}else if(![].concat(s.arity).includes(i))throw new Error(`[${c}] Exactly ${[].concat(s.arity).join(" or ")} argument(s) expected but got ${i}.`)}}this.#e[e]=o}return this._adoptNodes(...[].concat(o)),!0}_get(e,r=void 0){if(e in this.#e){let t=this.#e[e];return typeof r=="number"?t=t[r]:r&&(t=t.find(a=>a.identifiesAs?.(r))),t}}_delete(e,r=void 0){return this._fieldSchema(e,r),e in this.#e?(typeof r<"u"?this.#e[e]=this.#e[e].reduce((t,a,o)=>(typeof r=="number"?o===r:a.identifiesAs?.(r))?(this._unadoptNodes(a),t):t.concat(a),[]):(this._unadoptNodes(...[].concat(this.#e[e])),this.#e[e]=this._default(e)),!0):!1}_has(e,r=void 0){return this._fieldSchema(e,r),e in this.#e?typeof r=="number"?typeof this.#e[e][r]<"u":r?this.#e[e].some(t=>t.identifiesAs?.(r)):!0:!1}_add(e,...r){let t=this._fieldSchema(e);if([void 0,null].includes(t.arity)){let a=`${this.NODE_NAME}.<${e}>`;throw new Error(`[${a}] Can't perform add() on "${e}". Not item-based.`)}return this._adoptNodes(...r),this.#e[e]=this.#e[e].concat(r),!0}_adoptNodes(...e){for(let r of e)if(r instanceof n){if(r.#t&&r.#t!==this){let t=`${this.NODE_NAME}`;throw new Error(`[${t}] Illegal node operation`)}r.#t=this}}_unadoptNodes(...e){for(let r of e)if(r instanceof n){if(r.#t!==this){let t=`${this.NODE_NAME}`;throw new Error(`[${t}] Illegal node operation`)}r.#t=null}}_walk(e){for(let r of Object.values(this.#e))for(let t of[].concat(r))t?._walk&&t._walk(e);if(e?.visit)return e.visit(this);if(typeof e=="function")return e(this)}_capture(e,r){if(arguments.length!==2)throw new Error("_capture() expects exactly 2 parameters.");return this.#t?._capture?.(e,r)}capture(e){if(arguments.length!==1)throw new Error("capture() expects exactly 1 parameter.");return this.#t?._capture(e,this)}_bubble(e,r){if(arguments.length!==2)throw new Error("_bubble() expects exactly 2 parameters.");this.#t?._bubble?.(e,r),r===this&&e==="DISCONNECTED"&&(this.#t=null)}bubble(e){if(arguments.length!==1)throw new Error("bubble() expects exactly 1 parameter.");return this.#t?._bubble?.(e,this)}containsNode(e){return e?this===e.contextNode||this.containsNode(e.contextNode):!1}identifiesAs(e){if(typeof e>"u")return!1;if(typeof e?.toJSON=="function")return oe(this.jsonfy(),e.jsonfy(),"ci")}static morphsTo(){return this}deSugar(e={}){return e={...e,deSugar:!0},this.clone(e)}toDialect(e,r={}){return r={...r,toDialect:e},this.clone(r)}clone(e={}){let r=this.jsonfy(e);return[].concat(this.constructor.morphsTo()).reduce((a,o)=>a||o.fromJSON(r,{dialect:e.toDialect||this.options.dialect}),void 0)}static get syntaxRules(){return[]}static compileASTSchemaFromSyntaxRules({dialect:e="postgres"}={}){this._astSchemaCompileCache||(this._astSchemaCompileCache=new Map);let r=`${this.NODE_NAME}:${e}`;if(!this._astSchemaCompileCache.has(r)){let t,a=this.syntaxRules,o=[].concat(a);o.length===1&&Array.isArray(o[0].type)&&!o[0].as?t=o[0]:t=this._compileASTSchemaFromSyntaxRules(a,e,{trail:[this.NODE_NAME]}),this._astSchemaCompileCache.set(r,t)}return this._astSchemaCompileCache.get(r)}static _compileASTSchemaFromSyntaxRules(e,r="postgres",{trail:t=[],schemaSet:a=new Set([new Map]),assertionTrail:o={dependencies:new Set,optional:!1,assert:!1}}={}){let s=Array.isArray(e)?e:[e],u=new Set(o.dependencies),c=_=>new Set([..._].map(d=>new Map(d)));for(let[_,d]of s.entries()){if(d.dialect&&d.dialect!==r)continue;let{type:y,as:l,if:g=o.inference,value:m,arity:p,modifier:E,booleanfy:x,optional:N=o.optional,assert:h=o.assert,syntax:S,syntaxes:A,...F}=d,W=t.concat(`${Array.isArray(e)?_:""}${l?`<${l}>`:""}`||[]),w=W.join("."),B=ps(F);if(B.length)throw new Error(`[${w}] Unsupported attributes in rule: "${B.join('", "')}".`);let G=typeof y=="string"&&y[0]===y[0].toLowerCase();if(l){if(!y)throw new Error(`[${w}] Field rules must have a "type" attribute of type string.`);if(S||A)throw new Error(`[${w}] Field rules ("${l}") can not have a "syntax" or "syntaxes" attribute.`);if(l==="."){if(!G)throw new Error(`[${w}] Terminal Node rules must be token-typed rules.`);if(N)throw new Error(`[${w}] Terminal Node rules can not be optional.`)}else if(E)throw new Error(`[${w}] Only Terminal Node rules can have a "modifier" attribute.`);if(G){if(![void 0,null].includes(p))throw new Error(`[${w}] Token rules can not be item-based.`);if(!we[y])throw new Error(`[${w}] Unknown token type "${y}".`)}else{if(m)throw new Error(`[${w}] Only token rules can have a "value" attribute.`);for(let M of[].concat(y))if(!T[M])throw new Error(`[${w}] Unknown node type "${M}".`);if(![void 0,null].includes(p)){if($(p)){let M=Object.keys(p);if(M.some(K=>!["min","max","eager"].includes(K)||typeof p[K]!=(K==="eager"?"boolean":"number")))throw new Error(`Invalid arity object "{ ${M.join(", ")} }" for field "${l}". Only "min: <number>", "max: <number>" and "eager: <bool>" expected.`)}else if([].concat(p).some(M=>typeof M!="number"))throw new Error(`[${w}] Invalid arity value "${[].concat(p).join(", ")}" for field "${l}". Number(s) expected.`)}}let k={rulePath:w,type:y};m&&(k.value=m),E&&(k.modifier=E),x&&(k.booleanfy=x),[void 0,null].includes(p)||(k.arity=p),N&&(k.optional=!0),h&&(k.assert=h),g&&(k.if=g),N&&o.dependencies.size&&(k.dependencies=Array.from(o.dependencies));for(let M of a)M.set(l,k);l!=="."&&N&&!d.optional&&u.add(l)}if(S||A){let k={dependencies:u,optional:N,assert:h,inference:g};if(S){a=this._compileASTSchemaFromSyntaxRules(S,r,{trail:W.concat("syntax"),schemaSet:a,assertionTrail:k});continue}let M=new Set;for(let[K,ne]of A.entries()){let q=c(a),I=this._compileASTSchemaFromSyntaxRules(ne,r,{trail:W.concat("syntaxes",K),schemaSet:q,assertionTrail:k});for(let Q of I)M.add(Q)}a=M}}let i=Array.from(a);for(let _=0;_<i.length;_++){let d=i[_],y=Object.fromEntries(d);if(!d.size){a.delete(d);continue}for(let l=_+1;l<i.length;l++){let g=i[l],m=Object.fromEntries(g);oe(y,m,"cs","rulePath")&&a.delete(g)}}return a}static fromJSON(e,r={},t=null){let a=this.compileASTSchemaFromSyntaxRules(r);if(Array.isArray(a.type)){for(let d of a.type){let l=T[d].fromJSON(e,r,t);if(l)return l}return}if(e instanceof n)return e instanceof this?e:void 0;if(!$(e))return;let o=null;if("nodeName"in e){if(e.nodeName!==this.NODE_NAME)return;({nodeName:o,...e}=e)}let s,u=(d,y=null,l=!1)=>{if(!(!o&&r.assert!==!0&&!(r.assert instanceof RegExp&&r.assert.test(activeTrailStr)))){if(y&&(d=`[${y}] ${d}`),l){s=d;return}throw new Error(d)}},c=(d,y)=>{if(d.value!==void 0){let l=d.booleanfy?[!0,!1]:d.value;return[].concat(l).includes(y.value)}return we[d.type].match?.(y,r)!==!1},i=(d,y)=>{for(let l of[].concat(d.type))if(typeof l=="string"&&l[0]===l[0].toLowerCase()){if(c(d,{value:y})===!0)return y}else{let m=T[l].fromJSON(y,r);if(m)return m}},_=(d,y,l,g=!1)=>{if(l.dependencies?.length){for(let p of l.dependencies)if(!(p in d))return u(`Missing dependency field "${p}" required by "${y}"`,l.rulePath,g),!1}if(l.if&&!Pr(l.if,d,l.rulePath))return!0;if(![void 0,null].includes(l.arity)){if(e[y]===void 0)return l.optional?(d[y]=[],!0):(u(`Missing required field "${y}"`,l.rulePath,g),!1);if(!Array.isArray(e[y]))return u(`Field "${y}" must be an array`,l.rulePath,g),!1;if(l.arity!==1/0){let x=e[y].length;if($(l.arity)){if("min"in l.arity&&x<l.arity.min)return u(`A minimum of ${l.arity.min} argument(s) expected but got ${x}`,l.rulePath,g),!1;if("max"in l.arity&&x>l.arity.max)return u(`A maximum of ${l.arity.max} argument(s) expected but got ${x}`,l.rulePath,g),!1}else if(![].concat(l.arity).includes(x))return u(`Exactly ${[].concat(l.arity).join(" or ")} argument(s) expected but got ${x}`,l.rulePath,g),!1}let p=e[y].map(x=>i(l,x)).filter(x=>x!==void 0),E=p.length;return e[y].length>E?E?(u(`Inconsistent "${y}" argument(s)`,l.rulePath,g),!1):(u(`Failed to resolve any argument for "${y}"`,l.rulePath,g),!1):(d[y]=p,!0)}if(e[y]===void 0)return l.optional?(d[y]=l.booleanfy?!1:void 0,!0):(u(`Missing required field "${y}"`,l.rulePath,g),!1);let m=i(l,e[y]);return m===void 0?(u(`Failed to resolve field "${y}"`,l.rulePath,g),!1):(d[y]=m,!0)};e:for(let d of a instanceof Map?[a]:a){let y=Object.create(null),l=new Map(d),g=e;if(l.has(".")){let m=l.get("."),p=we[m.type];if([void 0,null].includes(g.value))continue e;({value:y.value,...g}=g);for(let E of Object.keys(p))typeof p[E]!="function"&&E in g&&({[E]:y[E],...g}=g);if(c(m,y)===!1)continue e;l.delete(".")}for(let m of new Set(Object.keys(g).concat(...l.keys()))){if(!l.has(m))continue e;let p=l.get(m);if(_(y,m,p,!0)===!1)continue e}return typeof t=="function"?t(y,r):new this(y,r)}u(`Failed to match any schema${s?`. ${s}`:""}`,this.NODE_NAME)}toJSON(e=null,r={}){return this.jsonfy(r)}jsonfy(e={},r=null){let t=(a,o)=>{let s=a;return r&&(a=r(a,o,e)),a instanceof n?a=a.jsonfy(e,r):Array.isArray(s)&&Array.isArray(a)&&a.every(u=>u instanceof n)&&(a=a.reduce((u,c,i)=>{let _=t(c,i);return _===void 0?u:u.concat(_)},[])),a};return{...e.nodeNames!==!1?{nodeName:this.NODE_NAME}:{},...Object.fromEntries(Object.entries(this.#e).map(([a,o])=>[a,t(o,a)]))}}static async parse(e,{left:r,minPrecedence:t=0,trail:a=[],returningTokenStream:o=!1,...s}={}){let u=e instanceof ve?e:await ve.create(e,{structured:!0,spaces:!0,...s}),c=u.savepoint();!u.current()&&!u.done&&await u.next();let i=this.syntaxRules,_,d;if((d=[].concat(i)).length===1&&Array.isArray(d[0].type)&&!d[0].as)d[0].expression?_=await this._parseAsExpression(u,d[0].type,{left:r,minPrecedence:t,trail:a.concat(this.NODE_NAME),...s}):_=await this._parseFromTypes(u,d[0].type,{left:r,minPrecedence:t,trail:a.concat(this.NODE_NAME),...s});else{let y=await this._parseFromRules(u,i,{left:r,minPrecedence:t,trail:a.concat(this.NODE_NAME),...s});y&&(_=new this(y,{...s,dialect:u.options.dialect}))}return _||u.restore(c),o?{result:_,tokenStream:u}:_}static async _parseAsExpression(e,r,{left:t=null,minPrecedence:a,trail:o,...s}){if(t)throw new Error("TODO");for(t=await this._parseFromTypes(e,r,{minPrecedence:a,trail:o,...s});t;){let u=await e.match("operator");if(!u||u.prec<a)break;let c=t,i=await this._parseFromTypes(e,r,{left:t,minPrecedence:a,trail:o,...s});if(!i)return t;t=i}return t}static async _parseFromRules(e,r,{left:t,minPrecedence:a,trail:o,...s},u={}){let c=Array.isArray(r)?r:[r],i=0,_=a;for(let[d,y]of c.entries()){if(y.dialect&&y.dialect!==e.options.dialect){i++;continue}let{requiredSpacing:l,peek:g,type:m,value:p,syntax:E,syntaxes:x,as:N,if:h,arity:S,itemSeparator:A,optional:F=!1,assert:W=!1,booleanfy:w,...B}=y,G=o.concat(`${Array.isArray(r)?d:""}${N?`<${N}>`:""}`||[]),k=G.join("."),M=ps(B);if(M.length)throw new Error(`[${k}] Unsupported attributes in rule: "${M.join('", "')}".`);let K=typeof m=="string"&&m[0]===m[0].toLowerCase(),ne=async()=>{if(!(!N||K)&&c[d+1]?.type==="operator"&&!(Array.isArray(g)&&!await I(-1))){for(let R of[].concat(m))if(t instanceof T[R])return u[N]=t,!0;return!1}},q=()=>{let R=e.current();return l===!1&&!R?.spaceBefore||l===!0&&R?.spaceBefore||l===`
`&&/\n/.test(R?.spaceBefore)},I=async(R=0)=>R?await e.match(g[0]+R,...g.slice(1)):await e.match(...g),Q=async()=>{let R;if((R=await e.match("operator"))&&R.prec<a)return;let v=await e.eat(m,m.endsWith("_block")?void 0:p);return v?.type==="operator"&&(_=v.prec+(v.assoc==="right"?0:1)),v},Oe=async(R,v)=>{if(Array.isArray(m))return await this._parseFromTypes(R,m,{minPrecedence:v,trail:G,...s});let J=T[m];if(!J)throw new Error(`[${k}] Unknown node type <${m}>.`);return await J.parse(R,{minPrecedence:v,trail:G,...s})},C=(R,v,J=!1)=>{if(!(!W&&s.assert!==!0&&!(s.assert instanceof RegExp&&s.assert.test(k)))){if(J){let P=R.current()||R.previous(),X=R.current()?J===1?":":" near":" by";v+=P?`${X}${typeof P.value=="string"?` "${P.value}" (${P.type})`:""} at <line ${P.line}, column ${P.column}>`:`${X} end of stream`}throw new Error(`[${k}] ${v}.`)}};if(t&&m){if(!await ne())return;t=null;continue}if(h&&!Pr(h,u,k))continue;if(l!==void 0&&!q()){C(e,"Required spacing mismatch",!0);return}if(Array.isArray(g)&&!await I()){C(e,"Peek failure",!0);return}if(N==="."){if(!m||!K)throw new Error(`[${k}] Terminal node rules must be token-typed rules.`);let R=await Q();if(!R){C(e,`Token of type "${m}"${p?` and value "${p}"`:""} expected but got "${e.current()?.type}"`,!0);return}let v,J,P,X,Te,ws,ts;({type:v,line:J,column:P,spaceBefore:X,prec:Te,assoc:ws,...ts}=R),Object.assign(u,ts);continue}let b=e;if(typeof m=="string"&&m.endsWith("_block")){if(!(b=(await Q())?.value)){if(F)continue;C(e,`Token of type "${m}" expected but got "${e.current()?.type}"`,!0);return}_=0,!b.current()&&!b.done&&await b.next()}if(![void 0,null].includes(S)){if(!N)throw new Error(`[${k}] Multi-argument field rules must have a "as" attribute.`);if(!m)throw new Error(`[${k}] Multi-argument field rules must have a "type" attribute.`);if(K)throw new Error(`[${k}] Multi-argument field rules must be node-typed rules.`);let R,v=[],J=_;if(A?.type==="operator"){let P=A.value&&(b.options.operators?.classic.get(A.value)||b.options.operators?.compound.get(A.value));P?.prec&&(J=P?.prec+1)}for(;(R=await Oe(b,J))&&(v.push(R),!($(S)&&S.eager===!1&&v.length===S.max||A&&!await b.eat(A.type,A.value))););if(S!==1/0){let P=v.length;if(!P&&F)continue;let X=b.current(),Te=X?`. Unexpected ${X.type}${typeof X.value=="string"?` "${X.value}"`:""}`:"";if($(S)){if("min"in S&&P<S.min){C(b,`A minimum of ${S.min} argument(s) expected but got ${P}${Te}`,!0);return}if("max"in S&&P>S.max){C(b,`A maximum of ${S.max} argument(s) expected but got ${P}${Te}`,!0);return}}else if(![].concat(S).includes(P)){C(b,`Exactly ${[].concat(S).join(" or ")} argument(s) expected but got ${P}${Te}`,!0);return}}u[N]=v;continue}let D;if(E){let R=b.savepoint();D=await this._parseFromRules(b,E,{left:t,minPrecedence:_,trail:G.concat("syntax"),...s}),D===void 0?b.restore(R):t&&(t=null)}else if(x){for(let[R,v]of x.entries()){let J=b.savepoint();if(D=await this._parseFromRules(b,v,{left:t,minPrecedence:_,trail:G.concat("syntaxes",R),...s}),D===void 0)b.restore(J);else break}D!==void 0&&t&&(t=null)}else if(!(typeof m=="string"&&m.endsWith("_block")))D=K?(await Q())?.value:await Oe(b,_);else if(!m)throw new Error(`[${k}] Rules must have a "type", "syntax" or "syntaxes" attribute.`);if(D===void 0&&!F){C(b,m?"Unexpected token":null,1);return}N?(w&&(D=D!==void 0),u[N]=D):(E||x)&&Object.assign(u,D)}if(i!==c.length)return u}static async _parseFromTypes(e,r,{left:t,minPrecedence:a,trail:o,...s}){for(let u of r)if(typeof u=="string"&&u[0]===u[0].toLowerCase()){if(await e.match(u))return await e.eat()}else{let i=T[u];if(!i)throw new Error(`[${this.NODE_NAME}] Unknown node type "${u}".`);let _=await i.parse(e,{left:t,minPrecedence:a,trail:o,...s});if(_!==void 0)return _}}toString(){return this.stringify()}stringify(e={}){return this._stringifyFromRules(this.constructor.syntaxRules,{trail:[this.NODE_NAME],...e})}_stringifyFromRules(e,{trail:r=[],startingIndentLevel:t=0,autoLineBreakThreshold:a=100,...o},s=null){let u=()=>" ",c=y=>`
${(o.tabSpaces===4?"	":" ".repeat(o.tabSpaces||2)).repeat(y)}`,i=[],_=[].concat(e),d=0;for(let[y,l]of _.entries()){if(l.dialect&&l.dialect!==this.options.dialect)continue;let{requiredSpacing:g,type:m,value:p,booleanfy:E,syntax:x,syntaxes:N,as:h,if:S,arity:A,itemSeparator:F,optional:W=!1,autoSpacing:w=g,optionalParens:B,autoIndent:G=!1,autoIndentAdjust:k=0}=l,M=r.concat(`${Array.isArray(e)?y:""}${h?`<${h}>`:""}`||[]),K=M.join("."),ne=G;if(S&&!Pr(S,this.#e,this.NODE_NAME))continue;let q={startingIndentLevel:t+(G?1:0)+k,autoLineBreakThreshold:a,...o},I;if([void 0,null].includes(A))if(x)I=this._stringifyFromRules(x,{trail:M.concat("syntax"),...q},s);else if(N){let C=-1;for(let[b,D]of N.entries()){let R={score:0},v=this._stringifyFromRules(D,{trail:M.concat("syntaxes",b),...q},R);typeof v=="string"&&R.score>C&&(I=v,C=R.score)}s&&(s.score+=C)}else if(h){let C=this._get(h==="."?"value":h),b=p!=null;if(b&&E&&C===!0&&(C=p),b&&([].concat(p).includes(C)?s&&s.score++:C=void 0),C!==void 0){C instanceof n&&(C=C.stringify(q));let D=h==="."?{...l,...this.#e}:{...l,value:C};I=this._stringifyTerminal(D,q)}}else I=this._stringifyTerminal(l,q);else{let C=!1,b=this._get(h);if(b&&!(C=A===1/0)){let D=b.length;$(A)?C=(!("min"in A)||D>=A.min)&&(!("max"in A)||D<=A.max):C=[].concat(A).includes(D)}if(C){let D=b.map(J=>J.stringify(q));ne=G===!0||typeof G=="number"&&b.length>=G||w===`
`;let R=q.prettyPrint&&ne&&D.join(" ").length>a?c(q.startingIndentLevel):u(),v=F?this._stringifyTerminal(F,q):"";/^\w+$/.test(v)?v=`${R}${v}${R}`:v===";"&&q.prettyPrint?v=`${v}
${R}`:v=`${v}${R}`,I=D.join(v)}}if(m==="paren_block"&&B&&!I?.trim()){if(B===!0||o.pruneOptionalParens){s&&s.score++,d++;continue}I=""}if(I===void 0){if(W){d++;continue}return}h&&s&&s.score++;let Q=!1;if(typeof m=="string"&&m.endsWith("_block")){let C=q.prettyPrint&&G&&I.length>a,b={brace_block:"{}",bracket_block:"[]",paren_block:"()"}[m];I=[b[0],C&&!/^\s/.test(I)?c(t+1):b[0]==="{"?u():"",I,C?c(t):b[1]==="}"?u():"",b[1]].join("")}else q.prettyPrint&&ne&&I!==""&&(I=[c(t+(w===`
`?0:1)),I].join(""),Q=!0);let Oe=i[i.length-1];I!==""&&!Q&&i.length&&!/\s$/.test(Oe)&&(Array.isArray(w)?w.includes(Oe):w!==!1)&&(w===`
`&&q.prettyPrint?i.push(c(t)):i.push(u())),i.push(I)}if(i.length||d===_.length)return i.join("")}_stringifyTerminal(e,r={}){switch(e.type){case"data_type":return this._stringifyDataType(e,r);case"identifier":return this._stringifyIdentifier(e,r);case"keyword":return this._stringifyKeyword(e,r);case"operator":return this._stringifyOperator(e,r);case"punctuation":return this._stringifyPunctuation(e,r);case"bind_var":return this._stringifyBindVar(e,r);case"version_spec":return`@${e.value}`}if(!Array.isArray(e.type)){if(e.type.endsWith("_literal"))return this._stringifyLiteral(e,r);if(e.type.endsWith("_var"))return this._stringifyVariable(e,r);if(e.type.endsWith("_comment"))return this._stringifyComment(e,r)}return String(e.value)}_stringifyIdentifier(e){let{value:r}=e,t=['"'];this.options.dialect==="mysql"&&(this.options.mysqlAnsiQuotes?t.push("`"):t.fill("`"));let a=t.includes(e.delim)?e.delim:t[0];return/^\d/.test(r)||!/^(\*|[\w]+)$/.test(r)?`${a}${(r||"").replace(new RegExp(a,"g"),a.repeat(2))}${a}`:r}_stringifyKeyword(e){return String(e.value)}_stringifyOperator(e){return e.value===":"&&this.#t?.isProperty?"\\:":String(e.value)}_stringifyPunctuation(e){return String(e.value)}_stringifyDataType(e){return String(e.value)}_stringifyLiteral(e,r){let{value:t}=e;switch(e.type){case"bit_literal":return this._stringifyBitLiteral(e,r);case"hex_literal":return this._stringifyHexLiteral(e,r);case"number_literal":return this._stringifyNumberLiteral(e,r);case"string_literal":return this._stringifyStringLiteral(e,r);case"bool_literal":return/^true$/i.test(t+"")?"TRUE":"FALSE";case"null_literal":return"NULL"}return String(t)}_stringifyBindVar(e){let{value:r}=e;return this.options.dialect==="mysql"?"?":`$${r}`}_stringifyBitLiteral(e){let{value:r}=e;return this.options.dialect==="mysql"?`0b${r}`:`B'${r}'`}_stringifyHexLiteral(e){let{value:r}=e;return this.options.dialect==="mysql"?`0x${r}`:`X'${r}'`}_stringifyNumberLiteral(e){let{value:r}=e;return String(r)}_stringifyStringLiteral(e){let{value:r}=e,t=["'"],a=null;this.options.dialect==="postgres"&&e.delim?.startsWith("$")?t.fill(e.delim):this.options.dialect==="mysql"&&!this.options.mysqlAnsiQuotes&&t.push('"');let o=t.includes(e.delim)?e.delim:t[0];if((this.options.dialect==="mysql"&&!this.options.mysqlNoBackslashEscapes||this.options.dialect==="postgres"&&e.modifier==="E")&&(a="\\"),o.length>1)return`${o}${r}${o}`;if(!a)a=o;else if(a==="\\"){let s={"\\":"\\\\","\0":"\\0","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","	":"\\t","\v":"\\v","":"\\Z"};r=r.replace(/[\\\0\b\r\n\t\x1A]/g,u=>s[u])}return r=`${o}${(r||"").replace(new RegExp(o,"g"),`${a}${o}`)}${o}`,e.modifier?`${e.modifier}${r}`:r}_stringifyVariable(e){let{type:r,value:t}=e;return this.options.dialect==="mysql"?`${r==="system_var"?"@@":"@"}${t}`:`${this.#t?.isProperty?"\\:":":"}${t}`}_stringifyComment(e,r={}){let{value:t}=e;if(e.type==="block_comment"){let s="  ".repeat(r.startingIndentLevel||0),u=t.trim().split(`
`).map(i=>i.trim());return[`${s}/**`,...u.map(i=>`${s} * ${i}`),`${s} */`].join(`
`)}let a=["--"];return this.options.dialect==="mysql"&&a.push("#"),`${a.includes(e.delim)?e.delim:a[0]} ${t}`}},ps=n=>Object.keys(n).filter(e=>!Fs.has(e)),Fs=new Set(["dialect","autoSpacing","optionalParens","autoIndent","autoIndentAdjust","type","value","delim","modifier","syntax","syntaxes","as","booleanfy","if","arity","itemSeparator","keyed","requiredSpacing","peek","optional","assert"]),Pr=(n,e,r)=>[].concat(n).some(t=>{if($(t))return Object.entries(t).every(([o,s])=>{let u=!0;return o.startsWith("!")&&(o=o.slice(1),u=!1),(Array.isArray(s)?s.includes(e[o]):e[o]===s)===u});if(typeof t!="string")throw new Error(`[${r}] A specifier of type string or object expected in inferenceMatch but got ${t===null?"null":`type ${typeof t}`}`);let a=!0;return t.startsWith("!")&&(t=t.slice(1),a=!1),![void 0,null,!1].includes(e[t])===a});var Le=class extends f{static get syntaxRules(){return{dialect:"postgres",syntax:[{type:"keyword",value:"CYCLE"},{assert:!0,syntax:[{type:"ColumnRef",as:"column_names",arity:{min:1},itemSeparator:{type:"punctuation",value:","},assert:!0,autoIndent:2},{type:"keyword",value:"SET"},{type:"ColumnRef",as:"mark_col_name"},{optional:!0,syntax:[{type:"keyword",value:"TO"},{type:"Expr",as:"mark_value"},{type:"keyword",value:"DEFAULT"},{type:"Expr",as:"mark_default"}]},{type:"keyword",value:"USING"},{type:"ColumnRef",as:"path_col_name"}]}]}}breadthOrDepthFirst(){return this._get("breadth_or_depth_first")}columnNames(){return this._get("column_names")}markColName(){return this._get("mark_col_name")}markValue(){return this._get("mark_value")}markDefault(){return this._get("mark_default")}pathColName(){return this._get("path_col_name")}};var Me=class extends f{static get syntaxRules(){return{dialect:"postgres",syntax:[{type:"keyword",value:"SEARCH"},{assert:!0,syntax:[{type:"keyword",as:"breadth_or_depth_first",value:["BREADTH","DEPTH"]},{type:"keyword",value:"FIRST"},{type:"keyword",value:"BY"},{type:"ColumnRef",as:"column_names",arity:{min:1},itemSeparator:{type:"punctuation",value:","},assert:!0,autoIndent:2},{type:"keyword",value:"SET"},{type:"ColumnRef",as:"seq_col_name"}]}]}}breadthOrDepthFirst(){return this._get("breadth_or_depth_first")}columnNames(){return this._get("column_names")}seqColName(){return this._get("seq_col_name")}};var ie=class extends f{#e=0;_rand(e){return`${e}::${this.#e++}`}#s;get uuid(){return this.#s||(this.#s=this._rand("query")),this.#s}static fromJSON(e,r={}){let{uuid:t,...a}=e,o=super.fromJSON(a,r);return t&&o&&(o.#s=t),o}jsonfy(e={}){return{...super.jsonfy(e),uuid:this.#s}}};var Y=class extends ie{_capture(e,r){let t=super._capture(e,r);return e==="CONTEXT.ROOT_SCHEMA"&&!t?RootSchema.fromJSON(this,[]):t}renderBindings(e){if(!Array.isArray(e))throw new Error("Values must be an array");let r=[...this.queryBindings()];for(let t=0;t<e.length;t++){let a=r.filter(o=>o.offset()===t+1);if(!a.length)throw new Error(`No bindings exists at offset #${t}`);a.forEach(o=>o.value(e[t]))}}normalizeBindings(e=!1){let r=[...this.queryBindings()];if(!e)return r.forEach((o,s)=>o.offset(s+1)),r;let t=new Map,a=1;for(let o of r)if(o.offset()===0||!t.has(o.offset())){let s=a++;t.set(o.offset(),s),o.offset(s)}else o.offset(t.get(o.offset())).withDetail("redundant",!0);return r.filter(o=>!o.getDetail("redundant"))}};var Pe=class extends Y{static get _bodyTypes(){return["SelectStmt","TableStmt","InsertStmt","UpsertStmt","UpdateStmt","DeleteStmt","ValuesConstructor"]}static get syntaxRules(){return[{type:"keyword",value:"WITH"},{type:"keyword",as:"recursive",value:"RECURSIVE",booleanfy:!0,optional:!0},{type:"CTEBinding",as:"bindings",arity:{min:1},itemSeparator:{type:"punctuation",value:","},assert:!0,autoIndent:2},{type:this._bodyTypes,as:"body",assert:!0,autoSpacing:`
`}]}recursive(){return this._get("recursive")}bindings(){return this._get("bindings")}body(){return this._get("body")}};var Be=class extends f{static get syntaxRules(){return[{type:"CompositeAlias",as:"alias",assert:!0},{type:"keyword",value:"AS"},{optional:!0,syntaxes:[[{type:"operator",as:"not_materialized_kw",value:"NOT",booleanfy:!0},{type:"keyword",value:"MATERIALIZED",assert:!0}],{type:"keyword",as:"materialized",value:"MATERIALIZED",booleanfy:!0}]},{type:["SubqueryConstructor","ValuesSetConstructor"],as:"expr"},{type:"PGSearchClause",as:"search_clause",optional:!0},{type:"PGCycleClause",as:"cycle_clause",optional:!0}]}alias(){return this._get("alias")}notMaterializedKW(){return this._get("not_materialized_kw")}materialized(){return this._get("materialized")}expr(){return this._get("expr")}searchClause(){return this._get("search_clause")}cycleClause(){return this._get("cycle_clause")}};var jr={};z(jr,{CreateTableStmt:()=>$e});var{CompleteSelectStmt:Gs,SubqueryConstructor:qs,FromClause:Ws,JoinClause:cs,OnClause:Js,GroupByClause:Ys,FromElement:Hs,SelectElement:ys,CompositeAlias:Vs,BasicAlias:fs,TableAbstractionRef:$r,ColumnRef:Ur,BinaryExpr:Ks,LQDeepRef:Xs,LQBackRef:Qs,LQBackRefConstructor:ms}=T,Z=n=>class extends n{get isSelectorStmt(){return!0}jsonfy(e={},r=null){if(!e.deSugar)return super.jsonfy(e);let t=new Map,a=(s,u,{deSugar:c,...i})=>{if(r&&(s=r(s,u,{deSugar:c,...i})),c&&s instanceof Xs){let{select:_}=this.createSelectorDimension(s,t,i);return _(s.right())}if(c&&(s instanceof Qs||s instanceof ms)){s instanceof ms&&(s=s.expr());let{alias:_}=this.createSelectorDimension(s,t,i);return _()}return s},o=super.jsonfy(e,a);return t.size&&(o=this.applySelectorDimensions(o,t,e)),o}createSelectorDimension(e,r=null,{asAggr:t=!1,...a}={}){let{left:o,right:s,table:u}=e.getOperands(),c=`dimension${t?"/g":""}::${[o,s,u].join("/")}`;if(r?.has(c))return r.get(c);let i=this._rand("rand"),_={nodeName:ys.NODE_NAME,expr:s.jsonfy(a),alias:{nodeName:fs.NODE_NAME,value:i},as_kw:!0},d={nodeName:cs.NODE_NAME,join_type:"LEFT",expr:{nodeName:qs.NODE_NAME,expr:{nodeName:Gs.NODE_NAME,select_list:[_],from_clause:{nodeName:Ws.NODE_NAME,entries:[{nodeName:Hs.NODE_NAME,expr:u.jsonfy(a)}]},group_by_clause:t?{nodeName:Ys.NODE_NAME,entries:[{nodeName:Ur.NODE_NAME,value:i}]}:void 0}},as_kw:!0,alias:{nodeName:Vs.NODE_NAME,value:c},condition_clause:{nodeName:Js.NODE_NAME,expr:{nodeName:Ks.NODE_NAME,operator:"=",left:o.jsonfy(a),right:{nodeName:Ur.NODE_NAME,qualifier:{nodeName:$r.NODE_NAME,value:c},value:i}}}},g={id:c,type:"join",query:d,alias:()=>({nodeName:$r.NODE_NAME,value:c}),select:m=>{let p=this._rand("ref");return d.expr.expr.select_list.push({nodeName:ys.NODE_NAME,expr:m.jsonfy(a),alias:{nodeName:fs.NODE_NAME,value:p},as_kw:!0}),{nodeName:Ur.NODE_NAME,qualifier:{nodeName:$r.NODE_NAME,value:c},value:p}}};return r?.set(c,g),g}applySelectorDimensions(e,r,t){e={...e,join_clauses:e.join_clauses?.slice(0)||[]};for(let[,{query:a}]of r)e.join_clauses.push(cs.fromJSON(a,this.options).jsonfy(t));return e}};var{FromElement:zs,BasicTableExpr:Zs,TableRef:ds,BasicAlias:ea,CompositeAlias:ta,TableAbstractionRef:ra,ColumnRef:_s,SelectElement:sa,FromClause:aa,CompleteSelectStmt:na,SubqueryConstructor:oa,BinaryExpr:ia}=T,$e=class extends Z(Y){static get syntaxRules(){let e={type:"punctuation",value:","};return[{type:"keyword",value:"CREATE"},{optional:!0,syntaxes:[{type:"keyword",as:"temporary_kw",value:"TEMPORARY",booleanfy:!0},{type:"keyword",as:"temporary_kw",value:"TEMP",booleanfy:!0,dialect:"postgres"}]},{type:"keyword",value:"TABLE"},{optional:!0,syntax:[{type:"keyword",as:"if_not_exists",value:"IF"},{type:"operator",value:"NOT"},{type:"keyword",value:"EXISTS"}]},{assert:!0,syntaxes:[{dialect:"postgres",syntax:[{type:"keyword",value:"FROM"},{type:"BasicTableExpr",as:"table_expr"},{type:"UsingFromClause",as:"using_clause",optional:!0,autoIndent:!0},{type:"JoinClause",as:"join_clause",optional:!0,autoIndent:!0},{type:["PGWhereCurrentClause","WhereClause"],as:"where_clause",optional:!0,autoIndent:!0},{type:"PGReturningClause",as:"pg_returning_clause",optional:!0,autoIndent:!0}]},{dialect:"mysql",syntax:[{type:"MYStarredTableRef",as:"my_delete_list",arity:{min:1},itemSeparator:e},{type:"FromClause",as:"my_from_clause",autoIndent:!0},{type:"JoinClause",as:"join_clause",optional:!0,autoIndent:!0},{type:"WhereClause",as:"where_clause",optional:!0,autoIndent:!0}]},{dialect:"mysql",syntax:[{type:"keyword",value:"FROM"},{type:"MYStarredTableRef",as:"my_delete_list",arity:{min:1},itemSeparator:e},{type:"UsingFromClause",as:"using_clause",autoIndent:!0},{type:"JoinClause",as:"join_clause",optional:!0,autoIndent:!0},{type:"WhereClause",as:"where_clause",optional:!0,autoIndent:!0}]},{dialect:"mysql",syntax:[{type:"keyword",value:"FROM"},{type:"BasicTableExpr",as:"table_expr"},{type:"MYPartitionClause",as:"my_partition_clause",optional:!0,autoIndent:!0},{type:"WhereClause",as:"where_clause",optional:!0,autoIndent:!0},{type:"OrderByClause",as:"my_order_by_clause",optional:!0,dialect:"mysql",autoIndent:!0},{type:"LimitClause",as:"my_limit_clause",optional:!0,dialect:"mysql",autoIndent:!0}]}]}]}temporaryKW(){return this._get("temporary_kw")}ifNotExists(){return this._get("if_not_exists")}joinClause(){return this._get("join_clause")}whereClause(){return this._get("where_clause")}pgPGReturningClause(){return this._get("pg_returning_clause")}myPartitionClause(){return this._get("my_partition_clause")}myDeleteList(){return this._get("my_delete_list")}myFromClause(){return this._get("my_from_clause")}myOrderByClause(){return this._get("my_order_by_clause")}myLimitClause(){return this._get("my_limit_clause")}applySelectorDimensions(e,r,t){if(this.options.dialect!=="postgres")return super.applySelectorDimensions(e,r,t);if(e.where_clause?.cursor_name)throw new Error('Deep/Back Refs are currently not supported with a "WHERE CURRENT OF..." statement');let a=this._rand("rand"),o=e.table_expr.name.value,s=e.table_expr.alias?e.table_expr.alias.value:e.table_expr.name.value,u=`${a}::${s}`,c=e.where_clause,i=this.table().tableSchema().primaryKey().columns()[0];return e={...e,table_expr:{nodeName:Zs.NODE_NAME,name:{nodeName:ds.NODE_NAME,value:o},alias:{nodeName:ea.NODE_NAME,value:u}},where_clause:{nodeName:ia.NODE_NAME,left:{nodeName:_s.NODE_NAME,qualifier:{nodeName:ra.NODE_NAME,value:u},value:i},operator:"IN",right:{nodeName:oa.NODE_NAME,expr:{nodeName:na.NODE_NAME,select_list:[{nodeName:sa.NODE_NAME,expr:{nodeName:_s.NODE_NAME,value:i}}],from_clause:{nodeName:aa.NODE_NAME,entries:[{nodeName:zs.NODE_NAME,expr:{nodeName:ds.NODE_NAME,value:o},alias:{nodeName:ta.NODE_NAME,value:s}}]},where_clause:c,join_clauses:[...r].map(_=>_.query)}}}},e}};var Xr={};z(Xr,{AssignmentExpr:()=>je,BasicTableExpr:()=>Fe,ColumnsConstructor:()=>Ue,DeleteStmt:()=>et,InsertStmt:()=>le,MYOnDuplicateKeyUpdateClause:()=>Ge,MYPartitionClause:()=>qe,MYSetStmt:()=>it,MYStarredTableRef:()=>We,MYVarAssignmentExpr:()=>Je,PGConflictTarget:()=>Ye,PGConflictTargetIndexSpec:()=>He,PGDefaultValuesClause:()=>Ve,PGOnConflictClause:()=>Ke,PGReturningClause:()=>Xe,PGWhereCurrentClause:()=>Qe,SetClause:()=>ze,UpdateStmt:()=>lt,UpsertStmt:()=>pt,UsingFromClause:()=>Ze});var O=class extends f{static get syntaxRules(){return[]}get length(){return(this._get("entries")||[]).length}[Symbol.iterator](){return(this._get("entries")||[])[Symbol.iterator]()}entries(){return(this._get("entries")||[]).slice(0)}get(e){return this._get("entries",e)}set(e,r){return this._set("entries",e,r)}has(e){return this._has("entries",e)}add(...e){return this._add("entries",...e)}};var Ue=class extends O{static get syntaxRules(){return{syntax:[{type:"paren_block",syntax:{type:"ColumnNameRef",as:"entries",arity:1/0,itemSeparator:{type:"punctuation",value:","},autoIndent:2},autoIndent:!0,autoIndentAdjust:-1}]}}static get syntaxPriority(){return-1}};var L=class extends f{static get syntaxRules(){return[{type:"Expr",as:"left",peek:[1,"operator",["NOT",void 0]]},{type:"operator",as:"negation",value:"NOT",booleanfy:!0,optional:!0},{type:"operator",as:"operator"},{type:"Expr",as:"right"}]}static get syntaxPriority(){return 0}left(){return this._get("left")}negation(){return this._get("negation")}operator(){return this._get("operator")}right(){return this._get("right")}};var je=class extends L{static get syntaxRules(){return[{type:["LQDeepRef","ColumnsConstructor","ColumnRef"],as:"left"},{type:"operator",as:"operator",value:"="},{type:["ValuesSetConstructor","Expr"],as:"right"}]}};var Fe=class extends f{static get syntaxRules(){return[{type:"keyword",as:"pg_only_kw",value:"ONLY",optional:!0,dialect:"postgres"},{type:"TableRef",as:"name",assert:!0},{type:"StarRef",as:"pg_star_ref",optional:!0,dialect:"postgres"},{...{optional:!0,syntaxes:[{type:"BasicAlias",as:"alias"},[{type:"keyword",as:"as_kw",value:"AS",booleanfy:!0},{type:"BasicAlias",as:"alias",assert:!0}]]}}]}name(){return this._get("name")}alias(){return this._get("alias")}pgOnlyKW(){return this._get("pg_only_kw")}pgStarRef(){return this._get("pg_star_ref")}};var Ge=class extends O{static get syntaxRules(){return{dialect:"mysql",syntax:[{type:"keyword",value:"ON"},{type:"keyword",value:"DUPLICATE"},{type:"keyword",value:"KEY"},{type:"keyword",value:"UPDATE"},{type:"AssignmentExpr",as:"entries",arity:{min:1},itemSeparator:{type:"punctuation",value:","},assert:!0,autoIndent:2}]}}};var qe=class extends O{static get syntaxRules(){return{dialect:"mysql",syntax:[{type:"keyword",value:"PARTITION"},{type:"Identifier",as:"entries",arity:{min:1},itemSeparator:{type:"punctuation",value:","},assert:!0}]}}};var We=class extends f{static get syntaxRules(){return{dialect:"mysql",syntax:[{type:"TableRef",as:"name"},{optional:!0,syntax:[{type:"punctuation",value:".",autoSpacing:!1},{type:"StarRef",as:"star_ref",autoSpacing:!1}]}]}}name(){return this._get("name")}starRef(){return this._get("star_ref")}};var Je=class extends L{static get syntaxRules(){return{dialect:"mysql",syntax:[{type:["UserVar","SystemVar"],as:"left"},{type:"operator",as:"operator",value:["=",":="]},{type:"Expr",as:"right"}]}}};var Ye=class extends f{static get syntaxRules(){return{syntaxes:[[{type:"keyword",value:"ON"},{type:"keyword",value:"CONSTRAINT"},{type:"Identifier",as:"constraint_name",assert:!0}],[{type:"paren_block",syntax:{type:"PGConflictTargetIndexSpec",as:"index_list",arity:{min:1},itemSeparator:{type:"punctuation",value:","},assert:!0},autoIndent:!0},{type:"WhereClause",as:"where_clause",optional:!0,autoIndent:!0}]]}}constraintName(){return this._get("constraint_name")}indexList(){return this._get("index_list")}whereClause(){return this._get("where_clause")}};var He=class extends f{static get syntaxRules(){return[{syntaxes:[{type:"ColumnNameRef",as:"column_name"},{type:"paren_block",syntax:{type:"Expr",as:"expr",assert:!0},autoIndent:!0},{type:"CallExpr",as:"expr"}]},{optional:!0,syntax:[{type:"operator",value:"COLLATE"},{type:"string_literal",as:"collation",assert:!0}]},{type:"Identifier",as:"opclass",optional:!0}]}columnName(){return this._get("column_name")}expr(){return this._get("expr")}collation(){return this._get("collation")}opclass(){return this._get("opclass")}};var Ve=class extends f{static get syntaxRules(){return{dialect:"postgres",syntax:[{type:"keyword",value:"DEFAULT"},{type:"keyword",as:"_",value:"VALUES"}]}}};var Ke=class extends O{static get syntaxRules(){return{dialect:"postgres",syntax:[{type:"keyword",value:"ON"},{type:"keyword",value:"CONFLICT"},{syntaxes:[[{type:"PGConflictTarget",as:"conflict_target",optional:!0},{type:"keyword",as:"do_nothing",value:"DO"},{type:"keyword",value:"NOTHING"}],[{type:"PGConflictTarget",as:"conflict_target"},{type:"keyword",value:"DO"},{type:"keyword",value:"UPDATE"},{type:"keyword",value:"SET"},{type:"AssignmentExpr",as:"entries",arity:{min:1},itemSeparator:{type:"punctuation",value:","},assert:!0,autoIndent:2},{type:"WhereClause",as:"where_clause",optional:!0,autoIndent:!0}]]}]}}conflictTarget(){return this._get("conflict_target")}doNothing(){return this._get("do_nothing")}whereClause(){return this._get("where_clause")}};var Xe=class extends O{static get syntaxRules(){return{dialect:"postgres",syntax:[{type:"keyword",value:"RETURNING"},{type:"SelectElement",as:"entries",arity:{min:1},itemSeparator:{type:"punctuation",value:","},assert:!0,autoIndent:2}]}}};var Qe=class extends f{static get syntaxRules(){return{dialect:"postgres",syntax:[{type:"keyword",value:"WHERE"},{type:"keyword",value:"CURRENT OF"},{type:"identifier",as:"cursor_name",assert:!0}]}}cursorName(){return this._get("cursor_name")}};var ze=class extends O{static get syntaxRules(){return[{type:"keyword",value:"SET"},{type:"AssignmentExpr",as:"entries",arity:{min:1},itemSeparator:{type:"punctuation",value:","},assert:!0,autoIndent:2}]}};var Ze=class extends O{static get syntaxRules(){return[{type:"keyword",value:"USING"},{type:"FromElement",as:"entries",arity:{min:1},itemSeparator:{type:"punctuation",value:","},assert:!0}]}};var{FromElement:ua,BasicTableExpr:la,TableRef:gs,BasicAlias:pa,CompositeAlias:ca,TableAbstractionRef:ya,ColumnRef:hs,SelectElement:fa,FromClause:ma,CompleteSelectStmt:da,SubqueryConstructor:_a,BinaryExpr:ga}=T,et=class extends Z(Y){static get syntaxRules(){let e={type:"punctuation",value:","};return[{type:"keyword",value:"DELETE"},{assert:!0,syntaxes:[{dialect:"postgres",syntax:[{type:"keyword",value:"FROM"},{type:"BasicTableExpr",as:"table_expr"},{type:"UsingFromClause",as:"using_clause",optional:!0,autoIndent:!0},{type:"JoinClause",as:"join_clause",optional:!0,autoIndent:!0},{type:["PGWhereCurrentClause","WhereClause"],as:"where_clause",optional:!0,autoIndent:!0},{type:"PGReturningClause",as:"pg_returning_clause",optional:!0,autoIndent:!0}]},{dialect:"mysql",syntax:[{type:"MYStarredTableRef",as:"my_delete_list",arity:{min:1},itemSeparator:e},{type:"FromClause",as:"my_from_clause",autoIndent:!0},{type:"JoinClause",as:"join_clause",optional:!0,autoIndent:!0},{type:"WhereClause",as:"where_clause",optional:!0,autoIndent:!0}]},{dialect:"mysql",syntax:[{type:"keyword",value:"FROM"},{type:"MYStarredTableRef",as:"my_delete_list",arity:{min:1},itemSeparator:e},{type:"UsingFromClause",as:"using_clause",autoIndent:!0},{type:"JoinClause",as:"join_clause",optional:!0,autoIndent:!0},{type:"WhereClause",as:"where_clause",optional:!0,autoIndent:!0}]},{dialect:"mysql",syntax:[{type:"keyword",value:"FROM"},{type:"BasicTableExpr",as:"table_expr"},{type:"MYPartitionClause",as:"my_partition_clause",optional:!0,autoIndent:!0},{type:"WhereClause",as:"where_clause",optional:!0,autoIndent:!0},{type:"OrderByClause",as:"my_order_by_clause",optional:!0,dialect:"mysql",autoIndent:!0},{type:"LimitClause",as:"my_limit_clause",optional:!0,dialect:"mysql",autoIndent:!0}]}]}]}tableExpr(){return this._get("table_expr")}usingClause(){return this._get("using_clause")}joinClause(){return this._get("join_clause")}whereClause(){return this._get("where_clause")}pgPGReturningClause(){return this._get("pg_returning_clause")}myPartitionClause(){return this._get("my_partition_clause")}myDeleteList(){return this._get("my_delete_list")}myFromClause(){return this._get("my_from_clause")}myOrderByClause(){return this._get("my_order_by_clause")}myLimitClause(){return this._get("my_limit_clause")}applySelectorDimensions(e,r,t){if(this.options.dialect!=="postgres")return super.applySelectorDimensions(e,r,t);if(e.where_clause?.cursor_name)throw new Error('Deep/Back Refs are currently not supported with a "WHERE CURRENT OF..." statement');let a=this._rand("rand"),o=e.table_expr.name.value,s=e.table_expr.alias?e.table_expr.alias.value:e.table_expr.name.value,u=`${a}::${s}`,c=e.where_clause,i=this.table().tableSchema().primaryKey().columns()[0];return e={...e,table_expr:{nodeName:la.NODE_NAME,name:{nodeName:gs.NODE_NAME,value:o},alias:{nodeName:pa.NODE_NAME,value:u}},where_clause:{nodeName:ga.NODE_NAME,left:{nodeName:hs.NODE_NAME,qualifier:{nodeName:ya.NODE_NAME,value:u},value:i},operator:"IN",right:{nodeName:_a.NODE_NAME,expr:{nodeName:da.NODE_NAME,select_list:[{nodeName:fa.NODE_NAME,expr:{nodeName:hs.NODE_NAME,value:i}}],from_clause:{nodeName:ma.NODE_NAME,entries:[{nodeName:ua.NODE_NAME,expr:{nodeName:gs.NODE_NAME,value:o},alias:{nodeName:ca.NODE_NAME,value:s}}]},where_clause:c,join_clauses:[...r].map(_=>_.query)}}}},e}};var{LQDeepRef:Ce,LQBackRefConstructor:ha,ColumnNameRef:xa,ColumnRef:Fr,TableRef:Gr,BasicAlias:Ea,AssignmentExpr:tt,ColumnsConstructor:rt,RowConstructor:ue,SetConstructor:qr,ValuesConstructor:xs,ValuesSetConstructor:Wr,SelectStmt:st,CompleteSelectStmt:ke,SubqueryConstructor:Ie,SelectElement:at,FromElement:nt,CompositeAlias:Na,FromClause:Jr,SetClause:Sa,PGReturningClause:Aa,BinaryExpr:Yr,BoolLiteral:Oa,NumberLiteral:Ta,StarRef:Es,CTE:Hr,CTEBinding:Ra,UpdateStmt:Vr,InsertStmt:wa,UpsertStmt:ba}=T,ot=n=>class extends n{get isPayloadStmt(){return!0}static morphsTo(){return Hr}jsonfy(e={},r=null){if(!e.deSugar)return super.jsonfy(e);let t=new Set,a=["columns_list","default_values_clause","values_clause","select_clause"].map(l=>this._get(l)),[o,s,u,c]=a,i=o?.some(l=>l instanceof Ce),_=i?new Set(a):new Set,d=(l,g,{deSugar:m,...p})=>{if(r&&(l=r(l,g,{deSugar:m,...p})),_.has(l))return;if(!(m&&l instanceof tt))return l;let E=!!this._get("on_conflict_clause")?.containsNode(l),x={...p,onConflictClauseContext:E};if(l.left()instanceof Ce){let[[N],[[h]]]=this.deSugarPayload([l.left()],[[l.right()]],t,x);return N?{nodeName:tt.NODE_NAME,operator:"=",left:N,right:h}:void 0}if(l.left()instanceof rt&&l.left().entries().some(N=>N instanceof Ce)){let N=l.left().entries(),h,S;return l.right()instanceof qr?([h,S]=this.deSugarPayload(N,[l.right().entries()],t,x),S={nodeName:ue.NODE_NAME,entries:S}):l.right()instanceof Ie?([h,S]=this.deSugarPayload(N,l.right().expr(),t,x),S={nodeName:Ie.NODE_NAME,expr:S}):[h,S]=this.deSugarPayload(N,[[l.right()]],t,x),h.length?{nodeName:tt.NODE_NAME,operator:"=",left:{nodeName:rt.NODE_NAME,entries:h},right:S}:void 0}},y=super.jsonfy(e,d);if(i){let[l,g]=this.deSugarPayload(o,c||u.entries().map(m=>m.entries()),t,e);if(y={...y,columns_list:l},c)y={...y,select_clause:g};else{let m=g.map(p=>({nodeName:ue.NODE_NAME,entries:p}));y={...y,values_clause:{nodeName:xs.NODE_NAME,entries:m}}}}return t.size&&(y=this.applyPayloadDimensions(y,t,e)),y}deSugarPayload(e,r,t,{onConflictClauseContext:a=!1,deSugar:o,...s}={}){let u=(l,g)=>l.reduce(l,(m,p)=>{if(m instanceof Ce){let E=this.createPayloadDimension(m,t,{onConflictClauseContext:a,...s});return g.set(p,E),E.type==="dependency"&&E.leftJson?l.concat(E.leftJson):l}return l.concat(m.jsonfy({deSugar:o,...s}))},[]),c=(l,g)=>{let m=l.jsonfy(s),p=m.select_list;if(p[0].expr.nodeName===Es.NODE_NAME)throw new Error("TODO");if(!a){let x=this._rand("cte"),N={...m,uuid:x,select_list:[{nodeName:at.NODE_NAME,expr:{nodeName:Es.NODE_NAME}}]};t?.add({type:"memo",query:N});let h={nodeName:nt.NODE_NAME,expr:{nodeName:Gr.NODE_NAME,value:x}};m={nodeName:ke.NODE_NAME,from_clause:{nodeName:Jr.NODE_NAME,entries:[h]}}}let E=p.reduce((x,N,h)=>{if(g.has(h)){let S;N.expr.nodeName===ue.NODE_NAME?S=N.expr.entries:S=[N.expr];let A=st.fromJson({...m,select_list:S.map(F=>({nodeName:at.NODE_NAME,expr:F}))});if(N=g.get(h).offload(A,rowOffset),N)return x.concat(N)}return x.concat(N)},[]);return{...m,select_list:E}},i=(l,g)=>l.map((m,p)=>m.reduce((E,x,N)=>{let h=g.has(N)?g.get(N).offload(x,p):x.jsonfy({deSugar:o,...s});return h?E.concat(h):E},[])),_=new Map,d=u(e,_),y=r instanceof st?c(r,_):i(r,_);return _.clear(),[d,y]}createPayloadDimension(e,r=null,{onConflictClauseContext:t=!1,...a}={}){let{left:o,right:s,table:u}=e.getOperands(),c=`dimension${t?"/c":""}::${[o,s,u].join("/")}`,i=o.jsonfy(a),_=s.jsonfy(a),d,y=e.right();if(y instanceof rt)d=y.jsonfy(a);else if(y instanceof xa||y instanceof Ce)d={nodeName:rt.NODE_NAME,entries:[y.jsonfy(a)]};else throw new Error(`Invalid columns spec: ${e}`);let l=d.entries.length,g=h=>{let S=1;if(h instanceof Ie?S=h.expr().length:(h instanceof st||h instanceof ue)&&(S=h.length),S>l)throw new Error("INSERT has more expressions than target columns");if(S<l)throw new Error("INSERT has more target columns than expressions");return h},m=(h,S,A=null,F=null)=>{let W=typeof A=="number"?{nodeName:Yr.NODE_NAME,operator:"->>",left:S,right:{nodeName:Ta.NODE_NAME,value:A}}:S,w=typeof F=="string"?{nodeName:Yr.NODE_NAME,operator:"IS",left:{nodeName:Fr.NODE_NAME,value:F},right:{nodeName:Oa.NODE_NAME,value:"TRUE"}}:null,B={nodeName:nt.NODE_NAME,expr:{nodeName:Gr.NODE_NAME,value:h}},G={nodeName:ke.NODE_NAME,select_list:[{nodeName:at.NODE_NAME,expr:W}],from_clause:{nodeName:Jr.NODE_NAME,entries:[B]},...w?{where_clause:w}:{}};return{nodeName:Ie.NODE_NAME,expr:G}};if(this instanceof Vr||t){let h=t?`${this.uuid}_on_conflict_updated_status`:null,S={nodeName:Yr.NODE_NAME,operator:"IN",left:_,right:m(this.uuid,i,null,h)},A={uuid:this._rand("query"),nodeName:Vr.NODE_NAME,tables:[{nodeName:nt.NODE_NAME,expr:u.jsonfy(a)}],set_clause:{nodeName:Sa.NODE_NAME,entries:[]},where_clause:S},W={id:c,type:"dependent",query:A,offload:w=>{if(w instanceof Wr)throw new Error(`Single-row payload structure expected for column structure: ${e.right()}. Recieved ${w.NODE_NAME}.`);if(A.set_clause.entries.length)throw new Error(`Unexpected offload() call on ${e}`);g(w);let B=w.jsonfy(a);w instanceof st?B={nodeName:Ie.NODE_NAME,expr:B}:w instanceof qr||(B={nodeName:ue.NODE_NAME,entries:[B]}),A.set_clause.entries.push({nodeName:tt.NODE_NAME,operator:"=",left:d,right:B})},leftJson:i,onConflictClauseContext:t};return r?.add(W),W}let p={uuid:this._rand("query"),nodeName:this.NODE_NAME,table:u.jsonfy(a),columns_list:d,values_clause:{nodeName:xs.NODE_NAME,entries:[]}},E=(h,S=null)=>{g(h);let A=h instanceof qr?h.jsonfy(a):{nodeName:ue.NODE_NAME,entries:[h.jsonfy(a)]};S?p.values_clause.entries.push({...A,entries:A.entries.concat(S)}):p.values_clause.entries.push(A)};if(e.left()instanceof ha){p.columns_list.push(_);let S={id:c,type:"dependent",query:p,offload:(A,F)=>{let W=m(this.uuid,i,F);if(A instanceof ke){g(A),delete p.values_clause;let w={nodeName:at.NODE_NAME,expr:W,alias:s instanceof Fr?{nodeName:Ea.NODE_NAME,value:s.value()}:void 0},B=A.jsonfy(a);p.select_clause={...B,select_list:B.select_list.concat(w)};return}if(A instanceof Wr)for(let w of A.expr())E(w,W);else E(A,W)},leftJson:i};return r?.add(S),S}let N={id:c,type:"dependency",query:p,offload:(h,S)=>{if(h instanceof Wr)throw new Error(`Single-row payload structure expected for column structure: ${e.right()}. Recieved ${h.NODE_NAME}.`);if(p.values_clause.entries.length||p.select_clause)throw new Error(`Unexpected offload() call on ${e}`);h instanceof ke?(g(h),delete p.values_clause,p.select_clause=h.jsonfy(a)):E(h);let A={nodeName:Fr.NODE_NAME,value:s.value()};return m(p.uuid,A,S)},leftJson:i};return r?.add(N),N}applyPayloadDimensions(e,r,t){let a={nodeName:Hr.NODE_NAME,bindings:[],body:null},o=(_,d)=>{d.nodeName===Hr.NODE_NAME&&(a.bindings.push(...d.bindings),d=d.body),a.bindings.push({nodeName:Ra.NODE_NAME,alias:{nodeName:Na.NODE_NAME,value:_},expr:d})},s=(_,d)=>{for(let y of[Vr,wa,ba]){let l=y.fromJSON(_,d);if(l)return l}},u=[],c=[],i;for(let{id:_,type:d,query:y,leftJson:l,onConflictClauseContext:g}of r){if(d==="dependent"){c.find(m=>oe(m,l))||c.push(l),g&&(i=!0),u.push({id:_,query:y});continue}o(_,s(y,this.options).jsonfy(t))}if(u.length){let _=e.returning_clause,d={nodeName:Aa.NODE_NAME,entries:[...c]};if(i){let l=`${this.uuid}_on_conflict_updated_status`}o(this.uuid,{...e,returning_clause:d});for(let{id:l,query:g}of u)o(l,s(g,this.options).jsonfy(t));let y={nodeName:nt.NODE_NAME,expr:{nodeName:Gr.NODE_NAME,value:this.uuid}};a.body={nodeName:ke.NODE_NAME,select_list:_.entries,from_clause:{nodeName:Jr.NODE_NAME,entries:[y]}}}else a.body=e;return a}};var le=class extends ot(Y){static get _clause(){return"INSERT"}static get syntaxRules(){let e={type:"punctuation",value:","},r={optional:!0,dialect:"mysql",if:["!select_clause","!my_table_clause"],syntax:[{type:"keyword",value:"AS"},{type:"CompositeAlias",as:"my_alias",assert:!0}]};return[{type:"keyword",value:this._clause},{type:"keyword",value:"INTO"},{assert:!0,syntax:[{dialect:"postgres",syntax:[{type:"BasicTableExpr",as:"table_expr"},{type:"ColumnsConstructor",as:"column_list",arity:{min:1},itemSeparator:e,optional:!0,autoIndent:2},{syntaxes:[{type:"PGDefaultValuesClause",as:"pg_default_values_clause",autoIndent:!0},{type:"ValuesConstructor",as:"values_clause",autoIndent:!0},{type:"SelectStmt",as:"select_clause",autoIndent:!0}]},...this._clause==="INSERT"?[{type:"PGOnConflictClause",as:"conflict_handling_clause",optional:!0,autoIndent:!0}]:[],{type:"PGReturningClause",as:"pg_returning_clause",optional:!0,autoIndent:!0}]},{dialect:"mysql",syntax:[{type:"TableRef",as:"table_expr"},{type:"MYPartitionClause",as:"my_partition_clause",optional:!0,autoIndent:!0},{syntaxes:[[{type:"ColumnsConstructor",as:"column_list",arity:{min:1},itemSeparator:e,optional:!0,autoIndent:2},{syntaxes:[{type:"ValuesConstructor",as:"values_clause",autoIndent:!0},{type:"SelectStmt",as:"select_clause",autoIndent:!0},{type:"TableStmt",as:"my_table_clause",autoIndent:!0}]}],{type:"SetClause",as:"my_set_clause",autoIndent:!0}]},{...r},...this._clause==="INSERT"?[{type:"MYOnDuplicateKeyUpdateClause",as:"conflict_handling_clause",optional:!0,autoIndent:!0}]:[]]}]}]}tableExpr(){return this._get("table_expr")}columnList(){return this._get("column_list")}valuesClause(){return this._get("values_clause")}selectClause(){return this._get("select_clause")}conflictHandlingClause(){return this._get("conflict_handling_clause")}pgDefaultValuesClause(){return this._get("pg_default_values_clause")}pgPGReturningClause(){return this._get("pg_returning_clause")}myAlias(){return this._get("my_alias")}myPartitionClause(){return this._get("my_partition_clause")}mySetClause(){return this._get("my_set_clause")}myTableClause(){return this._get("my_table_clause")}};var it=class extends O{static get syntaxRules(){return[{type:"keyword",value:"SET"},{type:"MYVarAssignmentExpr",as:"entries",arity:{min:1},itemSeparator:{type:"punctuation",value:","},assert:!0,autoIndent:2}]}};var{SubqueryConstructor:va,CompleteSelectStmt:Ca,SelectElement:ka,BasicAlias:Ia,CompositeAlias:Da,FromClause:Ns,WhereClause:Ss,ColumnRef:ut,TableAbstractionRef:Kr,BinaryExpr:As,TableRef:La,FromElement:Os}=T,lt=class extends ot(Z(Y)){static get syntaxRules(){return[{type:"keyword",value:"UPDATE"},{assert:!0,syntaxes:[{dialect:"postgres",syntax:[{type:"BasicTableExpr",as:"table_expr"},{type:"SetClause",as:"set_clause"},{type:"FromClause",as:"pg_from_clause",optional:!0,dialect:"postgres",autoIndent:!0},{type:"JoinClause",as:"join_clause",optional:!0,autoIndent:!0},{type:["PGWhereCurrentClause","WhereClause"],as:"where_clause",optional:!0,autoIndent:!0},{type:"PGReturningClause",as:"pg_returning_clause",optional:!0,autoIndent:!0}]},{dialect:"mysql",syntax:[{type:"BasicTableExpr",as:"table_expr"},{type:"SetClause",as:"set_clause"},{type:"WhereClause",as:"where_clause",optional:!0,autoIndent:!0},{type:"OrderByClause",as:"my_order_by_clause",optional:!0,autoIndent:!0},{type:"LimitClause",as:"my_limit_clause",optional:!0,autoIndent:!0}]},{dialect:"mysql",syntax:[{type:"MYStarredTableRef",as:"my_update_list",arity:{min:1},itemSeparator:{type:"punctuation",value:","}},{type:"JoinClause",as:"join_clause",optional:!0,autoIndent:!0},{type:"SetClause",as:"set_clause"},{type:"WhereClause",as:"where_clause",optional:!0,autoIndent:!0}]}]}]}tableExpr(){return this._get("table_expr")}joinClause(){return this._get("join_clause")}setClause(){return this._get("set_clause")}whereClause(){return this._get("where_clause")}pgFromClause(){return this._get("pg_from_clause")}pgPGReturningClause(){return this._get("pg_returning_clause")}myUpdateList(){return this._get("my_update_list")}myOrderByClause(){return this._get("my_order_by_clause")}myLimitClause(){return this._get("my_limit_clause")}jsonfy(e={}){if(!e.deSugar)return super.jsonfy(e);let r=new Map,t=(o,s,{deSugar:u,...c})=>{if(u&&o instanceof LQDeepRef){let{select:i}=this.deSugarLQRef(r,o,c);return i(o.right())}if(u&&(o instanceof LQBackRef||o instanceof LQBackRefConstructor)){o instanceof LQBackRefConstructor&&(o=o.expr());let{alias:i}=this.deSugarLQRef(r,o,c);return i()}return o},a=super.jsonfy(e,t);return r.size&&(a=this.applySelectorDimensions(a,r,e)),a}applySelectorDimensions(e,r,t){if(this.options.dialect!=="postgres")return super.applySelectorDimensions(e,r,t);if(e.where_clause?.cursor_name)throw new Error('Deep/Back Refs are currently not supported with a "WHERE CURRENT OF..." statement');let a=this._rand("rand"),o,s=u=>{let c=e.table_expr,i=c.name.value,_=c.alias?c.alias.value:c.name.value,d=u.value;if(u.qualifier.value!==_)return u;let y=`${a}::${_}`,l=`${a}::${d}`;if(!o){let g={nodeName:Os.NODE_NAME,expr:{nodeName:va.NODE_NAME,expr:{nodeName:Ca.NODE_NAME,select_list:[],pg_from_clause:{nodeName:Ns.NODE_NAME,entries:[{nodeName:Os.NODE_NAME,expr:{nodeName:La.NODE_NAME,value:i}}]}}},as_kw:!0,alias:{nodeName:Da.NODE_NAME,value:y}},m={nodeName:As.NODE_NAME,left:{nodeName:ut.NODE_NAME,qualifier:{nodeName:Kr.NODE_NAME,value:_},value:d},operator:"=",right:{nodeName:ut.NODE_NAME,qualifier:{nodeName:Kr.NODE_NAME,value:y},value:l}};o={from:g,where:m}}return o.from.expr.expr.select_list.push({nodeName:ka.NODE_NAME,expr:{nodeName:ut.NODE_NAME,value:d},alias:{nodeName:Ia.NODE_NAME,value:l}}),{nodeName:ut.NODE_NAME,qualifier:{nodeName:Kr.NODE_NAME,value:y},value:l}};e={...e,join_clauses:e.join_clauses?.slice(0)||[]};for(let[,{query:u}]of r){let c={...u.condition_clause.expr};c.left=s(c.left),e.join_clauses.push(u)}return o&&(e={...e,pg_from_clause:{nodeName:Ns.NODE_NAME,entries:e.pg_from_clause?.entries?.slice(0)||[]}},e.pg_from_clause.entries.push(o.from),e.where_clause?e.where_clause={nodeName:Ss.NODE_NAME,expr:{nodeName:As.NODE_NAME,operator:"AND",left:e.where_clause.expr,right:o.where}}:e.where_clause={nodeName:Ss.NODE_NAME,expr:o.where}),e}};var pe=n=>class extends n{get isSugar(){return!0}};var pt=class extends pe(le){static get _clause(){return"UPSERT"}jsonfy(e={}){if(!e.deSugar)return super.jsonfy(e);if(this.conflictHandlingClause())throw new Error('A redundanct "ON CONFLICT" clause in query.');let r=super.jsonfy(e),t=(this.set()?this.set().columns():this.columns().entries()).map(s=>s.name()),a=this.params.dialect==="mysql"?s=>u=>u.fn("VALUES",s):s=>["EXCLUDED",s],o=OnConflictClause.fromJSON(this,{entries:[]});for(let s of t)o.add([s,a(s)]);if(this.params.dialect!=="mysql"){let s=this.into().schema(),u=[].concat(s.primaryKey()||[]).concat(s.uniqueKeys()).map(i=>i.columns());if(!u.length)throw new Error(`Table ${this.into().clone({fullyQualified:!0})} has no unique keys defined to process an UPSERT operation. You may want to perform a direct INSERT operation.`);let c=u.find(i=>_intersect(i,t).length)||u[0];o.columnsSpec(...c)}return{nodeName:InsertStatement.NODE_NAME,...superJson,onConflictClause:o.jsonfy(e),...flags?{flags}:{}}}};var Qr={};z(Qr,{BasicAlias:()=>de,BasicSelectStmt:()=>xe,CompleteSelectStmt:()=>$t,CompositeAlias:()=>ft,CompositeSelectStmt:()=>Ut,DistinctClause:()=>mt,ForClause:()=>dt,FromClause:()=>_t,FromElement:()=>_e,FunctionsSetConstructor:()=>ct,GroupByClause:()=>gt,GroupingElement:()=>ht,HavingClause:()=>xt,JoinClause:()=>Et,LQBackRefConstructor:()=>ce,LimitClause:()=>Nt,OffsetClause:()=>St,OnClause:()=>At,OrderByClause:()=>Ot,OrderElement:()=>Tt,PGFetchClause:()=>wt,PGOrderOperator:()=>bt,PartitionByClause:()=>Rt,RowConstructor:()=>ye,SRFSpec:()=>Ct,SelectElement:()=>vt,SelectStmt:()=>re,SetConstructor:()=>te,SubqueryConstructor:()=>fe,TableStmt:()=>jt,UsingClause:()=>kt,ValuesConstructor:()=>me,ValuesSetConstructor:()=>yt,WhereClause:()=>It,WindowClause:()=>Dt,WindowDeclaration:()=>Lt,WindowFrameBound:()=>Pt,WindowFrameSpec:()=>Mt,WindowSpec:()=>Bt});var ct=class extends O{static get syntaxRules(){return[{type:"keyword",value:"ROWS"},{type:"keyword",value:"FROM"},{type:"paren_block",syntax:{type:"SRFSpec",as:"entries",arity:{min:1},itemSeparator:{type:"punctuation",value:","},assert:!0,autoIndent:2},autoIndent:!0,autoSpacing:!1}]}static get syntaxPriority(){return-1}};var ee=class n extends f{static get syntaxRules(){return{type:"paren_block",syntax:{type:"Expr",as:"expr"},autoIndent:!0}}static get syntaxPriority(){return-1}expr(){return this._get("expr")}exprUnwrapped(){let e=this._get("expr");return e instanceof n?e.exprUnwrapped():e}};var{LQBackRef:Ts}=T,ce=class extends ee{static get syntaxRules(){return{type:"paren_block",syntax:{type:"Expr",as:"expr",peek:[1,"operator","<~"]}}}static get syntaxPriority(){return 51}static morphsTo(){return this.expr()?.constructor().morphsTo()}_capture(e,r){return e==="CONTEXT.TABLE_SCHEMA"?this.tableSchema():super._capture(e,r)}expr(){return this._get("expr")}tableSchema(){let e=this.expr();if(!(e instanceof Ts))throw new Error(`[${this.constructor.name}.<expr>] Expects an instance of LQBackRef but got ${e?.constructor.name}`);return e.tableSchema()}jsonfy(e={},r=null){if(e.deSugar){let t=this.expr();if(!(t instanceof Ts))throw new Error(`[${this.constructor.name}.<expr>] Expects an instance of LQBackRef but got ${t?.constructor.name}`);return t.jsonfy(e,r)}return super.jsonfy(e,r)}};var te=class extends O{static get syntaxRules(){return{syntax:[{type:"paren_block",syntax:{type:"Expr",as:"entries",arity:1/0,itemSeparator:{type:"punctuation",value:","},autoIndent:2},autoIndent:!0,autoIndentAdjust:-1}]}}static get syntaxPriority(){return 49}};var ye=class extends te{static get syntaxRules(){return[{type:"keyword",value:"ROW"},...[].concat(super.syntaxRules)]}};var fe=class extends ee{static get syntaxRules(){return{type:"paren_block",syntax:{type:["SelectStmt","InsertStmt","UpsertStmt","UpdateStmt","DeleteStmt","CTE"],as:"expr"},autoIndent:!0}}static get syntaxPriority(){return 51}};var me=class extends O{static get syntaxRules(){let e={type:"punctuation",value:","};return{syntaxes:[[{type:"keyword",value:"VALUES"},{type:"SetConstructor",as:"entries",arity:{min:1},itemSeparator:e,assert:!0}],{dialect:"mysql",syntax:[{type:"keyword",value:["VALUES","VALUE"]},{type:"SetConstructor",as:"entries",arity:{min:1},itemSeparator:e,assert:!0}]}]}}static get syntaxPriority(){return-1}};var yt=class extends me{static get syntaxRules(){return{type:"paren_block",syntax:super.syntaxRules,autoIndent:!0}}static get syntaxPriority(){return-1}};var U=class extends f{static get syntaxRules(){return{type:"identifier",as:"."}}static get syntaxPriority(){return-1}value(){return this._get("value")}identifiesAs(e){return typeof e=="string"?this._eq(this._get("value"),e,"ci"):super.identifiesAs(e)}};var de=class extends U{static get syntaxRules(){return[...[].concat(super.syntaxRules),{type:"AggrNotation",as:"is_aggr",autoSpacing:!1,optional:!0}]}isAggr(){return this._get("is_aggr")}};var ft=class extends U{static get syntaxRules(){let e={type:"punctuation",value:","};return{syntaxes:[[{...[].concat(super.syntaxRules)[0]},{type:"paren_block",syntax:{type:"Identifier",as:"columns",arity:{min:1},itemSeparator:e,assert:!0},if:"value",optional:!0,optionalParens:!0}],{type:"paren_block",syntax:{type:"Identifier",as:"columns",arity:{min:1},itemSeparator:e,assert:!0}}]}}columns(){return this._get("columns")}};var mt=class extends f{static get syntaxRules(){return{syntaxes:[{dialect:"postgres",syntax:[{type:"keyword",value:"DISTINCT"},{type:"keyword",value:"ON"},{type:"paren_block",syntax:{type:"Expr",as:"pg_distinct_on_list",arity:{min:1},itemSeparator:{type:"punctuation",value:","},assert:!0}}]},{type:"keyword",as:"all_or_distinct",value:["ALL","DISTINCT"]}]}}allOrDistinct(){return this._get("all_or_distinct")}pgDistinctOnList(){return this._get("pg_distinct_on_list")}};var dt=class extends f{static get syntaxRules(){return[{type:"keyword",value:"FOR"},{optional:!0,dialect:"postgres",syntaxes:[[{type:"keyword",as:"pg_no_key_kw",value:"NO",booleanfy:!0},{type:"keyword",value:"KEY",if:"pg_no_key_kw",assert:!0}],{type:"keyword",as:"pg_key_kw",value:"KEY",booleanfy:!0}]},{type:"keyword",as:"intent_kw",value:["UPDATE","SHARE"],assert:!0},{optional:!0,syntax:[{type:"keyword",value:"OF"},{type:"TableAbstractionRef",as:"table_names",arity:{min:1},itemSeparator:{type:"punctuation",value:","},assert:!0}]},{optional:!0,syntaxes:[[{type:"keyword",as:"skip_locked_kw",value:"SKIP",booleanfy:!0},{type:"keyword",value:"LOCKED",assert:!0}],{type:"keyword",as:"nowait_kw",value:"NOWAIT",booleanfy:!0},{dialect:"mysql",syntax:[{type:"keyword",as:"my_lock_in_share_mode",value:"LOCK",booleanfy:!0},{type:"operator",value:"IN",assert:!0},{type:"keyword",value:"SHARE",assert:!0},{type:"keyword",value:"MODE",assert:!0}]}]}]}intentKW(){return this._get("intent_kw")}tableNames(){return this._get("table_names")}skipLockedKW(){return this._get("skip_locked_kw")}nowaitKW(){return this._get("nowait_kw")}pgKeyKW(){return this._get("pg_key_kw")}pgNoKeyKW(){return this._get("pg_no_key_kw")}myLockInShareMode(){return this._get("my_lock_in_share_mode")}};var _t=class extends O{static get syntaxRules(){return[{type:"keyword",value:"FROM"},{type:"FromElement",as:"entries",arity:{min:1},itemSeparator:{type:"punctuation",value:","},assert:!0}]}};var _e=class extends f{static get syntaxRules(){let e={type:"punctuation",value:","},r={optional:!0,syntaxes:[{type:"CompositeAlias",as:"alias"},[{type:"keyword",as:"as_kw",value:"AS",booleanfy:!0},{type:"CompositeAlias",as:"alias",assert:!0}]]},t={optional:!0,dialect:"postgres",syntax:[{type:"keyword",value:"TABLESAMPLE"},{syntaxes:[[{type:"keyword",as:"pg_sampling_method",value:["BERNOULLI","SYSTEM"]},{type:"paren_block",syntax:{type:"Expr",as:"pg_sampling_arguments",arity:1,itemSeparator:e,assert:!0}}],[{type:"identifier",as:"pg_sampling_method"},{type:"paren_block",syntax:{type:"Expr",as:"pg_sampling_arguments",arity:1/0,itemSeparator:e,assert:!0}}]],assert:!0},{optional:!0,syntax:[{type:"keyword",value:"REPEATABLE"},{type:"paren_block",syntax:{type:"Expr",as:"pg_repeatable_seed"},assert:!0}]}]},a={optional:!0,dialect:"postgres",syntax:[{type:"keyword",as:"pg_with_ordinality",value:"WITH",booleanfy:!0},{type:"keyword",value:"ORDINALITY",assert:!0}]};return{syntaxes:[[{type:"keyword",as:"lateral_kw",value:"LATERAL",optional:!0},{type:"CallExpr",as:"expr"},{...r,optional:!1}],{dialect:"postgres",syntax:[{type:"keyword",as:"lateral_kw",value:"LATERAL",optional:!0},{type:["FunctionsSetConstructor","CallExpr"],as:"expr"},{...a},{...r}]},[{type:"keyword",as:"lateral_kw",value:"LATERAL",optional:!0},{type:["SubqueryConstructor","ValuesSetConstructor"],as:"expr",dialect:"postgres"},{type:"SubqueryConstructor",as:"expr",dialect:"mysql"},{...r}],[{type:"keyword",as:"pg_only_kw",value:"ONLY",optional:!0,dialect:"postgres"},{type:"TableRef",as:"expr"},{type:"StarRef",as:"pg_star_ref",optional:!0,dialect:"postgres"},{...r},{...t}]]}}expr(){return this._get("expr")}lateralKW(){return this._get("lateral_kw")}asKW(){return this._get("as_kw")}alias(){return this._get("alias")}pgOnlyKW(){return this._get("pg_only_kw")}pgStarRef(){return this._get("pg_star_ref")}pgSamplingMethod(){return this._get("pg_sampling_method")}pgSamplingArguments(){return this._get("pg_sampling_arguments")}pgRepeatableSeed(){return this._get("pg_repeatable_seed")}pgWithOrdinality(){return this._get("pg_with_ordinality")}};var gt=class extends O{static get syntaxRules(){return[{type:"keyword",value:"GROUP"},{type:"keyword",value:"BY",assert:!0},{type:"keyword",as:"all_or_distinct",value:["ALL","DISTINCT"],optional:!0},{type:"GroupingElement",as:"entries",arity:{min:1},itemSeparator:{type:"punctuation",value:","},assert:!0,autoIndent:2},{optional:!0,autoIndent:!0,syntax:[{type:"keyword",as:"with_rollup",value:"WITH",booleanfy:!0},{type:"keyword",value:"ROLLUP",assert:!0}]}]}allOrDistinct(){return this._get("all_or_distinct")}withRollup(){return this._get("with_rollup")}};var ht=class extends f{static get syntaxRules(){return{syntaxes:[[{type:"keyword",value:"GROUPING SETS"},{type:"paren_block",syntax:{type:"GroupingElement",as:"grouping_sets",arity:{min:1},itemSeparator:{type:"punctuation",value:","},assert:!0,autoIndent:2},autoIndent:!0}],[{type:"keyword",value:"ROLLUP"},{type:"SetConstructor",as:"rollup_set",assert:!0}],[{type:"keyword",value:"CUBE"},{type:"SetConstructor",as:"cube_set",assert:!0}],{type:["Expr","ParenShape"],as:"expr"}]}}groupingSets(){return this._get("grouping_sets")}rollupSet(){return this._get("rollup_set")}cubeSet(){return this._get("cube_set")}expr(){return this._get("expr")}};var xt=class extends f{static get syntaxRules(){return[{type:"keyword",value:"HAVING"},{type:"Expr",as:"expr",assert:!0}]}static get syntaxPriority(){return-1}expr(){return this._get("expr")}};var Et=class extends _e{static get syntaxRules(){return{syntaxes:[[{type:"keyword",as:"join_type",value:"CROSS"},{type:"keyword",value:"JOIN",assert:!0},...[].concat(super.syntaxRules)],[{type:"keyword",as:"natural_kw",value:"NATURAL",booleanfy:!0,optional:!0},{optional:!0,syntaxes:[{type:"keyword",as:"join_type",value:"INNER"},[{type:"keyword",as:"join_type",value:["LEFT","RIGHT","FULL"],dialect:"postgres"},{type:"keyword",as:"join_type",value:["LEFT","RIGHT"],dialect:"mysql"},{type:"keyword",as:"outer_kw",value:"OUTER",booleanfy:!0,optional:!0}]]},{type:"keyword",value:"JOIN"},...[].concat(super.syntaxRules),{type:["OnClause","UsingClause"],as:"condition_clause",if:"!natural_kw",autoIndent:!0}]]}}naturalKW(){return this._get("natural_kw")}joinType(){return this._get("join_type")}outerKW(){return this._get("outer_kw")}conditionClause(){return this._get("condition_clause")}};var Nt=class extends f{static get syntaxRules(){return[{type:"keyword",value:"LIMIT"},{dialect:"mysql",syntax:[{optional:!0,syntax:[{type:"Expr",as:"my_offset"},{type:"punctuation",value:",",autoSpacing:!1}]},{type:"Expr",as:"expr",assert:!0}]},{dialect:"postgres",syntaxes:[{type:"keyword",as:"pg_all_kw",value:"ALL"},{type:"Expr",as:"expr",assert:!0}]}]}expr(){return this._get("expr")}pgAllKW(){return this._get("pg_all_kw")}myOffset(){return this._get("my_offset")}};var St=class extends f{static get syntaxRules(){return[{type:"keyword",value:"OFFSET"},{type:"Expr",as:"expr",assert:!0},{type:"keyword",as:"pg_row_kw",value:["ROW","ROWS"],optional:!0,dialect:"postgres"}]}expr(){return this._get("expr")}pgRowKW(){return this._get("pg_row_kw")}};var At=class extends f{static get syntaxRules(){return[{type:"keyword",value:"ON"},{type:"Expr",as:"expr",assert:!0}]}expr(){return this._get("expr")}};var Ot=class extends O{static get syntaxRules(){return[{type:"keyword",value:"ORDER"},{type:"keyword",value:"BY",assert:!0},{type:"OrderElement",as:"entries",arity:{min:1},itemSeparator:{type:"punctuation",value:","},assert:!0,autoIndent:2},{optional:!0,autoIndent:!0,syntax:[{type:"keyword",as:"with_rollup",value:"WITH",booleanfy:!0},{type:"keyword",value:"ROLLUP",assert:!0}]}]}withRollup(){return this._get("with_rollup")}};var Tt=class extends f{static get syntaxRules(){return[{type:"Expr",as:"expr"},{optional:!0,syntaxes:[{type:"keyword",value:["ASC","DESC"],as:"dir"},{type:"PGOrderOperator",as:"dir"}]},{optional:!0,syntax:[{type:"keyword",value:"NULLS"},{type:"keyword",as:"nulls_spec",value:["FIRST","LAST"],assert:!0}]}]}expr(){return this._get("expr")}dir(){return this._get("dir")}nullsSpec(){return this._get("nulls_spec")}};var Rt=class extends O{static get syntaxRules(){return[{type:"keyword",value:"PARTITION"},{type:"keyword",value:"BY",assert:!0},{type:"Expr",as:"entries",arity:{min:1},itemSeparator:{type:"punctuation",value:","},assert:!0,autoIndent:2}]}};var wt=class extends f{static get syntaxRules(){return{dialect:"postgres",syntax:[{type:"keyword",value:"FETCH"},{type:"keyword",as:"rel_kw",value:["FIRST","NEXT"]},{type:["SubqueryConstructor","Expr"],as:"expr",optional:!0},{type:"keyword",as:"row_kw",value:["ROW","ROWS"],assert:!0},{syntaxes:[{type:"keyword",value:"ONLY"},[{type:"keyword",as:"with_ties",value:"WITH"},{type:"keyword",value:"TIES",assert:!0}]]}]}}relKW(){return this._get("rel_kw")}expr(){return this._get("expr")}rowKW(){return this._get("row_kw")}withTies(){return this._get("with_ties")}};var bt=class extends f{static get syntaxRules(){return{dialect:"postgres",syntax:[{type:"keyword",value:"USING"},{type:"operator",as:".",assert:!0}]}}value(){return this._get("value")}};var ge=class extends f{static get syntaxRules(){let e={type:"punctuation",value:","};return{syntaxes:[{peek:[0,"keyword",["NOW","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","IF","NULLIF","IFNULL","COALESCE","GREATEST","LEAST","CONCAT","CONCAT_WS","FORMAT","MD5","SHA1","TO_JSON","TO_JSONB","JSON_TYPEOF","JSONB_TYPEOF","JSON_BUILD_ARRAY","JSONB_BUILD_ARRAY","JSON_BUILD_OBJECT","JSONB_BUILD_OBJECT","JSON_POPULATE_RECORD","JSONB_POPULATE_RECORD","JSON_PATH_QUERY","JSON_PATH_EXISTS","JSON_ARRAY","JSON_OBJECT","JSON_EXTRACT","JSON_UNQUOTE","JSON_SET","JSON_INSERT","JSON_REPLACE","JSON_REMOVE","JSON_SEARCH","JSON_CONTAINS","JSON_CONTAINS_PATH","JSON_KEYS","JSON_ARRAY_APPEND","JSON_ARRAY_INSERT","JSON_DEPTH","JSON_LENGTH","JSON_MERGE_PRESERVE","JSON_MERGE_PATCH","JSON_PRETTY","JSON_STORAGE_FREE","ST_ASTEXT","ST_ASGEOJSON","ST_GEOMFROMTEXT","ST_WITHIN","ST_CONTAINS","ST_INTERSECTS","ST_DISTANCE","ST_BUFFER","MAKE_DATE","MAKE_TIME","MAKE_TIMESTAMP","ARRAY","CURDATE","CURTIME","SYSDATE","STR_TO_DATE","MAKEDATE","MAKETIME"]],syntaxes:[[{type:"keyword",as:"name",value:["CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP"]},{type:"paren_block",syntax:{type:"Expr",as:"arguments",arity:0,itemSeparator:e,assert:!0},optional:!0,optionalParens:!0,autoSpacing:!1}],[{type:"keyword",as:"name",value:["NOW"]},{type:"paren_block",syntax:{type:"Expr",as:"arguments",arity:0,itemSeparator:e,assert:!0},optional:!0,autoSpacing:!1}],[{type:"keyword",as:"name",value:["IF","NULLIF","IFNULL"]},{type:"paren_block",syntax:{type:"Expr",as:"arguments",arity:{min:2,max:3},itemSeparator:e,assert:!0},autoSpacing:!1}],[{type:"keyword",as:"name",value:["COALESCE","GREATEST","LEAST","CONCAT"]},{type:"paren_block",syntax:{type:"Expr",as:"arguments",arity:{min:1},itemSeparator:e,assert:!0},autoSpacing:!1}],[{type:"keyword",as:"name",value:["CONCAT_WS","FORMAT"]},{type:"paren_block",syntax:{type:"Expr",as:"arguments",arity:{min:2},itemSeparator:e,assert:!0},autoSpacing:!1}],[{type:"keyword",as:"name",value:["MD5","SHA1"]},{type:"paren_block",syntax:{type:"Expr",as:"arguments",arity:1,itemSeparator:e,assert:!0},autoSpacing:!1}],[{type:"keyword",as:"name",value:["ST_ASTEXT","ST_ASGEOJSON","ST_GEOMFROMTEXT"]},{type:"paren_block",syntax:{type:"Expr",as:"arguments",arity:1,itemSeparator:e,assert:!0},autoSpacing:!1}],[{type:"keyword",as:"name",value:["ST_WITHIN","ST_CONTAINS","ST_INTERSECTS","ST_DISTANCE","ST_BUFFER"]},{type:"paren_block",syntax:{type:"Expr",as:"arguments",arity:2,itemSeparator:e,assert:!0},autoSpacing:!1}],{dialect:"postgres",syntax:[{type:"keyword",as:"name",value:["TO_JSON","TO_JSONB","JSON_TYPEOF","JSONB_TYPEOF"]},{type:"paren_block",syntax:{type:"Expr",as:"arguments",arity:1,itemSeparator:e,assert:!0},autoSpacing:!1}]},{dialect:"postgres",syntax:[{type:"keyword",as:"name",value:["JSON_BUILD_ARRAY","JSONB_BUILD_ARRAY","JSON_BUILD_OBJECT","JSONB_BUILD_OBJECT"]},{type:"paren_block",syntax:{type:"Expr",as:"arguments",arity:{min:0},itemSeparator:e,assert:!0},autoSpacing:!1}]},{dialect:"postgres",syntax:[{type:"keyword",as:"name",value:["JSON_POPULATE_RECORD","JSONB_POPULATE_RECORD","JSON_PATH_QUERY","JSON_PATH_EXISTS"]},{type:"paren_block",syntax:{type:"Expr",as:"arguments",arity:2,itemSeparator:e,assert:!0},autoSpacing:!1}]},{dialect:"postgres",syntax:[{type:"keyword",as:"name",value:["ARRAY"]},{type:"paren_block",syntax:{type:"SelectStmt",as:"arguments",arity:1,itemSeparator:e,assert:!0},autoIndent:!0,autoSpacing:!0}]},{dialect:"postgres",syntax:[{type:"keyword",as:"name",value:["MAKE_DATE","MAKE_TIME","MAKE_TIMESTAMP"]},{type:"paren_block",syntax:{type:"Expr",as:"arguments",arity:1/0,itemSeparator:e,assert:!0},autoSpacing:!1}]},{dialect:"mysql",syntax:[{type:"keyword",as:"name",value:["JSON_ARRAY","JSON_OBJECT","JSON_EXTRACT","JSON_UNQUOTE","JSON_SET","JSON_INSERT","JSON_REPLACE","JSON_REMOVE","JSON_SEARCH","JSON_CONTAINS","JSON_CONTAINS_PATH","JSON_KEYS","JSON_ARRAY_APPEND","JSON_ARRAY_INSERT","JSON_DEPTH","JSON_LENGTH","JSON_MERGE_PRESERVE","JSON_MERGE_PATCH","JSON_PRETTY","JSON_STORAGE_FREE"]},{type:"paren_block",syntax:{type:"Expr",as:"arguments",arity:{min:1},itemSeparator:e,assert:!0},autoSpacing:!1}]},{dialect:"mysql",syntax:[{type:"keyword",as:"name",value:["CURDATE","CURTIME","SYSDATE"]},{type:"paren_block",syntax:{type:"Expr",as:"arguments",arity:0,itemSeparator:e,optional:!0,assert:!0},autoSpacing:!1}]},{dialect:"mysql",syntax:[{type:"keyword",as:"name",value:"STR_TO_DATE"},{type:"paren_block",syntax:{type:"Expr",as:"arguments",arity:2,itemSeparator:e,assert:!0},autoSpacing:!1}]},{dialect:"mysql",syntax:[{type:"keyword",as:"name",value:["MAKEDATE","MAKETIME"]},{type:"paren_block",syntax:{type:"Expr",as:"arguments",arity:2,itemSeparator:e,assert:!0},autoSpacing:!1}]}]},[{type:"keyword",as:"name"},{type:"paren_block",syntax:{type:"Expr",as:"arguments",arity:1/0,itemSeparator:e},autoSpacing:!1}],[{type:"identifier",as:"name"},{type:"paren_block",syntax:{type:"Expr",as:"arguments",arity:1/0,itemSeparator:e},autoSpacing:!1}]]}}static get syntaxPriority(){return 51}name(){return this._get("name")}arguments(){return this._get("arguments")}};var he=class extends ge{static get syntaxRules(){let e={type:"punctuation",value:","},r={type:"keyword",as:"distinct",value:"DISTINCT",booleanfy:!0,optional:!0},t={optional:!0,syntax:[{type:"keyword",value:"SEPARATOR"},{type:"Expr",as:"separator",assert:!0}]},a={type:"OrderByClause",as:"order_by_clause",optional:!0},o={type:"PGFilterClause",as:"pg_filter_clause",optional:!0,dialect:"postgres"},s={type:"PGWithinGroupClause",as:"pg_within_group_clause",optional:!0,dialect:"postgres"},u={optional:!0,syntax:[{type:"keyword",as:"null_handling",value:["IGNORE","RESPECT"]},{type:"keyword",value:"NULLS",assert:!0}]},c={optional:!0,syntax:[{type:"keyword",value:"OVER"},{type:["WindowRef","WindowSpec"],as:"over_clause",assert:!0}]};return{peek:[0,"keyword",["COUNT","SUM","AVG","MIN","MAX","ARRAY_AGG","STRING_AGG","GROUP_CONCAT","REGR_SLOPE","COVAR_POP","COVAR_SAMP","CORR","PERCENTILE_CONT","PERCENTILE_DISC","MODE","RANK","DENSE_RANK","ROW_NUMBER","EVERY","BOOL_AND","BOOL_OR","BIT_AND","BIT_OR","BIT_XOR","JSON_AGG","JSON_ARRAYAGG","JSON_OBJECT_AGG","JSONB_OBJECT_AGG","JSON_OBJECTAGG","STDDEV_POP","STDDEV_SAMP","VAR_POP","VAR_SAMP","VARIANCE","STD","XMLAGG","LEAD","LAG","NTILE","FIRST_VALUE","LAST_VALUE"]],syntaxes:[[{type:"keyword",as:"name",value:"COUNT"},{type:"paren_block",syntax:[{dialect:"postgres",type:"StarRef",as:"arguments",arity:1,assert:!1,itemSeparator:e},{dialect:"mysql",type:"StarRef",as:"arguments",arity:{max:1},assert:!1,itemSeparator:e,optional:!0}],autoSpacing:!1},{...o},{...c}],[{type:"keyword",as:"name",value:["COUNT","SUM","AVG","MIN","MAX"]},{type:"paren_block",syntax:[{...r},{type:"Expr",as:"arguments",arity:1,itemSeparator:e,assert:!0}],autoSpacing:!1},{...o},{...c}],{dialect:"postgres",syntax:[{type:"keyword",as:"name",value:"ARRAY_AGG"},{type:"paren_block",syntax:[{...r},{type:"Expr",as:"arguments",arity:{min:1},itemSeparator:e,assert:!0},{...a}],autoSpacing:!1},{...o},{...c}]},{dialect:"postgres",syntax:[{type:"keyword",as:"name",value:"STRING_AGG"},{type:"paren_block",syntax:[{...r},{type:"Expr",as:"arguments",arity:2,itemSeparator:e,assert:!0},{...a},{...t}],autoSpacing:!1},{...o},{...c}]},{dialect:"mysql",syntax:[{type:"keyword",as:"name",value:"GROUP_CONCAT"},{type:"paren_block",syntax:[{...r},{type:"Expr",as:"arguments",arity:{min:1},itemSeparator:e,assert:!0},{...a},{...t}],autoSpacing:!1},{...c}]},{dialect:"postgres",syntax:[{type:"keyword",as:"name",value:"REGR_SLOPE"},{type:"paren_block",syntax:{type:"Expr",as:"arguments",arity:2,itemSeparator:e,assert:!0},autoSpacing:!1},{...o},{...c}]},[{type:"keyword",as:"name",value:["COVAR_POP","COVAR_SAMP","CORR"]},{type:"paren_block",syntax:{type:"Expr",as:"arguments",arity:2,itemSeparator:e,assert:!0},autoSpacing:!1},{...o},{...c}],{dialect:"postgres",syntax:[{type:"keyword",as:"name",value:["PERCENTILE_CONT","PERCENTILE_DISC"]},{type:"paren_block",syntax:{type:"Expr",as:"arguments",arity:1,itemSeparator:e,assert:!0},autoSpacing:!1},{...o},{...s,optional:!1}]},{dialect:"postgres",syntax:[{type:"keyword",as:"name",value:"MODE"},{type:"paren_block",syntax:{type:"Expr",as:"arguments",arity:0,itemSeparator:e,assert:!0},autoSpacing:!1},{...o},{...s,optional:!1}]},{dialect:"postgres",syntax:[{type:"keyword",as:"name",value:["RANK","DENSE_RANK"]},{type:"paren_block",syntax:{type:"Expr",as:"arguments",arity:0,itemSeparator:e,assert:!0},autoSpacing:!1},{...o},{...c,optional:!1}]},[{type:"keyword",as:"name",value:"ROW_NUMBER"},{type:"paren_block",syntax:{type:"Expr",as:"arguments",arity:0,itemSeparator:e,assert:!0},autoSpacing:!1},{...c,optional:!1}],{dialect:"postgres",syntax:[{type:"keyword",as:"name",value:["EVERY","BOOL_AND","BOOL_OR"]},{type:"paren_block",syntax:[{...r},{type:"Expr",as:"arguments",arity:1,itemSeparator:e,assert:!0}],autoSpacing:!1},{...o},{...c}]},{dialect:"postgres",syntax:[{type:"keyword",as:"name",value:"JSON_AGG"},{type:"paren_block",syntax:[{...r},{type:"Expr",as:"arguments",arity:{min:1},itemSeparator:e,assert:!0}],autoSpacing:!1},{...o},{...c}]},{dialect:"mysql",syntax:[{type:"keyword",as:"name",value:"JSON_ARRAYAGG"},{type:"paren_block",syntax:[{...r},{type:"Expr",as:"arguments",arity:{min:1},itemSeparator:e,assert:!0}],autoSpacing:!1},{...c}]},{dialect:"mysql",syntax:[{type:"keyword",as:"name",value:"BIT_XOR"},{type:"paren_block",syntax:[{...r},{type:"Expr",as:"arguments",arity:1,itemSeparator:e,assert:!0}],autoSpacing:!1},{...c}]},[{type:"keyword",as:"name",value:["BIT_AND","BIT_OR"]},{type:"paren_block",syntax:[{...r},{type:"Expr",as:"arguments",arity:1,itemSeparator:e,assert:!0}],autoSpacing:!1},{...o},{...c}],{dialect:"postgres",syntax:[{type:"keyword",as:"name",value:["JSON_OBJECT_AGG","JSONB_OBJECT_AGG"]},{type:"paren_block",syntax:[{...r},{type:"Expr",as:"arguments",arity:2,itemSeparator:e,assert:!0}],autoSpacing:!1},{...o},{...c}]},{dialect:"mysql",syntax:[{type:"keyword",as:"name",value:"JSON_OBJECTAGG"},{type:"paren_block",syntax:[{...r},{type:"Expr",as:"arguments",arity:2,itemSeparator:e,assert:!0}],autoSpacing:!1},{...c}]},[{type:"keyword",as:"name",value:["STDDEV_POP","STDDEV_SAMP","VAR_POP","VAR_SAMP","VARIANCE","STD"]},{type:"paren_block",syntax:[{...r},{type:"Expr",as:"arguments",arity:1,itemSeparator:e,assert:!0}],autoSpacing:!1},{...o},{...c}],{dialect:"postgres",syntax:[{type:"keyword",as:"name",value:"XMLAGG"},{type:"paren_block",syntax:[{type:"Expr",as:"arguments",arity:1,itemSeparator:e,assert:!0},{...a}],autoSpacing:!1},{...o},{...c}]},[{type:"keyword",as:"name",value:["LEAD","LAG"]},{type:"paren_block",syntax:{type:"Expr",as:"arguments",arity:{max:3},itemSeparator:e,optional:!0,assert:!0},autoSpacing:!1},{...u},{...c}],[{type:"keyword",as:"name",value:["NTILE","FIRST_VALUE","LAST_VALUE"]},{type:"paren_block",syntax:{type:"Expr",as:"arguments",arity:1,itemSeparator:e,assert:!0},autoSpacing:!1},{...c,optional:!1}]]}}distinct(){return this._get("distinct")}orderByClause(){return this._get("order_by_clause")}separator(){return this._get("separator")}overClause(){return this._get("over_clause")}pgFilterClause(){return this._get("pg_filter_clause")}pgWithinGroupClause(){return this._get("pg_within_group_clause")}};var vt=class n extends f{static get syntaxRules(){return[{type:["Expr","MYVarAssignmentExpr"],as:"expr"},{optional:!0,syntaxes:[{type:"BasicAlias",as:"alias"},[{type:"keyword",as:"as_kw",value:"AS",booleanfy:!0},{type:"BasicAlias",as:"alias",assert:!0}]]}]}expr(){return this._get("expr")}asKW(){return this._get("as_kw")}alias(){return this._get("alias")}jsonfy(e={},r=null){if(e.deSugar&&this.alias()?.isAggr()){let t={nodeName:he.NODE_NAME,name:(e.toDialect||this.options.dialect)==="mysql"?"JSON_ARRAYAGG":"JSON_AGG",arguments:[this.expr().jsonfy({...e,asAggr:!0},r)]},a={nodeName:de.NODE_NAME,value:this.alias().value()};return{nodeName:n.NODE_NAME,expr:t,as_kw:this.asKW(),alias:a}}return super.jsonfy(e,r)}};var Ct=class extends f{static get syntaxRules(){return[{type:"CallExpr",as:"expr"},{optional:!0,syntax:[{syntaxes:[{type:"CompositeAlias",as:"alias"},[{type:"keyword",as:"as_kw",value:"AS",booleanfy:!0},{type:"CompositeAlias",as:"alias",assert:!0}]]}]}]}expr(){return this._get("expr")}asKW(){return this._get("as_kw")}alias(){return this._get("alias")}};var kt=class extends f{static get syntaxRules(){return[{type:"keyword",value:"USING"},{type:["ColumnNameRef","ColumnsConstructor"],as:"column",assert:!0}]}column(){return this._get("column")}};var It=class extends f{static get syntaxRules(){return[{type:"keyword",value:"WHERE"},{type:"Expr",as:"expr",assert:!0}]}expr(){return this._get("expr")}};var Dt=class extends O{static get syntaxRules(){return[{type:"keyword",value:"WINDOW"},{type:"WindowDeclaration",as:"entries",arity:{min:1},itemSeparator:{type:"punctuation",value:","},assert:!0,autoIndent:2}]}};var Lt=class extends f{static get syntaxRules(){return[{type:"Identifier",as:"name"},{type:"keyword",value:"AS"},{type:"WindowSpec",as:"spec",assert:!0}]}name(){return this._get("name")}spec(){return this._get("spec")}};var Mt=class extends f{static get syntaxRules(){let e={type:"operator",value:"AND"};return[{type:"keyword",as:"specifier",value:["ROWS","RANGE","GROUPS"]},{syntaxes:[[{type:"operator",as:"with_between_clause",value:"BETWEEN",booleanfy:!0},{type:"WindowFrameBound",as:"bounds",arity:2,itemSeparator:e,assert:!0}],{type:"WindowFrameBound",as:"bounds",arity:1,itemSeparator:e,assert:!0}]},{optional:!0,syntax:[{type:"keyword",value:"EXCLUDE"},{type:"keyword",as:"exclusion",value:["CURRENT ROW","GROUP","TIES","NO OTHERS"],assert:!0}]}]}specifier(){return this._get("specifier")}withBetweenClause(){return this._get("with_between_clause")}bounds(){return this._get("bounds")}exclusion(){return this._get("exclusion")}};var Pt=class extends f{static get syntaxRules(){return{syntaxes:[{type:"keyword",as:"specifier",value:"CURRENT ROW"},[{type:"keyword",as:"specifier",value:"UNBOUNDED"},{type:"keyword",as:"dir",value:["PRECEDING","FOLLOWING"]}],[{type:"number_literal",as:"specifier"},{type:"keyword",as:"dir",value:["PRECEDING","FOLLOWING"]}],[{type:"Expr",as:"specifier"},{type:"keyword",as:"dir",value:["PRECEDING","FOLLOWING"]}]]}}specifier(){return this._get("specifier")}dir(){return this._get("dir")}};var Bt=class extends f{static get syntaxRules(){return{type:"paren_block",syntax:[{type:"WindowRef",as:"super_window",optional:!0},{type:"PartitionByClause",as:"partition_by_clause",optional:!0,autoIndent:!0},{type:"OrderByClause",as:"order_by_clause",optional:!0,autoIndent:!0},{type:"WindowFrameSpec",as:"frame_spec",optional:!0,autoIndent:!0}],autoIndent:!0,autoIndentAdjust:-1}}superWindow(){return this._get("super_window")}partitionByClause(){return this._get("partition_by_clause")}orderByClause(){return this._get("order_by_clause")}frameSpec(){return this._get("frame_spec")}};var re=class extends Y{static get syntaxRules(){return{type:["CompleteSelectStmt","CompositeSelectStmt"],expression:!0}}static _getSyntaxRules(e=!1){return[{type:"keyword",value:"SELECT"},{type:"DistinctClause",as:"distinct_clause",optional:!0},{type:"SelectElement",as:"select_list",arity:{min:1},itemSeparator:{type:"punctuation",value:","},assert:!0,autoIndent:2},{optional:!0,syntax:[{type:"FromClause",as:"from_clause",autoIndent:!0},{type:"JoinClause",as:"join_clauses",arity:1/0,optional:!0,autoIndent:!0},{type:"MYPartitionClause",as:"my_partition_clause",optional:!0,autoIndent:!0},{type:"WhereClause",as:"where_clause",optional:!0,autoIndent:!0},{optional:!0,syntax:[{type:"GroupByClause",as:"group_by_clause",autoIndent:!0},{type:"HavingClause",as:"having_clause",optional:!0,autoIndent:!0}]},{type:"WindowClause",as:"window_clause",optional:!0,autoIndent:!0},...e?this._getSyntaxRulesTail():[]]}]}static _getSyntaxRulesTail(){return[{type:"OrderByClause",as:"order_by_clause",optional:!0,autoIndent:!0},{type:"LimitClause",as:"limit_clause",optional:!0,autoIndent:!0},{type:"OffsetClause",as:"offset_clause",optional:!0,autoIndent:!0},{type:"PGFetchClause",as:"pg_fetch_clause",optional:!0,dialect:"postgres",autoIndent:!0},{type:"ForClause",as:"for_clause",optional:!0,autoIndent:!0}]}};var{LQObjectLiteral:Ma,BasicAlias:Pa,SelectElement:Ba}=T,xe=class extends Z(re){static get syntaxRules(){return this._getSyntaxRules(!1)}static get syntaxPriority(){return-1}distinctClause(){return this._get("distinct_clause")}selectList(){return this._get("select_list")}fromClause(){return this._get("from_clause")}joinClauses(){return this._get("join_clauses")}whereClause(){return this._get("where_clause")}groupByClause(){return this._get("group_by_clause")}havingClause(){return this._get("having_clause")}windowClause(){return this._get("window_clause")}myPartitionClause(){return this._get("my_partition_clause")}get length(){return this.selectList()?.length??0}[Symbol.iterator](){return(this.selectList()||[])[Symbol.iterator]()}jsonfy(e={}){let r=super.jsonfy(e),t;if(e.deSugar&&(t=this.selectList()).length===1&&t[0].expr()instanceof Ma&&!t[0].alias()){let[a]=r.select_list[0].arguments.reduce(([o,s],u)=>s?[...o,[{nodeName:Pa.NODE_NAME,value:s.value},u]]:[o,u],[[]]);r={...r,select_list:a.map(([o,s])=>({nodeName:Ba.NODE_NAME,expr:s,alias:o,as_kw:!0}))}}return r}};var $t=class extends xe{static get syntaxRules(){return this._getSyntaxRules(!0)}static get syntaxPriority(){return 99}orderByClause(){return this._get("order_by_clause")}offsetClause(){return this._get("offset_clause")}limitClause(){return this._get("limit_clause")}forClause(){return this._get("for_clause")}pgFetchClause(){return this._get("pg_fetch_clause")}};var Ut=class extends re{static get syntaxRules(){let e=["SubqueryConstructor","ValuesSetConstructor","ParenShape","BasicSelectStmt","CallExpr"];return[{type:e.concat("CompleteSelectStmt"),as:"left"},{type:"operator",as:"operator",value:["INTERSECT","UNION","EXCEPT"],autoSpacing:`
`},{type:"keyword",as:"all_or_distinct",value:["ALL","DISTINCT"],optional:!0},{type:e,as:"right",assert:!0,autoSpacing:`
`},...this._getSyntaxRulesTail()]}static get syntaxPriority(){return 100}left(){return this._get("left")}operator(){return this._get("operator")}allOrDistinct(){return this._get("all_or_distinct")}right(){return this._get("right")}orderByClause(){return this._get("order_by_clause")}offsetClause(){return this._get("offset_clause")}limitClause(){return this._get("limit_clause")}forClause(){return this._get("for_clause")}pgFetchClause(){return this._get("pg_fetch_clause")}get length(){return this.left()?.selectList()?.length??0}[Symbol.iterator](){return(this.left()?.selectList()||[])[Symbol.iterator]()}};var jt=class extends ie{static get syntaxRules(){return[{type:"keyword",value:"TABLE"},{type:"keyword",as:"pg_only_kw",value:"ONLY",optional:!0,dialect:"postgres"},{type:"TableRef",as:"table_name",assert:!0},{type:"StarRef",as:"pg_star_ref",optional:!0,dialect:"postgres"}]}tableName(){return this._get("table_name")}pgOnlyKW(){return this._get("pg_only_kw")}pgStarRef(){return this._get("pg_star_ref")}};var V={};z(V,{AggrCallExpr:()=>he,AtTimeZoneExpr:()=>ar,BetweenExpr:()=>nr,BinaryExpr:()=>L,BindVar:()=>wr,BitLiteral:()=>Jt,BoolLiteral:()=>Yt,CallExpr:()=>ge,CaseBranch:()=>Wt,CaseExpr:()=>qt,CastExpr:()=>or,ColumnNameRef:()=>yr,ColumnRef:()=>_r,DatabaseRef:()=>gr,DefaultLiteral:()=>Ht,DistinctFromExpr:()=>ur,Expr:()=>De,ExtractExpr:()=>ir,HexLiteral:()=>Vt,Identifier:()=>U,LQArrayLiteral:()=>Ar,LQBackBackRef:()=>ae,LQBackRef:()=>hr,LQBackRefConstructor:()=>ce,LQDeepDeepRef:()=>Ne,LQDeepRef:()=>xr,LQObjectLiteral:()=>Or,LQObjectProperty:()=>Tr,NullLiteral:()=>Kt,NumberLiteral:()=>Xt,PGArrayLiteral:()=>Rr,PGCastExpr2:()=>lr,PGFilterClause:()=>Ft,PGWithinGroupClause:()=>Gt,ParenShape:()=>ee,QuantifiedExpr:()=>pr,RowConstructor:()=>ye,SetConstructor:()=>te,StarRef:()=>Er,StringLiteral:()=>Qt,SubqueryConstructor:()=>fe,SystemVar:()=>br,TableAbstractionRef:()=>Nr,TableRef:()=>Se,TypedDateLiteral:()=>zt,TypedIntervalLiteral:()=>Zt,TypedLiteral:()=>H,TypedTimeLiteral:()=>er,TypedTimeZoneLiteral:()=>rr,TypedTimestampLiteral:()=>tr,UnaryExpr:()=>cr,UnknownLiteral:()=>sr,UserVar:()=>vr,WindowRef:()=>Sr});var Ft=class extends f{static get syntaxRules(){return{dialect:"postgres",syntax:[{type:"keyword",value:"FILTER"},{type:"paren_block",syntax:{type:"WhereClause",as:"where_clause"},assert:!0,autoIndent:!0}]}}static get syntaxPriority(){return-1}whereClause(){return this._get("where_clause")}};var Gt=class extends f{static get syntaxRules(){return{dialect:"postgres",syntax:[{type:"keyword",value:"WITHIN"},{type:"keyword",value:"GROUP"},{type:"paren_block",syntax:{type:"OrderByClause",as:"order_by_clause"},assert:!0,autoIndent:!0}]}}static get syntaxPriority(){return-1}orderByClause(){return this._get("order_by_clause")}};var qt=class extends O{static get syntaxRules(){return[{type:"keyword",value:"CASE"},{type:"Expr",as:"subject",optional:!0},{type:"CaseBranch",as:"entries",arity:{min:1},assert:!0,autoIndent:2},{optional:!0,syntax:[{type:"keyword",value:"ELSE"},{type:"Expr",as:"alternate",autoIndent:!0}],autoSpacing:`
`},{type:"keyword",value:"END",autoSpacing:`
`}]}subject(){return this._get("subject")}branches(){return this.entries()}alternate(){return this._get("alternate")}};var Wt=class extends f{static get syntaxRules(){return[{type:"keyword",value:"WHEN"},{type:"Expr",as:"condition"},{type:"keyword",value:"THEN"},{type:"Expr",as:"consequent"}]}static get syntaxPriority(){return-1}condition(){return this._get("condition")}consequent(){return this._get("consequent")}};var j=class extends f{static get syntaxPriority(){return 49}value(){return this._get("value")}};var Jt=class extends j{static get syntaxRules(){return{type:"bit_literal",as:"."}}};var Yt=class extends j{static get syntaxRules(){return{type:"bool_literal",as:"."}}};var Ht=class extends j{static get syntaxRules(){return{type:"keyword",as:".",value:"DEFAULT"}}};var Vt=class extends j{static get syntaxRules(){return{type:"hex_literal",as:"."}}};var Kt=class extends j{static get syntaxRules(){return{type:"null_literal",as:"."}}};var Xt=class extends j{static get syntaxRules(){return{type:"number_literal",as:"."}}};var Qt=class extends j{static get syntaxRules(){return{type:"string_literal",as:"."}}qualifier(){return this._get("qualifier")}};var H=class extends f{static get syntaxRules(){return[{type:"data_type",as:"data_type"},{type:"string_literal",as:"value"}]}static get syntaxPriority(){return 50}dataType(){return Number(this._get("data_type"))}value(){return Number(this._get("value"))}};var zt=class extends H{static get syntaxRules(){return[{type:"data_type",as:"data_type",value:"DATE"},{type:"string_literal",as:"value"}]}};var Zt=class extends H{static get syntaxRules(){return[{type:"data_type",as:"data_type",value:"INTERVAL"},{syntaxes:[{type:"string_literal",as:"value"},{type:"number_literal",as:"value",dialect:"mysql"}]},{optional:!0,syntax:[{type:"keyword",as:"unit",value:["YEAR","MONTH","DAY","HOUR","MINUTE","SECOND"]},{optional:!0,syntax:[{type:"keyword",value:"TO"},{type:"keyword",as:"to_unit",value:["YEAR","MONTH","DAY","HOUR","MINUTE","SECOND"],assert:!0}]}]}]}unit(){return Number(this._get("unit"))}toUnit(){return Number(this._get("to_unit"))}};var er=class extends H{static get syntaxRules(){return[{type:"data_type",as:"data_type",value:"TIME"},{type:"string_literal",as:"value"},{optional:!0,dialect:"postgres",syntax:[{type:"keyword",as:"pg_with_tz",value:["WITH","WITHOUT"]},{type:"keyword",value:"TIME ZONE",assert:!0}]}]}pgWithTZ(){return Number(this._get("pg_with_tz"))}};var tr=class extends H{static get syntaxRules(){return[{type:"data_type",as:"data_type",value:"TIMESTAMP",dialect:"postgres"},{type:"data_type",as:"data_type",value:["TIMESTAMP","DATETIME"],dialect:"mysql"},{type:"string_literal",as:"value"},{optional:!0,dialect:"postgres",syntax:[{type:"keyword",as:"pg_with_tz",value:["WITH","WITHOUT"]},{type:"keyword",value:"TIME ZONE",assert:!0}]}]}pgWithTZ(){return Number(this._get("pg_with_tz"))}};var rr=class extends H{static get syntaxRules(){return[{type:"keyword",value:"TIME ZONE"},{type:"Expr",as:"value"}]}};var sr=class extends j{static get syntaxRules(){return{type:"unknown_literal",as:"."}}};var ar=class extends L{static get syntaxRules(){return[{type:"Expr",as:"left",peek:[1,"operator","AT"]},{type:"operator",as:"operator",value:"AT"},{syntaxes:[{type:"TypedTimeZoneLiteral",as:"right"},{type:"keyword",as:"right",value:"LOCAL"}]}]}static get syntaxPriority(){return 0}left(){return this._get("left")}right(){return this._get("right")}};var nr=class extends L{static get syntaxRules(){return[{type:"Expr",as:"left",peek:[1,"operator",["NOT","BETWEEN"]]},{type:"operator",as:"negation",value:"NOT",booleanfy:!0,optional:!0},{type:"operator",as:"operator",value:"BETWEEN"},{type:"Expr",as:"right",arity:{min:2,max:2,eager:!1},itemSeparator:{type:"operator",value:"AND"},assert:!0}]}};var or=class extends f{static get syntaxRules(){return[{type:"keyword",value:"CAST"},{type:"paren_block",syntax:[{type:"Expr",as:"left"},{type:"keyword",value:"AS"},{type:"DataType",as:"right",assert:!0}],assert:!0,autoSpacing:!1}]}left(){return this._get("left")}right(){return this._get("right")}};var ir=class extends L{static get syntaxRules(){return[{type:"keyword",value:"EXTRACT"},{type:"paren_block",syntax:[{type:"Expr",as:"left"},{type:"keyword",value:"FROM"},{type:"Expr",as:"right",assert:!0}],autoSpacing:!1}]}left(){return this._get("left")}right(){return this._get("right")}};var ur=class extends L{static get syntaxRules(){return[{type:"Expr",as:"left",peek:[1,"operator",["IS","IS NOT"]]},{type:"operator",as:"logic",value:["IS","IS NOT"]},{type:"operator",as:"operator",value:"DISTINCT FROM"},{type:"Expr",as:"right",assert:!0}]}logic(){return this._get("logic")}};var lr=class extends L{static get syntaxRules(){return{dialect:"postgres",syntax:[{type:"Expr",as:"left",peek:[1,"operator","::"]},{type:"operator",as:"operator",value:"::",autoSpacing:!1},{type:"DataType",as:"right",assert:!0,autoSpacing:!1}]}}};var pr=class extends f{static get syntaxRules(){return[{type:"keyword",as:"quantifier",value:["ALL","ANY","SOME"]},{type:["SubqueryConstructor","SetConstructor"],as:"expr"}]}quantifier(){return this._get("quantifier")}expr(){return this._get("expr")}};var cr=class extends f{static get syntaxRules(){return[{type:"operator",as:"operator",value:["-","+","NOT","EXISTS"]},{type:"Expr",as:"operand",autoSpacing:["NOT","EXISTS"]}]}static get syntaxPriority(){return 1}operator(){return this._get("operator")}operand(){return this._get("operand")}};var yr=class extends U{static get syntaxPriority(){return-1}selectSchema(e=null){let r=this.value(),t=this.capture("CONTEXT.TABLE_SCHEMA"),a=r?[].concat(t?.column(r)||[]):t.columns();return e?a.filter(e):a}};var fr=class extends Error{};var mr=class extends Error{};var dr=n=>class extends n{jsonfy(e={},r=null){let t=super.jsonfy(e,r);if(!t.qualifier&&(e.deSugar||e.fullyQualified)){let a=this.qualifier(!0).jsonfy(e,r);t={...t,qualifier:a.value?a:void 0}}return t}qualifier(e=null){let r=this._get("qualifier");if(!arguments.length)return r;if(e!==!0&&typeof e!="string")throw new TypeError('"init" must be true or a string.');let t=this._get("value");if(!t&&!r&&e===!0)throw new TypeError("Can't auto-resolve qualifier for anonymous ident.");let o=T[this.constructor._qualifierType].fromJSON(e===!0&&r?.jsonfy()||{value:e!==!0?"":e});if(this._adoptNodes(o),e===!0&&!r){let s=`${this.constructor._domainKind}s`,u=o.selectSchema(c=>c._has(s,t));if(u.length>1){let c=u.map(i=>this.constructor.fromJSON({qualifier:i.name(),value:this.value()}));throw new fr(`[${this.clone({fullyQualified:!0})}]: ${this.value()} is ambiguous. (Is it ${c.join(" or ")}?)`)}else if(!u.length)throw new mr(`[${this.clone({fullyQualified:!0})}]: ${this.value()} is unknown.`);o._set("value",u[0].name())}return o}selectSchema(e=null){let r=this.value(),t=this.qualifier(!0).schema(),a=`${this.constructor._domainKind}s`;return t.reduce((o,s)=>{let u=r?[].concat(s._get(a,r)||[]):s._get(a);return o.concat(e?u.filter(e):u)},[])}identifiesAs(e){return e instanceof n?this._eq(this.value(),e.value(),"ci")&&(!e.qualifier()||!!this.qualifier(!0).identifiesAs(e.qualifier())):super.identifiesAs(e)}static fromJSON(e,r={},t=null){if(typeof e=="string")e={value:e,qualifier:null};else if(Array.isArray(e)&&e.some(a=>typeof a=="string")&&(e=e.slice()))e={value:e.pop(),qualifier:e.pop()};else if(!$(e))return;return super.fromJSON(e,r,t)}};var _r=class extends dr(U){static get _domainKind(){return"column"}static get _qualifierType(){return"TableAbstractionRef"}static get syntaxRules(){return[{optional:!0,syntaxes:[[{type:"LQBackRefConstructor",as:"qualifier",peek:[1,"punctuation","."]},{type:"punctuation",value:".",assert:!0,autoSpacing:!1}],[{type:this._qualifierType,as:"qualifier",peek:[1,"version_spec"]},{type:"punctuation",value:".",assert:!0,autoSpacing:!1}],[{type:this._qualifierType,as:"qualifier",peek:[1,"punctuation","."]},{type:"punctuation",value:".",assert:!0,autoSpacing:!1}]]},{syntaxes:[{...[].concat(super.syntaxRules)[0]},{type:"operator",as:".",value:"*"}],autoSpacing:!1}]}static get syntaxPriority(){return 51}};var gr=class extends U{static get syntaxRules(){return[...[].concat(super.syntaxRules),{type:"LQVersionSpec",as:"version_spec",optional:!0,autoSpacing:!1}]}static get syntaxPriority(){return-1}versionSpec(){return this._get("version_spec")}selectSchema(e=null){let r=this.value(),t=this.capture("CONTEXT.ROOT_SCHEMA"),a=r?[].concat(t?.database(r)||[]):t.databases();return e?a.filter(e):a}};var Ee=class extends pe(L){};var se=class extends Error{constructor(e){super(e),this.name="ErrorFKInvalid"}};var{LQDeepRef:Rs}=T,ae=class n extends Ee{static get _leftType(){return["ColumnRef","LQBackBackRef"]}static get syntaxRules(){return[{type:this._leftType,as:"left",peek:[1,"operator","<~"]},{type:"operator",value:"<~"},{type:"ColumnNameRef",as:"right",peek:[1,"operator","<~"]}]}static get syntaxPriority(){return 1}static morphsTo(){return Rs}jsonfy(e={},r=null){return e.reverseRef?{nodeName:Rs.NODE_NAME,left:this.right().jsonfy(e,r),right:this.left().jsonfy(e,r)}:super.jsonfy(e,r)}_capture(e,r){return e==="CONTEXT.TABLE_SCHEMA"&&r===this.left()?this.tableSchema():super._capture(e,r)}tableSchema(){let e=this.right().columnSchema().foreignKey();if(!e)throw new se(`[${this}]: Column ${this.right().clone({fullyQualified:!0})} is not a foreign key.`);return e.targetTable().tableSchema()}endpoint(){return this.left()instanceof n?this.left().endpoint():this.left()}};var{ColumnRef:$a,TableRef:Ua}=T,hr=class extends ae{static get syntaxRules(){return[{type:this._leftType,as:"left",peek:[1,"operator","<~"]},{type:"operator",value:"<~"},{type:"TableRef",as:"right"}]}static get syntaxPriority(){return 0}_capture(e,r){return e==="CONTEXT.TABLE_SCHEMA"?this.tableSchema():super._capture(e,r)}tableSchema(){return this.right().tableSchema()}getOperands(){let e,r,t=this.left(),a=t instanceof ae?t.endpoint():t,o=a.columnSchema().foreignKey();if(!o)throw new se(`[${this}]: Column ${a.clone()} is not a foreign key.`);let s=o.targetTable(),u=this.capture("CONTEXT.QUERY_SCHEMA");for(let _ of u.columns())if(_.primaryKey()&&_.qualifier(!0).identifiesAs(s)){let d=$a.fromJSON({qualifier:_.parentSchema(!0).name(),value:_.name()});if(e)throw new Error(`[${this}]: Target primary key for foreign key ${a.clone()} is ambiguous. (Is it ${e} or ${d}?)`);e=d}if(!e)throw new Error(`LQBackRef ${this} could not be resolved against table query.`);r=t instanceof ae?t.clone({reverseRef:!0}):t.clone();let c=this.tableSchema();return{table:Ua.fromJSON({qualifier:c.parentSchema(!0).name(),value:c.name()}),left:e,right:r}}};var Ne=class n extends Ee{static get _rightType(){return["LQDeepDeepRef","LQObjectLiteral","LQArrayLiteral","ColumnsConstructor","ColumnNameRef"]}static get syntaxRules(){return[{type:"ColumnNameRef",as:"left",peek:[1,"operator","~>"]},{type:"operator",value:"~>"},{type:this._rightType,as:"right"}]}static get syntaxPriority(){return-1}_capture(e,r){return e==="CONTEXT.TABLE_SCHEMA"&&r===this.right()?this.tableSchema():super._capture(e,r)}tableSchema(){let e=this.left().columnSchema().foreignKey();if(!e)throw new se(`[${this}]: Column ${this.left().clone({fullyQualified:!0})} is not a foreign key.`);return e.targetTable().tableSchema()}endpoint(){return this.right()instanceof n?this.right().endpoint():this.right()}};var{LQBackRefConstructor:ja,ColumnNameRef:Fa,TableRef:Ga}=T,xr=class extends Ne{static get syntaxRules(){return[{syntaxes:[[{type:["ColumnRef","LQBackRefConstructor"],as:"left",peek:[1,"operator","~>"]},{type:"operator",value:"~>"}],[{type:"ColumnRef",as:"left",peek:[3,"operator","~>"]},{type:"operator",value:"~>"}]]},{type:this._rightType,as:"right"}]}static get syntaxPriority(){return 1}tableSchema(){return this.left()instanceof ja?this.left().tableSchema():super.tableSchema()}getOperands(){let e=this.tableSchema(),r=this.left().clone({fullyQualified:!0}),t=Fa.fromJSON({value:e.primaryKey().columns()[0]});return{table:Ga.fromJSON({qualifier:e.parentSchema(!0).name(),value:e.name()}),left:r,right:t}}};var Er=class extends f{static get syntaxRules(){return{type:"operator",value:"*",as:"."}}static get syntaxPriority(){return-1}value(){return this._get("value")}};var Se=class extends dr(U){static get _domainKind(){return"table"}static get _qualifierType(){return"DatabaseRef"}static get syntaxRules(){return[{optional:!0,syntaxes:[[{type:this._qualifierType,as:"qualifier",peek:[1,"punctuation","."]},{type:"punctuation",value:".",assert:!0,autoSpacing:!1}],[{type:this._qualifierType,as:"qualifier",peek:[1,"version_spec"]},{type:"punctuation",value:".",assert:!0,autoSpacing:!1}]]},{...[].concat(super.syntaxRules)[0],autoSpacing:!1}]}static get syntaxPriority(){return-1}};var Nr=class extends Se{selectSchema(e=null){let r=this.value(),t=this.capture("CONTEXT.QUERY_SCHEMA"),a=r?[].concat(t?.table(r)||[]):t.tables();return e?a.filter(e):a}};var Sr=class extends U{static get syntaxPriority(){return-1}};var Ae=class extends pe(O){};var{CallExpr:qa}=T,Ar=class extends Ae{static get syntaxRules(){return{syntax:[{type:"bracket_block",syntax:{type:"Expr",as:"entries",arity:1/0,itemSeparator:{type:"punctuation",value:","},autoIndent:2}}]}}jsonfy(e={},r=null){return e.deSugar?{nodeName:qa.NODE_NAME,name:(e.toDialect||this.options.dialect)==="mysql"?"JSON_ARRAY":"JSON_BUILD_ARRAY",entries:this.entries().map(t=>t.jsonfy(e,r))}:super.jsonfy(e,r)}};var{StringLiteral:Wa,CallExpr:Ja}=T,Or=class extends Ae{static get syntaxRules(){return{syntax:[{type:"brace_block",syntax:{type:"LQObjectProperty",as:"entries",arity:1/0,itemSeparator:{type:"punctuation",value:","},autoIndent:2}}]}}jsonfy(e={},r=null){let t=super.jsonfy(e,r);return e.deSugar&&(t={nodeName:Ja.NODE_NAME,name:(e.toDialect||this.options.dialect)==="mysql"?"JSON_OBJECT":"JSON_BUILD_OBJECT",arguments:t.entries.reduce((a,o)=>a.concat({nodeName:Wa.NODE_NAME,value:o.key},o.value),[])}),t}};var{AggrCallExpr:Ya,ColumnRef:Ha}=T,Tr=class n extends f{static get syntaxRules(){return[{type:"identifier",as:"key"},{optional:!0,syntax:[{type:"AggrNotation",as:"is_aggr",optional:!0},{type:"punctuation",value:":",autoSpacing:!1},{type:"Expr",as:"value",assert:!0}],autoSpacing:!1}]}static get syntaxPriority(){return-1}get isProperty(){return!0}key(){return this._get("key")}isAggr(){return this._get("is_aggr")}value(){return this._get("value")}jsonfy(e={},r=null){if(e.deSugar){let t;return this.isAggr()?t={nodeName:Ya.NODE_NAME,name:(e.toDialect||this.options.dialect)==="mysql"?"JSON_ARRAYAGG":"JSON_AGG",arguments:[this.value().jsonfy({...e,asAggr:!0},r)]}:t=this.value()?.jsonfy(e,r)??{nodeName:Ha.NODE_NAME,value:this.key()},{nodeName:n.NODE_NAME,key:this.key(),is_aggr:!1,value:t}}return super.jsonfy(e,r)}};var{CallExpr:Va}=T,Rr=class extends O{static get syntaxRules(){return{dialect:"postgres",syntax:[{type:"keyword",value:"ARRAY"},{type:"bracket_block",syntax:{type:"Expr",as:"entries",arity:1/0,itemSeparator:{type:"punctuation",value:","},autoIndent:2},autoSpacing:!1}]}}jsonfy(e={},r=null){return(e.toDialect||this.options.dialect)==="mysql"?{nodeName:Va.NODE_NAME,name:"JSON_ARRAY",arguments:this.entries().map(t=>t.jsonfy(e,r))}:super.jsonfy(e,r)}};var wr=class extends f{static get syntaxRules(){return{type:"bind_var",as:"."}}value(){return Number(this._get("value"))}};var br=class extends f{static get syntaxRules(){return{type:"system_var",as:"."}}value(){return this._get("value")}};var vr=class extends f{static get syntaxRules(){return{type:"user_var",as:"."}}value(){return this._get("value")}};var De=class extends f{static get syntaxRules(){return{type:Xa,expression:!0}}static[Symbol.hasInstance](e){return e.constructor.name in V}},Ka=Object.keys(V),Xa=Ka.filter(n=>V[n]!==De&&V[n].syntaxPriority!==-1).sort((n,e)=>{let r=(V[e].syntaxPriority??100)-(V[n].syntaxPriority??100);return r===0?V[e].prototype.isPrototypeOf(V[n].prototype)?-1:1:r});var zr={};z(zr,{AggrNotation:()=>Cr,LQVersionSpec:()=>kr});var Cr=class extends f{static get syntaxRules(){return{type:"bracket_block",syntax:{type:"Expr",as:"_",arity:0,assert:!0}}}static get syntaxPriority(){return-1}};var kr=class extends f{static get syntaxRules(){return{type:"version_spec",as:"."}}static get syntaxPriority(){return-1}value(){return this._get("value")}};var Zr={};z(Zr,{DataType:()=>Ir});var Ir=class extends f{static get syntaxRules(){return[{type:"data_type",as:"."},{type:"paren_block",syntax:{type:"Expr",as:"specificity",arity:1/0,itemSeparator:{type:"punctuation",value:","},assert:!0},optional:!0,optionalParens:!0,autoSpacing:!1},{type:"AggrNotation",as:"pg_is_aggr",autoSpacing:!1,optional:!0,dialect:"postgres"}]}value(){return this._get("value")}specificity(){return this._get("specificity")}pgIsAggr(){return this._get("pg_is_aggr")}};Object.assign(T,{...Br,...jr,...Xr,...Qr,...V,...zr,...Zr});var es=class extends O{static get _contentTypes(){return["SelectStmt","TableStmt","InsertStmt","UpsertStmt","UpdateStmt","DeleteStmt","MYSetStmt","CTE"]}static get syntaxRules(){let e={type:"punctuation",value:";"};return{type:this._contentTypes,as:"entries",arity:1/0,itemSeparator:e,autoSpacing:`
`}}static async parse(e,r={}){let{result:t,tokenStream:a}=await super.parse(e,{returningTokenStream:!0,...r});if(!a.done&&a.current()){let o=a.current(),s=`[${this.NODE_NAME}] Unexpected token:${typeof o.value=="string"?` "${o.value}" (${o.type})`:""} at <line ${o.line}, column ${o.column}>`;throw new Error(s)}return t}stringify(e={}){return`${super.stringify(e)};`}};})();
//# sourceMappingURL=main.js.map
