{
  "version": 3,
  "sources": ["../node_modules/@webqit/util/js/isArray.js", "../node_modules/@webqit/util/js/isString.js", "../node_modules/@webqit/util/js/isUndefined.js", "../node_modules/@webqit/util/js/isTypeArray.js", "../node_modules/@webqit/util/js/isNull.js", "../node_modules/@webqit/util/js/isTypeFunction.js", "../node_modules/@webqit/util/js/isTypeObject.js", "../node_modules/@webqit/util/js/isEmpty.js", "../node_modules/@webqit/util/js/isObject.js", "../node_modules/@webqit/util/arr/from.js", "../node_modules/@webqit/util/js/isNumber.js", "../node_modules/@webqit/util/js/isNumeric.js", "../node_modules/@webqit/util/obj/each.js", "../src/database/_Driver.js", "../node_modules/@webqit/util/js/isFunction.js", "../node_modules/@webqit/util/arr/intersect.js", "../node_modules/@webqit/util/arr/unique.js", "../node_modules/@webqit/util/arr/difference.js", "../src/database/_Database.js", "../node_modules/@webqit/util/arr/pushUnique.js", "../node_modules/@webqit/util/obj/getPrototypeChain.js", "../node_modules/@webqit/util/obj/getAllPropertyNames.js", "../node_modules/@webqit/util/obj/mergeCallback.js", "../node_modules/@webqit/util/obj/merge.js", "../src/database/DuplicateKeyViolationError.js", "../node_modules/@webqit/util/arr/all.js", "../node_modules/@webqit/util/str/wrapped.js", "../src/database/_Table.js", "../src/database/_Cursor.js", "../src/database/odb/ODBCursor.js", "../src/database/odb/ODBStore.js", "../src/database/odb/ODBDatabase.js", "../src/database/odb/ODBDriver.js", "../src/database/idb/IDBCursor.js", "../src/database/idb/IDBProgressiveCursor.js", "../src/database/idb/IDBStore.js", "../src/database/idb/IDBDatabase.js", "../src/database/idb/IDBDriver.js", "../node_modules/@webqit/util/arr/flatten.js", "../node_modules/@webqit/util/arr/first.js", "../node_modules/@webqit/util/arr/last.js", "../node_modules/@webqit/util/js/isPlainObject.js", "../node_modules/@webqit/util/js/isBoolean.js", "../node_modules/@webqit/util/obj/compareCallback.js", "../node_modules/@webqit/util/obj/even.js", "../node_modules/@webqit/util/obj/copyPlain.js", "../node_modules/@webqit/util/str/Lexer.js", "../src/ExprInterface.js", "../src/grammar/ReferenceInterface.js", "../src/grammar/CallInterface.js", "../src/IndependentExprInterface.js", "../src/SyntaxError.js", "../src/BaseParser.js", "../src/Parser.js", "../node_modules/@webqit/util/str/after.js", "../node_modules/@webqit/util/str/before.js", "../node_modules/@webqit/util/str/beforeLast.js", "../node_modules/@webqit/util/str/unwrap.js", "../src/grammar/AbstractionInterface.js", "../src/grammar/Abstraction.js", "../node_modules/@webqit/util/js/mixin.js", "../node_modules/@webqit/util/obj/find.js", "../src/grammar/ArgumentsInterface.js", "../src/grammar/Arguments.js", "../src/ReferenceError.js", "../src/grammar/Call.js", "../src/grammar/AggrInterface.js", "../node_modules/@webqit/util/obj/inherit.js", "../src/grammar/WindowInterface.js", "../node_modules/@webqit/util/arr/sort.js", "../src/grammar/OrderByInterface.js", "../src/grammar/OrderBy.js", "../src/grammar/Window.js", "../src/grammar/Aggr.js", "../node_modules/@webqit/util/obj/first.js", "../node_modules/@webqit/util/js/isClass.js", "../src/Scope.js", "../src/grammar/Reference.js", "../src/grammar/ArrowReferenceInterface.js", "../src/grammar/ArrowReference.js", "../src/grammar/AssertionInterface.js", "../src/grammar/Assertion.js", "../src/grammar/AssignmentInterface.js", "../src/grammar/BoolInterface.js", "../src/grammar/Bool.js", "../src/grammar/ComparisonInterface.js", "../src/grammar/Comparison.js", "../src/grammar/ConditionInterface.js", "../src/grammar/Condition.js", "../src/statement/DeleteInterface.js", "../node_modules/@webqit/util/obj/from.js", "../src/grammar/LiteralInterface.js", "../src/grammar/Literal.js", "../src/grammar/TableInterface.js", "../src/database/View.js", "../src/grammar/Table.js", "../node_modules/@webqit/util/arr/sum.js", "../node_modules/@webqit/util/arr/avg.js", "../node_modules/@webqit/util/arr/max.js", "../node_modules/@webqit/util/arr/min.js", "../node_modules/@webqit/util/arr/rand.js", "../node_modules/@webqit/util/obj/get.js", "../src/database/Row.js", "../src/database/Base.js", "../src/uac/Query.js", "../src/uac/Client.js", "../src/statement/Stmt.js", "../src/statement/Delete.js", "../src/grammar/FieldInterface.js", "../src/grammar/Field.js", "../node_modules/@webqit/util/obj/copy.js", "../src/grammar/GroupByInterface.js", "../src/grammar/GroupBy.js", "../src/statement/InsertInterface.js", "../src/statement/_Assignment.js", "../src/statement/Insert.js", "../src/grammar/JoinInterface.js", "../src/grammar/Join.js", "../src/grammar/MathInterface.js", "../src/grammar/Math.js", "../src/grammar/NumInterface.js", "../src/grammar/Num.js", "../src/grammar/PlaceholderInterface.js", "../src/grammar/Placeholder.js", "../src/statement/SelectInterface.js", "../src/statement/Select.js", "../src/grammar/StrInterface.js", "../src/grammar/Str.js", "../src/statement/UnionInterface.js", "../src/statement/Union.js", "../src/statement/UpdateInterface.js", "../src/statement/Update.js", "../src/grammar/VoidInterface.js", "../src/grammar/Void.js", "../src/grammar.js", "../src/index.js", "../src/database/sql/SQLCursor.js", "../node_modules/@webqit/util/arr/any.js", "../src/database/_InsertQueryResult.js", "../src/database/sql/SQLInsertQueryResult.js", "../src/database/_DeleteQueryResult.js", "../src/database/sql/SQLDeleteQueryResult.js", "../src/database/sql/SQLTable.js", "../src/database/sql/SQLDatabase.js", "../src/database/sql/SQLDriver.js", "../src/browser-entry.js"],
  "sourcesContent": ["\r\n/**\r\n * Tells if val is of type \"array\".\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn Array.isArray(val);\r\n};\r\n", "\r\n/**\r\n * Tells if val is of type \"string\".\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn val instanceof String || (typeof val === 'string' && val !== null);\r\n};\r\n", "\r\n/**\r\n * Tells if val is undefined or is of type \"undefined\".\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn arguments.length && (val === undefined || typeof val === 'undefined');\r\n};\r\n", "\r\n/**\r\n * @imports\r\n */\r\nimport _isString from './isString.js';\r\nimport _isUndefined from './isUndefined.js';\r\n\r\n/**\r\n * Tells if val is \"array-like\".\r\n * This holds true for anything that has a length property.\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn !_isString(val) && !_isUndefined(val.length);\r\n};\r\n", "\r\n/**\r\n * Tells if val is undefined or is null.\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn val === null || val === '';\r\n};\r\n", "\r\n/**\r\n * Tells if val is of type \"function\".\r\n * This holds true for both regular functions and classes.\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn typeof val === 'function';\r\n};\r\n", "\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeFunction from './isTypeFunction.js';\r\n\r\n/**\r\n * Tells if val is of type \"object\".\r\n * This holds true for anything object, including built-ins.\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn Array.isArray(val) || (typeof val === 'object' && val) || _isTypeFunction(val);\r\n};\r\n", "\r\n/**\r\n * @imports\r\n */\r\nimport _isNull from './isNull.js';\r\nimport _isUndefined from './isUndefined.js';\r\nimport _isTypeObject from './isTypeObject.js';\r\n\r\n/**\r\n * Tells if val is empty in its own type.\r\n * This holds true for NULLs, UNDEFINED, FALSE, 0,\r\n * objects without keys, empty arrays.\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn _isNull(val) || _isUndefined(val) || val === false || val === 0 \r\n\t\t|| (_isTypeObject(val) && !Object.keys(val).length);\r\n};\r\n", "\r\n/**\r\n * Tells if val is pure object.\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn !Array.isArray(val) && typeof val === 'object' && val;\r\n};\r\n", "\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isTypeArray from '../js/isTypeArray.js';\r\nimport _isEmpty from '../js/isEmpty.js';\r\nimport _isObject from '../js/isObject.js';\r\n\r\n/**\r\n * Casts an array-like object to an array.\r\n *\r\n * @param mixed \tval\r\n * @param bool\t \tcastObject\r\n *\r\n * @return array\r\n */\r\nexport default function(val, castObject = true) {\r\n\tif (_isArray(val)) {\r\n\t\treturn val;\r\n\t};\r\n\tif (!castObject && _isObject(val)) {\r\n\t\treturn [val];\r\n\t};\r\n\tif (val !== false && val !== 0 && _isEmpty(val)) {\r\n\t\treturn [];\r\n\t};\r\n\tif (_isTypeArray(val)) {\r\n\t\treturn Array.prototype.slice.call(val);\r\n\t};\r\n\tif (_isObject(val)) {\r\n\t\treturn Object.values(val);\r\n\t};\r\n\treturn [val];\r\n};\r\n", "\r\n/**\r\n * Tells if val is of type \"number\".\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn val instanceof Number || (typeof val === 'number');\r\n};\r\n", "\r\n/**\r\n * @imports\r\n */\r\nimport _isNumber from './isNumber.js';\r\n/**\r\n * Tells if val is of type \"string\" or a numeric string.\r\n * This holds true for both numbers and numeric strings.\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn _isNumber(val) || (val !== true && val !== false && val !== null && val !== '' && !isNaN(val * 1));\r\n};\r\n", "\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeObject from '../js/isTypeObject.js';\r\nimport _isNumeric from '../js/isNumeric.js';\r\n\r\n/**\r\n * Loops thru obj flatly with a callback function.\r\n * Stops when callback returns a non-undefined value.\r\n *\r\n * @param array|object \t\t\tobj \t\t\tThe array or object to iterate.\r\n * @param function \t\t\t\tcallback \t\tThe callback function.\r\n *\r\n * @return mixed|null\t\t\tAny non-null return from callback\r\n */\r\nexport default function(obj, callback) {\r\n\tvar returnValue = undefined;\r\n\tif (_isTypeObject(obj)) {\r\n\t\tObject.keys(obj).forEach((k, i) => {\r\n\t\t\tif (returnValue !== false) {\r\n\t\t\t\treturnValue = callback(_isNumeric(k) ? parseFloat(k) : k, obj[k], i);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\treturn returnValue;\r\n};\r\n", "\n/**\n * @imports\n */\nimport _isNumeric from '@webqit/util/js/isNumeric.js';\nimport _isObject from '@webqit/util/js/isObject.js';\nimport _isArray from '@webqit/util/js/isArray.js';\nimport _isEmpty from '@webqit/util/js/isEmpty.js';\nimport _isNull from '@webqit/util/js/isNull.js';\nimport _isUndefined from '@webqit/util/js/isUndefined.js';\nimport _each from '@webqit/util/obj/each.js';\n\n/**\n * --------------------------\n * The Driver class.\n * --------------------------\n */\nexport default class Driver {\n    \n    constructor() {\n        this.$ = {schema: {},};\n        this.defaultDB = 'db1';\n        this.defaultDBParams = {};\n    }\n\n    /**\n     * Sets default database.\n     * \n     * @param Object schema\n     * \n     * @return this\n     */\n    async bindSchema(schema) {\n        if (!_isObject(schema)) {\n            throw new Error(`Schema must be an object.`);\n        }\n        this.$.schema = schema;\n        return this;\n    }\n\n    /**\n     * Sets default database.\n     * \n     * @param String databaseName\n     * @param Object params\n     * \n     * @return this\n     */\n    async setDefaultDB(databaseName, params = this.defaultDBParams) {\n        this.defaultDB = databaseName;\n        this.defaultDBParams = params;\n        return this;\n    }\n\n    /**\n     * @forwardsTo: createDatabase().\n     * @with: params.ifNotExixts = true\n     */\n    async createDatabaseIfNotExists(databaseName, params = this.defaultDBParams) {\n        params = {...params};\n        params.ifNotExists = true;\n        return this.createDatabase(databaseName, params);\n    }\n\n    /**\n     * @forwardsTo: dropDatabase().\n     * @with: params.ifExixts = true\n     */\n    async dropDatabaseIfExists(databaseName, params = {}) {\n        params = {...params};\n        params.ifExists = true;\n        return this.dropDatabase(databaseName, params);\n    }\n\n    /**\n     * ---------\n     * IMPORT/EXPORT\n     * ---------\n     */\n\n    /**\n     * Imports a database.\n     * \n     * @param String databaseName\n     * @param Object databaseDump\n     * @param Object params\n     * \n     * @return Array\n     */\n    async importDatabase(databaseName, databaseDump, params = {}) {\n        if ((await this.databases(databaseName, params)).length) {\n            if (params.ifNotExists) {\n                return;\n            }\n            throw new Error(`Database ${databaseName} already exists.`);\n        }\n        if (!_isObject(databaseDump.schema) || (databaseDump.data && !_isObject(databaseDump.data))) {\n            throw new Error(`Malformed import data.`);\n        }\n        var database = await this.createDatabase(databaseName, params);\n        return Promise.all(Object.keys(databaseDump.schema).map(async tableName => {\n            var tableSchema = databaseDump.schema[tableName];\n            var tableData = (databaseDump.data || {})[tableName];\n            if (_isNumeric(tableName)) {\n                tableName = tableSchema.name;\n            }\n            if (!tableName || !_isObject(tableSchema) || (tableData && !_isArray(tableData))) {\n                throw new Error(`Malformed import data for table ${tableName}.`);\n            }\n            var table = await database.createTable(tableName, tableSchema);\n            return table.addAll(tableData || []);\n        }));\n    }\n\n    /**\n     * Exports a database.\n     * \n     * @param String databaseName\n     * @param Object params\n     * \n     * @return Array\n     */\n    async exportDatabase(databaseName, params) {\n        if (!(await this.databases(databaseName, params)).length) {\n            if (params.ifExists) {\n                return;\n            }\n            throw new Error(`Database ${databaseName} does not exist.`);\n        }\n        var database = await this.database(databaseName, params);\n        // -------------------\n        var databaseDump = {schema: {}, data: {}};\n        // -------------------\n        var tableNames = await database.tables();\n        await Promise.all(tableNames.map(async tableName => {\n            var table = await database.table(tableName);\n            databaseDump.schema[tableName] = await table.getSchema();\n            databaseDump.data[tableName] = await table.getAll();\n        }));\n        return databaseDump;\n    }\n\n    /**\n     * Returns the database schema.\n     * \n     * @param String databaseName \n     * \n     * @returns Object\n     */\n    getDatabaseSchema(databaseName = this.defaultDB) {\n        return this.$.schema[databaseName] || {};\n    }\n\n    /**\n     * Sets the database schema.\n     * \n     * @param String databaseName \n     * @param Object databaseSchema \n     * \n     * @returns this\n     */\n    setDatabaseSchema(databaseName, databaseSchema) {\n        const _databaseSchema = {};\n        _each(databaseSchema, (tablenName, tableSchema) => {\n            if (tableSchema.name && tableSchema.name !== tablenName) {\n                _databaseSchema[tableSchema.name] = tableSchema;\n                delete tableSchema.name;\n            } else {\n                _databaseSchema[tablenName] = tableSchema;\n            }\n        });\n        this.$.schema[databaseName] = _databaseSchema;\n        return this;\n    }\n\n    /**\n     * Removes the database schema.\n     * \n     * @param String databaseName \n     * \n     * @returns this\n     */\n    unsetDatabaseSchema(databaseName) {\n        delete this.$.schema[databaseName];\n        return this;\n    }\n\n    /**\n     * ---------------------------------------\n     */\n\n    /**\n     * \n     * @param Array databaseList \n     * @param String databasename \n     * @param Object params \n     * \n     * @returns Array\n     */\n    matchDatabaseList(databaseList, databasename = null, params = []) {\n        return databaseList.filter(db => (\n            _isUndefined(databasename) || _isNull(databasename) || db.name === databasename\n        ) && (\n            _isEmpty(params) || !('version' in params) || !('version' in db) || db.version === params.version\n        ));\n    }\n}", "\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeFunction from './isTypeFunction.js';\r\n\r\n/**\r\n * Tells if val is of type \"function\".\r\n *\r\n * @param object \t\tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn _isTypeFunction(val) || (val && {}.toString.call(val) === '[object function]');\r\n};\r\n", "\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\n\r\n/**\r\n * Returns the intersection of two arrays;\r\n * optionally using a custom matching function.\r\n *\r\n * @param array \tarr\r\n * @param array\t \tarr2\r\n * @param function \tcallback\r\n *\r\n * @return array\r\n */\r\nexport default function(arr, arr2, callback = null) {\r\n\treturn !_isArray(arr2) ? [] : arr.filter(val1 => callback \r\n\t\t? arr2.filter(val2 => callback(val1, val2)).length \r\n\t\t: arr2.indexOf(val1) !== -1\r\n\t);\r\n};\r\n", "\r\n/**\r\n * Returns a list of unique items.\r\n *\r\n * @param array\t \t\t\t\tarr\r\n *\t *\r\n * @return array\r\n */\r\nexport default function(arr) {\r\n\tconst distinct = (value, index, self) => {\r\n\t\treturn self.indexOf(value) === index;\r\n\t};\r\n\treturn arr.filter(distinct);\r\n};\r\n", "\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\n\r\n/**\r\n * Returns the difference of two arrays;\r\n * optionally using a custom matching function.\r\n *\r\n * @param array \tarr\r\n * @param array\t \tarr2\r\n * @param function \tcallback\r\n *\r\n * @return array\r\n */\r\nexport default function(arr, arr2, callback = null) {\r\n\treturn !_isArray(arr2) ? [] : arr.filter(val1 => callback \r\n\t\t? arr2.filter(val2 => callback(val1, val2)).length \r\n\t\t: arr2.indexOf(val1) === -1\r\n\t);\r\n};\r\n", "\n\n/**\n * @imports\n */\nimport _isObject from '@webqit/util/js/isObject.js';\nimport _isArray from '@webqit/util/js/isArray.js';\nimport _arrFrom from '@webqit/util/arr/from.js';\nimport _each from '@webqit/util/obj/each.js';\nimport _intersect from '@webqit/util/arr/intersect.js';\nimport _unique from '@webqit/util/arr/unique.js';\nimport _difference from '@webqit/util/arr/difference.js';\n\n/**\n * ---------------------------\n * _Database class\n * ---------------------------\n */\t\t\t\t\n\nexport default class _Database {\n\t\n\t/**\n\t * @constructor\n\t */\n\tconstructor(driver, databaseName, def) {\n\t\tthis.driver = driver;\n\t\tthis.databaseName = databaseName;\n\t\tthis.def = def;\n\t}\n\t\n    /**\n     * @inheritdoc\n     */\n     async tables() {}\n\n    /**\n     * Drops a database.\n     * \n     * @param String            tableName\n     * \n     * @return Bool\n     */\n    async table(tableName) {}\n\n    /**\n     * CREATE/ALTER/DROP\n     */\n\n    /**\n     * Creates table.\n     * \n     * @param String            tableName\n     * @param Object            tableSchema\n     * @param Object            params\n     * \n     * @return Object\n     */\n    async createTable(tableName, tableSchema = {}, params = {}) {}\n\n    /**\n     * Alters table.\n     * \n     * @param String            tableName\n     * @param Object|Function   newTableSchemaOrCallback\n     * @param Object            params\n     * \n     * @return Bool\n     */\n    async alterTable(tableName, newTableSchemaOrCallback, params = {}) {}\n\n    /**\n     * Drops table.\n     * \n     * @param String            tableName\n     * @param Object            params\n     * \n     * @return Bool\n     */\n    async dropTable(tableName, params = {}) {}\n\n    /**\n     * ---------\n     * SCHEMA\n     * ---------\n     */\n\n    /**\n     * Returns a table schema.\n     * \n     * @param String            tableName\n     * \n     * @return Object\n     */\n    getTableSchema(tableName) {\n        return this.driver.getDatabaseSchema(this.databaseName)[tableName];\n    }\n\n    /**\n     * Sets a table schema.\n     * \n     * @param String            tableName\n     * @param Object            schema\n     * \n     * @return this\n     */\n    setTableSchema(tableName, schema) {\n        const schemaColumns = {};\n        _each(schema.columns, (columnName, columnDef) => {\n            if (columnDef.name && columnDef.name !== columnName) {\n                schemaColumns[columnDef.name] = columnDef;\n                delete columnDef.name;\n            } else {\n                schemaColumns[columnName] = columnDef;\n            }\n        });\n        schema.columns = schemaColumns;\n        // ---------------\n        const databaseSchema = this.driver.getDatabaseSchema(this.databaseName);\n        databaseSchema[tableName] = schema;\n        this.driver.setDatabaseSchema(this.databaseName, databaseSchema);\n        return this;\n    }\n\n    /**\n     * Sets a table schema.\n     * \n     * @param String            tableName\n     * \n     * @return this\n     */\n    unsetTableSchema(tableName) {\n        delete this.driver.getDatabaseSchema(this.databaseName)[tableName];\n        return this;\n    }\n\n    /**\n     * Deep-clones a table schema.\n     * \n     * @param Any               schema\n     * \n     * @return Any\n     */\n     cloneTableSchema(schema) {\n        if (_isObject(schema)) {\n            var newSchema = {};\n            _each(schema, (name, value) => {\n                newSchema[name] = this.cloneTableSchema(value);\n            });\n            return newSchema;\n        }\n        if (_isArray(schema)) {\n            return schema.map(value => this.cloneTableSchema(value));\n        }\n        return schema;\n    }\n\n    /**\n     * Deep-diffs the given schema into action items.\n     * \n     * @param Object            prevSchema\n     * @param Object            newSchema\n     * \n     * @return Object\n     */\n    diffTableSchema(prevSchema, newSchema, tableName) {\n\n        const schemaChanges = {\n            columns: {add: {}, alter: {}, drop: {}},\n            primaryKey: {},\n            foreignKeys: {add: {}, alter: {}, drop: {}},\n            indexes: {add: {}, alter: {}, drop: {}},\n            jsonColumns: {add: {}, alter: {}, drop: {}},\n            renamedColumns: {},\n            renameTo: null,\n        };\n    \n        const schemaChangeRecorders = {\n    \n            // Columns\n            columns: (action, newColumnsDef, prevColumnsDef) => {\n                \n                // -------\n                // Identify added/altered/dropped keys\n                // -------\n                var currentColumns = Object.keys(action === 'drop' ? {} : newColumnsDef),\n                    prevColumns = Object.keys(action === 'add' ? {} : prevColumnsDef);\n    \n                _difference(currentColumns, prevColumns).forEach(columnName => {\n                    schemaChanges.columns.add[columnName] = newColumnsDef[columnName];\n                    // -------\n                    if (newColumnsDef[columnName].primaryKey) {\n                        schemaChanges.primaryKey.add = columnName;\n                    }\n                    if (newColumnsDef[columnName].referencedEntity) {\n                        schemaChanges.foreignKeys.add['fk_index__' + columnName] = {columnName, ...newColumnsDef[columnName].referencedEntity};\n                    }\n                    if (newColumnsDef[columnName].index) {\n                        schemaChanges.indexes.add['index__' + columnName] = {keys: columnName, type: 'index'};\n                    }\n                    if (newColumnsDef[columnName].unique) {\n                        schemaChanges.indexes.add['unique_index__' + columnName] = {keyPath: columnName, type: 'unique'};\n                    }\n                    if (newColumnsDef[columnName].fulltext) {\n                        schemaChanges.indexes.add['fulltext_index__' + columnName] = {keyPath: columnName, type: 'fulltext'};\n                    }\n                    // -------\n                    if ((newColumnsDef[columnName].type || '').toLowerCase() === 'json') {\n                        schemaChanges.jsonColumns.add['json_check_constraint__' + columnName] = columnName;\n                    }\n                });\n               _intersect(currentColumns, prevColumns).forEach(columnName => {\n                    // -------\n                    // Identify added/altered/dropped properties\n                    // -------\n                    var currentColumnProps = Object.keys(newColumnsDef[columnName]),\n                        prevColumnProps = Object.keys(prevColumnsDef[columnName]);\n    \n                    var changes = {\n                        current: newColumnsDef[columnName], \n                        prev: prevColumnsDef[columnName],\n                        addedProps: _difference(currentColumnProps, prevColumnProps),\n                        alteredProps: _intersect(currentColumnProps, prevColumnProps).filter(prop => !isSame(newColumnsDef[columnName][prop], prevColumnsDef[columnName][prop])),\n                        droppedProps: _difference(prevColumnProps, currentColumnProps),\n                    };\n                    \n                    // -------\n                    if (_difference(_unique([].concat(changes.addedProps, changes.alteredProps, changes.droppedProps)), ['name', 'primaryKey', 'referencedEntity', 'index', 'unique', 'fulltext', ]).length) {\n                        schemaChanges.columns.alter[columnName] = changes;\n                    }\n                    // -------\n                    if (changes.addedProps.includes('name') || (changes.alteredProps.includes('name') && newColumnsDef[columnName].name !== columnName)) {\n                        schemaChanges.renamedColumns[columnName] = newColumnsDef[columnName].name;                        \n                    }\n                    if (changes.addedProps.includes('primaryKey') || (changes.alteredProps.includes('primaryKey') && newColumnsDef[columnName].primaryKey)) {\n                        schemaChanges.primaryKey.add = columnName;\n                    } else if (changes.droppedProps.includes('primaryKey') || (changes.alteredProps.includes('primaryKey') && !newColumnsDef[columnName].primaryKey)) {\n                        schemaChanges.primaryKey.drop = columnName;\n                    }\n                    if (changes.addedProps.includes('referencedEntity') || (changes.alteredProps.includes('referencedEntity') && newColumnsDef[columnName].referencedEntity)) {\n                        schemaChanges.foreignKeys.add['fk_index__' + columnName] = newColumnsDef[columnName].referencedEntity;\n                    } else if (changes.droppedProps.includes('referencedEntity') || (changes.alteredProps.includes('referencedEntity') && !newColumnsDef[columnName].referencedEntity)) {\n                        schemaChanges.foreignKeys.drop['fk_index__' + columnName] = prevColumnsDef[columnName].referencedEntity;\n                    }\n                    if (changes.addedProps.includes('index') || (changes.alteredProps.includes('index') && newColumnsDef[columnName].index)) {\n                        schemaChanges.indexes.add['index__' + columnName] = {keys: columnName, type: 'index'};\n                    } else if (changes.droppedProps.includes('index') || (changes.alteredProps.includes('index') && !newColumnsDef[columnName].index)) {\n                        schemaChanges.indexes.drop['index__' + columnName] = {keys: columnName, type: 'index'};\n                    }\n                    if (changes.addedProps.includes('unique') || (changes.alteredProps.includes('unique') && newColumnsDef[columnName].unique)) {\n                        schemaChanges.indexes.add['unique_index__' + columnName] = {keyPath: columnName, type: 'unique'};\n                    } else if (changes.droppedProps.includes('unique') || (changes.alteredProps.includes('unique') && !newColumnsDef[columnName].unique)) {\n                        schemaChanges.indexes.drop['unique_index__' + columnName] = {keyPath: columnName, type: 'unique'};\n                    }\n                    if (changes.addedProps.includes('fulltext') || (changes.alteredProps.includes('fulltext') && newColumnsDef[columnName].fulltext)) {\n                        schemaChanges.indexes.add['fulltext_index__' + columnName] = {keyPath: columnName, type: 'fulltext'};\n                    } else if (changes.droppedProps.includes('fulltext') || (changes.alteredProps.includes('fulltext') && !newColumnsDef[columnName].fulltext)) {\n                        schemaChanges.indexes.drop['fulltext_index__' + columnName] = {keyPath: columnName, type: 'fulltext'};\n                    }\n                    // -------\n                    if ((changes.addedProps.includes('type') || changes.alteredProps.includes('type')) && (newColumnsDef[columnName].type || '').toLowerCase() === 'json') {\n                        schemaChanges.jsonColumns.add['json_check_constraint__' + columnName] = columnName;\n                    } else if ((changes.droppedProps.includes('type') || changes.alteredProps.includes('type')) && (prevColumnsDef[columnName].type || '').toLowerCase() === 'json') {\n                        schemaChanges.jsonColumns.drop['json_check_constraint__' + columnName] = columnName;\n                    }\n                \n                });\n                _difference(prevColumns, currentColumns).forEach(columnName => {\n                    schemaChanges.columns.drop[columnName] = prevColumnsDef[columnName];\n                    // -------\n                    if (prevColumnsDef[columnName].primaryKey) {\n                        schemaChanges.primaryKey.drop = columnName;\n                    }\n                    if (prevColumnsDef[columnName].referencedEntity) {\n                        schemaChanges.foreignKeys.drop['fk_index__' + columnName] = prevColumnsDef[columnName].referencedEntity;\n                    }\n                    if (prevColumnsDef[columnName].index) {\n                        schemaChanges.indexes.drop['index__' + columnName] = {keys: columnName, type: 'index'};\n                    }\n                    if (prevColumnsDef[columnName].unique) {\n                        schemaChanges.indexes.drop['unique_index__' + columnName] = {keyPath: columnName, type: 'unique'};\n                    }\n                    if (prevColumnsDef[columnName].fulltext) {\n                        schemaChanges.indexes.drop['fulltext_index__' + columnName] = {keyPath: columnName, type: 'fulltext'};\n                    }\n                    // -------\n                    if ((prevColumnsDef[columnName].type || '').toLowerCase() === 'json') {\n                        schemaChanges.jsonColumns.drop['json_check_constraint__' + columnName] = true;\n                    }\n                });\n            },\n\n            // Name\n            name: (action, newTableName) => {\n                if (action === 'drop') {\n                    return;\n                }\n                if (newTableName !== tableName) {\n                    schemaChanges.renameTo = newTableName;\n                }\n            },\n    \n            // Primary Key\n            primaryKey: (action, newPrimaryKeyDef, prevPrimaryKeyDef) => {\n                var keyName = _arrFrom(newPrimaryKeyDef).join('___');\n                var prevKeyName = _arrFrom(prevPrimaryKeyDef).join('___');\n                if (keyName !== prevKeyName) {\n                    schemaChanges.primaryKey[action] = action === 'drop' ? prevPrimaryKeyDef : newPrimaryKeyDef;\n                }\n            },\n    \n            // Unique Keys\n            foreignKeys: (action, newKeysDef, prevKeysDef) => {\n                \n                // -------\n                // Identify added/altered/dropped keys\n                // -------\n                var currentKeys = Object.keys(action === 'drop' ? {} : newKeysDef),\n                    prevKeys = Object.keys(action === 'add' ? {} : prevKeysDef);\n    \n                _difference(currentKeys, prevKeys).forEach(keyName => {\n                    schemaChanges.foreignKeys.add[keyName] = newKeysDef[keyName];\n                });\n                _intersect(currentKeys, prevKeys).forEach(keyName => {\n                    schemaChanges.foreignKeys.alter[keyName] = {\n                        current: newKeysDef[keyName],\n                        prev: prevKeysDef[keyName],\n                    };\n                });\n                _difference(prevKeys, currentKeys).forEach(keyName => {\n                    schemaChanges.foreignKeys.drop[keyName] = prevKeysDef[keyName];\n                });\n    \n            },\n    \n            // Unique Keys\n            indexes: (action, newIndexesDef, prevIndexesDef) => {\n                \n                // -------\n                // Identify added/altered/dropped keys\n                // -------\n                var currentKeys = Object.keys(action === 'drop' ? {} : newIndexesDef),\n                    prevKeys = Object.keys(action === 'add' ? {} : prevIndexesDef);\n    \n                _difference(currentKeys, prevKeys).forEach(keyName => {\n                    schemaChanges.indexes.add[keyName] = newIndexesDef[keyName];\n                });\n                _intersect(currentKeys, prevKeys).forEach(keyName => {\n                    schemaChanges.indexes.alter[keyName] = {\n                        current: newIndexesDef[keyName], \n                        prev: prevIndexesDef[keyName],\n                    };\n                });\n                _difference(prevKeys, currentKeys).forEach(keyName => {\n                    schemaChanges.indexes.drop[keyName] = prevIndexesDef[keyName];\n                });\n    \n            },\n    \n        };\n    \n        // ------------------\n        var currentProps = Object.keys(newSchema),\n            prevProps = Object.keys(prevSchema);\n        _difference(currentProps, prevProps).forEach(prop => {\n            // Add all these props\n            schemaChangeRecorders[prop]('add', newSchema[prop], null);\n        });\n        _intersect(currentProps, prevProps).forEach(prop => {\n            // Alter all these props\n            schemaChangeRecorders[prop]('alter', newSchema[prop], prevSchema[prop]);\n        });\n        _difference(prevProps, currentProps).forEach(prop => {\n            // Drop all these props\n            schemaChangeRecorders[prop]('drop', null, prevSchema[prop]);\n        });\n        // ------------------\n    \n        return schemaChanges;\n    }\n\n    /**\n     * Deep-validates the given schema.\n     * \n     * @param Object schema\n     * @param Bool assert\n     * \n     * @return Bool\n     */\n     validateSchema(schema, assert = false) {\n        try {\n            if (!_isObject(schema)) {\n                throw new Error('Table definition must be an object.');\n            }\n            if (!schema.name) {\n                throw new Error('Table must have a name.');\n            }\n            if (!_isObject(schema.columns)) {\n                throw new Error('Table must have a valid \"columns\" list.');\n            }\n            _each(schema.columns, (columnName, column) => {\n                if (!_isObject(column)) {\n                    throw new Error('Invalid column definition: \"' + columnName + '\" at \"' + schema.name + '\".');\n                }\n                if (column.referencedEntity\n                    && !(_isObject(column.referencedEntity) && column.referencedEntity.name)) {\n                    throw new Error('Invalid foreign key definition: \"' + columnName + '\" at \"' + schema.name + '\".');\n                }\n            });\n        } catch(e) {\n            if (assert) throw e;\n            return false;\n        }\n        return true;\n    }\n\n}\nconst isSame = (a, b) => {\n    if (a === b) return true;\n    if (_isArray(a) && _isArray(b) && a.length === b.length) {\n        return a.reduce((prev, v) => prev && b.includes(v), true);\n    }\n    var temp = {};\n    if (_isObject(a) && _isObject(b) && (temp.keys_a = Object.keys(a)).length === (temp.keys_b = Object.keys(b)).length) {\n        return temp.keys_a.reduce((prev, k) => prev && isSame(a[k], b[k]), true);\n    }\n    return false;\n};\n", "\r\n/**\r\n * Adds an item if not already exist.\r\n *\r\n * @param array \tarr\r\n * @param array\t \t...itms\r\n *\r\n * @return array\r\n */\r\nexport default function(arr, ...items) {\r\n\titems.forEach(itm => {\r\n\t\tif (arr.indexOf(itm) < 0) {\r\n\t\t\tarr.push(itm);\r\n\t\t}\r\n\t});\r\n\treturn arr;\r\n};\r\n", "\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\n\r\n/**\r\n * Returns the prototype chain.\r\n *\r\n * @param object \t\tobj\r\n * @param object\t \tuntil\r\n *\r\n * @return bool\r\n */\r\nexport default function(obj, until) {\r\n\tuntil = until || Object.prototype;\r\n\tuntil = until && !_isArray(until) ? [until] : until;\r\n\t// We get the chain of inheritance\r\n\tvar prototypalChain = [];\r\n\tvar obj = obj;\r\n\twhile((obj && (!until || until.indexOf(obj) < 0) && obj.name !== 'default')) {\r\n\t\tprototypalChain.push(obj);\r\n\t\tobj = obj ? Object.getPrototypeOf(obj) : null;\r\n\t}\r\n\treturn prototypalChain;\r\n};\r\n", "\r\n/**\r\n * @imports\r\n */\r\nimport _pushUnique from '../arr/pushUnique.js';\r\nimport _getPrototypeChain from './getPrototypeChain.js';\r\n\r\n/**\r\n * Eagerly retrieves object members all down the prototype chain.\r\n *\r\n * @param object\t \tobj\r\n * @param object\t \tuntil\r\n *\r\n * @return array\r\n */\r\nexport default function(obj, until) {\r\n\tvar keysAll = [];\r\n\t_getPrototypeChain(obj, until).forEach(obj => {\r\n\t\t_pushUnique(keysAll, ...Object.getOwnPropertyNames(obj));\r\n\t});\r\n\treturn keysAll;\r\n};\r\n", "\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isFunction from '../js/isFunction.js';\r\nimport _isObject from '../js/isObject.js';\r\nimport _isTypeObject from '../js/isTypeObject.js';\r\nimport _isNumeric from '../js/isNumeric.js';\r\nimport _getAllPropertyNames from './getAllPropertyNames.js';\r\n\r\n/**\r\n  * Merges values from subsequent arrays/objects first array/object;\r\n  * optionally recursive\r\n  *\r\n  * @param array ...objs\r\n  *\r\n  * @return void\r\n  */\r\nexport default function mergeCallback(objs, callback, deepProps = false, isReplace = false, withSymbols = false) {\r\n\tvar depth = 0;\r\n\tvar obj1 = objs.shift();\r\n\tif (_isNumeric(obj1) || obj1 === true || obj1 === false) {\r\n\t\tdepth = obj1;\r\n\t\tobj1 = objs.shift();\r\n\t}\r\n\tif (!objs.length) {\r\n\t\tthrow new Error('_merge() requires two or more array/objects.');\r\n\t}\r\n\tobjs.forEach((obj2, i) => {\r\n\t\tif (!_isTypeObject(obj2) && !_isFunction(obj2)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t(deepProps ? _getAllPropertyNames(obj2) : Object.getOwnPropertyNames(obj2)).forEach(key => {\r\n\t\t\tif (!callback(key, obj1, obj2, i)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar valAtObj1 = obj1[key];\r\n\t\t\tvar valAtObj2 = obj2[key];\r\n\t\t\tif (((_isArray(valAtObj1) && _isArray(valAtObj2)) || (_isObject(valAtObj1) && _isObject(valAtObj2))) \r\n\t\t\t&& (depth === true || depth > 0)) {\r\n\t\t\t\t// RECURSE...\r\n\t\t\t\tobj1[key] = _isArray(valAtObj1) && _isArray(valAtObj2) ? [] : {};\r\n\t\t\t\tmergeCallback([_isNumeric(depth) ? depth - 1 : depth, obj1[key], valAtObj1, valAtObj2], callback, deepProps, isReplace, withSymbols);\r\n\t\t\t} else {\r\n\t\t\t\tif (_isArray(obj1) && _isArray(obj2)) {\r\n\t\t\t\t\tif (isReplace) {\r\n\t\t\t\t\t\tobj1[key] = valAtObj2;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tobj1.push(valAtObj2);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// In case we're setting a read-only property\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tif (withSymbols) {\r\n\t\t\t\t\t\t\tObject.defineProperty(obj1, key, Object.getOwnPropertyDescriptor(obj2, key));\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tobj1[key] = obj2[key];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} catch(e) {}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n\treturn obj1;\r\n};\r\n", "\r\n/**\r\n * @imports\r\n */\r\nimport _mergeCallback from './mergeCallback.js';\r\n\r\n/**\r\n  * Merges values from subsequent arrays/objects first array/object;\r\n  * optionally recursive\r\n  *\r\n  * @param array ...objs\r\n  *\r\n  * @return void\r\n  */\r\nexport default function(...objs) {\r\n\treturn _mergeCallback(objs, (k, obj1, obj2) => {\r\n\t\treturn true;\r\n\t}, false/*deepProps*/, false/*isReplace*/, false/*withSymbols*/);\r\n};\r\n", "export default class extends Error {}", "\r\n/**\r\n * Tells if ALL items pass the test.\r\n *\r\n * @param array \tarr\r\n * @param function \tcallback\r\n *\r\n * @return bool\r\n */\r\nexport default function(arr, callback) {\r\n\treturn arr.reduce((prevTest, itm, i) => prevTest && callback(itm, i), true);\r\n};\r\n", "\r\n/**\r\n * Tells if the string is warapped with the given opening and closing tags.\r\n *\r\n * @param  string  subject\r\n * @param  string  openingTag\r\n * @param  string  closingTag\r\n *\r\n * @return bool\r\n */\r\nexport default function(subject, openingTag, closingTag) {\r\n\treturn subject.startsWith(openingTag) && subject.endsWith(closingTag);\r\n};\r\n", "\n/**\n * @imports\n */\nimport _isTypeObject from '@webqit/util/js/isTypeObject.js';\nimport _isObject from '@webqit/util/js/isObject.js';\nimport _isEmpty from '@webqit/util/js/isEmpty.js';\nimport _isNull from '@webqit/util/js/isNull.js';\nimport _isString from '@webqit/util/js/isString.js';\nimport _isNumeric from '@webqit/util/js/isNumeric.js';\nimport _isUndefined from '@webqit/util/js/isUndefined.js';\nimport _arrFrom from '@webqit/util/arr/from.js';\nimport _intersect from '@webqit/util/arr/intersect.js';\nimport _all from '@webqit/util/arr/all.js';\nimport _each from '@webqit/util/obj/each.js';\nimport _wrapped from '@webqit/util/str/wrapped.js';\n\n/**\n * ---------------------------\n * Table class\n * ---------------------------\n */\t\t\t\t\n\nexport default class _Table {\n\t \n\t/**\n\t * @inheritdoc\n\t */\n\tconstructor(database, tableName, def, params = {}) {\n\t\t// -----------------\n\t\tthis.database = database;\n\t\tthis.name = tableName;\n\t\tthis.def = def;\n\t\tthis.params = params;\n\t\t// -----------------\n\t\tif (_isEmpty(def.schema)) {\n\t\t\tdef.schema = {\n\t\t\t\tprimaryKey: '',\n\t\t\t\tcolumns: {},\n\t\t\t\tindexes: {},\n\t\t\t\tderived: true,\n\t\t\t};\n\t\t}\n\t}\n\n\t/**\n\t * ----------\n\t * SCHEMA UTILS\n\t * ----------\n\t */\n\n\t/**\n\t * Get Primary Key columns from schema.\n\t * \n\t * @returns Array\n\t */\n\tgetKeyPathForPrimaryKey() {\n\t\tvar keyPath = Object.keys(this.def.schema.columns).filter(name => this.def.schema.columns[name].primaryKey);\n\t\tif (!keyPath.length && this.def.schema.primaryKey) {\n\t\t\tkeyPath = _arrFrom(this.def.schema.primaryKey);\n\t\t}\n\t\treturn keyPath;\n\t}\n\n\t/**\n\t * Get Index columns from schema.\n\t * \n\t * @param String type\n\t * \n\t * @returns Array\n\t */\n\t getKeyPathsForIndex(type) {\n\t\tvar keyPaths = Object.keys(this.def.schema.columns).filter(name => this.def.schema.columns[name][type]);\n\t\tif (this.def.schema.indexes) {\n\t\t\tObject.keys(this.def.schema.indexes).filter(indexName => this.def.schema.indexes[indexName].type === type).forEach(indexName => {\n\t\t\t\tkeyPaths.push(_arrFrom(this.def.schema.indexes[indexName].keyPath));\n\t\t\t});\n\t\t}\n\t\treturn keyPaths;\n\t}\n\n\t/**\n\t * ----------\n\t * QUERY UTILS\n\t * ----------\n\t */\n\n\t/**\n\t * Syncs a cursor.\n\t * \n\t * @param Cursor cursor\n\t * \n\t * @return Number\n\t */\n\tasync syncCursor(cursor) {\n\t\treturn await this.putAll(cursor.cache);\n\t}\n\n\t/**\n\t * @inheritdoc\n\t */\n\tasync match(rowObj) {\n\t\t// -----------\n\t\tvar primaryKey, existing;\n\t\tif (this.def.schema.primaryKey \n\t\t&& (primaryKey = readKeyPath(rowObj, this.def.schema.primaryKey)) \n\t\t&& (existing = await this.get(primaryKey))) {\n\t\t\treturn {\n\t\t\t\tmatchingKey: 'PRIMARY_KEY',\n\t\t\t\tprimaryKey,\n\t\t\t\trow: existing,\n\t\t\t};\n\t\t}\n\t\t// -----------\n\t\tvar match, uniqueKeys = Object.keys(this.def.schema.indexes).filter(alias => this.def.schema.indexes[alias].type === 'unique');\n\t\tif (uniqueKeys.length) {\n\t\t\t(await this.getAll()).forEach((existingRow, i) => {\n\t\t\t\tif (match) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tuniqueKeys.forEach(constraintName => {\n\t\t\t\t\tvar keyPath = this.def.schema.indexes[constraintName].keyPath;\n\t\t\t\t\tif (existingRow && readKeyPath(rowObj, keyPath) === readKeyPath(existingRow, keyPath)) {\n\t\t\t\t\t\tmatch = {\n\t\t\t\t\t\t\tmatchingKey: constraintName,\n\t\t\t\t\t\t\tprimaryKey: this.def.schema.primaryKey ? readKeyPath(existingRow, this.def.schema.primaryKey) : i,\n\t\t\t\t\t\t\trow: {...existingRow},\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\treturn match;\n\t}\n\t\n\t/**\n\t * -------------------------------\n\t */\n\n\t/**\n\t * @inheritdoc\n\t */\n\tasync addAll(multiValues, columns = [], duplicateKeyCallback = null, forceAutoIncrement = false) {\n\n\t\tvar ongoingAdd;\n\t\tvar forUpdates = [];\n\n\t\tvar inserts = await Promise.all(multiValues.map(async (values, line) => {\n\n\n\t\t\tvar rowObj = {};\n\t\t\tif (_isObject(values)) {\n\t\t\t\trowObj = values;\n\t\t\t} else {\n\t\t\t\tvar _columns = columns.length ? columns : Object.keys(this.def.schema.columns);\n\t\t\t\tif (_columns.length && _columns.length !== values.length) {\n\t\t\t\t\tthrow new Error('Column/values count mismatch at line ' + line + '!');\n\t\t\t\t}\n\t\t\t\t_columns.forEach((columnName, i) => {\n\t\t\t\t\trowObj[columnName] = values[i];\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// -------------\n\t\t\tthis.handleInput(rowObj, true);\t\t\t\t\t\n\t\t\t// -------------\n\n\t\t\tif (this.shouldMatchInput(rowObj) || duplicateKeyCallback) {\n\t\t\t\tongoingAdd/* block next iteration */ = new Promise(async resolve => {\n\t\t\t\t\tawait ongoingAdd;/* wait prev iteration */\n\n\t\t\t\t\tvar match = await this.match(rowObj);\n\t\t\t\t\tif (match && duplicateKeyCallback) {\n\t\t\t\t\t\tvar duplicateRow = {...match.row};\n\t\t\t\t\t\tif (duplicateKeyCallback(duplicateRow, rowObj)) {\n\t\t\t\t\t\t\tforUpdates.push(duplicateRow);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// The duplicate situation had been handled\n\t\t\t\t\t\t// ...positive or negative\n\t\t\t\t\t\treturn resolve('0');\n\t\t\t\t\t}\n\n\t\t\t\t\t// We're finally going to add!\n\t\t\t\t\t// We must not do this earlier...\n\t\t\t\t\t// as \"onupdate\" rows will erronously take on a new timestamp on this column\n\t\t\t\t\tawait this.beforeAdd(rowObj, match);\n\t\t\t\t\tresolve(this.add(rowObj));\n\t\t\t\t});\n\n\t\t\t\treturn ongoingAdd;\n\t\t\t}\n\n\t\t\tawait this.beforeAdd(rowObj);\n\t\t\treturn this.add(rowObj);\n\t\t}));\n\n\t\t// OnDuplicateKey updates\n\t\tif (forUpdates.length) {\n\t\t\tinserts = inserts.concat(await this.putAll(forUpdates));\n\t\t}\n\n\t\treturn inserts.filter((n, i) => n !== 0 && inserts.indexOf(n) === i);\n\t}\n\t\t\n\t/**\n\t * @inheritdoc\n\t */\n\tasync beforeAdd(rowObj, match) {\n\t\tvar timestamp = (new Date).toISOString();\n\t\t_each(this.def.schema.columns || {}, (name, field) => {\n\t\t\tif ((field.type === 'datetime' || field.type === 'timestamp') && field.default === 'CURRENT_TIMESTAMP') {\n\t\t\t\trowObj[name] = timestamp;\n\t\t\t}\n\t\t});\n\t}\n\t \n\t/**\n\t * @inheritdoc\n\t */\n\tasync putAll(multiRows) {\n\t\tvar ongoingPut;\n\t\tvar updates = await Promise.all(multiRows.map(async rowObj => {\n\n\t\t\t// -------------\n\t\t\tthis.handleInput(rowObj);\t\t\t\t\t\n\t\t\t// -------------\n\t\t\tif (this.shouldMatchInput(rowObj)) {\n\t\t\t\tongoingPut/* block next iteration */ = new Promise(async resolve => {\n\t\t\t\t\tawait ongoingPut;/* wait prev iteration */\n\n\t\t\t\t\tawait this.beforePut(rowObj, await this.match(rowObj));\n\t\t\t\t\tresolve(this.put(rowObj));\n\n\t\t\t\t});\n\n\t\t\t\treturn ongoingPut;\n\t\t\t}\n\n\t\t\tawait this.beforePut(rowObj);\n\t\t\treturn this.put(rowObj);\n\t\t}));\n\n\t\treturn updates;\n\t}\n\t\t\n\t/**\n\t * @inheritdoc\n\t */\n\tasync beforePut(rowObj, match) {\n\t\tif (match && !_all(Object.keys(rowObj), key => rowObj[key] === match.row[key])) {\n\t\t\tvar timestamp = (new Date).toISOString();\n\t\t\t_each(this.def.schema.columns || {}, (name, field) => {\n\t\t\t\tif ((field.type === 'datetime' || field.type === 'timestamp') && field.onupdate === 'CURRENT_TIMESTAMP') {\n\t\t\t\t\trowObj[name] = timestamp;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\t \n\t/**\n\t * @inheritdoc\n\t */\n\tasync deleteAll(multiIDs) {\n\t\tvar deletes = await Promise.all(multiIDs.map(async primaryKey => {\n\t\t\treturn this.delete(await this.beforeDelete(primaryKey));\n\t\t}));\n\n\t\treturn deletes;\n\t}\n\t\t\n\t/**\n\t * @inheritdoc\n\t */\n\tasync beforeDelete(primaryKey) {\t\n\t\treturn primaryKey;\n\t}\n\t\n\t/**\n\t * -------------------------------\n\t */\n\n\t/**\n\t * @inheritdoc\n\t */\n\thandleInput(rowObj, applyDefaults = false) {\n\t\tvar rowObjColumns = Object.keys(rowObj);\n\t\tvar schemaColumns = Object.keys(this.def.schema.columns);\n\t\t// ------------------\n\t\tvar unknownFields = rowObjColumns.filter(col => schemaColumns.indexOf(col) === -1);\n\t\tif (unknownFields.length) {\n\t\t\tthrow new Error('Unknown column: ' + unknownFields[0]);\n\t\t}\n\t\t// ------------------\n\t\tschemaColumns.forEach(columnName => {\n\t\t\tvar value = rowObj[columnName];\n\t\t\tvar field = _isObject(this.def.schema.columns[columnName]) ? this.def.schema.columns[columnName] : {};\n\t\t\tif (rowObjColumns.includes(columnName)) {\n\t\t\t\t// TODO: Validate supplied value\n\t\t\t\tif (field.type === 'json') {\n\t\t\t\t\tif (!_isTypeObject(_value) && (!_isString(value) || (!_wrapped(value, '[', ']') && !_wrapped(value, '{', '}')))) {\n\t\t\t\t\t}\n\t\t\t\t} else if (['char', 'tinytext', 'smalltext', 'text', 'bigtext', 'varchar'].includes(field.type)) {\n\t\t\t\t\tif (!_isString(value)) {\n\t\t\t\t\t}\n\t\t\t\t} else if (['bit', 'tinyint', 'smallint', 'int', 'bigint', 'decimal', 'number', 'float', 'real'].includes(field.type)) {\n\t\t\t\t\tif (!_isNumeric(value)) {\n\t\t\t\t\t}\n\t\t\t\t} else if (['enum', 'set'].includes(field.type)) {\n\t\t\t\t\tif (!_isNumeric(value)) {\n\t\t\t\t\t}\n\t\t\t\t} else if (['date', 'datetime', 'timestamp'].includes(field.type)) {\n\t\t\t\t\tif (!_isString(value)) {\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (applyDefaults && !_intersect(_arrFrom(columnName), _arrFrom(this.def.schema.primaryKey)).length) {\n\t\t\t\t// DONE: Apply defaults...\n\t\t\t\trowObj[columnName] = ('default' in field) && !(['date', 'datetime', 'timestamp'].includes(field.type) && field.default === 'CURRENT_TIMESTAMP') \n\t\t\t\t\t? field.default \n\t\t\t\t\t: null;\n\t\t\t}\n\t\t\t// Non-nullable\n\t\t\tif (field.nullable === false && (_isNull(rowObj[columnName]) || _isUndefined(rowObj[columnName]))) {\n\t\t\t\tthrow new Error('Inserting NULL on non-nullable column: ' + columnName);\n\t\t\t}\n\t\t});\n\t}\n\t\t\n\t/**\n\t * @inheritdoc\n\t */\n\tshouldMatchInput(rowObj) {\n\t\treturn Object.keys(this.def.schema.columns).filter(name => {\n\t\t\tvar field = this.def.schema.columns[name];\n\t\t\treturn ['datetime', 'timestamp'].includes(field.type) \n\t\t\t\t&& (field.default === 'CURRENT_TIMESTAMP' || field.onupdate === 'CURRENT_TIMESTAMP')\n\t\t}).length;\n\t}\n}\n\n/**\n * @AutoIncremen\n */\nconst readKeyPath = (rowObj, keyPath) => {\n\treturn _arrFrom(keyPath).map(key => rowObj[key]).filter(v => v).join('-');\n};\n", "\n\n/**\n * ---------------------------\n * _Cursor class\n * ---------------------------\n */\t\t\t\t\n\nexport default class _Cursor {\n\t \n\t/**\n\t * @inheritdoc\n\t */\n\tconstructor(rows) {\n\t\tthis.cache = rows;\n\t\tthis.key = 0;\n\t\tthis.flags = {};\n\t\tthis._onfinish = [];\n\t}\n\t \n\t/**\n\t * @inheritdoc\n\t */\n\tonfinish(callback) {this._onfinish.push(callback);}\n\t \n\t/**\n\t * @inheritdoc\n\t */\n\tnext() {\n\t\tif (!this.cache.length || this.key === this.cache.length - 1) {\n\t\t\tthis.__eof = true;\n\t\t\tthis._onfinish.forEach(callback => callback());\n\t\t\tthis.key = 0;\n\t\t\treturn;\n\t\t}\n        this.key ++;\n\t}\n\t\t \n\t/**\n\t * @inheritdoc\n\t */\n\teof() {\n\t\treturn !this.cache.length || this.key === this.cache.length - 1;\n\t}\n\t \n\t/**\n\t * @inheritdoc\n\t */\n\tasync fetch() {\n\t\tif (this.key < this.cache.length) {\n\t\t\treturn this.cache[this.key];\n\t\t}\n\t}\n}", "\n\n/**\n * @imports\n */\nimport _Cursor from '../_Cursor.js';\n\n/**\n * ---------------------------\n * ODBCursor class\n * ---------------------------\n */\t\t\t\t\n\nexport default class ODBCursor extends _Cursor {}", "\n/**\n * @imports\n */\nimport _arrFrom from '@webqit/util/arr/from.js';\nimport _merge from '@webqit/util/obj/merge.js';\nimport _each from '@webqit/util/obj/each.js';\nimport DuplicateKeyViolationError from '../DuplicateKeyViolationError.js';\nimport _Table from '../_Table.js';\nimport ODBCursor from './ODBCursor.js';\n\n/**\n * ---------------------------\n * ODBStore class\n * ---------------------------\n */\t\t\t\t\n\nexport default class ODBStore extends _Table {\n\t \n\t/**\n\t * @inheritdoc\n\t */\n\tconstructor(database, tableName, def, params = {}) {\n\t\tsuper(...arguments);\n\t\tthis.ongoingWrite = null;\n\t}\n\n\t/**\n\t * Returns a cursor.\n\t * \n\t * @return Cursor\n\t */\n\tgetCursor() {\n\t\treturn new ODBCursor(\n\t\t\t// IMPORTANT: Deep copy... that is... copy each row\n\t\t\t(this.def.data || []).reduce((_store, row) => _store.concat(row ? {...row} : undefined), []).filter(row => row)\n\t\t);\n\t}\n\t \n\t/**\n\t * @inheritdoc\n\t */\n\tasync getAll() {\n\t\t// IMPORTANT: Deep copy... that is... copy each row\n\t\treturn (this.def.data || []).reduce((_store, row) => _store.concat(row ? {...row} : undefined), []);\n\t}\n\t \n\t/**\n\t * @inheritdoc\n\t */\n\tasync get(rowID) {\n\t\tvar primaryKeyColumn = Object.keys(this.def.schema.columns).filter(name => this.def.schema.columns[name].primaryKey)[0];\n        var autoIncrementColumn = Object.keys(this.def.schema.columns).filter(name => this.def.schema.columns[name].autoIncrement)[0];\n\t\tif (!primaryKeyColumn) {\n\t\t\tthrow new Error('Table must define a Primary Key to fetch an item by Primary Key.');\n\t\t}\n\t\tvar store = this.def.data;\n\t\trowID = _arrFrom(rowID).join('-');\n\t\tif (primaryKeyColumn === autoIncrementColumn) {\n\t\t\treturn store[rowID - 1] ? {...store[rowID - 1]} : undefined;\n\t\t}\n\t\treturn store[rowID] ? {...store[rowID]} : undefined;\n\t}\n\t\t \n\t/**\n\t * @inheritdoc\n\t */\n\tasync count() {\n\t\tvar store = this.def.data;\n\t\treturn store.length;\n\t}\n\n\t/**\n\t * @inheritdoc\n\t */\n\tshouldMatchInput(rowObj) {\n\t\treturn this.def.schema.primaryKey || super.shouldMatchInput(rowObj);\n\t}\n\n\t/**\n\t * @inheritdoc\n\t */\n\tasync beforeAdd(rowObj, match) {\n\t\tif (match) {\n\t\t\tthrow new DuplicateKeyViolationError('Inserting duplicate values on unique key constraint: ' + match.matchingKey);\n\t\t} else {\n\t\t\tvar store = this.def.data;\n\t\t\tprocessPrimaryKey(store, rowObj, this.def.schema.primaryKey, this.def.schema.autoIncrement);\n\t\t}\n\n\t\tawait super.beforeAdd(rowObj, match);\n\t}\n\n\t/**\n\t * @inheritdoc\n\t */\n\tadd(rowObj) {\n\t\tthis.ongoingWrite = new Promise(async (resolve, reject) => {\n\t\t\ttry { await this.ongoingWrite; } catch(e) {}\n\t\t\tvar store = this.def.data;\n\t\t\tvar primaryKey = readKeyPath(rowObj, this.def.schema.primaryKey);\n\t\t\tif (this.def.schema.autoIncrement) {\n\t\t\t\tstore[primaryKey - 1] = rowObj;\n\t\t\t} else {\n\t\t\t\tstore[primaryKey] = rowObj;\n\t\t\t}\n\t\t\tresolve(primaryKey);\n\t\t});\n\n\t\treturn this.ongoingWrite;\n\t}\n\t\t\n\t/**\n\t * @inheritdoc\n\t */\n\tasync beforePut(rowObj, match) {\n\t\tif (match) {\n\t\t\t_each(match.row, (key, value) => {\n\t\t\t\tif (!(key in rowObj)) {\n\t\t\t\t\trowObj[key] = value;\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tvar store = this.def.data;\n\t\t\tprocessPrimaryKey(store, rowObj, this.def.schema.primaryKey, this.def.schema.autoIncrement);\n\t\t}\n\n\t\tawait super.beforePut(rowObj, match);\n\t}\n\t \n\t/**\n\t * @inheritdoc\n\t */\n\tput(rowObj) {\n\t\tthis.ongoingWrite = new Promise(async resolve => {\n\t\t\ttry { await this.ongoingWrite; } catch(e) {}\n\t\t\tvar store = this.def.data,\n\t\t\t\tprimaryKey = readKeyPath(rowObj, this.def.schema.primaryKey);\n\t\t\tif (this.def.schema.autoIncrement) {\n\t\t\t\tstore[primaryKey - 1] = rowObj;\n\t\t\t} else {\n\t\t\t\tstore[primaryKey] = rowObj;\n\t\t\t}\n\t\t\tresolve(primaryKey);\n\t\t});\n\n\t\treturn this.ongoingWrite;\n\t}\n\t \n\t/**\n\t * @inheritdoc\n\t */\n\tdelete(rowID, assertExisting = true) {\n\t\tthis.ongoingWrite = new Promise(async (resolve, reject) => {\n\t\t\ttry { await this.ongoingWrite; } catch(e) {}\n\t\t\tvar primaryKey, store = this.def.data;\n\t\t\tif (this.def.schema.autoIncrement) {\n\t\t\t\tif (store[rowID - 1]) {\n\t\t\t\t\tdelete store[rowID - 1];\n\t\t\t\t\tprimaryKey = rowID;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (store[rowID]) {\n\t\t\t\t\tdelete store[rowID];\n\t\t\t\t\tprimaryKey = rowID;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!primaryKey && assertExisting) {\n\t\t\t\treturn reject(new Error('The given row (with ' + _arrFrom(this.def.schema.primaryKey).join(',') + ' = ' + primaryKey + ') does not exist in the store.'));\n\t\t\t}\n\t\t\tresolve(primaryKey);\n\t\t});\n\n\t\treturn this.ongoingWrite;\n\t}\n\t\t \n\t/**\n\t * @inheritdoc\n\t */\n\tasync clear() {\n\t\tvar store = this.def.data;\n\t\tstore.splice(0);\n\t\treturn true;\n\t}\n\n}\n\n/**\n * @AutoIncremen\n */\nvar readKeyPath = (rowObj, keyPath) => {\n\treturn _arrFrom(keyPath).map(key => rowObj[key]).filter(v => v).join('-');\n};\n\n/**\n * @AutoIncremen\n */\nexport function processPrimaryKey(store, rowObj, primaryKey, canAutoIncrement) {\n\tif (!primaryKey) {\n\t\treturn;\n\t}\n\t\n\tvar primaryKeyVal = readKeyPath(rowObj, primaryKey);\n\t\tvar primaryKeyPath = _arrFrom(primaryKey);\n\t\tif (primaryKeyPath.length > 1) {\n\t\t\tthrow new Error('The Auto-Increment flag cannot be used with Composite Primary Keys.');\n\t\t}\n\t\tprimaryKeyVal = store.length + 1;\n\t\trowObj[primaryKeyPath[0]] = primaryKeyVal;\n\tif (!primaryKeyVal && canAutoIncrement) {\n\t}\n\n\treturn primaryKeyVal;\n}", "\n\n/**\n * @imports\n */\nimport _isObject from '@webqit/util/js/isObject.js';\nimport _isFunction from '@webqit/util/js/isFunction.js';\nimport _each from '@webqit/util/obj/each.js';\nimport _Database from '../_Database.js';\nimport ODBStore from './ODBStore.js';\n\n/**\n * ---------------------------\n * ODBDatabase class\n * ---------------------------\n */\t\t\t\t\n\nexport default class ODBDatabase extends _Database {\n    \n    /**\n     * @inheritdoc\n     */\n    async tables() {\n        return Object.keys(this.def.schema);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async table(tableName, params = {}) {\n        return new ODBStore(this, tableName, {\n            schema: this.def.schema[tableName], \n            data: this.def.data[tableName],\n        }, params);\n    }\n\n    /**\n     * CREATE/ALTER/DROP\n     */\n\n    /**\n     * @inheritdoc\n     */\n    async createTable(tableName, tableSchema, params = {}) {\n        if ((await this.tables()).includes(tableName)) {\n            if (params.ifNotExists) {\n                return;\n            }\n            throw new Error(`Store name \"${tableName}\" already exists!`);\n        }\n        this.def.schema[tableName] = tableSchema;\n        this.def.data[tableName] = [];\n        return new ODBStore(this, tableName, {\n            schema: this.def.schema[tableName],\n            data: this.def.data[tableName],\n        });\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async alterTable(tableName, newTableSchemaOrCallback, params = {}) {\n\n        var tableSchema = await this.getTableSchema(tableName),\n            newTableSchema;\n        if (_isFunction(newTableSchemaOrCallback)) {\n            // Modify existing schema\n            newTableSchema = this.cloneSchema(tableSchema);\n            await newTableSchemaOrCallback(newTableSchema);\n        } else if (_isObject(callback)) {\n            newTableSchema = newTableSchemaOrCallback;\n        } else {\n            throw new Error('Table/store modification expects only an object (new schema) or a function (callback that recieves existing schema).')\n        }\n\n        if (!(await this.tables()).includes(tableName)) {\n            if (params.ifExists) {\n                return;\n            }\n            throw new Error(`Store name \"${tableName}\" does not exist!`);\n        }\n\n        var store = this.def.data[tableName];\n        _each(this.diffSchema(tableSchema, newTableSchema), (changeName, changeDef) => {\n            if (changeName !== 'renamedColumns') {\n                // \"primaryKey\", \"columns\", \"foreignKeys\", \"indexes\", \"jsonColumns\"\n                _each(changeDef.add, (prop, def) => {\n                    this.applyToStore[changeName](store, prop, def, 'add');\n                });\n                _each(changeDef.alter, (prop, changes) => {\n                    this.applyToStore[changeName](store, prop, changes.current, 'alter');\n                });\n                _each(changeDef.drop, (prop, oldDef) => {\n                    this.applyToStore[changeName](store, prop, oldDef, 'drop');\n                });\n            } else {\n                // \"renamedColumns\" actually comes last from source...\n                // and really should\n                _each(changeDef, (oldName, newName) => {\n                    this.applyToStore[changeName](store, oldName, newName);\n                });\n            }\n        });\n\n        return new ODBStore(this, tableName, {\n            schema: this.def.schema[tableName],\n            data: store,\n        }, {});\n\n    }\n\n    /**\n     * Drops table.\n     * \n     * @param String tableName\n     * @param Object params\n     * \n     * @return Bool\n     */\n    async dropTable(tableName, params = {}) {\n        if (!(await this.tables()).includes(tableName)) {\n            if (params.ifExists) {\n                return;\n            }\n            throw new Error(`Store name \"${tableName}\" does not exist!`);\n        }\n        delete this.def.schema[tableName];\n        delete this.def.data[tableName];\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async getTableSchema(tableName) {\n        return this.def.schema[tableName];\n    }\n}\n\nODBDatabase.prototype.applyToStore = {\n    primaryKey: (store, columnName, def, delta) => {},\n\n    columns: (store, columnName, def, delta) => {},\n\n    foreignKeys: (store, columnName, def, delta) => {},\n\n    indexes: (store, alias, def, delta) => {\n        if (delta === 'drop') {\n            store.deleteIndex(alias);\n            return;\n        }\n        if (delta === 'alter' && store.indexNames.contains(alias)) {\n            store.deleteIndex(alias);\n        }\n        store.createIndex(alias, def.keyPath, {unique: def.type === 'unique'});\n    },\n\n    jsonColumns: (store, alias, columnName, delta) => {},\n\n    renamedColumns: (store, columnName, newColumnName) => {\n        return 'ALTER COLUMN `' + columnName + '` RENAME TO `' + newColumnName + '`';\n    },\n};", "\n/**\n * @imports\n */\nimport _arrFrom from '@webqit/util/arr/from.js';\nimport _isNumeric from '@webqit/util/js/isNumeric.js';\nimport Driver from '../_Driver.js';\nimport ODBDatabase from './ODBDatabase.js';\n\n/**\n * ---------------------------\n * ODBDriver class\n * ---------------------------\n */\t\t\t\t\n \nexport default class ODBDriver extends Driver {\n\n    /**\n     * Instance.\n     */\n    constructor() {\n        super();\n        this.$.data = {};\n        this.name = 'odb';\n    }\n\n\t/**\n     * Returns a list of databases.\n     * \n     * @param String databaseName\n     * @param Object params\n     * \n     * @return Array\n\t */\n    async databases(databaseName = null, params = {}) {\n        var databaseList = Object.keys(this.$.schema).map(name => ({name}));\n        return this.matchDatabaseList(databaseList, databaseName, params);\n\t}\n\n    /**\n     * Returns a database handle.\n     * \n     * @param String databaseName\n     * @param Object params\n     * \n     * @return SQLDatabase\n     */\n    async database(databaseName = this.defaultDB, params = this.defaultDBParams) {\n        if (params.version && !_isNumeric(params.version)) {\n            throw new Error(`Database version (params.version) must be numeric.`);\n        }\n        var databases = await this.databases(databaseName, params);\n        if (!databases.length) {\n            // Fire upgradedneeded!\n        }\n        if (!(databaseName in this.$.data)) {\n            // ----------------\n            this.setDatabaseSchema(databaseName, {});\n            this.$.data[databaseName] = {};\n            // ----------------\n        }\n        return new ODBDatabase(this, databaseName, {\n            schema: this.getDatabaseSchema(databaseName),\n            data: this.$.data[databaseName],\n        }, params);\n    }\n\n    /**\n     * CREATE/DROP\n     */\n\n    /**\n     * Creates.\n     * \n     * @param String databaseName\n     * @param Object params\n     * \n     * @return Object\n     */\n    async createDatabase(databaseName, params = this.defaultDBParams) {\n        if ((await this.databases(databaseName, params)).length) {\n            if (params.ifNotExists) {\n                return;\n            }\n            throw new Error(`Database ${databaseName} already exists.`);\n        }\n        // ----------------\n        this.setDatabaseSchema(databaseName, {});\n        this.$.data[databaseName] = {};\n        // ----------------\n        await this.setDefaultDB(databaseName, params);\n        return new ODBDatabase(this, databaseName, {\n            schema: this.getDatabaseSchema(databaseName),\n            data: this.$.data[databaseName],\n        }, params);\n    }\n\n    /**\n     * Drops a database.\n     * \n     * @param String databaseName\n     * @param Object params\n     * \n     * @return Bool\n     */\n    async dropDatabase(databaseName, params = {}) {\n        if (!(await this.databases(databaseName, params)).length) {\n            if (params.ifExists) {\n                return;\n            }\n            throw new Error(`Database ${databaseName} does not exist.`);\n        }\n        this.unsetDatabaseSchema(databaseName);\n    }\n\n    /**\n     * ---------\n     * QUERY\n     * ---------\n     */\n    \n    /**\n     * @inheritdoc\n     */\n    async query(query, vars = [], params = {}) {\n        params = {...params};\n        params.vars = vars;\n        params.dbDriver = this;\n        return ObjSQL.parse(query, null, params).eval(this);\n    }\n}", "\n/**\n * @imports\n */\nimport _arrFrom from '@webqit/util/arr/from.js';\nimport _Cursor from '../_Cursor.js';\n\n\n/**\n * ---------------------------\n * IDBCursor class\n * ---------------------------\n */\t\t\t\t\n\nexport default class IDBCursor extends _Cursor {\n\t \n\t/**\n\t * @inheritdoc\n\t */\n\tconstructor(store) {\n\t\tsuper([]);\n\t\t// ---------------\n\t\tthis._store = store;\n\t\t// ---------------\n\t\tthis._storeFetch = new Promise(async resolve => {\n\t\t\tvar store = await this._store;\n\t\t\tvar getAllRequest = store.getAll();\n\t\t\tgetAllRequest.onsuccess = e => {\n\t\t\t\tthis.cache = _arrFrom(e.target.result);\n\t\t\t\tresolve();\n\t\t\t};\n\t\t});\n\t}\n\t \n\t/**\n\t * @inheritdoc\n\t */\n\tasync fetch() {\n\t\tawait this._storeFetch;\n\t\treturn super.fetch();\n\t}\n}", "\n/**\n * ---------------------------\n * IDBProgressiveCursor class\n * ---------------------------\n */\t\t\t\t\n\nexport default class IDBProgressiveCursor {\n\t \n\t/**\n\t * @inheritdoc\n\t */\n\tconstructor(store) {\n\t\t// ---------------\n\t\tthis._store = store;\n\t\t// ---------------\n\t\tthis.cache = [];\n\t\tthis.key = 0;\n\t\tthis._onfinish = [];\n\t\tthis.flags = {};\n\t}\n\t \n\t/**\n\t * @inheritdoc\n\t */\n\tonfinish(callback) {this._onfinish.push(callback);}\n\t \n\t/**\n\t * @inheritdoc\n\t */\n\tnext() {\n\t\tif (!this._eof) {\n\t\t\tif (!this._cursorRequest) {\n\t\t\t\tthrow new Error('fetch() must be called before calling next()');\n\t\t\t}\n\t\t\tthis.key ++;\n\t\t} else {\n\t\t\tif (!this.cache.length || this.key === this.cache.length - 1) {\n\t\t\t\tthis._onfinish.forEach(callback => callback());\n\t\t\t\tthis.key = 0;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.key ++;\n\t\t}\n\t}\n\t\t \n\t/**\n\t * @inheritdoc\n\t */\n\teof() {\n\t\t// The store must reach eof before we can be correct with this.cache.length\n\t\treturn this._eof && (!this.cache.length || this.key === this.cache.length - 1);\n\t}\n\t \n\t/**\n\t * @inheritdoc\n\t */\n\tasync fetch() {\n\t\tvar store = await this._store;\n\t\treturn new Promise(resolve => {\n\t\t\t// After having filled this.cache from store\n\t\t\tif (this._eof || this.key < this.cache.length) {\n\t\t\t\tresolve(this.cache[this.key]);\n\t\t\t} else {\n\t\t\t\tif (!this._countRequest) {\n\t\t\t\t\t// First time reading from store\n\t\t\t\t\tthis._countRequest = store.count();\n\t\t\t\t\tthis._countRequest.onsuccess = e => {\n\t\t\t\t\t\tthis._count = e.target.result;\n\t\t\t\t\t\tthis._cursorRequest = store.openCursor();\n\t\t\t\t\t\tthis._handleCursorFetch(resolve);\n\t\t\t\t\t\tthis._continueCursor = () => this._cursor.continue();\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\tthis._handleCursorFetch(resolve);\n\t\t\t\t\tthis._continueCursor();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Helps handle cursor result\n\t * \n\t * @param Function resolve\n\t * \n\t * @return void\n\t */\n\t_handleCursorFetch(resolve) {\n\t\tthis._cursorRequest.onsuccess = e => {\n\t\t\tthis._cursor = e.target.result;\n\t\t\tif (this._cursor) {\n\t\t\t\tvar value = this._cursor.value;\n\t\t\t\tthis.cache.push(value);\n\t\t\t\tif (this.cache.length === this._count) {\n\t\t\t\t\tthis._eof = true;\n\t\t\t\t}\n\t\t\t\tresolve(value);\n\t\t\t} else {\n\t\t\t\tthis._eof = true;\n\t\t\t\tresolve();\n\t\t\t}\n\t\t}\n\t}\n}\n", "\n/**\n * @imports\n */\nimport _isArray from '@webqit/util/js/isArray.js';\nimport _isNumeric from '@webqit/util/js/isNumeric.js';\nimport _arrFrom from '@webqit/util/arr/from.js';\nimport DuplicateKeyViolationError from '../DuplicateKeyViolationError.js';\nimport _Table from '../_Table.js';\nimport IDBCursor from './IDBCursor.js';\nimport IDBProgressiveCursor from './IDBProgressiveCursor.js';\n\n/**\n * ---------------------------\n * IDBStore class\n * ---------------------------\n */\t\t\t\t\n\nexport default class IDBStore extends _Table {\n\n\t/**\n\t * Returns a cursor.\n\t * \n\t * @return IDBCursor\n\t */\n\tgetCursor() {\n\t\treturn new IDBCursor(this.def.getStore());\n\t}\n\n\t/**\n\t * Returns a cursor.\n\t * \n\t * @return IDBProgressiveCursor\n\t */\n\tgetProgressiveCursor() {\n\t\treturn new IDBProgressiveCursor(this.def.getStore());\n\t}\n\t \n\t/**\n\t * @inheritdoc\n\t */\n\tgetAll() {\n\t\treturn new Promise(async (resolve, reject) => {\n\t\t\tvar getAllRequest = (this.tx_store || this.def.getStore('readonly')).getAll();\n\t\t\tgetAllRequest.onsuccess = e => resolve(_arrFrom(e.target.result));\n\t\t\tgetAllRequest.onerror = e => reject(e.target.error);\n\t\t});\n\t}\n\t \n\t/**\n\t * @inheritdoc\n\t */\n\tget(primaryKey) {\n\t\treturn new Promise(async (resolve, reject) => {\n\t\t\t// Now this is very important\n\t\t\tprimaryKey = _isNumeric(primaryKey) ? parseInt(primaryKey) : primaryKey;\n\t\t\tvar getRequest = (this.tx_store || this.def.getStore('readonly')).get(primaryKey);\n\t\t\tgetRequest.onsuccess = e => resolve(e.target.result);\n\t\t\tgetRequest.onerror = e => reject(e.target.error);\n\t\t});\n\t}\n\t\n\t/**\n\t * @inheritdoc\n\t */\n\tcount(...query) {\n\t\treturn new Promise(async (resolve, reject) => {\n\t\t\tvar countRequest = this.def.getStore().count(...query);\n\t\t\tcountRequest.onsuccess = e => resolve(e.target.result);\n\t\t\tcountRequest.onerror = e => reject(e.target.error);\n\t\t});\n\t}\n\t\n\t/**\n\t * @inheritdoc\n\t */\n\taddAll(multiValues, columns = [], duplicateKeyCallback = null) {\n\t\tthis.tx_store = this.def.getStore();\n\t\treturn super.addAll(...arguments);\n\t}\n\n\t/**\n\t * @inheritdoc\n\t */\n\tadd(rowObj) {\n\t\treturn new Promise(async (resolve, reject) => {\n\t\t\tvar addRequest = (this.tx_store || this.def.getStore()).add(rowObj);\n\t\t\taddRequest.onsuccess = e => resolve(e.target.result);\n\t\t\taddRequest.onerror = e => {\n\t\t\t\tvar error = e.target.error;\n\t\t\t\tif (error.name === 'ConstraintError') {\n\t\t\t\t\treject(new DuplicateKeyViolationError(error.message));\n\t\t\t\t} else {\n\t\t\t\t\treject(error);\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t}\n\t\n\t/**\n\t * @inheritdoc\n\t */\n\tputAll(rowObj) {\n\t\tthis.tx_store = this.def.getStore();\n\t\treturn super.putAll(...arguments);\n\t}\n\n\t/**\n\t * @inheritdoc\n\t */\n\tput(rowObj) {\n\t\treturn new Promise(async (resolve, reject) => {\n\t\t\tvar putRequest = (this.tx_store || this.def.getStore()).put(rowObj);\n\t\t\tputRequest.onsuccess = e => resolve(e.target.result);\n\t\t\tputRequest.onerror = e => reject(e.target.error);\n\t\t});\n\t}\n\t\n\t/**\n\t * @inheritdoc\n\t */\n\tdeleteAll(primaryKey) {\n\t\tthis.tx_store = this.def.getStore();\n\t\treturn super.deleteAll(...arguments);\n\t}\n\n\t/**\n\t * @inheritdoc\n\t */\n\tdelete(primaryKey) {\n\t\tif (_isArray(primaryKey)) {\n\t\t\tif (primaryKey.length > 1) {\n\t\t\t\tthrow new Error('IDB does not support Composite Primary Keys');\n\t\t\t}\n\t\t\tprimaryKey = primaryKey[0];\n\t\t}\n\t\t// Now this is very important\n\t\tprimaryKey = _isNumeric(primaryKey) ? parseInt(primaryKey) : primaryKey;\n\t\treturn new Promise(async (resolve, reject) => {\n\t\t\tvar delRequest = (this.tx_store || this.def.getStore()).delete(primaryKey);\n\t\t\tdelRequest.onsuccess = e => resolve(primaryKey);\n\t\t\tdelRequest.onerror = e => reject(e.target.error);\n\t\t});\n\t}\n}", "\n\n/**\n * @imports\n */\nimport _isObject from '@webqit/util/js/isObject.js';\nimport _isFunction from '@webqit/util/js/isFunction.js';\nimport _arrFrom from '@webqit/util/arr/from.js';\nimport _each from '@webqit/util/obj/each.js';\nimport _Database from '../_Database.js';\nimport IDBStore from './IDBStore.js';\n\n/**\n * ---------------------------\n * IDBDatabase class\n * ---------------------------\n */\t\t\t\t\n\nexport default class IDBDatabase extends _Database {\n\t\n    /**\n     * @inheritdoc\n     */\n     async tables() {\n        return _arrFrom(this.def.objectStoreNames);\n     }\n\n    /**\n     * @inheritdoc\n     */\n    async table(tableName, params = {}) {\n        var getStore = _mode => {\n            var transaction = this.def.transaction([tableName], _mode || params.mode);\n            // We can worry not about onerror, onabort, oncomplete\n            return transaction.objectStore(tableName);\n        };\n\t\treturn new IDBStore(this, tableName, {\n            schema: await this.getTableSchema(tableName),\n            getStore,\n        }, params);\n    }\n\n    /**\n     * CREATE/ALTER/DROP\n     */\n\n    /**\n     * @inheritdoc\n     */\n    async createTable(tableName, tableSchema, params = {}) {\n        return this.driver.alterDatabase(this.name, database => {\n            if (_arrFrom(database.objectStoreNames).includes(tableName)) {\n                if (params.ifNotExists) {\n                    return;\n                }\n                throw new Error(`Store name \"${tableName}\" already exists!`);\n            }\n            var storeParams = {};\n            // ...with primary key\n            var primaryKeyColumn = Object.keys(tableSchema.columns).filter(name => tableSchema.columns[name].primaryKey)[0];\n            var autoIncrementColumn = Object.keys(tableSchema.columns).filter(name => tableSchema.columns[name].autoIncrement)[0];\n            if (primaryKeyColumn) {\n                storeParams.keyPath = primaryKeyColumn;\n                if (primaryKeyColumn === autoIncrementColumn) {\n                    storeParams.autoIncrement = true;\n                }\n            }\n            var store = database.createObjectStore(tableName, storeParams);\n            _each(this.diffSchema({}, tableSchema), (changeName, changeDef) => {\n                if (changeName === 'primaryKey') {\n                    return;\n                }\n                _each(changeDef.add, (prop, def) => {\n                    this.applyToStore[changeName](store, prop, def);\n                });\n            });\n            this.def.schema[tableName] = tableSchema;\n            return new IDBStore(this, tableName, {\n                schema: tableSchema,\n                getStore: () => store,\n            }, {});\n        });\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async alterTable(tableName, newTableSchemaOrCallback, params = {}) {\n\n        var tableSchema = await this.getTableSchema(tableName),\n            newTableSchema;\n        if (_isFunction(newTableSchemaOrCallback)) {\n            // Modify existing schema\n            newTableSchema = this.cloneSchema(tableSchema);\n            await newTableSchemaOrCallback(newTableSchema);\n        } else if (_isObject(callback)) {\n            newTableSchema = newTableSchemaOrCallback;\n        } else {\n            throw new Error('Table/store modification expects only an object (new schema) or a function (callback that recieves existing schema).')\n        }\n\n        return this.driver.alterDatabase(this.name, database => {\n            if (!_arrFrom(database.objectStoreNames).includes(tableName)) {\n                if (params.ifExists) {\n                    return;\n                }\n                throw new Error(`Store name \"${tableName}\" does not exist!`);\n            }\n\n            var transaction = database.transaction([tableName], 'readwrite');\n            var store = transaction.objectStore(tableName);\n            _each(this.diffSchema(tableSchema, newTableSchema), (changeName, changeDef) => {\n                if (changeName !== 'renamedColumns') {\n                    // \"primaryKey\", \"columns\", \"foreignKeys\", \"indexes\", \"jsonColumns\"\n                    _each(changeDef.add, (prop, def) => {\n                        this.applyToStore[changeName](store, prop, def, 'add');\n                    });\n                    _each(changeDef.alter, (prop, changes) => {\n                        this.applyToStore[changeName](store, prop, changes.current, 'alter');\n                    });\n                    _each(changeDef.drop, (prop, oldDef) => {\n                        this.applyToStore[changeName](store, prop, oldDef, 'drop');\n                    });\n                } else {\n                    // \"renamedColumns\" actually comes last from source...\n                    // and really should\n                    _each(changeDef, (oldName, newName) => {\n                        this.applyToStore[changeName](store, oldName, newName);\n                    });\n                }\n            });\n            this.def.schema[tableName] = newTableSchema;\n            return new IDBStore(this, tableName, {\n                schema: tableSchema,\n                getStore: () => store,\n            }, {});\n    \n        });\n    }\n\n    /**\n     * Drops table.\n     * \n     * @param String tableName\n     * @param Object params\n     * \n     * @return Bool\n     */\n    async dropTable(tableName, params = {}) {\n        return this.driver.alterDatabase(this.name, database => {\n            if (_arrFrom(database.objectStoreNames).includes(tableName)) {\n                if (params.ifExists) {\n                    return;\n                }\n                throw new Error(`Store name \"${tableName}\" does not exist!`);\n            }\n            delete this.def.schema[tableName];\n            database.deleteObjectStore(tableName);\n        });\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async getTableSchema(tableName) {\n        return this.def.schema[tableName];\n    }\n}\n\nIDBDatabase.prototype.applyToStore = {\n    primaryKey: (store, columnName, def, delta) => {},\n\n    columns: (store, columnName, def, delta) => {},\n\n    foreignKeys: (store, columnName, def, delta) => {},\n\n    indexes: (store, alias, def, delta) => {\n        if (delta === 'drop') {\n            store.deleteIndex(alias);\n            return;\n        }\n        if (delta === 'alter' && store.indexNames.contains(alias)) {\n            store.deleteIndex(alias);\n        }\n        store.createIndex(alias, def.keyPath, {unique: def.type === 'unique'});\n    },\n\n    jsonColumns: (store, alias, columnName, delta) => {},\n\n    renamedColumns: (store, columnName, newColumnName) => {\n        return 'ALTER COLUMN `' + columnName + '` RENAME TO `' + newColumnName + '`';\n    },\n};", "\n\n/**\n * @imports\n */\nimport _arrFrom from '@webqit/util/arr/from.js';\nimport _isNumeric from '@webqit/util/js/isNumeric.js';\nimport Driver from '../_Driver.js';\nimport IDBDatabase from './IDBDatabase.js';\n\n/**\n * ---------------------------\n * IDBDriver class\n * ---------------------------\n */\t\t\t\t\n\nexport default class IDBDriver extends Driver {\n\n    /**\n     * @inheritdoc\n\t */\n    constructor() {\n        super();\n        if (typeof indexedDB === 'undefined') {\n            throw new Error('IndexedDB is not in scope.');\n        }\n        this.indexedDB = indexedDB;\n        this.name = 'idb';\n    }\n\n\t/**\n     * Returns a list of databases.\n     * \n     * @param String databaseName\n     * @param Object params\n     * \n     * @return Array\n\t */\n    async databases(databaseName = null, params = {}) {\n        var databaseList = _arrFrom(await this.indexedDB.databases());\n        return this.matchDatabaseList(databaseList, databaseName, params);\n\t}\n\n\t/**\n     * Returns a database handle.\n     * \n     * @param String databaseName\n     * @param Object params\n     * \n     * @return SQLDatabase\n\t */\n\tasync database(databaseName = this.defaultDB, params = this.defaultDBParams) {\n\t\treturn new Promise(resolve => {\n\t\t\tvar dbOpenRequest = this.indexedDB.open(databaseName, params.version || 0);\n\t\t\tdbOpenRequest.onsuccess = e => {\n\t\t\t\tresolve(new IDBDatabase(this, databaseName, {\n                    database: e.target.result,\n                }, params));\n\t\t\t};\n\t\t});\n\t}\n\n    /**\n     * CREATE/ALTER/DROP\n     */\n\n    /**\n     * Creates.\n     * \n     * @param String databaseName\n     * @param Object params\n     * \n     * @return Object\n     */\n    async createDatabase(databaseName, params = this.defaultDBParams) {\n        if ((await this.databases(databaseName, params)).length) {\n            if (params.ifNotExists) {\n                return;\n            }\n            throw new Error(`Database ${databaseName} already exists.`);\n        }\n        return new Promise(resolve => {\n            var dbOpenRequest = this.indexedDB.open(databaseName, params.version);\n            // Define schema?\n            if ((schema || []).length) {\n                dbOpenRequest.onupgradeneeded = e => {\n                    //databaseCreateSchema(e.target.result, schema);\n                };\n            }\n            // Catch success\n            dbOpenRequest.onsuccess = e => {\n                // ----------------\n                this.setDatabaseSchema(databaseName, {})\n                // ----------------\n                this.setDefaultDB(databaseName, params).then(() => {\n                    resolve(new IDBDatabase(this, databaseName, {\n                        database: e.target.result,\n                        schema: this.getDatabaseSchema(databaseName)\n                    }, params));\n                });\n            };\n        });\n    }\n\n    /**\n     * Initiates \"alter DB\".\n     * \n     * @param String databaseName\n     * @param Object params\n     * @param Function callback\n     * \n     * @return Any\n\t */\n    async alterDatabase(databaseName, params, callback) {\n        if (!_isNumeric(params.version)) {\n            throw new Error(`Database version (params.version) must be numeric.`);\n        }\n        if (!(await this.databases(databaseName, params.version)).length) {\n            if (params.ifExists) {\n                return;\n            }\n            throw new Error(`Database ${databaseName} does not exist.`);\n        }\n        return new Promise(resolve => {\n            // Define schema\n            var upgradeneededCalled, callbackReturn;\n            var dbOpenRequest = this.indexedDB.open(databaseName, params.version);\n            dbOpenRequest.onupgradeneeded = e => {\n                upgradeneededCalled = true;\n                callbackReturn = callback(e.target.result);\n            };\n            // Catch success\n            dbOpenRequest.onsuccess = e => {\n                if (!upgradeneededCalled) {\n                    throw new Error(`Store name \"${databaseName}@${params.version}\" could not be accessed for modification!`);\n                }\n                resolve(callbackReturn);\n            };\n        });\n    }\n\n    /**\n     * Drops a database.\n     * \n     * @param String databaseName\n     * @param Object params\n     * \n     * @return Bool\n     */\n    async dropDatabase(databaseName, params = {}) {\n        if (!(await this.databases(databaseName, params)).length) {\n            if (params.ifExists) {\n                return;\n            }\n            throw new Error(`Database ${databaseName} does not exist.`);\n        }\n        return new Promise(resolve => {\n            var dbDeleteRequest = this.indexedDB.deleteDatabase(databaseName);\n            // Catch success\n            dbDeleteRequest.onsuccess = e => {\n                // ----------------\n                this.unsetDatabaseSchema(databaseName)\n                // ----------------\n                resolve(true);\n            };\n        });\n    }\n\n    /**\n     * ---------\n     * QUERY\n     * ---------\n     */\n\t \n\t/**\n     * @inheritdoc\n\t */\n\tasync query(query, vars = [], params = {}) {\n        params = {...params};\n        params.vars = vars;\n        params.dbDriver = this;\n        return ObjSQL.parse(query, null, params).eval(this);\n    }\n}", "\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isObject from '../js/isObject.js';\r\nimport _isNumeric from '../js/isNumeric.js';\r\n\r\n/**\r\n * Flattens a nested array to the given depth.\r\n *\r\n * @param array \tarr\r\n * @param int \t \tdepth\r\n * @param bool \t \twithObjects\r\n *\r\n * @return array\r\n */\r\nconst _flatten = function(arr, depth = 1, withObjects = true) {\r\n\tif (!_isNumeric(depth) || depth <= 0) {\r\n\t\treturn arr;\r\n\t};\r\n\tif (!_isArray(arr) && _isObject(arr) && withObjects) {\r\n\t\tarr = Object.values(arr);\r\n\t};\r\n\tif (!_isArray(arr)) {\r\n\t\treturn arr;\r\n\t};\r\n\treturn arr.reduce((acc, val) => _isArray(val) || (_isObject(val) && withObjects) \r\n\t\t? acc.concat(_flatten(!_isArray(val) ? Object.values(val) : val, depth - 1, withObjects)) \r\n\t\t: acc.concat(val), []);\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default _flatten;", "\r\n/**\r\n * Returns THE FIRST ENTRY OR A NUMBER OF ENTRIES counting forward from the begining.\r\n *\r\n * @param array \tarr\r\n * @param int\t \tamount\r\n *\r\n * @return mixed|array\r\n */\r\nexport default function(arr, amount = 1) {\r\n\tvar count = 0;\r\n\tarr.forEach(itm => {\r\n\t\tcount ++;\r\n\t});\r\n\tvar firsts = arr.slice(arr.length - count, amount);\r\n\treturn arguments.length > 1 ? firsts : firsts[0];\r\n};\r\n", "\r\n/**\r\n * @imports\r\n */\r\nimport _first from './first.js';\r\n\r\n/**\r\n * Returns THE LAST ENTRY OR A NUMBER OF ENTRIES counting forward to the end.\r\n *\r\n * @param array \tarr\r\n * @param int\t \tamount\r\n *\r\n * @return mixed|array\r\n */\r\nexport default function(arr, amount = 1) {\r\n\treturn arguments.length > 1\r\n\t\t? _first(arr.slice().reverse(), amount).reverse()\r\n\t\t: _first(arr.slice().reverse());\r\n};\r\n", "\r\n/**\r\n * @imports\r\n */\r\nimport _isObject from './isObject.js';\r\n\r\n/**\r\n * Tells if an object is direct instance of Object.prototype.\r\n * Quite useful in differentiating native objects and class instances from plain objects ({}).\r\n *\r\n * @param object \tobj\r\n *\r\n * @return bool\r\n */\r\nexport default function(obj) {\r\n\treturn _isObject(obj) && Object.getPrototypeOf(obj) === Object.prototype;\r\n};\r\n", "\r\n/**\r\n * Tells if val is undefined or is of type \"boolean\".\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn val === true || val === false;\r\n};\r\n", "\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isObject from '../js/isObject.js';\r\nimport _isTypeObject from '../js/isTypeObject.js';\r\nimport _isBoolean from '../js/isBoolean.js';\r\nimport _each from './each.js';\r\n\r\n/**\r\n * Gets the match(es) between (members of) two values;\r\n * assertion optionally custom.\r\n *\r\n * @param mixed \t\t\tob1\r\n * @param mixed \t\t\tobj2\r\n * @param string|function\tassertion\r\n * @param bool\t\t\t\tnetComparison\r\n * @param bool\t\t\t\tcontrast\r\n * @param bool\t\t\t\treturnOnFirstFalse\r\n *\r\n * @return bool|array|object\r\n */\r\nexport default function(obj1, obj2, assertion = true, netComparison = true, contrast = false, returnOnFirstFalse = false) {\r\n\tif (_isArray(obj1) && _isArray(obj2)) {\r\n\t\tvar result = [];\r\n\t\tvar contn = true;\r\n\t\tobj1.forEach(v1 => {\r\n\t\t\tif (!contn) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar testPass = false;\r\n\t\t\t_each(obj2, (k, v2) => {\r\n\t\t\t\tif (!testPass || (netComparison && _isTypeObject(v1))) {\r\n\t\t\t\t\ttestPass = assertion(v1, v2);\r\n\t\t\t\t\tif ((_isArray(testPass) && !testPass.length) || (_isObject(testPass) && !Object.keys(testPass).length)) {\r\n\t\t\t\t\t\ttestPass = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (_isTypeObject(testPass) && netComparison) {\r\n\t\t\t\t\t\t// Further recursions should use this testPass as v1\r\n\t\t\t\t\t\tv1 = testPass;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif (_isTypeObject(testPass)) {\r\n\t\t\t\tresult.push(netComparison ? testPass : v1);\r\n\t\t\t} else if (!_isBoolean(testPass)) {\r\n\t\t\t\tresult.push(testPass);\r\n\t\t\t} else if ((contrast && !testPass) || (!contrast && testPass)) {\r\n\t\t\t\tresult.push(v1);\r\n\t\t\t} else if (returnOnFirstFalse) {\r\n\t\t\t\tcontn = false;\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn result;\r\n\t}\r\n\t\r\n\tif (_isObject(obj1) && _isObject(obj2)) {\r\n\t\tvar result = {};\r\n\t\tvar contn = true;\r\n\t\tObject.keys(obj1).forEach(k => {\r\n\t\t\tif (!contn) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar testPass = assertion(obj1[k], obj2[k]);\r\n\t\t\tif ((_isArray(testPass) && !testPass.length) || (_isObject(testPass) && !Object.keys(testPass).length)) {\r\n\t\t\t\ttestPass = false;\r\n\t\t\t}\r\n\t\t\tif (_isTypeObject(testPass)) {\r\n\t\t\t\tresult[k] = netComparison ? testPass : obj1[k];\r\n\t\t\t} else if (!_isBoolean(testPass)) {\r\n\t\t\t\tresult[k] = testPass;\r\n\t\t\t} else if ((contrast && !testPass) || (!contrast && testPass)) {\r\n\t\t\t\tresult[k] = obj1[k];\r\n\t\t\t} else if (returnOnFirstFalse) {\r\n\t\t\t\tcontn = false;\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn result;\r\n\t}\r\n};\r\n", "\r\n/**\r\n * @imports\r\n */\r\nimport _isNumber from '../js/isNumber.js';\r\nimport _isArray from '../js/isArray.js';\r\nimport _isObject from '../js/isObject.js';\r\nimport _isTypeObject from '../js/isTypeObject.js';\r\nimport _isFunction from '../js/isFunction.js';\r\nimport _isPlainObject from '../js/isPlainObject.js';\r\nimport _compareCallback from './compareCallback.js';\r\n\r\n/**\r\n * Asserts (members of) the first value against (members of) subsequent values.\r\n * Assertion could be TRUE, FALSE, or custom.\r\n *\r\n * @param mixed \t\t\tobj1\r\n * @param mixed \t\t\tobj2\r\n * @param bool|function\t\tassertion\r\n * @param int\t\t\t\tdepth\r\n *\r\n * @return bool\r\n */\r\nconst _even = function(obj1, obj2, assertion = true, depth = 1) {\r\n\tif (_isArray(obj1) && _isArray(obj2) && obj1.length !== obj2.length) {\r\n\t\treturn !assertion;\r\n\t}\r\n\tif (_isObject(obj1) && _isObject(obj2)) {\r\n\t\tvar obj1Keys = Object.keys(obj1);\r\n\t\tvar obj2Keys = Object.keys(obj2);\r\n\t\tif (!obj1Keys.length && !obj2Keys.length) {\r\n\t\t\t// Objects that won't show keys must be compared by instance\r\n\t\t\t// Many native objects won't. So we can't judge by keys alone.\r\n\t\t\treturn _isPlainObject(obj1) && _isPlainObject(obj2) \r\n\t\t\t\t? assertion\r\n\t\t\t\t: (obj1 === obj2) === assertion;\r\n\t\t}\r\n\t\tif (!_even(obj1Keys, obj2Keys)) {\r\n\t\t\treturn !assertion;\r\n\t\t}\r\n\t}\r\n\tif (depth > 0 && ((_isArray(obj1) && _isArray(obj2)) || (_isObject(obj1) && _isObject(obj2)))) {\r\n\t\tvar result = _compareCallback(obj1, obj2, (v1, v2) => {\r\n\t\t\treturn _even(v1, v2, assertion, depth - 1);\r\n\t\t}, false/*netComparison*/, false/*contrast*/, true/*returnOnFirstFalse*/);\r\n\t\treturn _isArray(result) \r\n\t\t\t? result.length === obj1.length && result.length === obj2.length \r\n\t\t\t: (_isObject(result) && _isObject(obj1) \r\n\t\t\t\t? Object.keys(result).length === Object.keys(obj1).length && Object.keys(result).length ===  Object.keys(obj2).length \r\n\t\t\t\t: result);\r\n\t}\r\n\treturn _isFunction(assertion) ? assertion(obj1, obj2) : (\r\n\t\t_isNumber(obj1) && _isNumber(obj2) && isNaN(obj1) && isNaN(obj2) \r\n\t\t\t? assertion \r\n\t\t\t: (obj1 === obj2) === assertion\r\n\t);\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default _even;\r\n", "\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isFunction from '../js/isFunction.js';\r\nimport _mergeCallback from './mergeCallback.js';\r\n\r\n/**\r\n * Copies only properties of an object.\r\n *\r\n * @param object\t \tobj\r\n * @param array\t\t \tonly\r\n * @param array\t\t \texcept\r\n *\r\n * @return object\r\n */\r\nexport default function(obj, filter = []) {\r\n\treturn _mergeCallback([{}, obj], (key, obj1, obj2) => {\r\n\t\tif (!_isFunction(obj2[key])) {\r\n\t\t\treturn _isFunction(filter) ? filter(key) \r\n\t\t\t\t: (_isArray(filter) && filter.length ? filter.indexOf(key) > -1 : true);\r\n\t\t}\r\n\t}, false/*deepProps*/, false/*isReplace*/, false/*withSymbols*/);\r\n};\r\n", "\r\n/**\r\n * @imports\r\n */\r\nimport _isString from '../js/isString.js';\r\nimport _isUndefined from '../js/isUndefined.js';\r\nimport _isFunction from '../js/isFunction.js';\r\nimport _arrFrom from '../arr/from.js';\r\nimport _flatten from '../arr/flatten.js';\r\nimport _first from '../arr/first.js';\r\nimport _last from '../arr/last.js';\r\nimport _merge from '../obj/merge.js';\r\nimport _even from '../obj/even.js';\r\nimport _copyPlain from '../obj/copyPlain.js';\r\n\r\n/**\r\n * --------------------------\r\n * TOKENIZER\r\n * --------------------------\r\n */\r\n\r\nexport default class Lexer {\r\n\r\n\t/**\r\n\t * Factory method.\r\n\t *\r\n\t * Handles caching.\r\n\t *\r\n\t * @see constructor()\r\n\t */\r\n\tstatic lex(str, delims, options = {}) {\r\n\t\tif (!_isString(str = str + '')) {\r\n\t\t\tthrow new Error('Argument1 must be a string!');\r\n\t\t}\r\n\t\tvar copyResult = result => {\r\n\t\t\treturn {\r\n\t\t\t\tdelims: result.delims.slice(),\r\n\t\t\t\toptions: _copyPlain(result.options),\r\n\t\t\t\tnesting: result.nesting.slice(),\r\n\t\t\t\tmaxDepth: result.maxDepth,\r\n\t\t\t\tcomments: result.comments.slice(),\r\n\t\t\t\ttokens: result.tokens.slice(),\r\n\t\t\t\tmatches: result.matches.slice(),\r\n\t\t\t\tmatchesi: _copyPlain(result.matchesi),\r\n\t\t\t};\r\n\t\t};\r\n\t\t// ASK CACHE ---------------------------\r\n\t\tif (Lexer.$cache[str] && options.cache !== false) {\r\n\t\t\tfor (var i = 0; i < Lexer.$cache[str].length; i ++) {\r\n\t\t\t\tvar cached = Lexer.$cache[str][i];\r\n\t\t\t\tif (_even(cached.delims, delims)) {\r\n\t\t\t\t\treturn copyResult(cached);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t// FRESH PARSE\t -------------------------------\r\n\t\tvar instance = new Lexer(str, options);\r\n\t\tvar result = instance.lex(delims);\r\n\t\t// SAVE TO CACHE -------------------------------\r\n\t\tif (options.cache !== false) {\r\n\t\t\tLexer.$cache[str] = Lexer.$cache[str] || [];\r\n\t\t\tLexer.$cache[str].push(result);\r\n\t\t}\r\n\t\treturn copyResult(result);\r\n\t\t\r\n\t}\r\n\r\n\t/**\r\n\t * Factory method for .split().\r\n\t *\r\n\t * Handles caching.\r\n\t *\r\n\t * @see constructor()\r\n\t */\r\n\tstatic split(str, delims, options) {\r\n\t\treturn Lexer.lex(str, delims, options).tokens;\r\n\t}\r\n\r\n\t/**\r\n\t * Factory method for .match().\r\n\t *\r\n\t * Handles caching.\r\n\t *\r\n\t * @see constructor()\r\n\t */\r\n\tstatic match(str, delims, options) {\r\n\t\treturn Lexer.lex(str, delims, options).matches;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a lexer instance on a string with the given options.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions:\r\n\t * @param string \t\tblocks\t\t\t\tThe strings that begin and end a nested structure\r\n\t * @param number \t\tlimit\t\t\t\tMax results to return\r\n\t * @param string \t\tbackreference\t\tA character like (\\) that prefixes non-delim characters\r\n\t *\r\n\t * @return array\r\n\t */\r\n\tconstructor(str, options) {\r\n\t\tif (!_isString(str)) {\r\n\t\t\tthrow new Error('Lexer requires the first argument to be a string.');\r\n\t\t}\r\n\t\tthis.$str = str;\r\n\t\tthis.$options = options || {};\r\n\t\tif (!this.$options.blocks) {\r\n\t\t\tthis.$options.blocks = Lexer.$blocks;\r\n\t\t}\r\n\t\tif (!this.$options.quotes) {\r\n\t\t\tthis.$options.quotes = Lexer.$quotes;\r\n\t\t}\r\n\t\tif (!this.$options.comments) {\r\n\t\t\tthis.$options.comments = Lexer.$comments;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parses the instance string on the given delimeters.\r\n\t *\r\n\t * This method supports static calling,\r\n\t * in which case a string is required as the first argument.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions\r\n\t *\r\n\t * @return object\r\n\t */\r\n\tlex(delims, options) {\r\n\t\tvar runtime = {\r\n\t\t\tdelims: _arrFrom(delims),\r\n\t\t\toptions: _merge(true, {}, this.$options, options || {}),\r\n\t\t\tnesting: [],\r\n\t\t\tmaxDepth: 0,\r\n\t\t\tcomments: [],\r\n\t\t\ttokens: [],\r\n\t\t\tmatches: [],\r\n\t\t\tmatchesi: {},\r\n\t\t};\r\n\t\t// Iterate over each character, keep track of current row and column (of the returned array)\r\n\t\tvar cursor = 0;\r\n\t\twhile(typeof cursor === 'number') {\r\n\t\t\tcursor = this._evalCharsAt(runtime, cursor);\r\n\t\t}\r\n\t\tif (runtime.nesting.length) {\r\n\t\t\tthrow new Error('Error parsing the string: ' + this.$str + '. Unterminated blocks: ' + _flatten(runtime.nesting).join(', ') + '');\r\n\t\t}\r\n\t\t// RETURN NEW ----------------------------------\r\n\t\treturn runtime;\r\n\t}\r\n\r\n\t/**\r\n\t * Expr helper: evaluates and handles the character on the current cursor.\r\n\t * Advances the cursor.\r\n\t *\r\n\t * @param object \truntime\r\n\t * @param int\t\ti\r\n\t *\r\n\t * @return void\r\n\t */\r\n\t_evalCharsAt(runtime, i) {\r\n\t\tif (i >= this.$str.length) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar charWidth = 1;\r\n\t\tvar commentTest = {}, quoteTest = {}, nestingTest = {};\r\n\t\t// Quotes inside comments must be ignored\r\n\t\tif (!runtime.openComment) {\r\n\t\t\tquoteTest = this._testQuotes(runtime, i);\r\n\t\t}\r\n\t\t// Comments inside quotes must be ignored\r\n\t\tif (!runtime.openQuote) {\r\n\t\t\tcommentTest = this._testComments(runtime, i);\r\n\t\t}\r\n\t\t// Save comments\r\n\t\tif (runtime.openComment || commentTest.ending) {\r\n\t\t\t// Save only outer comments\r\n\t\t\tif (!runtime.nesting.length && !nestingTest.ending) {\r\n\t\t\t\tvar chars = commentTest.starting || commentTest.ending || this.$str[i];\r\n\t\t\t\tcharWidth = chars.length;\r\n\t\t\t\tthis._push(runtime, chars, 'comments', commentTest.starting);\r\n\t\t\t} else {\r\n\t\t\t\tthis._push(runtime, this.$str[i]);\r\n\t\t\t}\r\n\t\t} else if (runtime.openQuote || quoteTest.ending) {\r\n\t\t\t// Yes add quotes\r\n\t\t\tthis._push(runtime, this.$str[i]);\r\n\t\t} else if (runtime.options.limit && runtime.matches.length === runtime.options.limit) {\r\n\t\t\tthis._push(runtime, this.$str[i]);\r\n\t\t\treturn i + 1;\r\n\t\t} else {\r\n\t\t\t// Nesting tags inside comments and quotes have been ignored\r\n\t\t\tnestingTest = this._testNesting(runtime, i);\r\n\t\t\t// ---------------------\r\n\t\t\t// STOP ON THIS CHARACTER...?\r\n\t\t\t// ---------------------\r\n\t\t\tvar nestingTest = this._testNesting(runtime, i);\r\n\t\t\t// STOP CHAR(S)? at top level?\r\n\t\t\tvar stopChar = this._testChars(runtime.options.stopChars || [], runtime, i);\r\n\t\t\tif (!runtime.nesting.length && stopChar !== false) {\r\n\t\t\t\truntime.options.stopChar = stopChar;\r\n\t\t\t\truntime.options.stopCharForward = this.$str.substr(i);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t// ---------------------\r\n\t\t\t// Match and split now...\r\n\t\t\t// ---------------------\r\n\t\t\tif (!runtime.delims.length) {\r\n\t\t\t\t// BLOCK-BASED SPLITTING...\r\n\t\t\t\tif (runtime.nesting.length === 2 && nestingTest.starting) {\r\n\t\t\t\t\truntime.matches.push(null);\r\n\t\t\t\t\tthis._push(runtime, nestingTest.starting);\r\n\t\t\t\t\tcharWidth = nestingTest.starting.length;\r\n\t\t\t\t} else if (!runtime.nesting.length && nestingTest.ending) {\r\n\t\t\t\t\tthis._push(runtime, nestingTest.ending);\r\n\t\t\t\t\tcharWidth = nestingTest.ending.length;\r\n\t\t\t\t\truntime.matches.push(null);\r\n\t\t\t\t} else/*no-nesting flag*/ {\r\n\t\t\t\t\tthis._push(runtime, this.$str[i]);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// ---------------------\r\n\t\t\t\t// DELIMS-BASED SPLITTING\r\n\t\t\t\t// ---------------------\r\n\t\t\t\tif (!runtime.nesting.length && !nestingTest.ending) {\r\n\t\t\t\t\t// In case the chars at index 0 is a delim,\r\n\t\t\t\t\t// the resulting split should first have an empty string, instead of undefined\r\n\t\t\t\t\tthis._push(runtime, '');\r\n\t\t\t\t\tvar matchedDelim = this._testChars(runtime.delims, runtime, i);\r\n\t\t\t\t\tif (matchedDelim !== false) {\r\n\t\t\t\t\t\truntime.matches.push(matchedDelim);\r\n\t\t\t\t\t\truntime.matchesi[i] = matchedDelim;\r\n\t\t\t\t\t\tcharWidth = matchedDelim.length || 1;\r\n\t\t\t\t\t\tif (!runtime.options.preserveDelims) {\r\n\t\t\t\t\t\t\t// The current character is a delimiter...\r\n\t\t\t\t\t\t\t// and should not get to appending to the split series down the line\r\n\t\t\t\t\t\t\tvar nextIndex = i + (matchedDelim.length || 1);\r\n\t\t\t\t\t\t\tif (nextIndex === this.$str.length) {\r\n\t\t\t\t\t\t\t\t// In case the chars at last index is a delim,\r\n\t\t\t\t\t\t\t\t// the resulting split should last have an empty string\r\n\t\t\t\t\t\t\t\tthis._push(runtime, '');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn nextIndex;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._push(runtime, matchedDelim || this.$str[i]);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar chars = nestingTest.starting || nestingTest.ending || this.$str[i];\r\n\t\t\t\t\tcharWidth = chars.length;\r\n\t\t\t\t\tthis._push(runtime, chars);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn i + charWidth;\r\n\t}\r\n\r\n\t/**\r\n\t * Expr helper: tests for a quote start/end character on the current cursor.\r\n\t *\r\n\t * @param object\truntime\r\n\t * @param int\t\ti\r\n\t *\r\n\t * @return object\r\n\t */\r\n\t_testQuotes(runtime, i) {\r\n\t\tvar result = {};\r\n\t\t(runtime.options.quotes || []).forEach(quote => {\r\n\t\t\tif (this.$str.substr(i, 1) === quote) {\r\n\t\t\t\tif (!runtime.openQuote) {\r\n\t\t\t\t\truntime.openQuote = quote;\r\n\t\t\t\t\tresult.starting = quote;\r\n\t\t\t\t} else if (quote === runtime.openQuote) {\r\n\t\t\t\t\truntime.openQuote = false;\r\n\t\t\t\t\tresult.ending = quote;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * Expr helper: tests for a comment start/end character on the current cursor.\r\n\t *\r\n\t * @param object\truntime\r\n\t * @param int\t\ti\r\n\t *\r\n\t * @return object\r\n\t */\r\n\t_testComments(runtime, i) {\r\n\t\tvar result = {};\r\n\t\t(runtime.options.comments || []).forEach(block => {\r\n\t\t\tif (!runtime.openComment) {\r\n\t\t\t\tvar starting = _first(block);\r\n\t\t\t\tif (this.$str.substr(i).startsWith(starting)) {\r\n\t\t\t\t\truntime.openComment = block;\r\n\t\t\t\t\tresult.starting = starting;\r\n\t\t\t\t}\r\n\t\t\t} else if (_last(block) === _last(runtime.openComment)) {\r\n\t\t\t\tvar ending = _last(block);\r\n\t\t\t\tif (this.$str.substr(i).startsWith(ending)) {\r\n\t\t\t\t\truntime.openComment = false;\r\n\t\t\t\t\tresult.ending = ending;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * Expr helper: tests for a nesting start/end character on the current cursor.\r\n\t *\r\n\t * @param object\truntime\r\n\t * @param int\t\ti\r\n\t *\r\n\t * @return object\r\n\t */\r\n\t_testNesting(runtime, i) {\r\n\t\tvar result = {};\r\n\t\t(runtime.options.blocks || []).forEach(block => {\r\n\t\t\tvar starting = _first(block);\r\n\t\t\tif (this.$str.substr(i).startsWith(starting)) {\r\n\t\t\t\truntime.nesting = runtime.nesting.concat([block]);\r\n\t\t\t\tresult.starting = starting;\r\n\t\t\t} else if (runtime.nesting.length && _last(block) === _last(_last(runtime.nesting))) {\r\n\t\t\t\tvar ending = _last(block);\r\n\t\t\t\tif (this.$str.substr(i).startsWith(ending)) {\r\n\t\t\t\t\truntime.nesting = runtime.nesting.slice(0, -1);\r\n\t\t\t\t\tresult.ending = ending;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\truntime.maxDepth = Math.max(runtime.maxDepth, runtime.nesting.length);\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * Expr helper: tests for a delimiter or stop character on the current cursor.\r\n\t *\r\n\t * @param array\t\ttestList\r\n\t * @param object \truntime\r\n\t * @param int\t\ti\r\n\t *\r\n\t * @return mixed\r\n\t */\r\n\t_testChars(testList, runtime, i) {\r\n\t\tfor (var k = 0; k < testList.length; k ++) {\r\n\t\t\tvar test = testList[k];\r\n\t\t\tif (_isFunction(test)) {\r\n\t\t\t\tvar ret = test(this.$str.substr(0, i), this.$str.substr(i));\r\n\t\t\t\tif (ret !== false) {\r\n\t\t\t\t\treturn ret;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (runtime.options.useRegex) {\r\n\t\t\t\tvar m = this.$str.substr(i).match(new RegExp('^' + test, runtime.options.useRegex !== true ? runtime.options.useRegex : ''));\r\n\t\t\t\tif (m) {\r\n\t\t\t\t\treturn m[0];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif ((!runtime.options.ci && this.$str.substr(i, test.length) === test)\r\n\t\t\t|| (runtime.options.ci && this.$str.substr(i, test.length).toLowerCase() === test.toLowerCase())) {\r\n\t\t\t\treturn test;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Expr helper: pushes a character or set of characters into the current split series.\r\n\t *\r\n\t * @param object \truntime\r\n\t * @param string\tchars\r\n\t * @param string\ttarget\r\n\t * @param bool\t\tisNewSeries\r\n\t *\r\n\t * @return void\r\n\t */\r\n\t_push(runtime, chars, target = 'tokens', isNewSeries = false) {\r\n\t\tvar splitSeries = runtime.matches.length;\r\n\t\tif (_isUndefined(runtime.tokens[splitSeries])) {\r\n\t\t\truntime.tokens[splitSeries] = '';\r\n\t\t}\r\n\r\n\t\tif (target === 'comments') {\r\n\t\t\tif (!runtime.tokens[splitSeries].comments) {\r\n\t\t\t\truntime.tokens[splitSeries] = new String(runtime.tokens[splitSeries]);\r\n\t\t\t\truntime.tokens[splitSeries].comments = [];\r\n\t\t\t}\r\n\t\t\tvar splitSeries2 = runtime.tokens[splitSeries].comments.length - (!runtime.tokens[splitSeries].comments.length || isNewSeries ? 0 : 1);\r\n\t\t\truntime.tokens[splitSeries].comments[splitSeries2] = (runtime.tokens[splitSeries].comments[splitSeries2] || '') + chars;\r\n\t\t} else {\r\n\t\t\tvar comments = runtime.tokens[splitSeries].comments;\r\n\t\t\truntime.tokens[splitSeries] = runtime.tokens[splitSeries] + chars;\r\n\t\t\t//runtime.tokens[splitSeries].comments = comments;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Splits the instance string on the given delimeters and returns the tokens.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions\r\n\t *\r\n\t * @return array\r\n\t */\r\n\tsplit(str, delims, options) {\r\n\t\treturn this.lex(delims, options).tokens;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Splits the instance string on the given delimeters and returns the matches.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions:\r\n\t *\r\n\t * @return array\r\n\t */\r\n\tmatch(str, delims, options) {\r\n\t\treturn this.lex(delims, options).matches;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Parses the instance string on the given delimeters using regex.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions\r\n\t *\r\n\t * @return object\r\n\t */\r\n\tregParse(delims, options) {\r\n\t\treturn this.lex(delims, _merge({useRegex: true}, options || {}));\r\n\t}\r\n\t\r\n\t/**\r\n\t * Splits the instance string on the given delimeters using regex; returns the tokens.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions\r\n\t *\r\n\t * @return array\r\n\t */\r\n\tregSplit(delims, options) {\r\n\t\treturn this.regParse(delims, options).tokens;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Matches the instance string on the given delimeters using regex; returns the matches.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions\r\n\t *\r\n\t * @return array\r\n\t */\r\n\tregMatch(delims, options) {\r\n\t\treturn this.regParse(delims, options).matches;\r\n\t}\r\n};\r\n\r\n/**\r\n * @var array\r\n */\r\nLexer.$blocks = [['(', ')'], ['[', ']'], ['{', '}'],];\r\n\r\n/**\r\n * @var array\r\n */\r\nLexer.$quotes = ['\"', \"'\", '`',];\r\n\r\n/**\r\n * @var array\r\n */\r\nLexer.$comments = [['/*', '*/'], ['//', \"\\n\"],];\r\n\r\n/**\r\n * @var object\r\n */\r\nLexer.$cache = {};", "\r\n/**\r\n * @imports\r\n */\r\nimport _isObject from '@webqit/util/js/isObject.js';\r\nimport _even from '@webqit/util/obj/even.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ExprInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class {\r\n\t\r\n\t/**\r\n\t * Compares the current instance with another object.\r\n\t *\r\n\t * @param object Expr\r\n\t *\r\n\t * @return bool\r\n\t */\r\n\teven(Expr) {\r\n\t\tif (_isObject(Expr) && Expr.jsenType === this.jsenType) {\r\n\t\t\treturn _even(Expr, this);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Inherits properties from a super Expr.\r\n\t *\r\n\t * @param ExprInterface Super\r\n\t *\r\n\t * @return this\r\n\t */\r\n\tinherit(Super) {\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Adds comments to the instance.\r\n\t *\r\n\t * @param string\t comments\r\n\t *\r\n\t * @return this\r\n\t */\r\n\twithComments(comments) {\r\n\t\tif (!this.meta) {\r\n\t\t\tthis.meta = {};\r\n\t\t}\r\n\t\tthis.meta.comments = comments;\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Adds variables to the instance.\r\n\t *\r\n\t * @param array\t\t vars\r\n\t *\r\n\t * @return this\r\n\t */\r\n\twithVars(vars) {\r\n\t\tif (!this.meta) {\r\n\t\t\tthis.meta = {};\r\n\t\t}\r\n\t\tthis.meta.vars = vars;\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Evaluates the expression instance for a result,\r\n\t * optionally in the context of an object.\r\n\t *\r\n\t * @param object context\r\n\t *\r\n\t * @return mixed\r\n\t */\r\n\t//eval(context = null, params = {})\r\n\t\r\n\t/**\r\n\t * SAttempts to parse a string into the class instance.\r\n\t *\r\n\t * @param string expr\r\n\t * @param object params\r\n\t *\r\n\t * @return ExprInterface\r\n\t */\r\n\t//static parse(expr, params = {})\r\n};\r\n", "\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ReferenceInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'Reference'; },\r\n});\r\nexport default Interface;\r\n", "\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * CallInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'CallExpression'; },\r\n});\r\nexport default Interface;\r\n", "\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from './ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * IndependentScopeInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class extends ExprInterface {};\r\n", "/**\r\n * SyntaxError\r\n */\r\nexport default class extends Error {\r\n    constructor(...args) {\r\n        super(...args);\r\n        this.name = 'Syntax Error';\r\n    }\r\n};", "\r\n/**\r\n * @imports\r\n */\r\nimport _merge from '@webqit/util/obj/merge.js';\r\nimport _isEmpty from '@webqit/util/js/isEmpty.js';\r\nimport _remove from '@webqit/util/arr/remove.js';\r\nimport _isArray from '@webqit/util/js/isArray.js';\r\nimport ReferenceInterface from './grammar/ReferenceInterface.js';\r\nimport CallInterface from './grammar/CallInterface.js';\r\nimport IndependentExprInterface from './IndependentExprInterface.js';\r\nimport SyntaxError from './SyntaxError.js';\r\n\r\n/**\r\n * ---------------------------\r\n * BaseParser class\r\n * ---------------------------\r\n */\t\t\t\t\r\nconst cache = {};\r\nexport default class BaseParser {\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, grammar, params = {}) {\r\n\t\tif (expr.length) {\r\n\t\t\tif (cache[expr] && !grammar && params.allowCache !== false) {\r\n\t\t\t\tvar _parsed;\r\n\t\t\t\tif (_parsed = this.parseOne(expr, cache[expr], params)) {\r\n\t\t\t\t\treturn _parsed;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// -----------------------------\r\n\t\t\tvar _grammar = Object.values(grammar || this.grammar);\r\n\t\t\tfor (var i = 0; i < _grammar.length; i ++) {\r\n\t\t\t\tvar parsed = this.parseOne(expr, _grammar[i], params);\r\n\t\t\t\tif (parsed) {\r\n\t\t\t\t\tif (!grammar && params.allowCache !== false) {\r\n\t\t\t\t\t\tcache[expr] = _grammar[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn parsed;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// -----------------------------\r\n\t\t\tif (params.assert === false) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthrow new SyntaxError(expr);\r\n\t\t}\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\r\n\tstatic parseOne(expr, Expr, params = {}) {\r\n\t\t// From this point forward, all vars is within current scope\r\n\t\tvar meta = createMeta();\r\n\t\tvar parsed = Expr.parse(expr, (_expr, _grammar, _params = {}) => {\r\n\t\t\tvar subStmt = this.parse(_expr, _grammar, _params ? _merge({}, params, _params) : params);\r\n\t\t\tif (subStmt instanceof ReferenceInterface) {\r\n\t\t\t\tvar hasCallHead, _context = subStmt;\r\n\t\t\t\twhile(_context = _context.context) {\r\n\t\t\t\t\tif (_context instanceof CallInterface) {\r\n\t\t\t\t\t\thasCallHead = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tsubStmt.role = _params.role;\r\n\t\t\t\tif (!hasCallHead && _params.role !== 'CONTEXT') {\r\n\t\t\t\t\tvar type = _params.role === 'ASSIGNMENT_SPECIFIER' ? 'writes' \r\n\t\t\t\t\t\t: (_params.role === 'DELETION_SPECIFIER' ? 'deletes' \r\n\t\t\t\t\t\t\t: (_params.role === 'CALL_SPECIFIER' ? '_calls' : 'reads'));\r\n\t\t\t\t\tmeta[type].push(subStmt);\r\n\t\t\t\t}\r\n\t\t\t} else if (subStmt instanceof CallInterface) {\r\n\t\t\t\tmeta.calls.push(subStmt);\r\n\t\t\t}\r\n\t\t\tif (subStmt) {\r\n\t\t\t\tObject.keys(subStmt.meta).forEach(type => {\r\n\t\t\t\t\tif (type === 'deep') return;\r\n\t\t\t\t\tsubStmt.meta[type].forEach(_var => meta[type].push(_var));\r\n\t\t\t\t});\r\n\t\t\t\tObject.keys(subStmt.meta.deep).forEach(type => {\r\n\t\t\t\t\tif (!meta.deep[type]) {\r\n\t\t\t\t\t\tmeta.deep[type] = [];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tsubStmt.meta.deep[type].forEach(_var => meta.deep[type].push(_var));\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn subStmt;\r\n\t\t}, params);\r\n\r\n\t\t// Add/remove vars to scope\r\n\t\tif (parsed) {\r\n\t\t\tif (parsed instanceof IndependentExprInterface) {\r\n\t\t\t\tparsed.meta = createMeta();\r\n\t\t\t} else {\r\n\t\t\t\tparsed.meta = meta;\r\n\t\t\t}\r\n\t\t\tif (parsed instanceof CallInterface) {\r\n\t\t\t\tif (parsed.reference.context && !(parsed.reference.context instanceof CallInterface)) {\r\n\t\t\t\t\tparsed.meta.reads.push(parsed.reference.context);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (_isArray(params.explain)) {\r\n\t\t\t\tparams.explain.push(expr + ' >>------------->> ' + parsed.jsenType);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn parsed;\r\n\t}\r\n};\r\n\r\nfunction createMeta() {\r\n\treturn {reads: [], writes: [], deletes: [], calls: [], _calls: [], deep: {},};\r\n};", "\n/**\n * @imports\n */\nimport Lexer from '@webqit/util/str/Lexer.js';\nimport BaseParser from './BaseParser.js';\n\n/**\n * ---------------------------\n * Mql (base) class\n *\n * TODO:\n *\t\tSELECT *\n *\t\tSELECT ... FROM (SELECT ...)\n *\t\tPREPARED STATEMENTS PLACEHOLDERS\n * ---------------------------\n */\t\t\t\t\n\nexport default class Parser extends BaseParser {\n\t \n\t/**\n\t * @inheritdoc\n\t */\n\tstatic parse(expr, Parsers, params = {}) {\n\t\tif (!('mutates' in params)) {\n\t\t\tparams.mutates = true;\n\t\t}\n\t\tif (!params.placeholdersTransformed && expr.indexOf('?') > 0) {\n\t\t\texpr = Lexer.split(expr, ['?'], {blocks:[]}).reduce((expr, t, i) => expr ? expr + '?' + (i - 1) + t : t, null);\n\t\t\tparams.placeholdersTransformed = true;\n\t\t}\n\t\tif (!params.opts) {\n\t\t\tparams.opts = {};\n\t\t}\n\t\tif (!('ci' in params.opts)) {\n\t\t\tparams.opts.ci = true;\n\t\t}\n\t\tparams.allowCache = false;\n\t\treturn super.parse(expr, Parsers, params);\n\t}\n}", "\r\n/**\r\n * Return the remainder of a string after a given value.\r\n *\r\n * @param  string  subject\r\n * @param  string  search\r\n * @param  bool\t   afterLast\r\n *\r\n * @return string\r\n */\r\nexport default function(subject, search, afterLast = false) {\r\n\tif (search == '') {\r\n\t\treturn subject;\r\n\t}\r\n\tvar pos = afterLast ? subject.lastIndexOf(search) : subject.indexOf(search);\r\n\tif (pos === -1) {\r\n\t\treturn '';\r\n\t}\r\n\treturn subject.substr(pos + search.length);\r\n};\r\n", "\r\n/**\r\n * Return the part of a string before a given value.\r\n *\r\n * @param  string  subject\r\n * @param  string  search\r\n * @param  bool\t   beforeLast\r\n *\r\n * @return string\r\n */\r\nexport default function(subject, search, beforeLast = false) {\r\n\tif (search == '') {\r\n\t\treturn subject;\r\n\t}\r\n\tvar pos = beforeLast ? subject.lastIndexOf(search) : subject.indexOf(search);\r\n\tif (pos === -1) {\r\n\t\treturn subject;\r\n\t}\r\n\treturn subject.substr(0, pos);\r\n};\r\n", "\r\n/**\r\n * @imports\r\n */\r\nimport _before from './before.js';\r\n\r\n/**\r\n * Return the part of a string before last occurence of a given value.\r\n *\r\n * @param  string  subject\r\n * @param  string  search\r\n *\r\n * @return string\r\n */\r\nexport default function(subject, search) {\r\n\treturn _before(subject, search, true);\r\n};\r\n", "\r\n/**\r\n * @imports\r\n */\r\nimport _after from './after.js';\r\nimport _beforeLast from './beforeLast.js';\r\n\r\n/**\r\n * Returns the string without the given opening and closing tags.\r\n *\r\n * @param  string  subject\r\n * @param  string  openingTag\r\n * @param  string  closingTag\r\n *\r\n * @return string\r\n */\r\nexport default function(subject, openingTag, closingTag) {\r\n\treturn _beforeLast(_after(subject, openingTag), closingTag);\r\n};\r\n", "\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * AbstractionInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'Abstraction'; },\r\n});\r\nexport default Interface;\r\n", "\r\n/**\r\n * @imports\r\n */\r\nimport _wrapped from '@webqit/util/str/wrapped.js';\r\nimport _unwrap from '@webqit/util/str/unwrap.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport AbstractionInterface from './AbstractionInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Abstraction class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Abstraction = class extends AbstractionInterface {\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(expr) {\r\n\t\tsuper();\r\n\t\tthis.expr = expr;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\treturn this.expr.eval(context, params);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn '(' + this.expr.stringify(params) + ')';\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tif (_wrapped(expr, '(', ')') && !Lexer.match(expr, [' ']).length && Lexer.split(expr, []).length === 2/* recognizing the first empty slot */) {\r\n\t\t\treturn new this(\r\n\t\t\t\tparseCallback(_unwrap(expr, '(', ')'))\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Abstraction;\r\n", "\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from './isArray.js';\r\nimport _isFunction from './isFunction.js';\r\nimport _arrLast from '../arr/last.js';\r\nimport _mergeCallback from '../obj/mergeCallback.js';\r\nimport getPrototypeChain from '../obj/getPrototypeChain.js';\r\nimport _each from '../obj/each.js';\r\n\r\n/**\r\n * A multi-inheritance implementstion.\r\n *\r\n * @param array\t \t...classes\r\n *\r\n * @return object\r\n */\r\nexport default function mixin(...classes) {\r\n\t\r\n\tvar Traps = {};\r\n\tvar RetrnDirective = 'last';\r\n\tif (_isArray(arguments[0])) {\r\n\t\tclasses = arguments[0];\r\n\t\tTraps = arguments[1];\r\n\t\tif (arguments[2]) {\r\n\t\t\tRetrnDirective = arguments[2];\r\n\t\t}\r\n\t}\r\n\t// -----------------------\r\n\tvar Base = _arrLast(classes);\r\n\tvar supersMap = {};\r\n\t// -----------------------\r\n\t// Create the Mixin\r\n\t// ...with a special constructor.\r\n\t// -----------------------\r\n\tvar Mixin = class {\r\n\t\tconstructor(...args) {\r\n\t\t\tvar _this = null;\r\n\t\t\tclasses.reverse().forEach((_class, i) => {\r\n\t\t\t\tvar __this = Reflect.construct(_class, args, this.constructor);\r\n\t\t\t\tif (_this) {\r\n\t\t\t\t\tObject.setPrototypeOf(__this, _this);\r\n\t\t\t\t}\r\n\t\t\t\t_this = __this;\r\n\t\t\t});\r\n\t\t\tObject.setPrototypeOf(this, _this);\r\n\t\t}\r\n\t};\r\n\t// -----------------------\r\n\t// Implement a special handler of the \"instanceof\" operator.\r\n\t// -----------------------\r\n\tvar WQSubclassesSymbolKey = Symbol.for('webqit/util/mixin');\r\n\tclasses.forEach((_class, i) => {\r\n\t\tgetPrototypeChain(_class).forEach(__class => {\r\n\t\t\tif (!__class[WQSubclassesSymbolKey]) {\r\n\t\t\t\tObject.defineProperty(__class, WQSubclassesSymbolKey, {value: []});\r\n\t\t\t\ttry {\r\n\t\t\t\t\tvar originalInstanceChecker = __class[Symbol.hasInstance].bind(__class);\r\n\t\t\t\t\tObject.defineProperty(__class, Symbol.hasInstance, {value: function(instance) {\r\n\t\t\t\t\t\tif (originalInstanceChecker(instance)) {\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn __class[WQSubclassesSymbolKey].reduce((yes, _mixin) => yes || (instance instanceof _mixin), false);\r\n\t\t\t\t\t}});\r\n\t\t\t\t} catch (e) {}\r\n\t\t\t}\r\n\t\t\t__class[WQSubclassesSymbolKey].push(Mixin);\r\n\t\t});\r\n\t});\r\n\t// ---------------------\r\n\t// Mixin both static and instance properties and methods\r\n\t// ---------------------\r\n\tclasses.forEach(_class => {\r\n\t\t// Copy const members\r\n\t\t_mergeCallback([Mixin, _class], (prop, obj1, obj2) => ![\r\n\t\t\t'name', 'prototype', 'prototypes', 'length', 'caller', 'callee', 'arguments', 'constructor', 'apply', \"bind\", 'call', 'toString',/**/\r\n\t\t].includes(prop), true/*deepProps*/);\r\n\t\t_mergeCallback([Mixin.prototype, _class.prototype], (prop, obj1, obj2) => {\r\n\t\t\tif (!['prototype', 'prototypes'].includes(prop)) {\r\n\t\t\t\tif (_isFunction(obj2[prop])) {\r\n\t\t\t\t\tif (_isArray(supersMap[prop])) {\r\n\t\t\t\t\t\tsupersMap[prop].push(obj2[prop]);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tsupersMap[prop] = [obj2[prop]];\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}, true/*deepProps*/);\r\n\t});\r\n\t// Extend (proxy) methods\r\n\t_each(supersMap, (prop, supers) => {\r\n\t\tif (prop === 'constructor') {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t// NOTE: this must not be defined as an arrow function\r\n\t\t// for the benefit of the \"this\".\r\n\t\tMixin.prototype[prop] = function(...args) {\r\n\t\t\tif (Object.hasOwnProperty(Traps, prop) && _isFunction(Traps[prop])) {\r\n\t\t\t\t// Wrap a call to the trap...\r\n\t\t\t\t// So mixin supers are passed to traps\r\n\t\t\t\treturn Traps[prop].call(this, supers, ...args);\r\n\t\t\t} else {\r\n\t\t\t\t// Call each super and return\r\n\t\t\t\t// the last one's return value\r\n\t\t\t\tvar supersReturnValues = [];\r\n\t\t\t\tsupers.forEach(supr => {\r\n\t\t\t\t\tsupersReturnValues.push(supr.call(this, ...args));\r\n\t\t\t\t})\r\n\t\t\t\treturn _arrLast(supersReturnValues);\r\n\t\t\t}\r\n\t\t};\r\n\t});\r\n\treturn Mixin;\r\n};", "\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isFunction from '../js/isFunction.js';\r\nimport _isTypeObject from '../js/isTypeObject.js';\r\nimport _arrFrom from '../arr/from.js';\r\n\r\n/**\r\n * Finds a value in an array/object and returns the key (or path when found deep).\r\n *\r\n * @param array}object \tobj\r\n * @param function\t\tcallback\r\n * @param bool\t\t\tdeep\r\n *\r\n * @return number|string|array\r\n */\r\nconst _find = function(obj, callback, deep = false) {\r\n\tvar keys = null;\r\n\tvar values = obj;\r\n\tif (!_isArray(obj)) {\r\n\t\tkeys = Object.keys(obj);\r\n\t\tvalues = Object.values(obj);\r\n\t}\r\n\tvar subKey = undefined;\r\n\tvar value = values.reduce((prev, curr) => {\r\n\t\tif (subKey === undefined) {\r\n\t\t\tif (callback(curr, prev)) {\r\n\t\t\t\treturn curr;\r\n\t\t\t}\r\n\t\t\tif (deep && (_isTypeObject(curr) || _isFunction(curr)) && (subKey = _find(curr, callback, deep)) !== undefined) {\r\n\t\t\t\treturn curr;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn prev;\r\n\t}, undefined);\r\n\tif (value !== undefined) {\r\n\t\tvar key = keys ? keys[values.indexOf(value)] : values.indexOf(value);\r\n\t\treturn subKey !== undefined ? [key].concat(_arrFrom(subKey)) : key;\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default _find;", "\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ArgumentsInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'Arguments'; },\r\n});\r\nexport default Interface;\r\n", "\r\n/**\r\n * @imports\r\n */\r\nimport _wrapped from '@webqit/util/str/wrapped.js';\r\nimport _unwrap from '@webqit/util/str/unwrap.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport ArgumentsInterface from './ArgumentsInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Arguments class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Arguments = class extends ArgumentsInterface {\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(list = []) {\r\n\t\tsuper();\r\n\t\tthis.list = list;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\treturn this.list.map(arg => arg.eval(context, params));\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn '(' + this.list.map(arg => arg.stringify(params)).join(', ') + ')';\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar args; expr = expr.trim();\r\n\t\tif (_wrapped(expr, '(', ')') && !Lexer.match(expr, [' ']).length) {\r\n\t\t\treturn new this(\r\n\t\t\t\tLexer.split(_unwrap(expr, '(', ')'), [',']).map(arg => parseCallback(arg.trim()))\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Arguments;\r\n", "/**\r\n * ReferenceError\r\n */\r\nexport default class extends Error {\r\n    constructor(...args) {\r\n        super(...args);\r\n        this.name = 'Reference Error';\r\n    }\r\n};", "\r\n/**\r\n * @imports\r\n */\r\nimport _isUndefined from '@webqit/util/js/isUndefined.js';\r\nimport ReferenceInterface from './ReferenceInterface.js';\r\nimport CallInterface from './CallInterface.js';\r\nimport Arguments from './Arguments.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport SyntaxError from '../SyntaxError.js';\r\nimport ReferenceError from '../ReferenceError.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Call class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Call = class extends CallInterface {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(reference, args) {\r\n\t\tsuper();\r\n\t\tthis.reference = reference;\r\n\t\tthis.args = args;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\ttry {\r\n\t\t\tvar args = this.args.eval(context, params);\r\n\t\t\treturn this.reference.getEval(context, params).exec(args);\r\n\t\t} catch(e) {\r\n\t\t\tif (e instanceof ReferenceError) {\r\n\t\t\t\tthrow new ReferenceError('[' + this + ']: ' + e.message);\r\n\t\t\t} else {\r\n\t\t\t\tthrow e;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn this.reference.stringify(params) + this.args.stringify(params);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tif (expr.endsWith(')') && !Lexer.match(expr, [' ']).length) {\r\n\t\t\tvar tokens = Lexer.split(expr, []);\r\n\t\t\tvar reference, args = tokens.pop();\r\n\t\t\tif (!((reference = parseCallback(tokens.join(''), null, {role: 'CALL_SPECIFIER'})) instanceof ReferenceInterface) \r\n\t\t\t|| !(args = parseCallback(args, [Arguments]))) {\r\n\t\t\t\tthrow new SyntaxError(expr);\r\n\t\t\t}\r\n\t\t\treturn new this(reference, args);\r\n\t\t}\r\n\t}\r\n};\t\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Call;\r\n", "\n/**\n * @imports\n */\nimport ExprInterface from '../ExprInterface.js';\n\n/**\n * ---------------------------\n * AggrInterface\n * ---------------------------\n */\t\t\t\t\n\nconst Interface = class extends ExprInterface {};\nObject.defineProperty(Interface.prototype, 'jsenType', {\n\tget() { return 'AggregateExpression'; },\n});\nexport default Interface;\n", "\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _mergeCallback from './mergeCallback.js';\r\n\r\n/**\r\n  * Merges values from subsequent arrays/objects into first array/object but only when not set;\r\n  * optionally recursive\r\n  *\r\n  * @param array ...objs\r\n  *\r\n  * @return void\r\n  */\r\nexport default function(...objs) {\r\n\treturn _mergeCallback(objs, (key, obj1, obj2) => {\r\n\t\tif (_isArray(obj1) && _isArray(obj2)) {\r\n\t\t\tif (obj1.indexOf(obj2[key]) === -1) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t} else if (!(key in obj1)) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t});\r\n};\r\n", "\n/**\n * @imports\n */\nimport ExprInterface from '../ExprInterface.js';\n\n/**\n * ---------------------------\n * WindowInterface\n * ---------------------------\n */\t\t\t\t\n\nconst Interface = class extends ExprInterface {};\nObject.defineProperty(Interface.prototype, 'jsenType', {\n\tget() { return 'WindowConstruct'; },\n});\nexport default Interface;\n", "\r\n/**\r\n * @imports\r\n */\r\nimport _isString from '../js/isString.js';\r\n\r\n/**\r\n * Sorts a list performantly.\r\n *\r\n * @param array\t \t\t\t\t\tarr\r\n * @param string\t \t\t\t\torder\t\t\tASC|DESC \r\n * @param function\t\t\t\t\tcallback\r\n *\r\n * @return array\r\n */\r\nexport default function(arr, order, callback = null) {\r\n\tvar _arr = [];\r\n\t// Make a shallow copy\r\n\tvar length = arr.length;\r\n\tfor (var i = 0; i < length; i ++) {\r\n\t\t_arr.push({index: i, value: callback ? callback(arr[i]) : arr[i]});\r\n\t};\r\n\t_arr.sort(function(a, b) {\r\n\t\t// Using localeCompare if possible\r\n\t\tif (_isString(a.value) && \"\".localeCompare) {\r\n\t\t\treturn a.value.localeCompare(b.value);\r\n\t\t};\r\n\t\treturn a.value === b.value ? 0 : a.value > b.value ? 1 : -1;\r\n\t});\r\n\tif ((order || '').trim().toLowerCase() === 'desc') {\r\n\t\t_arr = _arr.reverse();\r\n\t};\r\n\t// Fill the order with actual values\r\n\treturn _arr.map(itm => arr[itm.index]);\r\n};\r\n", "\n/**\n * @imports\n */\nimport ExprInterface from '../ExprInterface.js';\n\n/**\n * ---------------------------\n * OrderByInterface\n * ---------------------------\n */\t\t\t\t\n\nconst Interface = class extends ExprInterface {};\nObject.defineProperty(Interface.prototype, 'jsenType', {\n\tget() { return 'OrderByExpression'; },\n});\nexport default Interface;\n", "\n/**\n * @imports\n */\nimport _sort from '@webqit/util/arr/sort.js';\nimport _before from '@webqit/util/str/before.js';\nimport _beforeLast from '@webqit/util/str/beforeLast.js';\nimport Lexer from '@webqit/util/str/Lexer.js';\nimport OrderByInterface from './OrderByInterface.js';\n\n/**\n * ---------------------------\n * OrderBy class\n * ---------------------------\n */\t\t\t\t\n\nexport default class OrderBy extends OrderByInterface {\n\t\n\t/**\n\t * @inheritdoc\n\t */\n\tconstructor(columns, withRollup = false) {\n\t\tsuper();\n\t\tthis.columns = columns;\n\t\tthis.withRollup = withRollup;\n\t}\n\t\n\t/**\n\t * @inheritdoc\n\t */\n\teval(tempRows, params = {}) {\n\t\tvar order = (rows, by) => {\n\t\t\t// Drilldown...\n\t\t\tvar grouping = {};\n\t\t\trows.forEach(row => {\n\t\t\t\tvar _for = by[0].expr.eval(row, params);\n\t\t\t\tgrouping[_for] = grouping[_for] || [];\n\t\t\t\tgrouping[_for].push(row);\n\t\t\t});\n\t\t\t// Get esults flattened\n\t\t\tvar result = [];\n\t\t\t_sort(Object.keys(grouping), by[0].order).forEach(_for => {\n\t\t\t\tresult = result.concat(by.length > 1 ? order(grouping[_for], by.slice(1)) : grouping[_for]);\n\t\t\t});\n\t\t\treturn result;\n\t\t};\n\t\treturn order(tempRows, this.columns);\n\t}\n\t\n\t/**\n\t * @inheritdoc\n\t */\n\ttoString() {\n\t\treturn this.stringify();\n\t}\n\t\n\t/**\n\t * @inheritdoc\n\t */\n\tstringify(params = {}) {\n\t\tvar str = [this.columns.map(\n\t\t\tc => c.expr.stringify(params) + (c.order ? ' ' + c.order : '')\n\t\t).join(', ')];\n\t\tif (this.withRollup) {\n\t\t\tstr.push('WITH ROLLUP');\n\t\t}\n\t\treturn str.join(' ');\n\t}\n\t\n\t/**\n\t * @inheritdoc\n\t */\n\tstatic parse(expr, parseCallback, params = {}) {\n\t\tvar columns = [];\n\t\tvar withRollup = false;\n\t\tvar parse = Lexer.lex(expr, ['WITH[ ]+ROLLUP'], {useRegex:'i'});\n\t\tcolumns = Lexer.split(parse.tokens.shift().trim(), [',']).map(c => {\n\t\t\tvar order = c.match(/ASC|DESC/, 'i');\n\t\t\tif (order) {\n\t\t\t\torder = order[0];\n\t\t\t\tc = _beforeLast(c, order).trim();\n\t\t\t}\n\t\t\treturn {expr:parseCallback(c), order:order};\n\t\t});\n\t\tif (parse.matches.length === 1) {\n\t\t\twithRollup = true;\n\t\t}\n\t\treturn new this(columns, withRollup);\n\t}\n}", "\n/**\n * @imports\n */\nimport _inherit from '@webqit/util/obj/inherit.js';\nimport _wrapped from '@webqit/util/str/wrapped.js';\nimport _unwrap from '@webqit/util/str/unwrap.js';\nimport Lexer from '@webqit/util/str/Lexer.js';\nimport WindowInterface from './WindowInterface.js';\nimport OrderBy from './OrderBy.js';\n\n/**\n * ---------------------------\n * Window class\n * ---------------------------\n */\t\t\t\t\n\nexport default class Window extends WindowInterface {\n\t\n\t/**\n\t * @inheritdoc\n\t */\n\tconstructor(dfn) {\n\t\tsuper();\n\t\tthis.dfn = dfn;\n\t}\n\t\n\t/**\n\t * @inheritdoc\n\t */\n\teval(tempRows, definitions = {}, params = {}) {\n\t\tvar dfn = this.dfn;\n\t\tvar uuid = this.stringify();\n\t\tif (this.dfn.name) {\n\t\t\tif (!definitions || !definitions[this.dfn.name]) {\n\t\t\t\tthrow new Error('Window name \"' + this.dfn.name + '\" is undefined!');\n\t\t\t}\n\t\t\tdfn = _inherit({}, this.dfn, definitions[this.dfn.name]);\n\t\t}\n\t\tvar exec = (rows, partitionBy) => {\n\t\t\tif (partitionBy.length) {\n\t\t\t\t// Drilldown...\n\t\t\t\tvar partitioning = {};\n\t\t\t\trows.forEach(row => {\n\t\t\t\t\tvar _for = partitionBy[0].eval(row, params);\n\t\t\t\t\tpartitioning[_for] = partitioning[_for] || [];\n\t\t\t\t\tpartitioning[_for].push(row);\n\t\t\t\t});\n\t\t\t\tObject.values(partitioning).map(partition => exec(partition, partitionBy.slice(1)));\n\t\t\t} else {\n\t\t\t\tif (dfn.orderBy) {\n\t\t\t\t\trows = dfn.orderBy.eval(rows, params);\n\t\t\t\t}\n\t\t\t\trows.forEach(row => {\n\t\t\t\t\tif (!row.WINDOWS) {\n\t\t\t\t\t\trow.WINDOWS = {};\n\t\t\t\t\t}\n\t\t\t\t\trow.WINDOWS[uuid] = rows;\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t\ttry {\n\t\t\texec(tempRows, dfn.partitionBy || []);\n\t\t} catch(e) {\n\t\t\tthrow new Error('[\"' + this.stringify() + '\" in window definition]: ' + e.message);\n\t\t}\n\t}\n\t\n\t/**\n\t * @inheritdoc\n\t */\n\ttoString() {\n\t\treturn this.stringify();\n\t}\n\t\n\t/**\n\t * @inheritdoc\n\t */\n\tstringify(params = {}) {\n\t\tvar length = Object.keys(this.dfn).length;\n\t\tif (length === 1 && this.dfn.name) {\n\t\t\treturn this.dfn.name;\n\t\t}\n\t\tvar str = [this.dfn.name];\n\t\tif (this.dfn.partitionBy) {\n\t\t\tstr.push('PARTITION BY ' + this.dfn.partitionBy.map(expr => expr.stringify(params)).join(', '));\n\t\t}\n\t\tif (this.dfn.orderBy) {\n\t\t\tstr.push('ORDER BY ' + this.dfn.orderBy.stringify(params));\n\t\t}\n\t\treturn '(' + str.filter(a => a).join(' ') + ')';\n\t}\n\t\n\t/**\n\t * @inheritdoc\n\t */\n\tstatic parse(expr, parseCallback, params = {}) {\n\t\tvar dfn = {};\n\t\tif (_wrapped(expr, '(', ')')) {\n\t\t\tif (expr = _unwrap(expr, '(', ')')) {\n\t\t\t\tvar parse = Lexer.lex(expr, ['PARTITION[ ]+BY', 'ORDER[ ]+BY'], {useRegex:'i'});\n\t\t\t\tdfn.name = parse.tokens.shift().trim();\n\t\t\t\tparse.matches.forEach(clauseType => {\n\t\t\t\t\tif (clauseType.toLowerCase().startsWith('partition')) {\n\t\t\t\t\t\tdfn.partitionBy = Lexer.split(parse.tokens.shift().trim(), [','])\n\t\t\t\t\t\t\t.map(expr => parseCallback(expr));\n\t\t\t\t\t} else if (clauseType.toLowerCase().startsWith('order')) {\n\t\t\t\t\t\tdfn.orderBy = parseCallback(parse.tokens.shift().trim(), [OrderBy]);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tdfn.name = expr;\n\t\t}\n\t\treturn new this(dfn);\n\t}\n}", "\n/**\n * @imports\n */\nimport _mixin from '@webqit/util/js/mixin.js';\nimport _flatten from '@webqit/util/arr/flatten.js';\nimport _find from '@webqit/util/obj/find.js';\nimport _before from '@webqit/util/str/before.js';\nimport _after from '@webqit/util/str/after.js';\nimport Lexer from '@webqit/util/str/Lexer.js';\nimport Call from './Call.js';\nimport AggrInterface from './AggrInterface.js';\nimport Window from './Window.js';\n\n/**\n * ---------------------------\n * Aggr class\n * ---------------------------\n */\t\t\t\t\nexport default class Aggr extends _mixin(Call, AggrInterface) {\n\t \n\t/**\n\t * @inheritdoc\n\t */\n\teval(context, params = {}) {\n\t\tvar args = this.args.list.slice();\n\t\targs.unshift(this.window ? context.WINDOWS[this.window.stringify()] : context.AGGR.rows, this.aggrFlag);\n\t\treturn this.reference.getEval(context, params).exec(args);\n\t}\n\t\n\t/**\n\t * @inheritdoc\n\t */\n\ttoString() {\n\t\treturn this.stringify();\n\t}\n\t\n\t/**\n\t * @inheritdoc\n\t */\n\tstringify(params = {}) {\n\t\tvar str = super.stringify(params);\n\t\tif (this.aggrFlag) {\n\t\t\tstr = str.replace('(', '(' + this.aggrFlag + ' ');\n\t\t}\n\t\treturn str + (this.window ? ' OVER ' + this.window.stringify(params) : '');\n\t}\n\t\n\t/**\n\t * @inheritdoc\n\t */\n\tstatic parse(expr, parseCallback, params = {}) {\n\t\tvar aggrMatch, funcFlagMatch, aggrFlag = '';\n\t\tvar aggrMatchRegex = _flatten(this.funcs).join(\"\\\\(|\") + \"\\\\(\";\n\t\tif (aggrMatch = expr.trim().match(new RegExp('^(' + aggrMatchRegex + ')', 'i'))) {\n\t\t\tvar funcName = _before(aggrMatch[0], '(').toUpperCase();\n\t\t\tvar funcFlagStart = _after(expr, funcName + '(');\n\t\t\tif (funcFlagMatch = funcFlagStart.match(new RegExp('^(([ ]+)?' + ['ALL', 'DISTINCT'].join('[ ]+|([ ]+)?') + '[ ]+)', 'i'))) {\n\t\t\t\taggrFlag = funcFlagMatch[0];\n\t\t\t\texpr = expr.replace(aggrFlag, '');\n\t\t\t}\n\t\t\tvar funcCategory = _find(this.funcs, val => val === funcName, true)[0];\n\t\t\tvar splits = Lexer.split(expr, ['OVER'], {ci:true});\n\t\t\tif (funcCategory === 'explicitOver' && splits.length === 1) {\n\t\t\t\tthrow new Error(aggrMatch[0] + '() requires an OVER clause!');\n\t\t\t}\n\t\t\tvar instance = super.parse(splits.shift().trim(), parseCallback, params);\n\t\t\tinstance.funcCategory = funcCategory;\n\t\t\tinstance.aggrFlag = aggrFlag.trim();\n\t\t\tif (splits.length) {\n\t\t\t\tinstance.window = parseCallback(splits.pop().trim(), [Window]);\n\t\t\t}\n\t\t\treturn instance;\n\t\t}\n\t}\n}\n\n/**\n * @prop object\n */\nAggr.funcs = {\n\tnormal: [\n\t\t'AVG', \n\t\t'BIT_AND', \n\t\t'BIT_OR', \n\t\t'BIT_XOR', \n\t\t'COUNT', \n\t\t'JSON_ARRAYAGG', \n\t\t'JSON_OBJECTAGG', \n\t\t'MAX', \n\t\t'MIN',\n\t\t'STDDEV_POP',\n\t\t'STDDEV',\n\t\t'STD',\n\t\t'STDDEV_SAMP',\n\t\t'SUM',\n\t\t'VAR_POP',\n\t\t'VARIANCE',\n\t\t'VAR_SAMP',\n\t\t// May not apply to OVER()\n\t\t'GROUP_CONCAT',\n\t\t'GROUP_CONCAT_WS',\n\t],\n\texplicitOver: [\n\t\t'CUME_DIST', \n\t\t'DENSE_RANK', \n\t\t'FIRST_VALUE', \n\t\t'LAG', \n\t\t'LAST_VALUE', \n\t\t'LEAD', \n\t\t'NTH_VALUE', \n\t\t'NTLE',\n\t\t'PERCENT_RANK',\n\t\t'RANK',\n\t\t'ROW_NUMBER',\n\t],\n\tsupport: [\n\t\t'ANY_VALUE', \n\t\t'COLUMN', \n\t\t'COLUMNS', \n\t\t'GROUPING', \n\t],\n};", "\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _arrFirst from '../arr/first.js';\r\n\r\n/**\r\n * Returns the FIRST ENTRY.\r\n *\r\n * @param array|object \tobj\r\n *\r\n * @return mixed\r\n */\r\nexport default function(obj) {\r\n\treturn _isArray(obj) ? _arrFirst(obj) : obj[Object.keys(obj)[0]];\r\n};\r\n", "\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeFunction from './isTypeFunction.js';\r\n\r\n/**\r\n * Tells if val is of type \"class\".\r\n *\r\n * @param object \t\tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn _isTypeFunction(val) && /^class\\s?/.test(Function.prototype.toString.call(val));\r\n};\r\n", "\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeObject from '@webqit/util/js/isTypeObject.js';\r\nimport _isUndefined from '@webqit/util/js/isUndefined.js';\r\nimport _isFunction from '@webqit/util/js/isFunction.js';\r\nimport _isClass from '@webqit/util/js/isClass.js';\r\nimport _isString from '@webqit/util/js/isString.js';\r\nimport _isNull from '@webqit/util/js/isNull.js';\r\nimport _isNumber from '@webqit/util/js/isNumber.js';\r\nimport _after from '@webqit/util/str/after.js';\r\nimport _before from '@webqit/util/str/before.js';\r\nimport _unique from '@webqit/util/arr/unique.js';\r\nimport ReferenceError from './ReferenceError.js';\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default class Scope {\r\n\r\n\t/**\r\n\t * Creates a new context stack.\r\n\t *\r\n\t * @param object\t \tparams\r\n\t * @param object\t\tparams\r\n\t *\r\n\t * @return Scope\r\n\t */\r\n\tconstructor(stack, params = {}) {\r\n\t\tif (!('main' in stack)) {\r\n\t\t\tthrow new Error('A \"main\" context must be provided!');\r\n\t\t}\r\n\t\tObject.defineProperty(this, 'stack', {value: stack || {}, enumerable: false});\r\n\t\tObject.defineProperty(this, 'params', {value: params || {}, enumerable: false});\r\n\t\tif (stack.super) {\r\n\t\t\tObject.defineProperty(this.stack, 'super', {value: Scope.create(stack.super, {errorLevel: params.errorLevel}), enumerable: false});\r\n\t\t}\r\n\t\tObject.defineProperty(this.stack, 'local', {value: stack.local || {}, enumerable: false});\r\n\t\tObject.defineProperty(this.stack, '$local', {value: stack.$local || {}, enumerable: false});\r\n\t}\r\n\r\n\t/**\r\n\t * Binds a callback to changes\r\n\t * that happen in the contexts.\r\n\t *\r\n\t * @param object\t\t \ttrap\r\n\t * @param function\t\t \tcallback\r\n\t *\r\n\t * @return Scope\r\n\t */\r\n\tobserve(trap, callback, params = {}) {\r\n\t\tif (this.stack.super) {\r\n\t\t\tthis.stack.super.observe(trap, (e) => {\r\n\t\t\t\tif (e.props.filter(prop => !_has(this.stack.local, prop, trap) && !_has(this.stack.main, prop, trap)).length) {\r\n\t\t\t\t\te.scope = 'super';\r\n\t\t\t\t\treturn callback(e);\r\n\t\t\t\t}\r\n\t\t\t}, params);\r\n\t\t}\r\n\t\t\r\n\t\tvar _params  = {...params};\r\n\t\t_params.subtree = 'auto';\r\n\t\t_params.tags = (_params.tags || []).slice(0);\r\n\t\t_params.tags.push(this, 'jsen-context',);\r\n\t\t_params.diff = true;\r\n\r\n\t\ttrap.observe(this.stack, changes => {\r\n\t\t\tvar references = [];\r\n\t\t\tchanges.forEach(c => {\r\n\t\t\t\t// Changes firing directly from super and local should be ignored\r\n\t\t\t\tif (c.name === 'main') {\r\n\t\t\t\t\tif (c.path.length > 1) {\r\n\t\t\t\t\t\treferences.push(c.path.slice(1));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tvar keysMain = _unique((_isTypeObject(c.value) ? Object.keys(c.value) : []).concat(c.oldValue && _isTypeObject(c.oldValue) ? Object.keys(c.oldValue) : []));\r\n\t\t\t\t\t\treferences.push(...keysMain.map(k => [k]));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treferences = references.filter(ref => !_has(this.stack.local, ref[0], trap));\r\n\t\t\tif (references.length) {\r\n\t\t\t\tvar props = references.map(ref => ref[0]);\r\n\t\t\t\treturn callback({\r\n\t\t\t\t\tprops,\r\n\t\t\t\t\treferences,\r\n\t\t\t\t\tscope: 'local',\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}, _params);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Unbinds callbacks previously bound\r\n\t * with observe()\r\n\t *\r\n\t * @param object\t\t \ttrap\r\n\t * @param object\t\t \tparams\r\n\t *\r\n\t * @return Scope\r\n\t */\r\n\tunobserve(trap, params = {}) {\r\n\t\tif (this.stack.super) {\r\n\t\t\tthis.stack.super.unobserve(trap, params);\r\n\t\t}\r\n\t\tvar _params  = {...params};\r\n\t\t_params.tags = (_params.tags || []).slice(0);\r\n\t\t_params.tags.push(this, 'jsen-context',);\r\n\t\ttrap.unobserve(this.stack, null, null, _params);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Tries the handler on the different contexts in the stack.\r\n\t *\r\n\t * @param string|number \tprop\r\n\t * @param function\t\t \tcallback\r\n\t * @param function\t\t \tfinal\r\n\t *\r\n\t * @return Scope\r\n\t */\r\n\thandle(prop, callback, final, level = 0) {\r\n\t\tvar callMain = () => {\r\n\t\t\treturn callback(this.stack.main, null, () => {\r\n\t\t\t\tif (this.stack.super) {\r\n\t\t\t\t\treturn this.stack.super.handle(prop, callback, final, level + 1);\r\n\t\t\t\t}\r\n\t\t\t\tif (final) {\r\n\t\t\t\t\treturn final();\r\n\t\t\t\t}\r\n\t\t\t}, level);\r\n\t\t};\r\n\t\t// Normally, we would begin with local...\r\n\t\t// but no if...\r\n\t\tif (prop === 'toString' && this.stack.local.toString === Object.prototype.toString) {\r\n\t\t\treturn callMain();\r\n\t\t}\r\n\t\t// Conditions are right, we begin with local\r\n\t\treturn callback(this.stack.local, this.stack.$local, callMain, level);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a property's value from the first possessing context.\r\n\t *\r\n\t * @param string|number prop\r\n\t * @param object\t\ttrap\r\n\t * @param bool\t\t\tbindThis\r\n\t *\r\n\t * @return mixed\r\n\t */\r\n\tget(prop, trap = {}, bindThis = true) {\r\n\t\tif (prop instanceof String) {\r\n\t\t\t// incase we recieved new String()\r\n\t\t\tprop = prop + '';\r\n\t\t}\r\n\t\treturn this.handle(prop, (contxtObj, contxtMeta, advance, level) => {\r\n\t\t\tvar val = _get(contxtObj, prop, trap);\r\n\t\t\t// asking first mught not go well generally && _has(this[i], prop, trap)\r\n\t\t\tif (!_isUndefined(val) || _has(contxtObj, prop, trap)) {\r\n\t\t\t\tif (_isFunction(val) && !_isClass(val) && bindThis) {\r\n\t\t\t\t\treturn val.bind(contxtObj);\r\n\t\t\t\t}\r\n\t\t\t\treturn val;\r\n\t\t\t}\r\n\t\t\treturn advance();\r\n\t\t}/* Not good for RQL derived fields , () => {throw new ReferenceError('\"' + prop + '\" is undefined!');}*/);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Updates a property's value from the first possessing context.\r\n\t * Or adds a new context to set the property.\r\n\t *\r\n\t * @param string|number prop\r\n\t * @param mixed\t\t\tval\r\n\t * @param object\t\ttrap\r\n\t * @param bool\t\t\tinitKeyword\r\n\t * @param bool\t\t\tisRootVar\r\n\t *\r\n\t * @return bool\r\n\t */\r\n\tset(prop, val, trap = {}, initKeyword = false, isRootVar = true) {\r\n\t\tif (this.params.type === 2 && initKeyword === 'var' && this.stack.super) {\r\n\t\t\treturn this.stack.super.set(prop, val, trap, initKeyword);\r\n\t\t}\r\n\t\tif (prop instanceof String) {\r\n\t\t\t// incase we recieved new String()\r\n\t\t\tprop = prop + '';\r\n\t\t}\r\n\t\tconst _set = (cntxt, prop, val, trap) => {\r\n\t\t\tif (trap.set) {\r\n\t\t\t\treturn trap.set(cntxt, prop, val);\r\n\t\t\t}\r\n\t\t\tcntxt[prop] = val;\r\n\t\t\treturn true;\r\n\t\t};\r\n\t\treturn this.handle(initKeyword ? true : prop, (contxtObj, localContxtMeta, advance, level) => {\r\n\t\t\t// Whatever the level of localContext...\r\n\t\t\tif (localContxtMeta && localContxtMeta[prop] === 'const') {\r\n\t\t\t\tthrow new LogicalError('CONST ' + prop + ' cannot be modified!');\r\n\t\t\t}\r\n\t\t\t// Set this locally, we wont be getting to advance()\r\n\t\t\tif (initKeyword) {\r\n\t\t\t\tlocalContxtMeta[prop] = initKeyword;\r\n\t\t\t\treturn _set(contxtObj, prop, val, trap);\r\n\t\t\t}\r\n\t\t\t// For any other contex, it must already exists\r\n\t\t\tif (_has(contxtObj, prop, trap)) {\r\n\t\t\t\treturn _set(contxtObj, prop, val, trap);\r\n\t\t\t}\r\n\t\t\ttry {\r\n\t\t\t\treturn advance();\r\n\t\t\t} catch(e) {\r\n\t\t\t\tif ((e instanceof ReferenceError) && contxtObj && !localContxtMeta && level === 0 && this.params.strictMode === false) {\r\n\t\t\t\t\t// Assign to undeclared variables\r\n\t\t\t\t\treturn _set(contxtObj, prop, val, trap);\r\n\t\t\t\t}\r\n\t\t\t\tthrow e;\r\n\t\t\t}\r\n\t\t}, () => {throw new ReferenceError('\"' + prop + '\" does not exist in scope!');});\r\n\t}\r\n\t\r\n\t/**\r\n\t * Deletes a property from the first possessing context.\r\n\t *\r\n\t * @param string|number prop\r\n\t * @param object\t\ttrap\r\n\t *\r\n\t * @return bool\r\n\t */\r\n\tdel(prop, trap = {}) {\r\n\t\tif (prop instanceof String) {\r\n\t\t\t// incase we recieved new String()\r\n\t\t\tprop = prop + '';\r\n\t\t}\r\n\t\treturn this.handle(prop, (contxtObj, contxtMeta, advance) => {\r\n\t\t\tif (_has(contxtObj, prop, trap)) {\r\n\t\t\t\tif (contxtMeta) {\r\n\t\t\t\t\tdelete contxtMeta[prop];\r\n\t\t\t\t}\r\n\t\t\t\tif (trap.deleteProperty || trap.del) {\r\n\t\t\t\t\treturn (trap.deleteProperty || trap.del)(contxtObj, prop);\r\n\t\t\t\t}\r\n\t\t\t\tdelete contxtObj[prop];\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn advance();\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Tests if a property exists in any context.\r\n\t *\r\n\t * @param string|number prop\r\n\t * @param string|number prop2\r\n\t * @param object\t\ttrap\r\n\t *\r\n\t * @return bool\r\n\t */\r\n\thas(prop, prop2, trap = {}) {\r\n\t\tif (prop instanceof String) {\r\n\t\t\t// incase we recieved new String()\r\n\t\t\tprop = prop + '';\r\n\t\t}\r\n\t\tif (prop2 instanceof String) {\r\n\t\t\t// incase we recieved new String()\r\n\t\t\tprop2 = prop2 + '';\r\n\t\t}\r\n\t\treturn this.handle(prop, (contxtObj, contxtMeta, advance) => {\r\n\t\t\tif (_has(contxtObj, prop, trap)) {\r\n\t\t\t\tvar contextObj2 = _get(contxtObj, prop, trap);\r\n\t\t\t\treturn _has(contextObj2, prop2, trap);\r\n\t\t\t}\r\n\t\t\treturn advance();\r\n\t\t}, () => {throw new ReferenceError('\"' + prop + '\" is undefined!');});\r\n\t}\r\n\t\r\n\t/**\r\n\t * Tests if a property exists in any context.\r\n\t *\r\n\t * @param string|number prop\r\n\t * @param array\t\t\targs\r\n\t * @param object\t\ttrap\r\n\t *\r\n\t * @return mixed\r\n\t */\r\n\texec(prop, args, trap = {}) {\r\n\t\tif (prop instanceof String) {\r\n\t\t\t// incase we recieved new String()\r\n\t\t\tprop = prop + '';\r\n\t\t}\r\n\t\treturn this.handle(prop, (contxtObj, contxtMeta, advance) => {\r\n\t\t\tvar fn = _get(contxtObj, prop, trap);\r\n\t\t\tif (!_isUndefined(fn) || _has(contxtObj, prop, trap)) {\r\n\t\t\t\tif (!_isFunction(fn)) {\r\n\t\t\t\t\tif (trap.exec) {\r\n\t\t\t\t\t\treturn trap.exec(contxtObj, prop, args);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthrow new ReferenceError('\"' + prop + '\" is not a function! (Called on type: ' + typeof contxtObj + '.)');\r\n\t\t\t\t}\r\n\t\t\t\tif (trap.apply) {\r\n\t\t\t\t\treturn trap.apply(fn, contxtObj, args);\r\n\t\t\t\t}\r\n\t\t\t\treturn fn.apply(contxtObj, args);\r\n\t\t\t}\r\n\t\t\treturn advance();\r\n\t\t}, () => {\r\n\t\t\tif (trap.execUnknown) {\r\n\t\t\t\treturn trap.execUnknown(this, prop, args);\r\n\t\t\t}\r\n\t\t\tthrow new ReferenceError('\"' + prop + '()\" is undefined!');\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Factory method for making a Scope instance.\r\n\t *\r\n\t * @param array|object \tcntxt\r\n\t * @param object \t\tparams\r\n\t * @param object \t\ttrap\r\n\t *\r\n\t * @return Scope\r\n\t */\r\n\tstatic create(cntxt, params = {}, trap = {}) {\r\n\t\tif (cntxt instanceof Scope) {\r\n\t\t\treturn cntxt;\r\n\t\t}\r\n\t\tvar scopeObj = {};\r\n\t\tif (trap.set) {\r\n\t\t\ttrap.set(scopeObj, 'main', cntxt);\r\n\t\t} else {\r\n\t\t\tscopeObj.main = cntxt;\r\n\t\t}\r\n\t\treturn new Scope(scopeObj, params);\r\n\t}\r\n\r\n\t/**\r\n\t * Factory method for making a stack Scope hierarchies.\r\n\t *\r\n\t * @param array\t\t \tcntxts\r\n\t * @param object \t\tparams\r\n\t * @param object \t\ttrap\r\n\t *\r\n\t * @return Scope\r\n\t */\r\n\tstatic createStack(cntxts, params = {}, trap = {}) {\r\n\t\treturn cntxts.reverse().reduce((supr, cntxt, i) => {\r\n\t\t\tif (cntxt instanceof Scope) {\r\n\t\t\t\tif (i === 0) {\r\n\t\t\t\t\treturn cntxt;\r\n\t\t\t\t}\r\n\t\t\t\tthrow new Error('Only the top-most context is allowed to be an instance of Scope.')\r\n\t\t\t}\r\n\t\t\tvar scopeObj = {};\r\n\t\t\tif (trap.set) {\r\n\t\t\t\ttrap.set(scopeObj, 'main', cntxt);\r\n\t\t\t} else {\r\n\t\t\t\tscopeObj.main = cntxt;\r\n\t\t\t}\r\n\t\t\tscopeObj.super = supr;\r\n\t\t\treturn new Scope(scopeObj, params);\r\n\t\t}, null);\r\n\t}\r\n};\r\n\r\nconst _get = (cntxt, prop, trap) => {\r\n\tif (_isNull(cntxt) || _isUndefined(cntxt)) {\r\n\t\treturn;\r\n\t}\r\n\treturn trap.get && _isTypeObject(cntxt) ? trap.get(cntxt, prop) : (\r\n\t\tcntxt[prop]\r\n\t);\r\n};\r\n\r\nconst _has = (cntxt, prop, trap) => {\r\n\tif (_isNull(cntxt) || _isUndefined(cntxt)) {\r\n\t\treturn false;\r\n\t}\r\n\treturn trap.has && _isTypeObject(cntxt) ? trap.has(cntxt, prop) : (\r\n\t\t_isTypeObject(cntxt) ? prop in cntxt : !_isUndefined(cntxt[prop])\r\n\t);\r\n};", "\r\n/**\r\n * @imports\r\n */\r\nimport _isUndefined from '@webqit/util/js/isUndefined.js';\r\nimport _wrapped from '@webqit/util/str/wrapped.js';\r\nimport _unwrap from '@webqit/util/str/unwrap.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport ReferenceInterface from './ReferenceInterface.js';\r\nimport ExprInterface from '../ExprInterface.js';\r\nimport Scope from '../Scope.js';\r\nimport SyntaxError from '../SyntaxError.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Reference class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class Reference extends ReferenceInterface {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(context, name, backticks = false) {\r\n\t\tsuper();\r\n\t\tthis.context = context;\r\n\t\tthis.name = name;\r\n\t\tthis.backticks = backticks;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\t\t\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\tif (this.interpreted && params.interpreted) {\r\n\t\t\tif (_isArray(this.interpreted)) {\r\n\t\t\t\treturn this.interpreted.map(ref => ref.stringify(params)).join(', ');\r\n\t\t\t}\r\n\t\t\treturn this.interpreted.stringify(params);\r\n\t\t}\r\n\t\t// -----------\r\n\t\treturn this._stringify(params);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\t_stringify(params = {}) {\r\n\t\tvar name = this.name;\r\n\t\tif (this.context) {\r\n\t\t\tvar subjectContext = this.context.stringify(params);\r\n\t\t\tif (name instanceof ExprInterface) {\r\n\t\t\t\tname = '[' + name.stringify(params) + ']';\r\n\t\t\t} else if (this.backticks) {\r\n\t\t\t\tname = '`' + name + '`';\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tvar subjectContext = params.context;\r\n\t\t\tif (this.backticks) {\r\n\t\t\t\tname = '`' + name + '`';\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn (subjectContext || '') + (subjectContext && !name.startsWith('[') ? Reference.separator : '') + name;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tgetEval(tempRow, params = {}) {\r\n\t\t// ------------\r\n\t\t// For those calling getEval() directly\r\n\t\tif (this.interpreted) {\r\n\t\t\tif (_isArray(this.interpreted)) {\r\n\t\t\t\treturn this.interpreted.reduce((map, ref) => {\r\n\t\t\t\t\tmap[ref.name] = ref.getEval(tempRow, params);\r\n\t\t\t\t\treturn map;\r\n\t\t\t\t}, {});\r\n\t\t\t}\r\n\t\t\treturn this.interpreted.getEval(tempRow, params);\r\n\t\t}\r\n\t\t// -----------\r\n\t\t// Lets find the table that contains the column\r\n\t\tvar sourceContext = tempRow, name = this.name;\r\n\t\tif (this.context) {\r\n\t\t\tsourceContext = this.context.eval(tempRow, params);\r\n\t\t} else if (!(this.role === 'CONTEXT' || this.role === 'CALL_SPECIFIER')) {\r\n\t\t\tif (!tempRow.$) {\r\n\t\t\t\tthrow new Error('\"' + this + '\" is undefined!');\r\n\t\t\t}\r\n\t\t\tsourceContext = tempRow.$;\r\n\t\t}\r\n\t\treturn {\r\n\t\t\tget() {\r\n\t\t\t\treturn Scope.create(sourceContext, params).get(name, params.trap);\r\n\t\t\t},\r\n\t\t\tdel() {\r\n\t\t\t\treturn Scope.create(sourceContext, params).del(name, params.trap);\r\n\t\t\t},\r\n\t\t\thas(prop) {\r\n\t\t\t\treturn Scope.create(sourceContext, params).has(name, prop, params.trap);\r\n\t\t\t},\r\n\t\t\tset(val, initKeyword = null) {\r\n\t\t\t\treturn Scope.create(sourceContext, params).set(name, val, params.trap, initKeyword);\r\n\t\t\t},\r\n\t\t\texec(args) {\r\n\t\t\t\treturn Scope.create(sourceContext, params).exec(name.toUpperCase(), args, params.trap);\r\n\t\t\t},\r\n\t\t};\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(tempRow, params = {}) {\r\n\t\tif (this.interpreted) {\r\n\t\t\tif (_isArray(this.interpreted)) {\r\n\t\t\t\treturn this.interpreted.map(ref => ref.eval(tempRow, params))\r\n\t\t\t}\r\n\t\t\treturn this.interpreted.eval(tempRow, params);\r\n\t\t}\r\n\t\treturn this.getEval(tempRow, params).get();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tif (!Lexer.match(expr.trim(), [' ']).length) {\r\n\t\t\tvar splits = Lexer.split(expr, []);\r\n\t\t\t// ------------------------\r\n\t\t\t// name, first\r\n\t\t\t// ------------------------\r\n\t\t\tvar context, name = splits.pop(), backticks;\r\n\t\t\tvar nameSplit = Lexer.split(name.trim(), [this.separator], {preserveDelims:true});\r\n\t\t\tif (nameSplit.length > 1) {\r\n\t\t\t\tname = nameSplit.pop().substr(1);\r\n\t\t\t\tsplits = splits.concat(nameSplit);\r\n\t\t\t}\r\n\t\t\tif (_wrapped(name, '`', '`')) {\r\n\t\t\t\tname = _unwrap(name, '`', '`');\r\n\t\t\t\tbackticks = true;\r\n\t\t\t}\r\n\t\t\t// ------------------------\r\n\t\t\t// context, second\r\n\t\t\t// ------------------------\r\n\t\t\tif (splits.length) {\r\n\t\t\t\tcontext = parseCallback(splits.join(''), null, {role: 'CONTEXT'});\r\n\t\t\t}\r\n\t\t\tif (_wrapped(name, '[', ']')) {\r\n\t\t\t\tif (!context) {\r\n\t\t\t\t\tthrow new SyntaxError(expr);\r\n\t\t\t\t}\r\n\t\t\t\tname = parseCallback(_unwrap(name, '[', ']'));\r\n\t\t\t}\r\n\t\t\treturn new this(context, name, backticks);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop string\r\n */\r\nReference.separator = '.';\r\n", "\n/**\n * @imports\n */\nimport Reference from './Reference.js';\n\n/**\n * ---------------------------\n * AggrInterface\n * ---------------------------\n */\t\t\t\t\n\nconst Interface = class extends Reference {};\nObject.defineProperty(Interface.prototype, 'jsenType', {\n\tget() { return 'ArrowReferenceExpression'; },\n});\nexport default Interface;\n", "\n/**\n * @imports\n */\nimport _mixin from '@webqit/util/js/mixin.js';\nimport _before from '@webqit/util/str/before.js';\nimport _after from '@webqit/util/str/after.js';\nimport _isString from '@webqit/util/js/isString.js';\nimport _isObject from '@webqit/util/js/isObject.js';\nimport _objFirst from '@webqit/util/obj/first.js';\nimport ArrowReferenceInterface from './ArrowReferenceInterface.js';\n\n/**\n * ---------------------------\n * ArrowReference class\n * ---------------------------\n */\t\t\t\t\nexport default class ArrowReference extends ArrowReferenceInterface {\n\n\t/**\n\t * Gets the immediate target in a reference path.\n\t * \n\t * @param {Object} schema1\n\t * @param {Object} dbDriver\n\t * \n\t * @return {Object}\n\t */\n\tprocess(schema1, dbDriver = null) {\n\t\tvar reference = this.interpreted ? this.interpreted.toString() : this.toString();\n\t\treturn ArrowReference.process(schema1, reference.replace(/`/g, ''), dbDriver);\n\t}\n\n\t/**\n\t * @inheritdoc\n\t */\n\tstatic parse(expr, parseCallback, params = {}) {\n\t\tif (this.isReference(expr)) {\n\t\t\tvar parse = super.parse(expr, parseCallback, params);\n\t\t\tif (parse)\n\t\t\tparse.backticks = true;\n\t\t\treturn parse;\n\t\t}\n\t}\n\n\t// ------------------------\n\n\t/**\n\t * Tells if a column is a reference.\n\t *\n\t * @param {String} str\n\t *\n\t * @return bool\n\t */\n\tstatic isReference(str) {\n\t\treturn str.indexOf(this.arrLeft) > -1 || str.indexOf(this.arrRight) > -1;\n\t}\n\t\n\t/**\n\t * Tells if a path is an outgoing reference in direction.\n\t *\n\t * @param {String} reference\n\t *\n\t * @return bool\n\t */\n\tstatic isOutgoing(reference) {\n\t\treturn reference.indexOf(this.arrRight) > -1 && _before(reference, this.arrRight).indexOf(this.arrLeft) === -1;\n\t}\n\t\n\t/**\n\t * Tells if a path is an incoming reference in direction.\n\t *\n\t * @param {String} reference\n\t *\n\t * @return bool\n\t */\n\tstatic isIncoming(reference) {\n\t\treturn reference.indexOf(this.arrLeft) > -1 && _before(reference, this.arrLeft).indexOf(this.arrRight) === -1;\n\t}\n\t\n\t/**\n\t * Returns the relationshipPath in reverse direction.\n\t *\n\t * @param {String} reference\n\t *\n\t * @return string\n\t */\n\tstatic reverse(reference) {\n\t\treturn reference.replace(new RegExp(this.arrRight, 'g'), '|' + this.arrRight + '|').replace(new RegExp(this.arrLeft, 'g'), '|' + this.arrLeft + '|')\n\t\t\t.split('|').map(str => str === this.arrRight ? this.arrLeft : (str === this.arrLeft ? this.arrRight : str)).reverse().join('');\n\t}\n\n\t/**\n\t * Gets the immediate target in a reference path.\n\t * \n\t * @param {Object} schema1 \n\t * @param {String} reference \n\t * @param {Object} dbDriver \n\t * \n\t * @return {Object}\n\t */\n    static process(schema1, reference, dbDriver = null) {\n\t\tvar schema2,\n\t\t\tSCHEMAS = (schema1 ? dbDriver.getDatabaseSchema(schema1.databaseName) : dbDriver.getDatabaseSchema()) || {columns: {}};\n\t\tif (this.isIncoming(reference)) {\n\t\t\t// reference === actingKey<-...\n\t\t\tvar actingKey = _before(reference, this.arrLeft),\n\t\t\t\tsourceTable = _after(reference, this.arrLeft);\n\t\t\tif (actingKey.indexOf('.') > 0) {\n\t\t\t\tif (!schema1) {\n\t\t\t\t\t// schema1 that's explicitly given takes precedence\n\t\t\t\t\t// as the \"context\" given in reference might be only an alias\n\t\t\t\t\tschema1 = SCHEMAS[_before(actingKey, '.')];\n\t\t\t\t}\n\t\t\t\tactingKey = _after(actingKey, '.');\n\t\t\t}\n\t\t\t// --------------------------\n\t\t\tif (this.isIncoming(sourceTable)) {\n\t\t\t\t// reference === actingKey<-actingKey2<-table->?...\n\t\t\t\tschema2 = this.process(null, sourceTable/* as new reference */, dbDriver).a.table;\n\t\t\t\tvar select = sourceTable;\n\t\t\t} else {\n\t\t\t\t// reference === actingKey<-table->?...\n\t\t\t\tvar _sourceTable = _before(sourceTable, this.arrRight)\n\t\t\t\t\tselect = _after(sourceTable, this.arrRight);\n\t\t\t\tif (!(schema2 = SCHEMAS[_sourceTable])) {\n\t\t\t\t\tthrow new Error('[' + reference + ']: The implied table \"' + _sourceTable + '\" is not defined.');\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!schema1) {\n\t\t\t\t// --------------------------\n\t\t\t\t// Now get schema1 from schema2\n\t\t\t\t// --------------------------\n\t\t\t\tvar referencedEntity;\n\t\t\t\tif (!schema2.columns[actingKey] || !(referencedEntity = schema2.columns[actingKey].referencedEntity)) {\n\t\t\t\t\tthrow new Error('[' + reference + ']: The \"' + schema2.name + '\" table does not define the implied foreign key \"' + actingKey + '\".');\n\t\t\t\t}\n\t\t\t\tschema1 = SCHEMAS[referencedEntity.table];\n\t\t\t}\n\t\t\treturn {\n\t\t\t\ta: {table: schema1, actingKey: schema1.primaryKey,},\n\t\t\t\tb: {table: schema2, actingKey, select,},\n\t\t\t};\n\t\t}\n\n\t\t// --------------------------\n\t\t// reference === foreignKey->...\n\t\t// --------------------------\n\t\tvar foreignKey = _before(reference, this.arrRight)\n\t\t\tselect = _after(reference, this.arrRight);\n\t\tif (foreignKey.indexOf('.') > 0) {\n\t\t\tif (!schema1) {\n\t\t\t\t// schema1 that's explicitly given takes precedence\n\t\t\t\t// as the \"context\" given in reference might be only an alias\n\t\t\t\tschema1 = SCHEMAS[_before(foreignKey, '.')];\n\t\t\t}\n\t\t\tforeignKey = _after(foreignKey, '.');\n\t\t} else {\n\t\t\tschema1 = _objFirst(SCHEMAS);\n\t\t}\n\t\t// --------------------------\n\t\t// Now get schema2 from schema1\n\t\t// --------------------------\n\t\tvar referencedEntity;\n\t\tif (!schema1.columns[foreignKey] || !(referencedEntity = schema1.columns[foreignKey].referencedEntity)) {\n\t\t\tthrow new Error('[' + schema1.name + this.arrRight + reference + ']: The \"' + schema1.name + '\" table does not define the implied foreign key \"' + foreignKey + '\".');\n\t\t}\n\t\tschema2 = SCHEMAS[referencedEntity.table];\n\t\treturn {\n\t\t\ta: {table: schema1, actingKey: foreignKey,},\n\t\t\tb: {table: schema2, actingKey: schema2.primaryKey, select,},\n\t\t};\n\t}\n}\n\n/**\n * @var string\n */\nArrowReference.arrRight = '~>';\nArrowReference.arrLeft = '<~';", "\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * AssertionInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'AssertionExpression'; },\r\n});\r\nexport default Interface;\r\n", "\r\n/**\r\n * @imports\r\n */\r\nimport _first from '@webqit/util/arr/first.js';\r\nimport _flatten from '@webqit/util/arr/flatten.js';\r\nimport _unique from '@webqit/util/arr/unique.js';\r\nimport AssertionInterface from './AssertionInterface.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Assertion class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Assertion = class extends AssertionInterface {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(exprs, logic) {\r\n\t\tsuper();\r\n\t\tthis.exprs = exprs;\r\n\t\tthis.logic = logic;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\t eval(context = null, params = {}) {\r\n\t\tvar Assertion = this.constructor;\r\n\t\tif (this.logic.toLowerCase() === Assertion.negation.toLowerCase()) {\r\n\t\t\treturn !_first(this.exprs).eval(context, params);\r\n\t\t}\r\n\t\tvar operators = _flatten(Assertion.operators);\r\n\t\tvar logic = (this.logic || '').trim().toUpperCase();\r\n\t\tvar isOr = logic === (Assertion.operators.or || '').trim().toUpperCase();\r\n\t\tvar isNor = logic === (Assertion.operators.nor || '').trim().toUpperCase();\r\n\t\tvar isAnd = logic === (Assertion.operators.and || '').trim().toUpperCase();\r\n\t\tvar isNand = logic === (Assertion.operators.nand || '').trim().toUpperCase();\r\n\t\tvar lastResult = true, trues = 0;\r\n\t\tfor(var i = 0; i < this.exprs.length; i ++) {\r\n\t\t\tlastResult = this.exprs[i].eval(context, params);\r\n\t\t\tif (isAnd && !lastResult) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif (isNand && !lastResult) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tif (isOr && lastResult) {\r\n\t\t\t\treturn lastResult;\r\n\t\t\t}\r\n\t\t\ttrues += lastResult ? 1 : 0;\r\n\t\t}\r\n\t\tif (isOr) {\r\n\t\t\t// Which is falsey,\r\n\t\t\t// by virtue of getting here\r\n\t\t\treturn lastResult;\r\n\t\t}\r\n\t\tif (isAnd || isNand) {\r\n\t\t\t// For AND and NAND, all entries must be true by now,\r\n\t\t\t// by virtue of getting here.\r\n\t\t\t// For AND, this means true; for NAND, false\r\n\t\t\treturn isAnd;\r\n\t\t}\r\n\t\t// For NOR, all entries need to be false\r\n\t\treturn isNor && trues === 0;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\tvar Assertion = this.constructor;\r\n\t\tif (this.logic.toLowerCase() === Assertion.negation.toLowerCase()) {\r\n\t\t\treturn this.logic + _first(this.exprs).stringify(params);\r\n\t\t}\r\n\t\treturn this.exprs.map(expr => expr.stringify(params)).join(' ' + this.logic.trim() + ' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tif (expr.toUpperCase().startsWith(this.negation.toUpperCase())) {\r\n\t\t\treturn new this(\r\n\t\t\t\t[parseCallback(expr.substr(this.negation.length))],\r\n\t\t\t\tthis.negation\r\n\t\t\t);\r\n\t\t}\r\n\t\tvar parse = Lexer.lex(expr, _flatten(this.operators));\r\n\t\tif (parse.tokens.length > 1) {\r\n\t\t\tvar logic = _unique(parse.matches);\r\n\t\t\tif (logic.length > 1) {\r\n\t\t\t\tthrow new Error('\"AND\" and \"OR\" logic cannot be asserted in the same expression: ' + expr + '!');\r\n\t\t\t}\r\n\t\t\treturn new this(\r\n\t\t\t\tparse.tokens.map(expr => parseCallback(expr.trim())),\r\n\t\t\t\t_first(logic)\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @var string\r\n */\r\nAssertion.negation = 'NOT ';\r\n\r\n/**\r\n * @prop array\r\n */\r\nAssertion.operators = {\r\n\tand: ' and ',\r\n\tor: ' or ',\r\n\tAND: ' AND ',\r\n\tOR: ' OR ',\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Assertion;\r\n", "\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * AssignmentInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'AssignmentExpression'; },\r\n});\r\nexport default Interface;\r\n", "\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * BoolInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'BooleanType'; },\r\n});\r\nexport default Interface;\r\n", "\r\n/**\r\n * @imports\r\n */\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport BoolInterface from './BoolInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Bool (boolean) class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Bool = class extends BoolInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(state) {\r\n\t\tsuper();\r\n\t\tthis.state = state;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval() {\r\n\t\treturn this.state.toLowerCase().trim() === 'true';\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn this.state;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar expr = expr.toLowerCase().trim();\r\n\t\tif (expr === 'true' || expr === 'false') {\r\n\t\t\treturn new this(expr);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Bool;\r\n", "\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ComparisonInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'ComparisonExpression'; },\r\n});\r\nexport default Interface;\r\n", "\r\n/**\r\n * @imports\r\n */\r\nimport _flatten from '@webqit/util/arr/flatten.js';\r\nimport _first from '@webqit/util/arr/first.js';\r\nimport _last from '@webqit/util/arr/last.js';\r\nimport _difference from '@webqit/util/arr/difference.js';\r\nimport _isArray from '@webqit/util/js/isArray.js';\r\nimport _isObject from '@webqit/util/js/isObject.js';\r\nimport _isString from '@webqit/util/js/isString.js';\r\nimport _each from '@webqit/util/obj/each.js';\r\nimport ComparisonInterface from './ComparisonInterface.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Comparison class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class Comparison extends ComparisonInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(operand1, operand2, operator) {\r\n\t\tsuper();\r\n\t\tthis.operand1 = operand1;\r\n\t\tthis.operand2 = operand2;\r\n\t\tthis.operator = operator;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\treturn this.constructor.compare(\r\n\t\t\tthis.operand1.eval(context, params), \r\n\t\t\tthis.operand2.eval(context, params), \r\n\t\t\tthis.operator\r\n\t\t);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn [\r\n\t\t\tthis.operand1.stringify(params), \r\n\t\t\tthis.operator, \r\n\t\t\tthis.operand2.stringify(params)\r\n\t\t].join(' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar operators = _flatten(this.operators).map(oper => ' ' + oper + ' ');\r\n\t\tvar parse = Lexer.lex(expr, operators);\r\n\t\tif (parse.tokens.length > 1) {\r\n\t\t\tif (parse.tokens.length > 2) {\r\n\t\t\t\tthrow new Error('Malformed \"Comparison\" expression: ' + expr + '!');\r\n\t\t\t}\r\n\t\t\treturn new this(\r\n\t\t\t\tparseCallback(_first(parse.tokens).trim()),\r\n\t\t\t\tparseCallback(_last(parse.tokens).trim()),\r\n\t\t\t\tparse.matches[0].trim()\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * -------------------------------------------------------\r\n\t */\r\n\t \r\n\t/**\r\n\t * Use the operator type to compare the two operands\r\n\t *\r\n\t * @param mixed\t\toperand1\t\t\r\n\t * @param mixed\t\toperand2\t\t\r\n\t * @param string \toperator\t\t\r\n\t *\r\n\t * @return bool\r\n\t */\r\n\tstatic compare(operand1, operand2, operator = '==') {\r\n\t\tif (_flatten(this.operators).indexOf(operator) === -1) {\r\n\t\t\tthrow new Error('The operator \"' + operator + '\" is not recognized.');\r\n\t\t}\r\n\t\tswitch(operator) {\r\n\t\t\tcase '===':\r\n\t\t\t\treturn operand1 === operand2;\r\n\t\t\tcase '==':\r\n\t\t\tcase '=':\r\n\t\t\t\treturn operand1 == operand2;\r\n\t\t\tcase '>':\r\n\t\t\t\treturn operand1 > operand2;\r\n\t\t\tcase '<':\r\n\t\t\t\treturn operand1 < operand2;\r\n\t\t\tcase '>=':\r\n\t\t\t\treturn operand1 >= operand2;\r\n\t\t\tcase '<=':\r\n\t\t\t\treturn operand1 <= operand2;\r\n\t\t\tcase '!=':\r\n\t\t\t\treturn operand1 != operand2;\r\n\t\t\tcase '<>':\r\n\t\t\tcase '!==':\r\n\t\t\t\treturn operand1 !== operand2;\r\n\t\t\tcase '^=':\r\n\t\t\t\treturn _isString(operand1) && operand1.startsWith(operand2);\r\n\t\t\tcase '$=':\r\n\t\t\t\treturn _isString(operand1) && operand1.endsWith(operand2);\r\n\t\t\tcase '*=':\r\n\t\t\t\t// Contains\r\n\t\t\t\treturn _isArray(operand2) || _isString(operand2) ? operand1.indexOf(operand2) > -1 : false;\r\n\t\t\tcase '~=':\r\n\t\t\t\t// Contains word\r\n\t\t\t\treturn _isString(operand1) && _isString(operand2) && (' ' + operand1 + ' ').indexOf(' ' + operand2 + ' ') > -1;\r\n\t\t\tcase '>=<': // Between\r\n\t\t\t\t if (!(_isArray(operand2) && operand2.length === 2)) {\r\n\t\t\t\t\t throw new Error('A \\'Between\\' comparison requires argument 2 to be an array of exactly 2 values.');\r\n\t\t\t\t }\r\n\t\t\t\t return operand1 >= operand2[0] && operand1 <= operand2[1];\r\n\t\r\n\t\t\tcase '/**/': // Regex\r\n\t\t\t\treturn operand2.match(new RegExp(operand1));\r\n\t\t\tdefault:\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\t \r\n\t/**\r\n\t * Compares two operands for differences\r\n\t *\r\n\t * @param mixed\t\toperand1\t\t\r\n\t * @param mixed\t\toperand2\t\t\r\n\t * @param bool\t \tstrict\t\t\r\n\t *\r\n\t * @return bool\r\n\t */\r\n\tstatic diff(operand1, operand2, strict) {\r\n\t\treturn !this.compare(operand1, operand2, strict ? '===' : '==');\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop array\r\n */\r\nComparison.operators = {\r\n\trelative: {\r\n\t\tlesserThan: '<',\r\n\t\tgreaterThan: '>',\r\n\t\tlesserThanOrEqualsTo: '<=',\r\n\t\tgreaterThanOrEqualsTo: '>=',\r\n\t},\r\n\tpartial: {\r\n\t\tany: 'any',\r\n\t\tin: 'in',\r\n\t\tlike: 'like',\r\n\t},\r\n\texact: {\r\n\t\tnotEqualsTo: '<>',\r\n\t\t// must be after all ocurrencies of \"=\"\r\n\t\tis: '=',\r\n\t},\r\n};", "\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ConditionInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'TernaryConditional'; },\r\n});\r\nexport default Interface;\r\n", "\r\n/**\r\n * @imports\r\n */\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport _unwrap from '@webqit/util/str/unwrap.js';\r\nimport ConditionInterface from './ConditionInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Condition class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class Condition extends ConditionInterface {\r\n\t\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(assertion, onTrue, onFalse) {\r\n\t\tsuper();\r\n\t\tthis.assertion = assertion;\r\n\t\tthis.onTrue = onTrue;\r\n\t\tthis.onFalse = onFalse;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn 'IF (' + [\r\n\t\t\tthis.assertion.stringify(params), \r\n\t\t\tthis.onTrue.stringify(params),\r\n\t\t\tthis.onFalse.stringify(params)\r\n\t\t].join(', ') + ')';\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\treturn this.assertion.eval(context, params) \r\n\t\t\t? this.onTrue.eval(context, params) \r\n\t\t\t: this.onFalse.eval(context, params);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tif (expr.match(/^if[ ]*?\\(/i)) {\r\n\t\t\tvar tokens = Lexer.split(_unwrap(expr.trim().substr(2).trim(), '(', ')'), [',']);\r\n\t\t\tif (tokens.length !== 3) {\r\n\t\t\t\tthrow new Error('Malformed condition expression: ' + expr + '!');\r\n\t\t\t}\r\n\t\t\treturn new this(...tokens.map(expr => parseCallback(expr.trim())));\r\n\t\t}\r\n\t}\r\n};", "\n/**\n * @imports\n */\nimport IndependentExprInterface from '../IndependentExprInterface.js';\n\n/**\n * ---------------------------\n * DeleteInterface\n * ---------------------------\n */\t\t\t\t\n\nconst Interface = class extends IndependentExprInterface {};\nObject.defineProperty(Interface.prototype, 'jsenType', {\n\tget() { return 'DeleteStatement'; },\n});\nexport default Interface;\n", "\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isString from '../js/isString.js';\r\n\r\n/**\r\n * Return an object for the given pair(s) of input.\r\n *\r\n * @param string|array \t\t\tkey\r\n * @param mixed|array\t\t\tval \r\n *\r\n * @return object\r\n */\r\nexport default function(key, val = null) {\r\n\tvar obj = {};\r\n\tif (arguments.length === 2) {\r\n\t\tif (_isArray(key) && _isArray(val)) {\r\n\t\t\tkey.forEach((k, i) => obj[k] = val[i]);\r\n\t\t} else {\r\n\t\t\tobj[key] = val;\r\n\t\t}\r\n\t}\r\n\treturn obj;\r\n};\r\n", "\n/**\n * @imports\n */\nimport ExprInterface from '../ExprInterface.js';\n\n/**\n * ---------------------------\n * JoinInterface\n * ---------------------------\n */\t\t\t\t\n\nconst Interface = class extends ExprInterface {};\nObject.defineProperty(Interface.prototype, 'jsenType', {\n\tget() { return 'Literal'; },\n});\nexport default Interface;\n", "\n/**\n * @imports\n */\nimport LiteralInterface from './LiteralInterface.js';\n\n/**\n * ---------------------------\n * Literal class\n * ---------------------------\n */\t\t\t\t\nexport default class Literal extends LiteralInterface {\n\n\t/**\n\t * @inheritdoc\n\t */\n\tconstructor(expr) {\n\t\tsuper();\n\t\tthis.expr = expr;\n\t}\n\t \n\t/**\n\t * @inheritdoc\n\t */\n\teval() {\n\t\treturn this.expr;\n\t}\n\t\n\t/**\n\t * @inheritdoc\n\t */\n\ttoString() {\n\t\treturn this.stringify();\n\t}\n\t\n\t/**\n\t * @inheritdoc\n\t */\n\tstringify(params = {}) {\n\t\treturn this.expr;\n\t}\n\t\t\n\t/**\n\t * @inheritdoc\n\t */\n\tstatic parse(expr, parseCallback = null, params = {}) {\n\t\treturn new this(expr);\n\t}\n}", "\n/**\n * @imports\n */\nimport IndependentExprInterface from '../IndependentExprInterface.js';\n\n/**\n * ---------------------------\n * TableInterface\n * ---------------------------\n */\t\t\t\t\n\nconst Interface = class extends IndependentExprInterface {};\nObject.defineProperty(Interface.prototype, 'jsenType', {\n\tget() { return 'TableExpression'; },\n});\nexport default Interface;\n", "\n/**\n * @imports\n */\nimport _Cursor from './_Cursor.js';\nimport _Table from './_Table.js';\n\n/**\n * ---------------------------\n * View class\n * ---------------------------\n */\t\t\t\t\n\nexport default class View extends _Table {\n\t \n\t/**\n\t * @inheritdoc\n\t */\n\tconstructor(stmt, database, tableName, def, params = {}) {\n\t\tsuper(database, tableName, def, params);\n\t\tthis.stmt = stmt;\n\t}\n\n\t/**\n\t * Returns a cursor.\n\t * \n\t * @return Cursor\n\t */\n\tgetCursor() {\n\t\treturn new _Cursor((this.def.data || []).filter(row => row));\n\t}\n\n\t/**\n\t * Syncs cursors at the base.\n\t * \n\t * @param Cursor cursor\n\t * \n\t * @return Number\n\t */\n\tasync syncCursor(cursor) {\n\t\treturn this.stmt.base.syncCursors();\n\t}\n}", "\n/**\n * @imports\n */\nimport {\n\tAbstraction,\n\tAbstractionInterface,\n\tReferenceInterface,\n} from '../grammar.js';\nimport _isFunction from '@webqit/util/js/isFunction.js';\nimport _isArray from '@webqit/util/js/isArray.js';\nimport _isObject from '@webqit/util/js/isObject.js';\nimport _isEmpty from '@webqit/util/js/isEmpty.js';\nimport _promise from '@webqit/util/js/promise.js';\nimport _arrFrom from '@webqit/util/arr/from.js';\nimport _objFrom from '@webqit/util/obj/from.js';\nimport _objFirst from '@webqit/util/obj/first.js';\nimport _each from '@webqit/util/obj/each.js';\nimport Lexer from '@webqit/util/str/Lexer.js';\nimport LiteralInterface from '../grammar/LiteralInterface.js';\nimport Literal from '../grammar/Literal.js';\nimport TableInterface from './TableInterface.js';\nimport View from '../database/View.js';\nimport _Driver from '../database/_Driver.js';\nimport _Database from '../database/_Database.js';\n\n/**\n * ---------------------------\n * Table class\n * ---------------------------\n */\t\t\t\t\n\nexport default class Table extends TableInterface {\n\t\n\t/**\n\t * @inheritdoc\n\t */\n\tconstructor(expr, alias, claused = false, schema = null) {\n\t\tsuper();\n\t\t// LiteralInterface or AbstractionInterface\n\t\tthis.expr = expr;\n\t\tthis.alias = alias;\n\t\tthis.claused = claused;\n\t\tthis.schema = schema;\n\t\tthis.associatedReferences = [];\n\t}\n\t\n\t/**\n\t * --------------\n\t */\n\t\n\t/**\n\t * @inheritdoc\n\t */\n\tas(alias) {\n\t\tthis.alias = alias;\n\t\tthis.claused = true;\n\t\treturn this;\n\t}\n\t\n\t/**\n\t * @inheritdoc\n\t */\n\tgetDatabaseName() {\n\t\treturn (this.expr + \"\").split('.').slice(0, -1)[0] || '';\n\t}\n\t\n\t/**\n\t * @inheritdoc\n\t */\n\tgetName() {\n\t\t// Ask down the line?\n\t\tif (this.isDerivedQuery()) {\n\t\t\treturn _arrFrom(this.getDerivedQuery().getTable(), false)[0].getName();\n\t\t}\n\t\t// Without backticks\n\t\treturn (this.expr + \"\").split('.').pop();\n\t}\n\n\t/**\n\t * @inheritdoc\n\t */\n\tgetAlias() {\n\t\treturn this.alias || this.getName();\n\t}\n\n\t/**\n\t * Tells if this is a derived query\n\t * \n\t * @return Bool\n\t */\n\tisDerivedQuery() {\n\t\treturn this.expr instanceof AbstractionInterface;\n\t}\n\n\t/**\n\t * Returns the derived query\n\t * \n\t * @return Bool\n\t */\n\tgetDerivedQuery() {\n\t\treturn this.expr/*ABS*/.expr/*SELECT*/;\n\t}\n\n\t/**\n\t * Associates a Reference\n\t * \n\t * @param Object reference\n\t * \n\t * @return void\n\t */\n\tassociateReference(reference) {\n\t\treturn this.associatedReferences.push(reference);\n\t}\n\n\t/**\n\t * Returns the associated References\n\t * \n\t * @return Array\n\t */\n\tgetAssociateReferences() {\n\t\treturn this.associatedReferences;\n\t}\n\n\t/**\n\t * @inheritdoc\n\t */\n\tgetSchema() {\n\t\tif (!this.schema && this.isDerivedQuery()) {\n\t\t\tvar derivedName = this.getAlias();\n\t\t\tvar derivedQuery = this.getDerivedQuery();\n\t\t\tvar derivedQuerySources = derivedQuery.getSources(true/* resolve */);\n\t\t\tvar getAliasOfField = fieldName => derivedQuery.getFields().reduce((alias, field) => alias || (fieldName === field.getName() ? field.getAlias() : null), null);\n\t\t\t// ---------------------\n\t\t\t// Sources schemas\n\t\t\tvar ALL_SCHEMAS = {};\n\t\t\tderivedQuerySources.forEach(source => {\n\t\t\t\tALL_SCHEMAS[source.getAlias()] = source.getSchema();\n\t\t\t});\n\t\t\tvar MAIN_SCHEMA = _objFirst(ALL_SCHEMAS);\n\t\t\t// ---------------------\n\t\t\t// Fields schemas\n\t\t\tvar derivedSchema = { name: derivedName, columns: {}, indexes: {}, derived: true, };\n\t\t\tderivedQuery.getFields().forEach(field => {\n\t\t\t\tif (field.expr instanceof ReferenceInterface) {\n\t\t\t\t\tif (field.getName() === '*') {\n\t\t\t\t\t\tfield.expr.interpreted.forEach(ref => {\n\t\t\t\t\t\t\tderivedSchema.columns[ref.name] = ((ALL_SCHEMAS[ref.context.name] || {}).columns || {})[name] || {type: 'any', derived: true};\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar name = field.getName(), context = field.getContextName();\n\t\t\t\t\t\tderivedSchema.columns[field.getAlias()] = (((context ? ALL_SCHEMAS[context] : MAIN_SCHEMA) || {}).columns || {})[name] || {type: 'any', derived: true};\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tderivedSchema.columns[field.getAlias()] = {type: 'any', derived: true};\n\t\t\t\t}\n\t\t\t});\n\t\t\t// ---------------------\n\t\t\t// PRIMARY KEY\n\t\t\tif (!_isEmpty(derivedSchema.primaryKey)) {\n\t\t\t\tderivedSchema.primaryKey = _isArray(MAIN_SCHEMA.primaryKey) \n\t\t\t\t\t? MAIN_SCHEMA.primaryKey.map(fieldName => getAliasOfField(fieldName))\n\t\t\t\t\t: getAliasOfField(MAIN_SCHEMA.primaryKey);\n\t\t\t}\n\t\t\t// ---------------------\n\t\t\t// RUNTIME UNIQUE\n\t\t\t_each(MAIN_SCHEMA.indexes || {}, (indexName, indexDef) => {\n\t\t\t\tindexDef = {...indexDef};\n\t\t\t\tvar keyPathAliased = _arrFrom(indexDef.keyPath).map(fieldName => getAliasOfField(fieldName));\n\t\t\t\tindexDef.keyPath = !_isArray(indexDef.keyPath) ? keyPathAliased[0] : keyPathAliased;\n\t\t\t\tif (!_isEmpty(indexDef.keyPath)) {\n\t\t\t\t\tderivedSchema.indexes[indexName] = indexDef;\n\t\t\t\t}\n\t\t\t});\n\t\t\t// ---------------------\n\t\t\t// ENGINE\n\t\t\tderivedSchema.driver = MAIN_SCHEMA.driver;\n\n\t\t\t// Cache\n\t\t\tthis.schema = derivedSchema;\n\t\t}\n\n\t\treturn this.schema;\n\t}\n\t\n\t/**\n\t * @inheritdoc\n\t */\n\teval(dbDriver = null, params = {}) {\n\n\t\tif (this.interpreted) {\n\t\t\treturn this.interpreted.eval(dbDriver, params);\n\t\t}\n\n\t\t// --------------------------\n\n\t\tif (!dbDriver) {\n\t\t\tthrow new Error('Context must be provided!');\n\t\t}\n\n\t\tconst getDatabase = databaseName => {\n\t\t\treturn Promise.resolve().then(() => {\n\t\t\t\tif (dbDriver instanceof _Driver) {\n\t\t\t\t\treturn databaseName ? dbDriver.database(databaseName) : dbDriver.database();\n\t\t\t\t}\n\t\t\t\tif (databaseName) {\n\t\t\t\t\tthrow new Error('[' + this.expr + ']: For tables that are fully-qualified with a database name, a database factory must be provided as context.');\n\t\t\t\t}\n\t\t\t\treturn dbDriver;\n\t\t\t})\n\t\t};\n\t\t// --------------------------\n\n\t\t// Derived table???\n\t\tif (this.isDerivedQuery()) {\n\t\t\tvar derivedName = this.getAlias(),\n\t\t\t\tderivedQuery = this.getDerivedQuery(),\n\t\t\t\tderivedSchema = this.getSchema(dbDriver);\n\t\t\treturn derivedQuery.eval(dbDriver, params).then(async derivedStore => {\n\t\t\t\tvar database = await getDatabase();\n\t\t\t\tvar _params = {...params};\n\t\t\t\t_params.alias = derivedName;\n\t\t\t\treturn new View(derivedQuery, database, derivedName, {\n\t\t\t\t\tschema: derivedSchema, \n\t\t\t\t\tdata: derivedStore,\n\t\t\t\t}, _params);\n\t\t\t});\n\t\t}\n\n\t\tvar databaseName = this.getDatabaseName();\n\t\treturn getDatabase(databaseName).then(database => {\n\t\t\tif (!(database instanceof _Database)) {\n\t\t\t\tthrow new Error('[' + this.expr + ']: The provided context could not be resolved to a valid database instance.');\n\t\t\t}\n\t\t\treturn database.table(this.getName(), {mode: params.mode, alias: this.getAlias()});\n\t\t});\n\n\t}\n\t\n\t/**\n\t * @inheritdoc\n\t */\n\ttoString() {\n\t\treturn this.stringify();\n\t}\n\t\n\t/**\n\t * @inheritdoc\n\t */\n\tstringify(params = {}) {\n\t\t// --------------------------\n\t\tif (this.interpreted && params.interpreted) {\n\t\t\treturn this.interpreted.stringify(params);\n\t\t}\n\t\t// --------------------------\n\t\treturn [this.expr.stringify(params), this.claused ? 'AS' : '', this.alias].filter(a => a).join(' ');\n\t}\n\t\n\t/**\n\t * @inheritdoc\n\t */\n\tstatic parse(expr, parseCallback, params = {}) {\n\t\tvar parse = Lexer.lex(expr, [' (as )?'], {useRegex:'i'});\n\t\tif (parse.tokens.length < 3) {\n\t\t\tvar SCHEMA;\n\t\t\tvar tableParse = parseCallback(parse.tokens[0], [Abstraction, Literal]);\n\t\t\tvar alias = (parse.tokens[1] || '').trim(), \n\t\t\t\tclaused = (parse.matches[0] || '').trim();\n\n\t\t\t// -------------------\n\t\t\t// OBTAIN OR CREATE TABLE SCHEMA\n\t\t\t// -------------------\n\n\t\t\tif (tableParse instanceof LiteralInterface) {\n\t\t\t\tvar fullTableName = tableParse.toString().split('.'),\n\t\t\t\t\ttableName = fullTableName.pop(),\n\t\t\t\t\tdatabaseName = fullTableName.pop(),\n\t\t\t\t\tDB_SCHEMA = params.dbDriver.getDatabaseSchema(databaseName);\n\t\t\t\t// -----------\n\t\t\t\tif (DB_SCHEMA && DB_SCHEMA[tableName]) {\n\t\t\t\t\tSCHEMA = DB_SCHEMA[tableName];\n\t\t\t\t} else {\n\t\t\t\t\tif (params.validation !== false && params.assertTableValidity !== false) {\n\t\t\t\t\t\t// Throw \"Table unknown!\"\n\t\t\t\t\t\tthrow new Error('Unknown table: ' + tableName + '.');\n\t\t\t\t\t}\n\t\t\t\t\tSCHEMA = { name: tableName, columns: {}, indexes: {}, derived: true, };\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (!alias) {\n\t\t\t\t\tthrow new Error(`Derived tables must be aliased.`);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn new this(tableParse, alias, claused, SCHEMA);\n\t\t}\n\t}\n}", "\r\n/**\r\n * Sums an array of numbers.\r\n *\r\n * @param array \tarr\r\n *\r\n * @return number\r\n */\r\nexport default function(arr) {\r\n\tarr = arr.slice();\r\n\treturn arr.reduce((total, v) => total + v, arr.shift());\r\n};\r\n", "\r\n/**\r\n * @imports\r\n */\r\nimport _sum from './sum.js';\r\n\r\n/**\r\n * Gets the average of an array of numbers.\r\n *\r\n * @param array \tarr\r\n *\r\n * @return number\r\n */\r\nexport default function(arr) {\r\n\treturn arr.length ? _sum(arr) / arr.length : 0;\r\n};", "\r\n/**\r\n * Gets the maximum of an array of numbers.\r\n *\r\n * @param array \tarr\r\n *\r\n * @return number\r\n */\r\nexport default function(arr) {\r\n\tarr = arr.slice();\r\n\treturn arr.reduce((v1, v2) => Math.max(v1, v2), arr.shift());\r\n};\r\n", "\r\n/**\r\n * Gets the minimum of an array of numbers.\r\n *\r\n * @param array \tarr\r\n *\r\n * @return number\r\n */\r\nexport default function(arr) {\r\n\tarr = arr.slice();\r\n\treturn arr.reduce((v1, v2) => Math.min(v1, v2), arr.shift());\r\n};\r\n", "\r\n/**\r\n * Gets one or more random values from an array.\r\n *\r\n * @param array \tarr\r\n * @param int\t \tamount\r\n *\r\n * @return mixed|array\r\n */\r\nexport default function(arr, amount = 1) {\r\n\tvar result = [];\r\n\tvar rand = null;\r\n\twhile (result.length < amount && (rand = arr[Math.floor(Math.random() * arr.length)]) && result.indexOf(rand) === -1) {\r\n\t\tresult.push(rand);\r\n\t};\r\n\treturn arguments.length > 1 ? result : result[0];\r\n};\r\n", "\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeObject from '../js/isTypeObject.js';\r\nimport _isUndefined from '../js/isUndefined.js';\r\nimport _isNull from '../js/isNull.js';\r\nimport _arrFrom from '../arr/from.js';\r\n\r\n/**\r\n * Retrieves the value at the given path.\r\n *\r\n * A return value of undefined is ambiguous, and can mean either that the\r\n * path does not exist, or that the path actually exists but with a value of undefined. If it is required to\r\n * know whether the path actually exists, pass an object as a third argument.\r\n * This object will have an \"exists\" key set to true/false.\r\n *\r\n * @param object \t\t\t\tctxt\r\n * @param array \t\t\t\tpath\r\n * @param object \t\t\t\ttrap\r\n * @param object \t\t\t\treciever\r\n *\r\n * @return mixed\r\n */\r\nexport default function(ctxt, path, trap = {}, reciever = {}) {\r\n\tpath = _arrFrom(path).slice();\r\n\tvar _ctxt = ctxt;\r\n\twhile(!_isUndefined(_ctxt) && !_isNull(_ctxt) && path.length) {\r\n\t\tvar _key = path.shift();\r\n\t\tif (!(trap.get ? trap.get(_ctxt, _key) : (_isTypeObject(_ctxt) ? _key in _ctxt : _ctxt[_key]))) {\r\n\t\t\treciever.exists = false;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t_ctxt = trap.get ? trap.get(_ctxt, _key) : _ctxt[_key];\r\n\t}\r\n\treciever.exists = true;\r\n\treturn _ctxt;\r\n};\r\n", "\n/**\n * @imports\n */\nimport _avg from '@webqit/util/arr/avg.js';\nimport _unique from '@webqit/util/arr/unique.js';\nimport _max from '@webqit/util/arr/max.js';\nimport _min from '@webqit/util/arr/min.js';\nimport _sum from '@webqit/util/arr/sum.js';\nimport _first from '@webqit/util/arr/first.js';\nimport _last from '@webqit/util/arr/last.js';\nimport _rand from '@webqit/util/arr/rand.js';\nimport _isArray from '@webqit/util/js/isArray.js';\nimport _isNull from '@webqit/util/js/isNull.js';\nimport _after from '@webqit/util/str/after.js';\nimport _objFrom from '@webqit/util/obj/from.js';\nimport _merge from '@webqit/util/obj/merge.js';\nimport _get from '@webqit/util/obj/get.js';\n\n/**\n * ---------------------------\n * Row class\n * ---------------------------\n */\t\t\t\t\n\nexport default class Row {\n\t\n\tconstructor(params) {\n\t\tObject.defineProperty(this, '.params', {value: params});\n\t}\n\t \n\t/**\n\t * @inheritdoc\n\t */\n\tCONCAT(...args) {\n\t\treturn args.join('');\n\t}\n\t \n\t/**\n\t * @inheritdoc\n\t */\n\tCONCAT_WS(...args) {\n\t\treturn args.join(args.shift());\n\t}\n\t \n\t/**\n\t * @inheritdoc\n\t */\n\tCOALESCE(...args) {\n\t\treturn args.reduce((prev, next) => !_isNull(prev) ? prev : next, null);\n\t}\n\t\t \n\t/**\n\t * @inheritdoc\n\t */\n\tFIND_IN_SET(substr, str) {\n\t\treturn str.indexOf(substr);\n\t}\n\t\t\t \n\t/**\n\t * @inheritdoc\n\t */\n\tISNULL(val) {\n\t\treturn _isNull(val);\n\t}\n\t\t\n\t/**\n\t * ----------------\n\t * AGGREGATE FUNCTIONS\n\t * ----------------\n\t */\n\t\n\t/**\n\t * @inheritdoc\n\t */\n\tCOUNT(rows, flag, column) {\n\t\tif (column.stringify() === '*') {\n\t\t\t// NULLs accepted\n\t\t\treturn rows.length;\n\t\t}\n\t\treturn this.COLUMN(rows, flag, column).length;\n\t}\n\t\n\t/**\n\t * @inheritdoc\n\t */\n\tGROUP_CONCAT(rows, flag, column) {\n\t\treturn this.COLUMN(rows, flag, column).join('');\n\t}\n\t\n\t/**\n\t * @inheritdoc\n\t */\n\tGROUP_CONCAT_WS(rows, flag, separator, column) {\n\t\treturn this.COLUMN(rows, flag, column).join(separator.eval(this, this['.params']));\n\t}\n\t\n\t/**\n\t * @inheritdoc\n\t */\n\tAVG(rows, flag, column) {\n\t\treturn _avg(this.COLUMN(rows, flag, column));\n\t}\n\t\n\t/**\n\t * @inheritdoc\n\t */\n\tMAX(rows, flag, column) {\n\t\treturn _max(this.COLUMN(rows, flag, column));\n\t}\n\t\n\t/**\n\t * @inheritdoc\n\t */\n\tMIN(rows, flag, column) {\n\t\treturn _min(this.COLUMN(rows, flag, column));\n\t}\n\t\n\t/**\n\t * @inheritdoc\n\t */\n\tSUM(rows, flag, column) {\n\t\treturn _sum(this.COLUMN(rows, flag, column));\n\t}\n\n\t/**\n\t * ----------------\n\t * AGGREGATE SUPPORT FUNCTIONS\n\t * ----------------\n\t */\n\t\n\t/**\n\t * @inheritdoc\n\t */\n\tFIRST(rows, flag, column) {\n\t\t// NULLs accepted\n\t\treturn column.eval(_first(rows) || {}, this['.params']);\n\t}\n\t\n\t/**\n\t * @inheritdoc\n\t */\n\tLAST(rows, flag, column) {\n\t\t// NULLs accepted\n\t\treturn column.eval(_last(rows) || {}, this['.params']);\n\t}\n\t\n\t/**\n\t * @inheritdoc\n\t */\n\tANY_VALUE(rows, flag, column) {\n\t\treturn _rand(this.COLUMN(rows, flag, column));\n\t}\n\t\n\t/**\n\t * @inheritdoc\n\t */\n\tGROUPING(rows, flag, ...onColumns) {\n\t\tif (!this.AGGR || !this.AGGR.isRollup) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn onColumns.reduce((cum, column, i) => {\n\t\t\tvar match = this.AGGR.by.filter(by => {\n\t\t\t\tvar byStr = by.stringify();\n\t\t\t\tvar columnStr = column.stringify();\n\t\t\t\tif (columnStr.indexOf('.') === -1 && byStr.indexOf('.') > -1) {\n\t\t\t\t\tbyStr = _after(byStr, '.');\n\t\t\t\t}\n\t\t\t\treturn columnStr === byStr;\n\t\t\t});\n\t\t\treturn match.length ? i + 1 : cum;\n\t\t}, 0);\n\t}\n\t\n\t/**\n\t * @inheritdoc\n\t */\n\tCOLUMN(rows, flag, arg) {\n\t\tvar result = rows.map(row => arg.eval(row, this['.params']));\n\t\t// COALESCE?\n\t\tif (_isArray(result[0])) {\n\t\t\tvar width = result[0].length;\n\t\t\tresult = result.filter(values => {\n\t\t\t\tif (!_isArray(values) || values.length !== width) {\n\t\t\t\t\tthrow new Error('Aggregate column list not even!');\n\t\t\t\t}\n\t\t\t\treturn values.reduce((_v, v) => !_isNull(_v) ? _v : v, null);\n\t\t\t});\n\t\t}\n\t\t// NO NULLS!\n\t\tresult = result.filter(v => !_isNull(v));\n\t\t// DISTINCT?\n\t\tif (flag.toUpperCase() === 'DISTINCT') {\n\t\t\tresult = _unique(result);\n\t\t}\n\t\treturn result;\n\t}\n\t\n\t/**\n\t * @inheritdoc\n\t */\n\tCOLUMNS(rows, flag, args) {\n\t\treturn args.map(arg => this.COLUMN(rows, flag, arg));\n\t}\n\t\n\t/**\n\t * ----------------\n\t * JSON FUNCTIONS\n\t * ----------------\n\t */\n\t\n\t/**\n\t * @inheritdoc\n\t */\n\tJSON_EXTRACT(doc, path) {\n\t\treturn _get(JSON.parse(doc), path.split('.').slice(1));\n\t}\n\t\n\t/**\n\t * @inheritdoc\n\t */\n\tJSON_OBJECT(name, value) {\n\t\treturn _objFrom(name, value);\n\t}\n\t\n\t/**\n\t * @inheritdoc\n\t */\n\tJSON_MERGE(doc1, doc2) {\n\t\treturn _merge(JSON.parse(doc1), JSON.parse(doc2));\n\t}\n}", "\n/**\n * @imports\n */\nimport _last from '@webqit/util/arr/last.js';\nimport _remove from '@webqit/util/arr/remove.js';\nimport _merge from '@webqit/util/obj/merge.js';\nimport _objFrom from '@webqit/util/obj/from.js';\nimport Row from './Row.js';\n\n/**\n * ---------------------------\n * Base class\n * ---------------------------\n */\t\t\t\t\n\nexport default class Base {\n\t \n\t/**\n\t * @inheritdoc\n\t */\n\tconstructor(main, joins, where, params) {\n\t\t// -------------------------\n\t\tthis.main = main;\n\t\tthis.joins = joins;\n\t\t// -------------------------\n\t\tthis.mainCursor = main.then(m => m.getCursor());\n\t\tthis.joinCursors = joins.map(join => join.then(j => j.getCursor()));\n\t\t// -------------------------\n\t\tthis.where = where;\n\t\tthis.params = params;\n\t\t// -------------------------\n\t\tthis._onfinish = [];\n\t\tPromise.all(this.joinCursors).then(joinCursors => {\n\t\t\t// Advcance joins sequentially...\n\t\t\tvar lastJoinCursor = joinCursors.reduce((prevCursor, currentCursor) => {\n\t\t\t\tif (prevCursor) {\n\t\t\t\t\tprevCursor.onfinish(currentCursor.next.bind(currentCursor));\n\t\t\t\t}\n\t\t\t\treturn currentCursor;\n\t\t\t}, null);\n\t\t\tthis.mainCursor.then(mainCursor => {\n\t\t\t\t// Last join cursor should advance main cursor\n\t\t\t\tif (lastJoinCursor) {\n\t\t\t\t\tlastJoinCursor.onfinish(mainCursor.next.bind(mainCursor));\n\t\t\t\t}\n\t\t\t\t// Fire onfinish event from main cursor\n\t\t\t\tmainCursor.onfinish(() => {\n\t\t\t\t\tthis.eof = true;\n\t\t\t\t\tthis._onfinish.forEach(callback => callback());\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\t \n\t/**\n\t * @inheritdoc\n\t */\n\tonfinish(callback) {this._onfinish.push(callback);}\n\n\t/**\n\t * @inheritdoc\n\t */\n\tasync fetch() {\n\t\tif (this.eof) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar rowComposition, rowCompositionRejection;\n\t\t// -----------\n\t\tlet __main = await this.main,\n\t\t\t__mainCursor = await this.mainCursor,\n\t\t\t__mainFetch = await __mainCursor.fetch(),\n\t\t\t__mainAlias = __main.params.alias || __main.name;\n\t\t// -----------\n\t\tlet __joins = await Promise.all(this.joins),\n\t\t\t__joinCursors = await Promise.all(this.joinCursors);\n\t\t// -----------\n\t\tlet joinFetches = __joinCursors.map(async (__joinCursor, i) => {\n\t\t\t\tif (rowCompositionRejection) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar __joinFetch = await __joinCursor.fetch(),\n\t\t\t\t\t__joinAlias = __joins[i].params.alias || __joins[i].name;\n\t\t\t\tif (!__joins[i].join || __joins[i].join.type === 'full') {\n\t\t\t\t\t__joinCursor.flags[__mainCursor.key] = true;\n\t\t\t\t\treturn __joinFetch;\n\t\t\t\t} else if (__joins[i].join.conditionClause.trim().toLowerCase() === 'using') {\n\t\t\t\t\t// Join using \"column name\"...\n\t\t\t\t\tvar column = __joins[i].join.condition.stringify();\n\t\t\t\t\tif (__joinFetch[column] === __mainFetch[column]) {\n\t\t\t\t\t\t__joinCursor.flags[__mainCursor.key] = true;\n\t\t\t\t\t\treturn __joinFetch;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tvar conditionRowComposition = new Row(this.params);\n\t\t\t\t\tconditionRowComposition[__mainAlias] = __mainFetch;\n\t\t\t\t\tconditionRowComposition[__joinAlias] = __joinFetch;\n\t\t\t\t\tif (__joins[i].join.condition.eval(conditionRowComposition, this.params)) {\n\t\t\t\t\t\t__joinCursor.flags[__mainCursor.key] = true;\n\t\t\t\t\t\treturn __joinFetch;\n\t\t\t\t\t}\t\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t// ---------------------\n\t\t\t\t// Left/Right Join \n\t\t\t\t// ---------------------\n\t\t\t\tif (!__joinCursor.flags[__mainCursor.key]) {\n\t\t\t\t\tif (__joinCursor.eof() && __joins[i].join.type.toLowerCase() === 'left') {\n\t\t\t\t\t\treturn {};\n\t\t\t\t\t} else if (__mainCursor.eof() && __joins[i].join.type.toLowerCase() === 'right') {\n\t\t\t\t\t\t__mainFetch = {};\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\trowCompositionRejection = true;\n\t\t});\n\t\tlet __joinFetches = await Promise.all(joinFetches);\n\t\t// -------------------------\n\t\t// Advance cursor.\n\t\t// IMPORTANT: AFTER HAVING WAITED FOR joinFetches\n\t\t(__joinCursors[0] || __mainCursor).next();\n\t\t// -------------------------\n\t\t// Filter by join status\n\t\tif (__joinFetches.filter(t => t).length === joinFetches.length) {\n\t\t\tvar _rowComposition = new Row(this.params);\n\t\t\t_rowComposition[__mainAlias] = __mainFetch;\n\t\t\t__joinFetches.forEach((rowMember, i) => {\n\t\t\t\tvar __joinAlias = __joins[i].params.alias || __joins[i].name;\n\t\t\t\t_rowComposition[__joinAlias] = rowMember;\n\t\t\t});\n\t\t\trowComposition = _rowComposition;\n\t\t}\n\t\t// ----------\n\t\t// Apply where\n\t\t// ----------\n\t\ttry {\n\t\t\tif (!rowComposition || (this.where && !this.where.eval(rowComposition, this.params))) {\n\t\t\t\treturn await this.fetch();\n\t\t\t}\n\t\t} catch(e) {\n\t\t\tthrow new Error('[\"' + this.where.stringify() + '\" in WHERE clause]: ' + e.message);\n\t\t}\n\t\treturn rowComposition;\n\t}\n\n\t/**\n\t * @inheritdoc\n\t */\n\tasync syncCursors() {\n\t\tvar __tables = await Promise.all(this.joins.concat(this.main));\n\t\tvar __cursors = await Promise.all(this.joinCursors.concat(this.mainCursor));\n\t\treturn Promise.all(__cursors.map((cursor, i) => {\n\t\t\treturn __tables[i].syncCursor(cursor);\n\t\t}));\n\t}\n}", "\n/**\n * imports\n */\nimport _isBoolean from '@webqit/util/js/isBoolean.js';\nimport _isObject from '@webqit/util/js/isObject.js';\nimport _isEmpty from '@webqit/util/js/isEmpty.js';\nimport _arrFrom from '@webqit/util/arr/from.js';\nimport _each from '@webqit/util/obj/each.js';\nimport _merge from '@webqit/util/obj/merge.js';\n\n/**\n * Requires the following tables: uac, uac_token (optional), account\n * Requires a user object: {id, lineage, parent, privileges,}\n */\nexport default class Query {\n\t\n\t/**\n\t * Creates the UAC logic that sets the value of each field conditionally.\n\t *\n\t * @param object                    params\n\t * @param object                    tableXSchema\n\t * @param object                    user\n\t *\n\t * @return object\n\t */\n\tconstructor(params, tableXSchema, user) {\n        // ---------------------\n        var UAC_PARAMS = createParams(params, ['uac']);\n        // ---------------------\n        this.user = user || {\n            id: 0,\n            parent: 0,\n            lineage: '0',\n            privileges: [],\n        };\n        // ---------------\n        // MAIN QUERY\n        // ---------------\n\t\tthis.schema = tableXSchema;\n        this.alias = 'MAIN';\n        this.select = [];\n        this.where = [];\n        // ---------------\n        // RULES\n        // ---------------\n        // JOIN: Table-wide rules most-specific to the guest\n        if (UAC_PARAMS.SCHEMAS.uac) {\n            this.EXPLICIT_TABLE_ACCESS_QUERY = {\n                query: getExplicitRulesQuery(UAC_PARAMS, this.schema.name, this.user),\n                alias: 'EXPLICIT_TABLE_ACCESS',\n                on: ['EXPLICIT_TABLE_ACCESS.table_row = 0'],\n            };\n        }\n        if (UAC_PARAMS.CONTROL_LEVEL === 'row') {\n            if (UAC_PARAMS.SCHEMAS.uac) {\n                // JOIN: Row-wide rules most-specific to the guest\n                this.EXPLICIT_ROW_ACCESS_QUERY = {\n                    query: getExplicitRulesQuery(UAC_PARAMS, this.schema.name, this.user),\n                    alias: 'EXPLICIT_ROW_ACCESS',\n                    on: ['EXPLICIT_ROW_ACCESS.table_row = ' + this.alias + '.' + this.schema.primaryKey],\n                };\n            }\n            // ---------------\n            // RIGHTS\n            // ---------------\n            // JOIN: The guest's organic rights towards the owner\n            if (this.schema.attributionKey && UAC_PARAMS.SCHEMAS.account) {\n                var ownerGuestRelationshipQuery = getOwnerGuestRelationshipQuery(UAC_PARAMS, this.user, false/* groupConcat */);\n                this.AUTHOR_user_RELATIONSHIP_QUERY = {\n                    query: ownerGuestRelationshipQueryn                    alias: 'AUTHOR_user_RELATIONSHIP',\n                    on: ['AUTHOR_user_RELATIONSHIP.' + ownerGuestRelationshipQuery.schema.primaryKey + ' = ' + this.alias + '.' + this.schema.attributionKey],\n                };\n            }\n        }\n        // ---------------\n        // APPLY\n        // ---------------\n        // The UAC table control\n        this.where.push(this.deriveEntityAccess('view') + ' <> 0');\n    }\n    \n    /**\n     * --------------------------\n     * ACCESS LOGIC\n     * --------------------------\n     */\n\n\t/**\n\t * Creates the SQL logic that computes descreet access rules and all other rules into a final value\n\t * - for entity access.\n\t *\n\t * @param string \t                accessType\n\t * @param bool \t\t                withActingRights\n\t *\n\t * @return string\n\t */\n\tderiveEntityAccess(accessType, withActingRights = false) {\n\t\tvar entityAccess = [];\n\t\tif (this.EXPLICIT_ROW_ACCESS_QUERY) {\n\t\t\tentityAccess.push('JSON_EXTRACT(' + this.EXPLICIT_ROW_ACCESS_QUERY.alias + '.uac, \"$.' + accessType + '\")');\n        }\n        if (this.EXPLICIT_TABLE_ACCESS_QUERY) {\n            entityAccess.push('JSON_EXTRACT(' + this.EXPLICIT_TABLE_ACCESS_QUERY.alias + '.uac, \"$.' + accessType + '\")');\n        }\n\t\tentityAccess.push(getRightsRulesIntersectionExpression(rules(this.schema.uac, accessType), this.getGuestRightsExpression(), withActingRights));\n        // ---------------------\n\t\treturn 'COALESCE(' + entityAccess.join(', ') + ')';\n\t}\n\t\n\t/**\n\t * Creates the SQL logic that computes descreet access rules and all \n     * other rules into their final values\n\t * - for table fields access.\n\t *\n\t * @param array \t                fields\n\t * @param string \t                accessType\n\t * @param bool \t\t                withActingRights\n\t *\n\t * @return object\n\t */\n\tderiveFieldsAccess(fields, accessType, withActingRights = false) {\n\t\tvar fieldsAccesses = {};\n\t\tfields.forEach(field => {\n\t\t\tvar fieldAccess = [];\n\t\t\tif (this.EXPLICIT_ROW_ACCESS_QUERY) {\n\t\t\t\tfieldAccess.push('JSON_EXTRACT(' + this.EXPLICIT_ROW_ACCESS_QUERY.alias + '.fields, \"$.' + field + '.uac.' + accessType + '\")');\n            }\n            if (this.EXPLICIT_TABLE_ACCESS_QUERY) {\n\t\t\t    fieldAccess.push('JSON_EXTRACT(' + this.EXPLICIT_TABLE_ACCESS_QUERY.alias + '.fields, \"$.' + field + '.uac.' + accessType + '\")');\n            }\n            fieldAccess.push(getRightsRulesIntersectionExpression(rules(this.schema.fields[field].uac, accessType), this.getGuestRightsExpression(), withActingRights));\n\t\t\t// In the form: id:\"0\"\n\t\t\tfieldsAccesses[field] = 'COALESCE(' + fieldAccess.join(', ') + ')';\n\t\t});\n\t\treturn fieldsAccesses;\n\t}\n    \n    /**\n     * --------------------------\n     * ORGANIC RIGHTS\n     * --------------------------\n     */\n \n    /**\n     * Creates the SQL expression for all user rights:\n     * Organic + Static Rights\n     * \n     * return string\n     */\n    getGuestRightsExpression() {\n        var rights = [];\n\t\tif (this.AUTHOR_user_RELATIONSHIP_QUERY) {\n\t\t\trights.push(this.AUTHOR_user_RELATIONSHIP_QUERY.alias + '.relationship');\n\t\t\tif (this.AUTHOR_user_TOKEN_QUERY) {\n\t\t\t\trights.push('IF(' + this.AUTHOR_user_TOKEN_QUERY.alias + '.id, \"user\", \"\")');\n\t\t\t}\n        }\n        if (this.user.privileges.length) {\n            rights.push('\"' + this.user.privileges.join(',') + '\"');\n        }\n        // If all conditions above have been met, then we should have here:\n        // CONCAT_WS(\",\", _RELATED_ACCOUNT.relationship, IF(_TOKEN.id, \"user\", \"\"), \"ADMIN,ETC\")\n        // This would resolve to:\n        // \"ANCESTOR,PARENT,101,ADMIN,ETC\";\n        return rights.length ? 'CONCAT_WS(\",\", ' + rights.join(', ') + ')' : '\"\"';\n    }\n    \n    /**\n     * --------------------------\n     * TOSTRING\n     * --------------------------\n     */\n    \n    /**\n     * Stringifies the query.\n     * \n     * @return string\n     */\n    toString() {\n        return 'SELECT ' + this.select.join(', ') \n        + ' FROM ' + this.schema.name + ' AS ' + this.alias\n        + (this.EXPLICIT_TABLE_ACCESS_QUERY ? ' LEFT JOIN (' + this.EXPLICIT_TABLE_ACCESS_QUERY.query + ') AS ' + this.EXPLICIT_TABLE_ACCESS_QUERY.alias + ' ON ' + this.EXPLICIT_TABLE_ACCESS_QUERY.on.join(' AND ') : '')\n        + (this.EXPLICIT_ROW_ACCESS_QUERY ? ' LEFT JOIN (' + this.EXPLICIT_ROW_ACCESS_QUERY.query + ') AS ' + this.EXPLICIT_ROW_ACCESS_QUERY.alias + ' ON ' + this.EXPLICIT_ROW_ACCESS_QUERY.on.join(' AND ') : '')\n        + (this.AUTHOR_user_RELATIONSHIP_QUERY ? ' LEFT JOIN (' + this.AUTHOR_user_RELATIONSHIP_QUERY.query + ') AS ' + this.AUTHOR_user_RELATIONSHIP_QUERY.alias + ' ON ' + this.AUTHOR_user_RELATIONSHIP_QUERY.on.join(' AND ') : '')\n        + ' WHERE ' + this.where.join(' AND ');\n    }\n}\n\n/**\n * Helps resolve UAC params from user-supplied params.\n * Applies sensible defaults.\n * \n * @param Object params\n * @param Array tableSpecifiers\n * \n * @return Object\n */\nexport function createParams(params, tableSpecifiers = []) {\n    // --------------\n    var UAC_PARAMS = _merge({\n        dbDriver: params.dbDriver,\n        SCHEMAS: {},\n    }, params.UAC || {});\n    // --------------\n    tableSpecifiers.forEach(tableSpecifier => {\n        var fullTableName = tableSpecifier;\n        if (UAC_PARAMS.TABLE_SPECIFIERS) {\n            // Use custom-defined name\n            fullTableName = UAC_PARAMS.TABLE_SPECIFIERS[tableSpecifier];\n        }\n        var tableNameSplit = fullTableName.split('.');\n        var tableName = tableNameSplit.pop(),\n            databaseName = tableNameSplit.pop();\n        UAC_PARAMS.SCHEMAS[tableSpecifier] = (UAC_PARAMS.dbDriver.getSchema(databaseName) || {})[tableName];\n    });\n    // --------------\n    return UAC_PARAMS;\n}\n  \n/**\n * --------------------------\n * TABLE-LEVEL UAC QUERY\n * - EXPLICIT and ORGANIC\n * --------------------------\n */\n\n/**\n * Makes the Query that finds the winning descreet access rules\n * for the given access type, for the current user OR the closest ancestor on this table (or, table row).\n *\n *  Each row has the following schema:\n * \n *  table_name: ...,\n *  table_row: ...,\n *  target: 1/3/7,\n *  uac: {\n *      read: 0,\n *      write: 0,\n *  },\n *  fields: {\n *      fname: {\n *          uac: {\n *              read: 0,\n *              write: 0,\n *          }\n *      }\n *  },\n *\n * @return object\n */\nexport function getExplicitRulesQuery(UAC_PARAMS, tableXName, user) {\n    var targetInLineageQuery = 'FIND_IN_SET(target, \"' + user.lineage.replace('/', ',') + '\")';\n    return {\n        schema: UAC_PARAMS.SCHEMAS.uac,\n        select: ['*', targetInLineageQuery + ' AS `lineage.target`'],\n        where: [\n            'table_name = ' + tableXName,\n            'target = ' + user.id + ' OR ' + targetInLineageQuery,\n        ],\n        orderBy: '`lineage.target` DESC',\n        limit: 1,\n        toString() {\n            return 'SELECT ' + this.select.join(', ') \n            + ' FROM ' + this.schema.name \n            + ' WHERE ' + this.where.join(' AND ') \n            + ' ORDER BY ' + this.orderBy \n            + ' LIMIT ' + this.limit;\n        },\n    };\n}\n      \n/**\n * Composes a query that determines the relatiosnhip\n * between a given owner and guest.\n * \n * A where clause can be subsequnetly added to the query\n * to identify the said owner\n * or a join clause can be added to dynamically identify the said owner\n * as part of a larger query.\n * \n * @param object                   UAC_PARAMS \n * @param object                   user \n * @param bool                     groupConcat \n * \n * @return object\n */\nexport function getOwnerGuestRelationshipQuery(UAC_PARAMS, user, groupConcat = false) {\n    var accessRightQueries = {};\n    // Descendant access right\n    accessRightQueries['DESCENDANT'] = 'FIND_IN_SET(id, \"' + user.lineage.replace(user.id + '/', '').replace(/\\//g, ',') + '\")';\n    // Child access right (also a descendant)\n    accessRightQueries['DESCENDANT,CHILD'] = 'id = ' + user.parent;\n    // Sibling access right\n    accessRightQueries['SIBLING'] = user.parent + ' = parent';\n    // Ancestor access right\n    accessRightQueries['ANCESTOR'] = 'FIND_IN_SET(' + user.id + ', REPLACE(REPLACE(lineage, CONCAT(id, \"/\"), \"\"), \"/\", \",\"))';\n    // Parent access right (also an ancestor)\n    accessRightQueries['ANCESTOR,PARENT'] = user.id + ' = parent';\n    // Direct attribution\n    accessRightQueries['AUTHOR'] = 'id = ' + user.id;\n    // ------\n    var compiledAccessRights = 'NULL'; // No access right\n    _each(accessRightQueries, (assertion, right) => {\n        compiledAccessRights = 'IF(' + assertion + ', \"' + right + '\", ' + compiledAccessRights + ')';\n    });\n    // ------\n    return {\n        schema: UAC_PARAMS.SCHEMAS.account,\n        select: (groupConcat ? 'GROUP_CONCAT(DISTINCT ' : '') + compiledAccessRights + (groupConcat ? ')' : '') + ' AS relationship',\n        where: [],\n        toString() {\n            return 'SELECT ' + this.select \n            + ' FROM ' + this.schema.name\n            + (this.where.length ? ' WHERE ' + this.where.join(' AND ') : '');\n        },\n    };\n}\n  \n/**\n * --------------------------\n * GENERAL HELPERS\n * --------------------------\n */\n    \n/**\n * Compiles to the SQL string that ssserts which of the current user's\n * total access rights (static + organic rights) passes the\n * given access rules.\n *\n * @param array|string|bool|null\trules\n * @param string\t\t\t\t\trightsExpression\n * @param bool\t\t\t\t\t\twithActingRights\n *\n * @return string\n */\nexport function getRightsRulesIntersectionExpression(rules, rightsExpression, withActingRights = false) {\n    var explicitFirstRule = _isBoolean(rules[0]) ? rules.shift() : null;\n    // No rule? Implict TRUE of NULL.\n    // Only rule is bool? Explicit TRUE/FALSE\n    if (!rules.length) {\n        return _isBoolean(explicitFirstRule) ? parseInt(explicitFirstRule) : 'NULL';\n    }\n    // ---------------------\n    // Which RULES are satisfied by RIGHTS?\n    // ---------------------\n    var nodeAccessAssertions = [];\n    rules.forEach(rule => {\n        var ruleSql = [];\n        // Where a rule specifies...\n        // PARENT+ETC\n        rule.split('+').forEach(r => {\n            ruleSql.push('FIND_IN_SET(\"' + r + '\", ' + rightsExpression + ')');\n        });\n        // Then we would have...\n        // IF(FIND_IN_SET(\"PARENT\". \"ANCESTOR,PARENT,101,ADMIN,ETC\") AND FIND_IN_SET(\"ETC\". \"ANCESTOR,PARENT,101,ADMIN,ETC\"), \"PARENT+ETC\", NULL);\n        nodeAccessAssertions.push('IF(' + ruleSql.join(' AND ') + ', \"' + rule + '\", NULL)');\n    });\n    // Gather none-NULL assertions\n    nodeAccessAssertions = 'COALESCE(' + nodeAccessAssertions.join(', ') + ')';\n    // ---------------------\n    // So should we invert the given NULLness of the logic?\n    // ---------------------\n    return explicitFirstRule \n        ? 'IF(ISNULL(' + nodeAccessAssertions + '), 1, 0)' \n        : 'IF(ISNULL(' + nodeAccessAssertions + '), 0, ' + (withActingRights ? nodeAccessAssertions : '1') + ')';\n}\n\n/**\n * Gets rules array\n * \n * @param array                     rules\n * @param string                    accessType\n * \n * @return array\n */\nexport function rules(rules, accessType) {\n    if (_isObject(rules)) {\n        rules = rules[accessType];\n    }\n    return _isEmpty(rules) \n        ? [] \n        : _arrFrom(rules);\n}\n", "\n/**\n * imports\n */\nimport _each from '@webqit/util/obj/each.js';\nimport _arrFrom from '@webqit/util/arr/from.js';\nimport Query, { createParams, getOwnerGuestRelationshipQuery } from './Query.js';\n\nexport default class Client {\n\t\n\t/**\n\t * Creates the UAC logic that sets the value of each field conditionally.\n\t *\n\t * @param object            params\n\t * @param array\t\t\t\ttableXSchema\n\t * @param object            user\n\t * @param array\t\t\t\tcolumns\n\t *\n\t * @return Query\n\t */\n\tstatic select(params, tableXSchema, user, columns = []) {\n\t\tcolumns = _arrFrom(columns);\n\t\tif (!columns.length || columns[0] === '*') {\n\t\t\tcolumns = Object.keys(tableXSchema.fields);\n\t\t}\n        // ---------------\n        // OBJECT_QUERY\n        // ---------------\n        var OBJECT_QUERY = new Query(params, tableXSchema, user);\n\t\t// The UAC fields control\n\t\tif (0) {\n\t\t\t_each(OBJECT_QUERY.deriveFieldsAccess(columns, 'view'), (field, accessPassExpression) => {\n\t\t\t\tOBJECT_QUERY.select.push('IF(' + accessPassExpression + ' <> 0, ' + OBJECT_QUERY.alias + '.' + field + ', NULL) AS ' + field);\n\t\t\t});\n\t\t} else {\n\t\t\tOBJECT_QUERY.select.push(...columns);\n\t\t}\n        return OBJECT_QUERY;\n\t}\n\t\t\n\t/**\n\t * Returns the list of all accounts that the given rights can be applied to.\n\t *\n\t * @param object            params\n\t * @param object            user\n\t * @param array\t \t\t\torganicRights\n\t * @param array\t \t\t\tpriorityAccounts\n\t *\n\t * @return Query\n\t */\n\tstatic getRelatedAccounts(params, user, organicRights, priorityAccounts = []) {\n\t\t// ---------------------\n        var UAC_PARAMS = createParams(params, ['uac', 'account']);\n        // ---------------------\n\t\tvar ACCOUNT_QUERY = {\n\t\t\tschema: UAC_PARAMS.SCHEMAS.account,\n\t\t\talias: 'ACCOUNT',\n\t\t\tselect: [],\n\t\t\twhere: [],\n\t\t\torderBy: [],\n\t\t\ttoString() {\n\t\t\t\treturn 'SELECT ' + this.select.join(', ')\n\t\t\t\t+ ' FROM ' + this.schema.name + ' AS ' + this.alias\n\t\t\t\t+ ' RIGHT JOIN (' + this.AUTHOR_USER_RELATIONSHIP_QUERY.query + ') AS ' + this.AUTHOR_USER_RELATIONSHIP_QUERY.alias + ' ON ' + this.AUTHOR_USER_RELATIONSHIP_QUERY.on.join(' AND ')\n                + ' WHERE ' + this.where.join(' AND ') \n                + (this.orderBy.length ? ' ORDER BY ' + this.orderBy : '');\n\t\t\t}\n\t\t}\n\t\t// RIGHT JOIN\n\t\tACCOUNT_QUERY.AUTHOR_USER_RELATIONSHIP_QUERY = {\n\t\t\tquery: getOwnerGuestRelationshipQuery(UAC_PARAMS, user, false/* groupConcat */),\n\t\t\talias: 'AUTHOR_USER_RELATIONSHIP',\n\t\t\ton: [\n\t\t\t\tACCOUNT_QUERY.alias + '.' + UAC_PARAMS.SCHEMAS.account.primaryKey + ' = AUTHOR_USER_RELATIONSHIP.' + UAC_PARAMS.SCHEMAS.account.primaryKey,\n\t\t\t\t'NOT ISNULL(AUTHOR_USER_RELATIONSHIP.relationship)',\n\t\t\t],\n\t\t};\n\t\tif (priorityAccounts) {\n\t\t\t// But ensure that the following accounts are listed first, if actually in list\n\t\t\tACCOUNT_QUERY.select.push('FIND_IN_SET(' + ACCOUNT_QUERY.alias + '.' + UAC_PARAMS.SCHEMAS.account.primaryKey + ', \"' + priorityAccounts.join(',') + '\") AS priority');\n\t\t\tACCOUNT_QUERY.orderBy.push('priority DESC');\n\t\t}\n\t\tif (organicRights) {\n\t\t\tACCOUNT_QUERY.where.push('AUTHOR_USER_RELATIONSHIP.relationship in (\"' + organicRights.join('\", \"') + '\")');\n\t\t}\n\t\treturn ACCOUNT_QUERY;\n\t}\n\n\t/**\n\t * Makes the Query that finds descreet access types\n\t * for the current user on this table (or, table row).\n\t *\n\t * @param object            params\n\t * @param object            user\n\t * @param string|array\t\taccesses\n\t * @param string|int\t\toverObject\t\t\tThe ID of the subject object.\n\t *\t\t\t\t\t\t\t\t\t\t\t\t(The object author will be basis for organic relationship.)\n\t * @param int\t\t\t\torAsRelatedTo\t\tWhen not overObject!\n\t *\t\t\t\t\t\t\t\t\t\t\t\t(This user ID will be basis for organic relationship.)\n\t * @param bool\t\t\t\twithFields\n\t * @param bool\t\t\t\twithActingRights\n\t *\n\t * @return Query\n\t */\n\tstatic getAccessesDoc(params, user, accesses, overObject = null, orAsRelatedTo = null, withFields = false, withActingRights = false) {\n        // Either of the following two arguments are accepted. Not both\n\t\tif (overObject && orAsRelatedTo) {\n\t\t\tthrow new Error('UAC queries must be either over an object and its author (argument #2), or as related to a specific user (argument #3). But not both!');\n\t\t}\n        // ---------------\n        // OBJECT_QUERY\n        // ---------------\n        var OBJECT_QUERY = new Query(params, tableName, user);\n        // JOIN: The user's organic rights towards the author\n        if (OBJECT_QUERY.AUTHOR_USER_RELATIONSHIP_QUERY) {\n            OBJECT_QUERY.AUTHOR_USER_RELATIONSHIP_QUERY.on.push('NOT ISNULL(AUTHOR_USER_RELATIONSHIP.relationship)');\n\t\t}\n\t\tif (overObject) {\n\t\t\t// The author of the object at the given row in _TABLE\n            OBJECT_QUERY.where.push(OBJECT_QUERY.schema.primaryKey + ' = ' + overObject);\n\t\t} else if (OBJECT_QUERY.schema.attributionKey && orAsRelatedTo) {\n\t\t\t// The author specified in orAsRelatedTo or all possible relationships.\n\t\t\t// Whichever the case, _TABLE gets to play no role in this query...\n            OBJECT_QUERY.where.push(OBJECT_QUERY.schema.attributionKey + ' = ' + orAsRelatedTo);\n\t\t\tOBJECT_QUERY.limit = 1;\n        }\n        // ---------------\n        // DOC\n        // ---------------\n        if (!accesses.length || accesses === '*') {\n            accesses = Client.standardAccesses;\n        } else {\n            accesses = _arrFrom(accesses);\n        }\n\t\tvar entityJson = [],\n\t\t\tfieldsJson = {},\n\t\t\tfields = withFields ? Object.keys(OBJECT_QUERY.schema.fields) : [];\n\t\taccesses.forEach(accessType => {\n\t\t\tentityJson.push('JSON_OBJECT(\"' + accessType + '\", COALESCE(' + Query.deriveEntityAccess(accessType, withActingRights) + '))');\n\t\t\t_each(Query.deriveFieldsAccess(fields, accessType, withActingRights), (field, access) => {\n                if (!fieldsJson[field]) {\n                    fieldsJson[field] = [];\n                }\n\t\t\t\tfieldsJson[field].push('JSON_OBJECT(\"' + accessType + '\", ' + access + ')');\n\t\t\t});\n\t\t});\n\t\tif (accesses.length > 1) {\n\t\t\tOBJECT_QUERY.select.push('JSON_MERGE(' + entityJson.join(', ') + ') AS uac');\n\t\t} else {\n\t\t\tOBJECT_QUERY.select.push(entityJson.join(', ') + ' AS uac');\n\t\t}\n\t\tif (fieldsJson.length) {\n\t\t\tvar allFieldsJson = [];\n\t\t\t_each(fieldsJson, (field, accessesDocs) => {\n\t\t\t\tif (accesses.length > 1) {\n\t\t\t\t\tallFieldsJson.push('JSON_OBJECT(\"' + field + '\", JSON_MERGE(' + accessesDocs.join(', ') + '))');\n\t\t\t\t} else {\n\t\t\t\t\tallFieldsJson.push('JSON_OBJECT(\"' + field + '\", ' + accessesDocs.join(', ') + ')');\n\t\t\t\t}\n\t\t\t});\n\t\t\tOBJECT_QUERY.select.push('JSON_MERGE(' + allFieldsJson.join(', ') + ') AS fields');\n\t\t}\n\t\treturn OBJECT_QUERY;\n\t}\n}\n\n/**\n * @var array\n */\nClient.standardAccesses = [\n\t'view', \n\t'create', \n\t'update', \n\t'delete', \n\t'stats', \n\t'use',\n];", "\n/**\n * @imports\n */\nimport {\n\tCallInterface,\n} from '../grammar.js';\nimport _isString from '@webqit/util/js/isString.js';\nimport _isArray from '@webqit/util/js/isArray.js';\nimport _each from '@webqit/util/obj/each.js';\nimport _unique from '@webqit/util/arr/unique.js';\nimport _arrFrom from '@webqit/util/arr/from.js';\nimport _find from '@webqit/util/obj/find.js';\nimport Lexer from '@webqit/util/str/Lexer.js';\nimport ArrowReferenceInterface from '../grammar/ArrowReferenceInterface.js';\nimport ArrowReference from '../grammar/ArrowReference.js';\nimport Reference from '../grammar/Reference.js';\nimport Table from '../grammar/Table.js';\nimport Base from '../database/Base.js';\nimport _Driver from '../database/_Driver.js';\nimport UACClient from '../uac/Client.js';\n\n/**\n * ---------------------------\n * Delete class\n * ---------------------------\n */\t\t\t\t\n\nexport default class Stmt {\n\n\t/**\n\t * @inheritdoc\n\t */\n\tgetBase(databases, params = {}, tables = []) {\n\t\tif (!tables.length) {\n\t\t\ttables = (_isArray(this.exprs.TABLE_REFERENCES) ? this.exprs.TABLE_REFERENCES : [this.exprs.TABLE_REFERENCES]);\n\t\t}\n\t\ttables = tables.concat(this.exprs.JOIN_CLAUSE || []).map(table => table.eval(databases, params));\n\t\tvar main = tables.shift(), joins = tables;\n\t\treturn new Base(main, joins, this.exprs.WHERE_CLAUSE, params);\n\t}\n\n\t/**\n\t * @inheritdoc\n\t */\n\tgetToString(params, callback) {\n\t\t// ---------------------\n\t\tvar t = params.t || 0, _t = (n = 0, when = true) => !params.formatted ? '' : (!when ? '' : \"\\r\\n\" + (\"\\t\".repeat(Math.max(0, t + n)))), _params = {...params}; _params.t = t + 1;\n\t\t// ---------------------\n\t\tvar strArray = [];\n\t\t_each(this.exprs, (clauseType, expr, i) => {\n\t\t\tif (!expr && i > 0) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar str = null;\n\t\t\tif (clauseType === 'JOIN_CLAUSE') {\n\t\t\t\tvar clause = this.clauses[clauseType];\n\t\t\t\tstr = expr.map((join, i) => clause[i].toString().toUpperCase() + ' ' + join.stringify(_params)).join(_t());\n\t\t\t} else {\n\t\t\t\tvar clause = this.clauses[clauseType].toString().toUpperCase();\n\t\t\t\tif (clauseType === 'TABLE_REFERENCES') {\n\t\t\t\t\tstr = clause + ' ' + (\n\t\t\t\t\t\t_isArray(expr) ? expr.map(table => table.stringify(_params)).join(', ') : expr.stringify(_params)\n\t\t\t\t\t);\n\t\t\t\t} else if (!callback || !(str = callback(clauseType, expr, clause, _params, _t))) {\n\t\t\t\t\tif (_isArray(expr)) {\n\t\t\t\t\t\tstr = expr.map(x => _isFunction(x.stringify) ? x.stringify(_params) : expr).join(', ');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstr = clause + ' ' + expr.stringify(_params);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!str && i === 0) {\n\t\t\t\tstr = clause;\n\t\t\t}\n\t\t\tif (str) {\n\t\t\t\tstrArray.push(_t() + str);\n\t\t\t}\n\t\t});\n\t\treturn strArray.join(' ') + _t(-1);\n\t}\n\t\n\t/**\n\t * @inheritdoc\n\t */\n\tstatic getParse(expr, withUac, stmtClauses, parseCallback, params, callback, literalValidateCallback = null) {\n\n\t\tvar useRegex = 'i'; // Match clauses; case-insensitively\n\t\tvar parse = Lexer.lex(expr, Object.values(stmtClauses), {useRegex:useRegex});\n\t\tif (parse.matches.length) {\n\t\t\t\n\t\t\t// ------------------\n\n\t\t\tvar EXPRS = {}, CLAUSES = {}, TABLES = {}, SCHEMAS = {}, VARS = [];\n\t\t\tparse.matches.forEach((clause, i) => {\n\t\t\t\tvar clauseType = _find(stmtClauses, c => clause.match(new RegExp(c, useRegex)), true/*deep*/);\n\t\t\t\tvar _expr = parse.tokens[i + 1].trim();\n\t\t\t\tvar _exprParse = null;\n\t\t\t\tif (clauseType === 'JOIN_CLAUSE') {\n\t\t\t\t\tvar _exprParse = parseCallback(_expr, null, {withUac});\n\t\t\t\t\tif (_exprParse.type = clause.match(new RegExp('(INNER|CROSS|LEFT|RIGHT)', 'i'))) {\n\t\t\t\t\t\t_exprParse.type = _exprParse.type[0].toLowerCase();\n\t\t\t\t\t}\n\t\t\t\t\tif (!EXPRS[clauseType]) {\n\t\t\t\t\t\tEXPRS[clauseType] = [_exprParse];\n\t\t\t\t\t\tCLAUSES[clauseType] = [clause];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tEXPRS[clauseType].push(_exprParse);\n\t\t\t\t\t\tCLAUSES[clauseType].push(clause);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (clauseType === 'TABLE_REFERENCES' || clauseType === 'USING_CLAUSE'/* specific to the DELETE stmt */) {\n\t\t\t\t\t\tvar tables = Lexer.split(_expr, [',']).map(\n\t\t\t\t\t\t\ttable => parseCallback(table.trim(), [Table], {withUac, assertTableValidity: clauseType === 'TABLE_REFERENCES' && !parse.matches.includes('USING')})\n\t\t\t\t\t\t);\n\t\t\t\t\t\tvar _exprParse = tables.length === 1 ? tables[0] : tables;\n\t\t\t\t\t} else if (!callback || !(_exprParse = callback(clauseType, _expr))) {\n\t\t\t\t\t\tvar _exprParse = parseCallback(_expr, null, {withUac});\n\t\t\t\t\t}\n\t\t\t\t\t// Ramp up\n\t\t\t\t\tif (clauseType === 'WHERE_CLAUSE' && !EXPRS.JOIN_CLAUSE) {\n\t\t\t\t\t\t// Wheres must not come before joins\n\t\t\t\t\t\t// This might happen on adding smart joins below\n\t\t\t\t\t\t// So we secure a place for joins\n\t\t\t\t\t\tEXPRS.JOIN_CLAUSE = [];\n\t\t\t\t\t\tCLAUSES.JOIN_CLAUSE = [];\n\t\t\t\t\t}\n\t\t\t\t\tEXPRS[clauseType] = _exprParse;\n\t\t\t\t\tCLAUSES[clauseType] = clause;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// ------------------\n\n\t\t\tconst TABLE_REFERENCES = EXPRS.USING_CLAUSE/* specific to the DELETE stmt */ || EXPRS.TABLE_REFERENCES;\n\t\t\t(_isArray(TABLE_REFERENCES) ? TABLE_REFERENCES : [TABLE_REFERENCES]).concat((EXPRS.JOIN_CLAUSE || []).map(j => j.table)).forEach((table, i) => {\n\t\t\t\tvar tableAlias = table.getAlias(), tableSchema = table.getSchema();\n\t\t\t\tTABLES[tableAlias] = table;\n\t\t\t\tSCHEMAS[tableAlias] = tableSchema;\n\t\t\t\tif (i === 0) {\n\t\t\t\t\tTABLES[''] = TABLES[tableAlias];\n\t\t\t\t\tSCHEMAS[''] = SCHEMAS[tableAlias];\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// ------------------\n\n\t\t\t_each(EXPRS, (clauseType, _exprParse) => {\n\t\t\t\tvar allRefs = _arrFrom(_exprParse, false/*castObjects*/).reduce((_VARS, __exprParse) => _VARS.concat(__exprParse.meta.reads).concat(__exprParse.meta.writes).concat(__exprParse.meta.calls), []);\n\t\t\t\tallRefs.forEach(_var => {\n\t\t\t\t\tif (!(_var.role === 'CONTEXT')) {\n\t\t\t\t\t\tVARS.push(_var);\n\t\t\t\t\t}\n\t\t\t\t\tif (_var.role === 'CONTEXT' || _var.role === 'CALL_SPECIFIER' || (_var instanceof CallInterface)) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t// --------------\n\t\t\t\t\tvar ref_name, ref_context;\n\t\t\t\t\tif (_var instanceof ArrowReferenceInterface) {\n\t\t\t\t\t\tif (ArrowReference.isIncoming(_var + '')) {\n\t\t\t\t\t\t\tif (_var.context) {\n\t\t\t\t\t\t\t\tTABLES[_var.context + ''].associateReference(_var);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t_var.interpreted = parseCallback(TABLES[''].getAlias() + '.' + _var, [Reference]);\n\t\t\t\t\t\t\t\tTABLES[''].associateReference(_var);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tref_name = _var.name.split('~>')[0].replace(/`/g, '');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tref_name = _var.name.replace(/`/g, '');\n\t\t\t\t\t}\n\t\t\t\t\t// -------------\n\t\t\t\t\tif (_var.context) {\n\t\t\t\t\t\tref_context = _var.context.name.replace(/`/g, '');\n\t\t\t\t\t\tif (!SCHEMAS[ref_context] || (ref_name !== '*' && !(ref_name in SCHEMAS[ref_context].columns))) {\n\t\t\t\t\t\t\t// Qualified, but unknown column name!\n\t\t\t\t\t\t\tif (params.validation !== false) {\n\t\t\t\t\t\t\t\t// Throw\n\t\t\t\t\t\t\t\tthrow new Error('\"' + _var + '\" in ' + clauseType.replace(/_/g, ' ') + ' is unknown!');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// Or use as is\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (ref_name === '*') {\n\t\t\t\t\t\t\t_var.interpreted = Object.keys(SCHEMAS[ref_context].columns).map(field => parseCallback(ref_context + '.' + field, [Reference]));\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (ref_name === '*') {\n\t\t\t\t\t\tref_context = TABLES[''].getAlias();\n\t\t\t\t\t\tvar impliedFields;\n\t\t\t\t\t\tif ((impliedFields = Object.keys(SCHEMAS[''].columns)) && !impliedFields.length) {\n\t\t\t\t\t\t\t// Throw\n\t\t\t\t\t\t\tthrow new Error('The wildcard column specifier (*) cannot used on table \"' + ref_context + '\"; table defines no columns.');\n\t\t\t\t\t\t}\n\t\t\t\t\t\t_var.interpreted = impliedFields.map(field => parseCallback(ref_context + '.' + field, [Reference]));\n\t\t\t\t\t} else if (!(literalValidateCallback && literalValidateCallback(ref_name, clauseType))) {\n\t\t\t\t\t\tref_context = Object.keys(SCHEMAS).filter(a => a).reduce((_ref_context, alias) => {\n\t\t\t\t\t\t\tif (ref_name in SCHEMAS[alias].columns) {\n\t\t\t\t\t\t\t\tif (_ref_context) {\n\t\t\t\t\t\t\t\t\t// Ambiguous column name!\n\t\t\t\t\t\t\t\t\tif (params.validation !== false) {\n\t\t\t\t\t\t\t\t\t\t// Throw\n\t\t\t\t\t\t\t\t\t\tthrow new Error('\"' + _var + '\" in ' + clauseType.replace(/_/g, ' ') + ' is ambiguous!');\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t// Use first context found\n\t\t\t\t\t\t\t\t\treturn _ref_context;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn alias;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, null);\n\t\t\t\t\t\tif (!ref_context) {\n\t\t\t\t\t\t\t// Unqualified, unknown column name!\n\t\t\t\t\t\t\tif (params.validation !== false) {\n\t\t\t\t\t\t\t\t// Throw\n\t\t\t\t\t\t\t\tthrow new Error('\"' + _var + '\" in ' + clauseType.replace(/_/g, ' ') + ' is unknown!');\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// Force the column on main table\n\t\t\t\t\t\t\t\tref_context = TABLES[''].getAlias(), impliedFields;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t_var.interpreted = parseCallback(ref_context + '.' + _var, [Reference]);\n\t\t\t\t\t}\n\t\t\t\t\t// ------------------\n\t\t\t\t\tTABLES[ref_context || ''].associateReference(_var);\n\t\t\t\t});\n\t\t\t});\n\t\t\t\n\t\t\t// ------------------\n\n\t\t\t_each(TABLES, (alias, table) => {\n\t\t\t\tif (!alias) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar tableName = table.getName();\n\t\t\t\t// -----------\n\t\t\t\tif (params.withUac && !table.isDerivedQuery()/* Then UAC would already be applied */) {\n\t\t\t\t\ttable.interpreted = parseCallback('(' + UACClient.select(params, SCHEMAS[alias], null/* USER */, table.getAssociateReferences().map(ref => ref.name)/* columns */) + ') AS ' + (alias || tableName), [Table], {withUac: false});\n\t\t\t\t}\n\t\t\t\t// -----------\n\t\t\t\tvar arrowReferences;\n\t\t\t\tif ((arrowReferences = table.getAssociateReferences().filter(ref => ref instanceof ArrowReferenceInterface)).length) {\n\t\t\t\t\tvar joins = {},\n\t\t\t\t\t\t_joins = [],\n\t\t\t\t\t\t_select = table.getAssociateReferences().filter(ref => !(ref instanceof ArrowReferenceInterface)).map(ref => tableName + '.' + ref.name);\n\t\t\t\t\t// ----------\n\t\t\t\t\tarrowReferences.forEach(ref => {\n\t\t\t\t\t\tvar join = ref.process(SCHEMAS[alias], params.dbDriver);\n\t\t\t\t\t\tvar joinUUID = join.b.table.name + '__by__' + join.b.actingKey;\n\t\t\t\t\t\tif (!joins[joinUUID]) {\n\t\t\t\t\t\t\tjoins[joinUUID] = join\n\t\t\t\t\t\t}\n\t\t\t\t\t\t_select.push(joinUUID + '.' + join.b.select + ' AS `' + ref.name.replace(/`/g, '') + '`');\n\t\t\t\t\t});\n\t\t\t\t\t// ----------\n\t\t\t\t\t_each(joins, (joinUUID, join) => {\n\t\t\t\t\t\t_joins.push('LEFT JOIN ' + join.b.table.name + ' AS ' + joinUUID + ' ON ' + joinUUID + '.' + join.b.actingKey + ' = ' + tableName + '.' + join.a.actingKey);\n\t\t\t\t\t});\n\t\t\t\t\t// ----------\n\t\t\t\t\tvar stmt = '(SELECT' + (withUac ? ' WITH UAC' : '') \n\t\t\t\t\t\t+ ' ' + _unique(_select).join(', ') \n\t\t\t\t\t\t+ ' FROM ' + tableName\n\t\t\t\t\t\t+ ' ' + _joins.join(' ') \n\t\t\t\t\t\t+ ') AS ' + table.getAlias();\n\t\t\t\t\t(table.interpreted/* possibly by UAC evaluation */ || table).interpreted = parseCallback(stmt, [Table], {withUac});\n\t\t\t\t}\n\t\t\t});\n\t\t\t\n\t\t\t// ------------------\n\n\t\t\treturn {exprs:EXPRS, clauses:CLAUSES, tables:TABLES, schemas:SCHEMAS, vars:VARS};\n\t\t}\n\t}\n}", "\n/**\n * @imports\n */\nimport _mixin from '@webqit/util/js/mixin.js';\nimport _isArray from '@webqit/util/js/isArray.js';\nimport _arrFrom from '@webqit/util/arr/from.js';\nimport _all from '@webqit/util/arr/all.js';\nimport _before from '@webqit/util/str/before.js';\nimport DeleteInterface from './DeleteInterface.js';\nimport Stmt from './Stmt.js';\n\n/**\n * ---------------------------\n * Delete class\n * ---------------------------\n */\t\t\t\t\n\nexport default class Delete extends _mixin(Stmt, DeleteInterface) {\n\t \n\t/**\n\t * @inheritdoc\n\t */\n\tconstructor(exprs, clauses, withUac) {\n\t\tsuper();\n\t\tthis.exprs = exprs;\n\t\tthis.clauses = clauses;\n\t\tthis.withUac = withUac;\n\t}\n\t\n\t/**\n\t * @inheritdoc\n\t */\n\tasync eval(database, params = {}) {\n\n\t\t// --------------------\n\t\t// RESOLVE DELETION SOURCES AND TARGETS\n\t\t// --------------------\n\t\tvar targetTableNames,\n\t\t\tmainTable = this.exprs.TABLE_REFERENCES;\n\t\tif (this.exprs.DELETE_LIST.length) {\n\t\t\ttargetTableNames = this.exprs.DELETE_LIST.map(t => t.endsWith('.*') ? _before(t, '.*') : t);\n\t\t} else if (this.exprs.USING_CLAUSE) {\n\t\t\ttargetTableNames = _arrFrom(this.exprs.TABLE_REFERENCES, false).map(t => t.getAlias());\n\t\t\tmainTable = this.exprs.USING_CLAUSE;\n\t\t} else {\n\t\t\t// IMPORTANT: only first table in here\n\t\t\ttargetTableNames = [(_isArray(mainTable) ? mainTable[0] : mainTable).getAlias()];\n\t\t}\n\n\t\t// --------------------\n\t\t// INITIALIZE DATASOURCES WITH JOIN ALGORITHIMS APPLIED\n\t\t// --------------------\n\t\tvar _params = {...params};\n\t\t_params.mode = 'readwrite';\n\t\tthis.base = this.getBase(database, _params, _arrFrom(mainTable, false));\n\n\t\t// --------------------\n\t\t// Finds named tables\n\t\t// --------------------\n\t\tvar targetTables = {},\n\t\t\tdeletionIDs = {},\n\t\t\ttables = await Promise.all(this.base.joins.concat(this.base.main));\n\t\ttargetTableNames.forEach(alias => {\n\t\t\ttargetTables[alias] = tables.filter(table => (table.params.alias || table.name) === alias)[0];\n\t\t\tif (!targetTables[alias]) {\n\t\t\t\tthrow new Error('\"' + alias + '\" in table list is not found in main query.');\n\t\t\t}\n\t\t});\n\n\t\t// --------------------\n\t\t// Mine IDs\n\t\t// --------------------\n\t\tvar rowComposition;\n\t\twhile(rowComposition = await this.base.fetch()) {\n\t\t\ttargetTableNames.forEach(alias => {\n\t\t\t\tif (!deletionIDs[alias]) {\n\t\t\t\t\tdeletionIDs[alias] = [];\n\t\t\t\t}\n\t\t\t\tvar rowID = _arrFrom(targetTables[alias].def.schema.primaryKey).map(key => rowComposition[alias][key]);\n\t\t\t\tif (!deletionIDs[alias].filter(_rowID => _all(_rowID, (id, i) => id === rowID[i])).length) {\n\t\t\t\t\tdeletionIDs[alias].push(rowID);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// --------------------\n\t\t// Delete now\n\t\t// --------------------\n\t\tvar result = await Promise.all(targetTableNames.map(async alias => {\n\t\t\tif (deletionIDs[alias].length) {\n\t\t\t\tvar affectedRows = await targetTables[alias].deleteAll(deletionIDs[alias]);\n\t\t\t\treturn {[alias]: affectedRows};\n\t\t\t}\n\t\t}));\n\t\treturn result.reduce((result, currentResult) => ({...result, ...currentResult}), {});\n\t}\n\t\n\t/**\n\t * @inheritdoc\n\t */\n\ttoString() {\n\t\treturn this.stringify();\n\t}\n\t\n\t/**\n\t * @inheritdoc\n\t */\n\tstringify(params = {}) {\n\t\treturn this.getToString(params);\n\t}\n\t\n\t/**\n\t * @inheritdoc\n\t */\n\tstatic parse(expr, parseCallback, params = {}) {\n\t\tif (expr.trim().substr(0, 6).toLowerCase() === 'delete') {\n\t\t\tvar withUac = false;\n\t\t\tif (expr.match(/DELETE[ ]+WITH[ ]+UAC/i)) {\n\t\t\t\twithUac = true;\n\t\t\t\texpr = expr.replace(/[ ]+WITH[ ]+UAC/i, '');\n\t\t\t}\n\t\t\tvar stmtParse = super.getParse(expr, withUac, this.clauses, parseCallback, params, (clauseType, _expr) => {\n\t\t\t\tif (clauseType === 'DELETE_LIST') {\n\t\t\t\t\treturn _expr.split(',').map(t => t.trim()).filter(t => t);\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (stmtParse.exprs.DELETE_LIST.length && stmtParse.exprs.USING_CLAUSE) {\n\t\t\t\tthrow new Error('The \"using\" keyword cannot be used in a query with explicitly-listed tables.');\n\t\t\t}\n\t\t\treturn new this(stmtParse.exprs, stmtParse.clauses, withUac);\n\t\t}\n\t}\n}\n\n/**\n * @prop object\n */\nDelete.clauses = {\n\tDELETE_LIST: 'DELETE',\n\tTABLE_REFERENCES: 'FROM',\n\tUSING_CLAUSE: 'USING',\n\tWHERE_CLAUSE: 'WHERE',\n\t// inner join, cross join, {left|right} [outer] join\n\tJOIN_CLAUSE: '(INNER[ ]+|CROSS[ ]+|(LEFT|RIGHT)([ ]+OUTER)?[ ]+)?JOIN',\n};", "\n/**\n * @imports\n */\nimport ExprInterface from '../ExprInterface.js';\n\n/**\n * ---------------------------\n * FieldInterface\n * ---------------------------\n */\t\t\t\t\n\nconst Interface = class extends ExprInterface {};\nObject.defineProperty(Interface.prototype, 'jsenType', {\n\tget() { return 'FieldExpression'; },\n});\nexport default Interface;\n", "\n/**\n * @imports\n */\nimport {\n\tAbstractionInterface,\n\tReferenceInterface,\n\tCallInterface,\n} from '../grammar.js';\nimport _isArray from '@webqit/util/js/isArray.js';\nimport _wrapped from '@webqit/util/str/wrapped.js';\nimport _objFrom from '@webqit/util/obj/from.js';\nimport _each from '@webqit/util/obj/each.js';\nimport Lexer from '@webqit/util/str/Lexer.js';\nimport FieldInterface from './FieldInterface.js';\nimport AggrInterface from './AggrInterface.js';\n\n/**\n * ---------------------------\n * Field class\n * ---------------------------\n */\t\t\t\t\n\nexport default class Field extends FieldInterface {\n\t\n\t/**\n\t * @inheritdoc\n\t */\n\tconstructor(expr, alias, claused = false) {\n\t\tsuper();\n\t\tthis.expr = expr;\n\t\tthis.alias = alias;\n\t\tthis.claused = claused;\n\t}\n\t\t\n\t/**\n\t * --------------\n\t */\n\t\n\t/**\n\t * @inheritdoc\n\t */\n\tas(alias) {\n\t\tthis.alias = alias;\n\t\tthis.claused = true;\n\t\treturn this;\n\t}\n\t\n\t/**\n\t * @inheritdoc\n\t */\n\tgetContextName() {\n\t\tif (this.expr.interpreted) {\n\t\t\t// .interpreted is always fully qualified.\n\t\t\treturn _isArray(this.expr.interpreted) \n\t\t\t\t? this.expr.interpreted[0].context.name \n\t\t\t\t: this.expr.interpreted.context.name;\n\t\t}\n\t\t// May or may not b qualified\n\t\treturn this.expr.context ? (this.expr.context.name || '').replace(/`/g, '') : '';\n\t}\n\t\n\t/**\n\t * @inheritdoc\n\t */\n\tgetName() {\n\t\t// Without backticks\n\t\treturn (this.expr.name || '').replace(/`/g, '');\n\t}\n\t\t\n\t/**\n\t * @inheritdoc\n\t */\n\tgetAlias() {\n\t\treturn (this.alias || '').replace(/`/g, '') || this.getName() || this.expr.toString();\n\t}\n\t\n\t/**\n\t * @inheritdoc\n\t */\n\tgetCallExprs() {\n\t\treturn this.expr.meta.calls.concat(this.expr.meta.deep.calls || []).concat([this.expr]).filter(x => x instanceof CallInterface);\n\t}\n\t\n\t/**\n\t * @inheritdoc\n\t */\n\tgetAggrExprs() {\n\t\treturn this.expr.meta.calls.concat(this.expr.meta.deep.calls || []).concat([this.expr]).filter(x => x instanceof AggrInterface);\n\t}\n\t\n\t/**\n\t * @inheritdoc\n\t */\n\teval(tempRow, database, params = {}) {\n\t\t\n\t\tvar alias = this.getAlias();\n\t\tif (this.expr instanceof ReferenceInterface) {\n\n\t\t\tif (this.getName() === '*') {\n\t\t\t\tvar multiple = this.expr.getEval(tempRow, params);\n\t\t\t\t_each(multiple, (name, ref) => {\n\t\t\t\t\tif (params.mode === 'readwrite') {\n\t\t\t\t\t\tObject.defineProperty(multiple, name, {\n\t\t\t\t\t\t\tget() {\n\t\t\t\t\t\t\t\treturn ref.get();\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tset (val) {\n\t\t\t\t\t\t\t\tref.set(val);\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tenumerable: true,\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmultiple[name] = ref.get();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn multiple;\n\t\t\t}\n\n\t\t\tvar reference = this.expr.getEval(tempRow, params);\n\t\t\tif (params.mode === 'readwrite') {\n\t\t\t\treturn {\n\t\t\t\t\tget [alias] () {\n\t\t\t\t\t\treturn reference.get();\n\t\t\t\t\t},\n\t\t\t\t\tset [alias] (val) {\n\t\t\t\t\t\treference.set(val);\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn _objFrom(alias, reference.get());\n\t\t}\n\n\t\tvar value;\n\t\tif (this.expr instanceof AbstractionInterface) {\n\t\t\tvalue = this.expr.eval(database, params);\n\t\t} else {\n\t\t\tvalue = this.expr.eval(tempRow, params);\n\t\t}\n\t\tif (params.mode === 'readwrite') {\n\t\t\treturn {\n\t\t\t\tget [alias] () {\n\t\t\t\t\treturn value;\n\t\t\t\t},\n\t\t\t\tset [alias] (val) {\n\t\t\t\t\tthrow new Error('\"' + alias + '\" cannot be modified; not a reference!');\n\t\t\t\t},\n\t\t\t};\n\t\t}\n\t\treturn _objFrom(alias, value);\n\n\t}\n\t\n\t/**\n\t * @inheritdoc\n\t */\n\tstringify(params = {}) {\n\t\treturn [this.expr.stringify(params), this.claused ? 'AS' : '', this.alias].filter(a => a).join(' ');\n\t}\n\t\n\t/**\n\t * @inheritdoc\n\t */\n\tstatic parse(expr, parseCallback, params = {}) {\n\t\tvar splits = Lexer.split(expr, [' (as )?'], {useRegex:'i', preserveDelims:true});\n\t\tvar exprParse = null;\n\t\tvar alias = splits.pop().trim();\n\t\tvar claused = alias.substr(0, 3).toLowerCase() === 'as ';\n\t\tif (claused) {\n\t\t\t// With an \"AS\" clause, its easy to obtain the alias...\n\t\t\t// E.g: SELECT first_name AS fname, 4 + 5 AS result, 5 + 5\n\t\t\talias = alias.substr(3).trim();\n\t\t\texprParse = parseCallback(splits.join('').trim());\n\t\t} else if (splits.length && (!alias.match(/[^0-9a-zA-Z_]/) || _wrapped(alias, '`', '`'))) {\n\t\t\t// Without an \"AS\" clause, its hard to determine if an expression is actually aliased...\n\t\t\t// E.g: In the statement SELECT first_name fname, 4 + 5 result, 5 + 5 FROM ...,\n\t\t\t// we can only assume that the last space-separated expr is rhe alias.\n\t\t\t// When that fails, then it is most-likely there is no alias. \n\t\t\ttry {\n\t\t\t\texprParse = parseCallback(splits.join('').trim());\n\t\t\t} catch(e) {}\n\t\t}\n\t\tif (!exprParse) {\n\t\t\talias = null;\n\t\t\texprParse = parseCallback(expr);\n\t\t}\n\t\texprParse.isFieldName = true;\n\t\treturn new this(exprParse, alias, claused);\n\t}\n}", "\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isFunction from '../js/isFunction.js';\r\nimport _isNumeric from '../js/isNumeric.js';\r\nimport _isTypeObject from '../js/isTypeObject.js';\r\nimport _mergeCallback from './mergeCallback.js';\r\n\r\n/**\r\n * Copies an object.\r\n *\r\n * @param object\t \tobj\r\n * @param array\t\t \tfilter\r\n *\r\n * @return object\r\n */\r\nexport default function(obj, filter = [], withSymbols = true) {\r\n\tvar depth = 0;\r\n\tif (_isNumeric(arguments[0]) && _isTypeObject(arguments[1])) {\r\n\t\tdepth = arguments[0];\r\n\t\tobj = arguments[1];\r\n\t\tfilter = arguments[2] || [];\r\n\t}\r\n\treturn _mergeCallback([depth, {}, obj], (key, obj1, obj2) => {\r\n\t\treturn _isFunction(filter) ? filter(key) \r\n\t\t\t: (_isArray(filter) && filter.length ? filter.indexOf(key) > -1 : true);\r\n\t}, false/*deepProps*/, false/*isReplace*/, withSymbols);\r\n};\r\n", "\n/**\n * @imports\n */\nimport ExprInterface from '../ExprInterface.js';\n\n/**\n * ---------------------------\n * GroupByInterface\n * ---------------------------\n */\t\t\t\t\n\nconst Interface = class extends ExprInterface {};\nObject.defineProperty(Interface.prototype, 'jsenType', {\n\tget() { return 'GroupByExpression'; },\n});\nexport default Interface;\n", "\n/**\n * @imports\n */\nimport _inherit from '@webqit/util/obj/inherit.js';\nimport _copy from '@webqit/util/obj/copy.js';\nimport _after from '@webqit/util/str/after.js';\nimport Lexer from '@webqit/util/str/Lexer.js';\nimport GroupByInterface from './GroupByInterface.js';\nimport Row from '../database/Row.js';\n\n/**\n * ---------------------------\n * GroupBy class\n * ---------------------------\n */\t\t\t\t\n\nexport default class GroupBy extends GroupByInterface {\n\t\n\t/**\n\t * @inheritdoc\n\t */\n\tconstructor(columns, having = null, withRollup = false) {\n\t\tsuper();\n\t\tthis.columns = columns;\n\t\tthis.having = having;\n\t\tthis.withRollup = withRollup;\n\t}\n\t\n\t/**\n\t * @inheritdoc\n\t */\n\teval(tempRows, params = {}) {\n\t\tvar groupBy = (rows, by, result) => {\n\t\t\t// This will end up either as\n\t\t\t// regular summary or rollup {super summary}\n\t\t\tif (by.length) {\n\t\t\t\t// Drilldown...\n\t\t\t\tvar grouping = {};\n\t\t\t\trows.forEach(row => {\n\t\t\t\t\tvar _for = by[0].eval(row, params);\n\t\t\t\t\tgrouping[_for] = grouping[_for] || [];\n\t\t\t\t\tgrouping[_for].push(row);\n\t\t\t\t});\n\t\t\t\tObject.values(grouping).map(group => groupBy(group, by.slice(1), result));\n\t\t\t}\n\t\t\tif (!by.length/*We're on end nodes*/ || this.withRollup) {\n\t\t\t\tvar summaryRow = new Row(params); _inherit(summaryRow, rows[0]);\n\t\t\t\tsummaryRow.$ = _copy(summaryRow.$);\n\t\t\t\tsummaryRow.AGGR = {rows: rows, by: by};\n\t\t\t\t// HOW WE'LL DETERMINE A SUPER AGGREGATE ROW...\n\t\t\t\tsummaryRow.AGGR.isRollup = by.length && this.withRollup;\n\t\t\t\tif (summaryRow.AGGR.isRollup) {\n\t\t\t\t\tby.forEach(b => {\n\t\t\t\t\t\tb = b.stringify().indexOf('.') > -1 ? _after(b.stringify(), '.') : b.stringify();\n\t\t\t\t\t\tif (b in summaryRow.$) {\n\t\t\t\t\t\t\tsummaryRow.$[b] = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tresult.push(summaryRow);\n\t\t\t\treturn summaryRow;\n\t\t\t}\n\t\t};\n\t\tvar result = [];\n\t\tgroupBy(tempRows, this.columns.slice(), result);\n\t\treturn result;\n\t}\n\t\n\t/**\n\t * @inheritdoc\n\t */\n\ttoString() {\n\t\treturn this.stringify();\n\t}\n\t\n\t/**\n\t * @inheritdoc\n\t */\n\tstringify(params = {}) {\n\t\tvar str = [this.columns.map(c => c.stringify(params)).join(', ')];\n\t\tif (this.withRollup) {\n\t\t\tstr.push('WITH ROLLUP');\n\t\t}\n\t\tif (this.having) {\n\t\t\tstr.push('HAVING ' + this.having.stringify(params));\n\t\t}\n\t\treturn str.join(' ');\n\t}\n\t\n\t/**\n\t * @inheritdoc\n\t */\n\tstatic parse(expr, parseCallback, params = {}) {\n\t\tvar parse = Lexer.lex(expr, ['WITH[ ]+ROLLUP', 'HAVING'], {useRegex:'i'});\n\t\tvar columns = Lexer.split(parse.tokens.shift().trim(), [',']).map(\n\t\t\tc => parseCallback(c.trim())\n\t\t);\n\t\tvar having = null;\n\t\tvar withRollup = false;\n\t\tparse.matches.forEach(clauseType => {\n\t\t\tif (clauseType.toLowerCase().startsWith('with')) {\n\t\t\t\twithRollup = true;\n\t\t\t\tparse.tokens.shift();\n\t\t\t} else if (clauseType.toLowerCase().startsWith('having')) {\n\t\t\t\thaving = parseCallback(parse.tokens.shift().trim());\n\t\t\t}\n\t\t});\n\t\treturn new this(columns, having, withRollup);\n\t}\n}", "\n/**\n * @imports\n */\nimport IndependentExprInterface from '../IndependentExprInterface.js';\n\n/**\n * ---------------------------\n * InsertInterface\n * ---------------------------\n */\t\t\t\t\n\nconst Interface = class extends IndependentExprInterface {};\nObject.defineProperty(Interface.prototype, 'jsenType', {\n\tget() { return 'InsertStatement'; },\n});\nexport default Interface;\n", "\r\n/**\r\n * @imports\r\n */\r\nimport _last from '@webqit/util/arr/last.js';\r\nimport _before from '@webqit/util/str/before.js';\r\nimport _after from '@webqit/util/str/after.js';\r\nimport _isNumber from '@webqit/util/js/isNumber.js';\r\nimport _isArray from '@webqit/util/js/isArray.js';\r\nimport _isUndefined from '@webqit/util/js/isUndefined.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport AssignmentInterface from '../grammar/AssignmentInterface.js';\r\nimport ReferenceInterface from '../grammar/ReferenceInterface.js';\r\nimport SyntaxError from '../SyntaxError.js';\r\nimport ReferenceError from '../ReferenceError.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Assignment class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Assignment = class extends AssignmentInterface {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(initKeyword, reference, val, operator = '=', postIncrDecr = false) {\r\n\t\tsuper();\r\n\t\tthis.initKeyword = initKeyword;\r\n\t\tthis.reference = reference;\r\n\t\tthis.val = val;\r\n\t\tthis.operator = operator;\r\n\t\tthis.postIncrDecr = postIncrDecr;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\tvar val, initialVal, reference = this.reference.getEval(context, params);\r\n\t\tif (['++', '--'].includes(this.operator)) {\r\n\t\t\tinitialVal = this.reference.eval(context, params);\r\n\t\t\tif (!_isNumber(initialVal)) {\r\n\t\t\t\tthrow new Error(this.reference + ' must be a number!');\r\n\t\t\t}\r\n\t\t\tif (this.operator === '++') {\r\n\t\t\t\tval = initialVal + 1;\r\n\t\t\t} else {\r\n\t\t\t\tval = initialVal - 1;\r\n\t\t\t}\r\n\t\t} else if (['+=', '-=', '*=', '/='].includes(this.operator)) {\r\n\t\t\tvar operandA = reference.get();\r\n\t\t\tvar operandB = this.val.eval(context, params);\r\n\t\t\tif (this.operator !== '+=' && (!_isNumber(operandA) || !_isNumber(operandB))) {\r\n\t\t\t\tthrow new Error(this + ' - operands must each be a number!');\r\n\t\t\t}\r\n\t\t\tif (this.operator === '*=') {\r\n\t\t\t\tval = operandA * operandB;\r\n\t\t\t} else if (this.operator === '/=') {\r\n\t\t\t\tval = operandA / operandB;\r\n\t\t\t} else if (this.operator === '-=') {\r\n\t\t\t\tval = operandA - operandB;\r\n\t\t\t} else {\r\n\t\t\t\tval = operandA + operandB;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tval = this.val.eval(context, params);\r\n\t\t}\r\n\t\ttry {\r\n\t\t\treference.set(val, this.initKeyword);\r\n\t\t\tif (params && _isArray(params.references)) {\r\n\t\t\t\t_pushUnique(params.references, this.reference.toString());\r\n\t\t\t}\r\n\t\t\treturn this.postIncrDecr ? initialVal : val;\r\n\t\t} catch(e) {\r\n\t\t\tif (e instanceof ReferenceError) {\r\n\t\t\t\tthrow new ReferenceError('[' + this + ']: ' + e.message);\r\n\t\t\t} else {\r\n\t\t\t\tthrow e;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\tif (['++', '--'].includes(this.operator)) {\r\n\t\t\treturn this.postIncrDecr \r\n\t\t\t\t? this.reference.stringify(params) + this.operator\r\n\t\t\t\t: this.operator + this.reference.stringify(params);\r\n\t\t}\r\n\t\treturn (this.initKeyword ? this.initKeyword + ' ' : '')\r\n\t\t\t+ [this.reference.stringify(params), this.operator.trim(), this.val.stringify(params)].join(' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar parse = Lexer.lex(expr, this.operators.concat([testBlockEnd]));\r\n\t\tif (parse.matches.length) {\r\n\t\t\tvar initKeyword, reference, val, operator = parse.matches[0].trim(), isIncrDecr = ['++', '--'].includes(operator), postIncrDecr;\r\n\t\t\tif (isIncrDecr) {\r\n\t\t\t\tpostIncrDecr = (expr.trim().endsWith('++') || expr.trim().endsWith('--'));\r\n\t\t\t\treference = parse.tokens[postIncrDecr ? 'shift' : 'pop']().trim();\r\n\t\t\t} else {\r\n\t\t\t\treference = parse.tokens.shift().trim();\r\n\t\t\t\tval = parse.tokens.shift().trim();\r\n\t\t\t}\r\n\t\t\tif (['var', 'let', 'const'].includes(_before(reference, ' '))) {\r\n\t\t\t\tif (operator !== '=') {\r\n\t\t\t\t\tthrow new SyntaxError('Invalid declaration: ' + expr);\r\n\t\t\t\t}\r\n\t\t\t\tinitKeyword = _before(reference, ' ');\r\n\t\t\t\treference = _after(reference, ' ').trim();\r\n\t\t\t}\r\n\t\t\tif (!((reference = parseCallback(reference, null, {role: 'ASSIGNMENT_SPECIFIER'})) instanceof ReferenceInterface) \r\n\t\t\t|| (!isIncrDecr && !(val = parseCallback(val)))) {\r\n\t\t\t\tthrow new SyntaxError(expr);\r\n\t\t\t}\r\n\t\t\treturn new this(initKeyword, reference, val, operator, postIncrDecr);\r\n\t\t}\r\n\t}\r\n};\t\r\n\r\n/**\r\n * @prop array\r\n */\r\nAssignment.operators = [\r\n\t'+=',\r\n\t'-=',\r\n\t'*=',\r\n\t'/=',\r\n\t'++',\r\n\t'--',\r\n];\r\n\r\nconst testBlockEnd = (a, b) => {\r\n\t// Match exactly \"=\", not \"=>\", \"==\", \"===\"\r\n\tif (!a.endsWith('=') && b.startsWith('=') && !b.startsWith('=>') && !b.startsWith('==') && !b.startsWith('===')) {\r\n\t\treturn '=';\r\n\t}\r\n\treturn false;\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Assignment;\r\n", "\n/**\n * @imports\n */\nimport _wrapped from '@webqit/util/str/wrapped.js';\nimport _unwrap from '@webqit/util/str/unwrap.js';\nimport Lexer from '@webqit/util/str/Lexer.js';\nimport InsertInterface from './InsertInterface.js';\nimport Table from '../grammar/Table.js';\nimport _Assignment from './_Assignment.js';\n\n/**\n * ---------------------------\n * Insert class\n * ---------------------------\n */\t\t\t\t\n\nexport default class Insert extends InsertInterface {\n\t \n\t/**\n\t * @inheritdoc\n\t */\n\tconstructor(TABLE_REFERENCES, COLUMNS_LIST, VALUES_LIST, WITH_UAC, IGNORE, INSERT_TYPE, UPDATE_CLAUSE) {\n\t\tsuper();\n\t\tthis.TABLE_REFERENCES = TABLE_REFERENCES;\n\t\tthis.COLUMNS_LIST = COLUMNS_LIST;\n\t\tthis.VALUES_LIST = VALUES_LIST;\n\t\tthis.WITH_UAC = WITH_UAC;\n\t\tthis.IGNORE = IGNORE;\n\t\tthis.INSERT_TYPE = INSERT_TYPE;\n\t\tthis.UPDATE_CLAUSE = UPDATE_CLAUSE;\n\t}\n\t \n\t/**\n\t * @inheritdoc\n\t */\n\tasync eval(context, params = {}) {\n\t\tvar _params = {...params};\n\t\t_params.mode = 'readwrite';\n\t\tvar tableBase = await this.TABLE_REFERENCES.eval(context, _params);\n\t\tvar tableSchema = tableBase.def.schema;\n\t\t// ---------------------------\n\t\tvar values = this.VALUES_LIST;\n\t\tvar insertType = this.INSERT_TYPE.toUpperCase();\n\t\tvar forceAutoIncrement = insertType === 'TABLE';\n\t\tif (insertType === 'SET') {\n\t\t\tvar columns = values.map(assignment => assignment.reference.name);\n\t\t\tvalues = [values.map(assignment => assignment.val.eval({}, params))];\n\t\t} else {\n\t\t\tvar columns = this.COLUMNS_LIST || (tableSchema.columns ? Object.keys(tableSchema.columns) : []);\n\t\t\tif (insertType === 'SELECT') {\n\t\t\t\ttry {\n\t\t\t\t\tvalues = (await values.eval(context, params)).map(row => Object.values(row));\n\t\t\t\t} catch(e) {\n\t\t\t\t\tthrow new Error('[\"' + values.stringify() + '\" in SELECT clause]: ' + e.message);\n\t\t\t\t}\n\t\t\t} else if (insertType === 'VALUES') {\n\t\t\t\tvalues = values.map(row => row.map(val => val.eval({}, params)));\n\t\t\t} else {\n\t\t\t\tthrow new Error('Invalid insert statement \"' + this + '\"!');\n\t\t\t}\n\t\t}\n\t\tcolumns = columns.map(c => c + '');\n\n\t\tvar duplicateKeyCallback = this.UPDATE_CLAUSE ? newRow => {\n\t\t\tvar _params = {...params};\n\t\t\t_params.strictMode = false;\n\t\t\tthis.UPDATE_CLAUSE.forEach(assignment => assignment.eval({$: newRow}, _params));\n\t\t\treturn true\n\t\t} : (this.IGNORE ? () => false : null);\n\t\tvar keys = await tableBase.addAll(values, columns, duplicateKeyCallback, forceAutoIncrement);\n\n\t\treturn {\n\t\t\t[tableBase.name]: keys,\n\t\t};\n\t}\n\t\n\t/**\n\t * @inheritdoc\n\t */\n\ttoString() {\n\t\treturn this.stringify();\n\t}\n\t\n\t/**\n\t * @inheritdoc\n\t */\n\tstringify(params = {}) {\n\t\t// ---------------------\n\t\tvar t = params.t || 0, _t = (n = 0) => !params.formatted ? '' : (\"\\r\\n\" + (\"\\t\".repeat(Math.max(0, t + n)))), _params = {...params}; _params.t = t + 1;\n\t\t// ---------------------\n\t\tvar str = [this.TABLE_REFERENCES.stringify(_params)];\n\t\tif (this.INSERT_TYPE.toUpperCase() === 'SET') {\n\t\t\tstr.push(_t(1) + 'SET ' + this.VALUES_LIST.map(assignment => assignment.stringify(_params)).join(', '));\n\t\t} else {\n\t\t\tif (this.COLUMNS_LIST.length) {\n\t\t\t\tstr.push('(' + this.COLUMNS_LIST.join(', ') + ')');\n\t\t\t}\n\t\t\tif (this.INSERT_TYPE.toUpperCase() === 'SELECT') {\n\t\t\t\tstr.push(this.VALUES_LIST.stringify(_params));\n\t\t\t} else {\n\t\t\t\tstr.push(_t() + 'VALUES ' + _t(1) + '(' + this.VALUES_LIST.map(\n\t\t\t\t\trow => row.map(\n\t\t\t\t\t\tval => val.stringify(_params)\n\t\t\t\t\t).join(', ')\n\t\t\t\t).join('), ' + _t(1) + '(') + ')');\n\t\t\t}\n\t\t}\n\t\tif (this.UPDATE_CLAUSE) {\n\t\t\tstr.push(_t() + 'ON DUPLICATE KEY UPDATE ' + this.UPDATE_CLAUSE.map(assignment => assignment.stringify(_params)).join(', '));\n\t\t}\n\t\treturn 'INSERT ' + (this.IGNORE ? 'IGNORE ' : '') + 'INTO ' + str.join(' ');\n\t}\n\t\n\t/**\n\t * @inheritdoc\n\t */\n\tstatic parse(expr, parseCallback, params = {}) {\n\t\tif (expr.trim().match(/^INSERT([ ]+WITH[ ]+UAC)?([ ]+IGNORE)?([ ]+INTO)?/, 'i')) {\n\t\t\tvar withUac = false, ignore = false;\n\t\t\tif (expr.match(/INSERT[ ]+WITH[ ]+UAC/i)) {\n\t\t\t\twithUac = true;\n\t\t\t\texpr = expr.replace(/[ ]+WITH[ ]+UAC/i, '');\n\t\t\t}\n\t\t\tif (expr.match(/INSERT[ ]+IGNORE/i)) {\n\t\t\t\tignore = true;\n\t\t\t\texpr = expr.replace(/[ ]+IGNORE/i, '');\n\t\t\t}\n\t\t\tvar parse = Lexer.lex(expr, Object.values(Insert.clauses), {useRegex:'i'});\n\t\t\tparse.tokens.shift();\n\t\t\tvar table = parse.tokens.shift().trim();\n\t\t\tvar columns = [];\n\t\t\tvar values = parse.tokens.shift();\n\t\t\tvar insertType = parse.matches[1].toUpperCase();\n\t\t\tif (insertType === 'SET') {\n\t\t\t\ttable = parseCallback(table, [Table]);\n\t\t\t\tvalues = Lexer.split(values.trim(), [','])\n\t\t\t\t\t.map(e => parseCallback(e.trim(), [_Assignment]));\n\t\t\t} else {\n\t\t\t\tvar tableColumnSplit = Lexer.split(table, [' ']);\n\t\t\t\ttable = parseCallback(tableColumnSplit.shift().trim(), [Table]);\n\t\t\t\tif (tableColumnSplit.length) {\n\t\t\t\t\tcolumns = tableColumnSplit[0].trim();\n\t\t\t\t\tcolumns = Lexer.split(_wrapped(columns, '(', ')') ? _unwrap(columns, '(', ')') : columns, [','])\n\t\t\t\t\t\t.map(c => c.trim());\n\t\t\t\t}\n\t\t\t\tif (insertType === 'SELECT') {\n\t\t\t\t\tvalues = parseCallback('SELECT ' + values.trim());\n\t\t\t\t} else {\n\t\t\t\t\t// insertType === 'VALUES' || insertType === 'VALUE'\n\t\t\t\t\tvalues = Lexer.split(values.trim(), [','])\n\t\t\t\t\t\t.map(row => Lexer.split(_unwrap(row.trim(), '(', ')'), [','])\n\t\t\t\t\t\t\t.map(val => parseCallback(val.trim())));\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar onDuplicateKeyUpdate = parse.tokens.shift();\n\t\t\tif (onDuplicateKeyUpdate) {\n\t\t\t\tonDuplicateKeyUpdate = Lexer.split(onDuplicateKeyUpdate.trim(), [','])\n\t\t\t\t\t.map(assignment => parseCallback(assignment.trim(), [_Assignment]));\n\t\t\t}\n\t\t\tvar instance = new this(table, columns, values, withUac, ignore, insertType, onDuplicateKeyUpdate);\n\t\t\tinstance.parseCallback = parseCallback;\n\t\t\treturn instance;\n\t\t}\n\t}\n}\n\n/**\n * @prop object\n */\nInsert.clauses = {\n\tTABLE_REFERENCES: 'INSERT([ ]+IGNORE)?([ ]+INTO)?',\n\tVALUES_LIST: '(VALUES|VALUE|SET|SELECT)',\n\tUPDATE_CLAUSE: 'ON[ ]+DUPLICATE[ ]+KEY[ ]+UPDATE',\n};", "\n/**\n * @imports\n */\nimport ExprInterface from '../ExprInterface.js';\n\n/**\n * ---------------------------\n * JoinInterface\n * ---------------------------\n */\t\t\t\t\n\nconst Interface = class extends ExprInterface {};\nObject.defineProperty(Interface.prototype, 'jsenType', {\n\tget() { return 'JoinConstruct'; },\n});\nexport default Interface;\n", "\n/**\n * @imports\n */\nimport JoinInterface from './JoinInterface.js';\nimport Lexer from '@webqit/util/str/Lexer.js';\nimport Literal from './Literal.js';\nimport Table from './Table.js';\n\n/**\n * ---------------------------\n * Join class\n * ---------------------------\n */\t\t\t\t\n\nexport default class Join extends JoinInterface {\n\t \n\t/**\n\t * @inheritdoc\n\t */\n\tconstructor(table, condition, conditionClause) {\n\t\tsuper();\n\t\tthis.table = table;\n\t\tthis.condition = condition;\n\t\tthis.conditionClause = conditionClause;\n\t}\n\t \n\t/**\n\t * @inheritdoc\n\t */\n\teval(database, params = {}) {\n\t\treturn this.table.eval(database, params).then(t => {\n\t\t\tt.join = {\n\t\t\t\ttype: this.type, // Expected to be added by context\n\t\t\t\tcondition: this.condition, \n\t\t\t\tconditionClause: this.conditionClause\n\t\t\t};\n\t\t\treturn t;\n\t\t});\n\t}\n\n\t/**\n\t * @inheritdoc\n\t */\n\tgetName() {\n\t\treturn this.table.getName();\n\t}\t\n\n\t/**\n\t * @inheritdoc\n\t */\n\tgetAlias() {\n\t\treturn this.table.getAlias();\n\t}\n\t\n\t/**\n\t * @inheritdoc\n\t */\n\ttoString() {\n\t\treturn this.stringify();\n\t}\n\t\n\t/**\n\t * @inheritdoc\n\t */\n\tstringify(params = {}) {\n\t\treturn [\n\t\t\tthis.table.stringify(params), \n\t\t\tthis.conditionClause, \n\t\t\tthis.condition.stringify(params)\n\t\t].join('');\n\t}\n\t\n\t/**\n\t * @inheritdoc\n\t */\n\tstatic parse(expr, parseCallback, params = {}) {\n\t\tvar parse = Lexer.lex(expr, Join.clauses);\n\t\tif (parse.tokens.length === 2) {\n\t\t\tvar clause = parse.matches[0];\n\t\t\tvar table = parseCallback(parse.tokens[0], [Table]);\n\t\t\tvar condition = clause.trim().toUpperCase() === 'USING' \n\t\t\t\t? parseCallback(parse.tokens[1], [Literal])\n\t\t\t\t: parseCallback(parse.tokens[1]);\n\t\t\treturn new this(\n\t\t\t\ttable,\n\t\t\t\tcondition, \n\t\t\t\tclause\n\t\t\t);\n\t\t}\n\t}\n}\n\n/**\n * @prop object\n */\nJoin.clauses = [' on ', ' using ', ' ON ', ' USING ',];\n", "\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * MathInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'MathExpression'; },\r\n});\r\nexport default Interface;\r\n", "\r\n/**\r\n * @imports\r\n */\r\nimport _isNumeric from '@webqit/util/js/isNumeric.js';\r\nimport _flatten from '@webqit/util/arr/flatten.js';\r\nimport _intersect from '@webqit/util/arr/intersect.js';\r\nimport _unique from '@webqit/util/arr/unique.js';\r\nimport MathInterface from './MathInterface.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Math class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Math = class extends MathInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(val, exprs) {\r\n\t\tsuper();\r\n\t\tthis.val = val;\r\n\t\tthis.exprs = exprs;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, params = {}) {\r\n\t\treturn this.exprs.reduce((currentTotal, expr) => {\r\n\t\t\tvar val = expr.val.eval(context, params);\r\n\t\t\tvar operator = expr.operator.trim();\r\n\t\t\tif ((!_isNumeric(currentTotal) || !_isNumeric(val)) && operator !== '+') {\r\n\t\t\t\tthrow new Error('Invalid Math expression: ' + this.toString() + '!');\r\n\t\t\t}\r\n\t\t\tswitch(operator) {\r\n\t\t\t\tcase '+':\r\n\t\t\t\t\treturn currentTotal + val;\r\n\t\t\t\tcase '-':\r\n\t\t\t\t\treturn currentTotal - val;\r\n\t\t\t\tcase '*':\r\n\t\t\t\t\treturn currentTotal * val;\r\n\t\t\t\tcase '/':\r\n\t\t\t\t\treturn currentTotal / val;\r\n\t\t\t}\r\n\t\t}, this.val.eval(context, params));\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn [this.val.stringify(params)].concat(\r\n\t\t\tthis.exprs.map(expr => expr.operator + ' ' + expr.val.stringify(params))\r\n\t\t).join(' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar parse = Lexer.lex(expr, _flatten(this.operators));\r\n\t\tif (parse.tokens.filter(t => t).length > 1 && parse.matches.length === parse.tokens.length - 1) {\r\n\t\t\tvar operators = _unique(parse.matches);\r\n\t\t\tif (_intersect(operators, this.operators.sup).length && _intersect(operators, this.operators.sub).length) {\r\n\t\t\t\tthrow new Error('\"Addition/subtraction\" and \"multiplication/division\" operators cannot be used in the same expression: ' + expr + '!');\r\n\t\t\t}\r\n\t\t\treturn new this(\r\n\t\t\t\tparseCallback(parse.tokens.shift().trim()),\r\n\t\t\t\tparse.tokens.map((expr, i) => {return {\r\n\t\t\t\t\toperator: parse.matches[i],\r\n\t\t\t\t\tval: parseCallback(expr.trim())\r\n\t\t\t\t};})\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop object\r\n */\r\nMath.operators = {\r\n\tsup: ['*', '/'],\r\n\tsub: ['+', '-'],\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Math;\r\n", "\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * NumInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'NumberType'; },\r\n});\r\nexport default Interface;\r\n", "\r\n/**\r\n * @imports\r\n */\r\nimport _isNumeric from '@webqit/util/js/isNumeric.js';\r\nimport NumInterface from './NumInterface.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Num (number) class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Num = class extends NumInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(int, dec = 0) {\r\n\t\tsuper();\r\n\t\tthis.int = int;\r\n\t\tthis.dec = dec;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval() {\r\n\t\treturn parseFloat(this.int + (this.dec ? '.' + this.dec : null));\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn this.int + (this.dec ? '.' + this.dec : null);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tif (_isNumeric(expr)) {\r\n\t\t\tvar expr = expr.split('.');\r\n\t\t\treturn new this(\r\n\t\t\t\tparseInt(expr.shift()),\r\n\t\t\t\tparseInt(expr.shift())\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Num;\r\n", "\n/**\n * @imports\n */\nimport ExprInterface from '../ExprInterface.js';\n\n/**\n * ---------------------------\n * JoinInterface\n * ---------------------------\n */\t\t\t\t\n\nconst Interface = class extends ExprInterface {};\nObject.defineProperty(Interface.prototype, 'jsenType', {\n\tget() { return 'Placeholder'; },\n});\nexport default Interface;\n", "\n/**\n * @imports\n */\nimport _isNumeric from '@webqit/util/js/isNumeric.js';\nimport PlaceholderInterface from './PlaceholderInterface.js';\n\n/**\n * ---------------------------\n * Reference class\n * ---------------------------\n */\t\t\t\t\nexport default class Placeholder extends PlaceholderInterface {\n\n\t/**\n\t * @inheritdoc\n\t */\n\tconstructor(name, notation) {\n\t\tsuper();\n\t\tthis.name = _isNumeric(name) ? parseInt(name) : name;\n\t\tthis.notation = notation;\n\t}\n\t\t\n\t/**\n\t * @inheritdoc\n\t */\n\teval(tempRow, params = {}) {\n\t\tif (typeof this.name === 'number') {\n\t\t\tif (!params.vars) {\n\t\t\t\tthrow new Error('Annonymous placeholders require a \"params.vars\" array to be resolved.');\n\t\t\t}\n\t\t\treturn params.vars[this.name];\n\t\t}\n\t\tif (!params.vars) {\n\t\t\tthrow new Error('Named placeholders require a \"params.vars\" object to be resolved.');\n\t\t}\n\t\treturn params.vars[this.name];\n\t}\n\t\n\t/**\n\t * @inheritdoc\n\t */\n\ttoString() {\n\t\treturn this.stringify();\n\t}\n\t\n\t/**\n\t * @inheritdoc\n\t */\n\tstringify(params = {}) {\n\t\treturn this.notation === '?' ? '?' : this.notation + this.name;\n\t}\n\t\n\t/**\n\t * @inheritdoc\n\t */\n\tstatic parse(expr, parseCallback, params = {}) {\n\t\tif (expr.startsWith('?') || expr.startsWith(':')) {\n\t\t\treturn new this(expr.substr(1), expr.substr(0, 1));\n\t\t}\n\t}\n}\n", "\n/**\n * @imports\n */\nimport IndependentExprInterface from '../IndependentExprInterface.js';\n\n/**\n * ---------------------------\n * SelectInterface\n * ---------------------------\n */\t\t\t\t\n\nconst Interface = class extends IndependentExprInterface {};\nObject.defineProperty(Interface.prototype, 'jsenType', {\n\tget() { return 'SelectStatement'; },\n});\nexport default Interface;\n", "\n/**\n * @imports\n */\nimport _mixin from '@webqit/util/js/mixin.js';\nimport _isArray from '@webqit/util/js/isArray.js';\nimport _arrFrom from '@webqit/util/arr/from.js';\nimport _pushUnique from '@webqit/util/arr/pushUnique.js';\nimport _find from '@webqit/util/obj/find.js';\nimport Lexer from '@webqit/util/str/Lexer.js';\nimport SelectInterface from './SelectInterface.js';\nimport AggrInterface from '../grammar/AggrInterface.js';\nimport Field from '../grammar/Field.js';\nimport Window from '../grammar/Window.js';\nimport GroupBy from '../grammar/GroupBy.js';\nimport OrderBy from '../grammar/OrderBy.js';\nimport Stmt from './Stmt.js';\n\n/**\n * ---------------------------\n * Select class\n * ---------------------------\n */\t\t\t\t\n\nexport default class Select extends _mixin(Stmt, SelectInterface) {\n\t \n\t/**\n\t * @inheritdoc\n\t */\n\tconstructor(exprs, clauses, withUac = false, flags = [], vars = []) {\n\t\tsuper();\n\t\tthis.exprs = exprs;\n\t\tthis.clauses = clauses;\n\t\tthis.withUac = withUac;\n\t\tthis.flags = flags;\n\t\tthis.vars = vars;\n\t}\n\n\t/**\n\t * Return the SELECT STMT's Fields\n\t * \n\t * @return array\n\t */\n\tgetFields(resolve = false) {\n\t\treturn this.exprs.SELECT_LIST;\n\t}\n\n\t/**\n\t * Return the SELECT STMT's Table component\n\t * \n\t * @return Object|array\n\t */\n\tgetTable() {\n\t\treturn this.exprs.TABLE_REFERENCES;\n\t}\n\n\t/**\n\t * Return the SELECT STMT's Table and Join components\n\t * \n\t * @params Bool resolve\n\t * \n\t * @return array\n\t */\n\tgetSources(resolve = false) {\n\t\tvar joins = this.getJoins() || [];\n\t\treturn _arrFrom(this.exprs.TABLE_REFERENCES, false).concat(resolve ? joins.map(j => j.table) : joins);\n\t}\n\n\t/**\n\t * Return the SELECT STMT's Where component\n\t * \n\t * @return Object\n\t */\n\tgetWhere() {\n\t\treturn this.exprs.WHERE_CLAUSE;\n\t}\n\n\t/**\n\t * Return the SELECT STMT's Join components\n\t * \n\t * @return array\n\t */\n\tgetJoins() {\n\t\treturn this.exprs.JOIN_CLAUSE;\n\t}\n\n\t/**\n\t * Return the SELECT STMT's GroupBy components\n\t * \n\t * @return array\n\t */\n\tgetGroupBy() {\n\t\treturn this.exprs.GROUP_BY_CLAUSE;\n\t}\n\n\t/**\n\t * Return the SELECT STMT's Windows components\n\t * \n\t * @return array\n\t */\n\tgetWindows() {\n\t\treturn this.exprs.WINDOWS_CLAUSE;\n\t}\n\n\t/**\n\t * Return the SELECT STMT's OrderBy components\n\t * \n\t * @return array\n\t */\n\tgetOrderBy() {\n\t\treturn this.exprs.ORDER_BY_CLAUSE;\n\t}\n\n\t/**\n\t * Return the SELECT STMT's Offset components\n\t * \n\t * @return string\n\t */\n\tgetOffset() {\n\t\treturn this.exprs.OFFSET_CLAUSE;\n\t}\n\n\t/**\n\t * Return the SELECT STMT's Limit components\n\t * \n\t * @return string\n\t */\n\tgetLimit() {\n\t\treturn this.exprs.LIMIT_CLAUSE;\n\t}\n\n\t/**\n\t * @inheritdoc\n\t */\n\tasync eval(context, params = {}) {\n\t\t\n\t\t// ---------------------------\n\t\t// INITIALIZE DATASOURCES WITH JOIN ALGORITHIMS APPLIED\n\t\t// ---------------------------\n\t\tthis.base = this.getBase(context, params);\n\t\t// BUILD (TEMP) ROWS, WHERE\n\t\tvar tempRows = [], tempRow;\n\t\twhile (tempRow = await this.base.fetch()) {\n\t\t\ttempRows.push(tempRow);\n\t\t}\n\n\t\t// ---------------------------\n\t\t// BUILD RESPONSE ROWS INTO THE \"$\" KEY\n\t\t// ---------------------------\n\t\tvar applyFields = (tempRows, fields, collectAggrs = null) => {\n\t\t\tif (collectAggrs) {\n\t\t\t\tcollectAggrs = {aggr:[], win:[]};\n\t\t\t}\n\t\t\ttempRows.forEach(tempRow => {\n\t\t\t\tif (!tempRow.$) {\n\t\t\t\t\ttempRow.$ = {};\n\t\t\t\t}\n\t\t\t\tfields.forEach(field => {\n\t\t\t\t\tif (collectAggrs) {\n\t\t\t\t\t\t// This build will ignore AGGR columns for nowthis.\n\t\t\t\t\t\tvar aggrs = field.getAggrExprs();\n\t\t\t\t\t\tif (aggrs.length) {\n\t\t\t\t\t\t\t_pushUnique(aggrs.filter(x => x.window).length ? collectAggrs.win : collectAggrs.aggr, field);\n\t\t\t\t\t\t\t// But we'll set them to UNDEFINED (not NULL), to secure their slots\n\t\t\t\t\t\t\tif (!(field.getAlias() in tempRow.$)) {\n\t\t\t\t\t\t\t\ttempRow.$[field.getAlias()] = undefined;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tvar fieldValObject = field.eval(tempRow, context, params);\n\t\t\t\t\tObject.keys(fieldValObject).forEach(key => {\n\t\t\t\t\t\tObject.defineProperty(tempRow.$, key, Object.getOwnPropertyDescriptor(fieldValObject, key));\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t\treturn collectAggrs;\n\t\t};\n\n\t\t// ---------------------------\n\t\t// UNDERSTAND AGGREGATIONS\n\t\t// ---------------------------\n\t\tvar aggrExprs = {aggr:[], win:[]};\n\t\tthis.vars.forEach(x => {\n\t\t\t//if (x instanceof AggrInterface) {\n\t\t\tif (x instanceof AggrInterface) {\n\t\t\t\t_pushUnique(x.window ? aggrExprs.win : aggrExprs.aggr, x);\n\t\t\t}\n\t\t});\n\t\t// BUILD FIELDS\n\t\tvar aggrFields = applyFields(tempRows, this.getFields(), true/*collectAggrs*/);\n\n\t\t// ---------------------------\n\t\t// GROUP BY?\n\t\t// ---------------------------\n\t\tif (this.exprs.GROUP_BY_CLAUSE || aggrExprs.aggr.length) {\n\t\t\tvar groupBy = this.exprs.GROUP_BY_CLAUSE || new GroupBy([]);\n\t\t\ttempRows = groupBy.eval(tempRows, params);\n\t\t\t// REVISIT RESPONSE ROWS and apply AGGR columns\n\t\t\tapplyFields(tempRows, aggrFields.aggr);\n\t\t}\n\n\t\t// ---------------------------\n\t\t// WINDOWING\n\t\t// ---------------------------\n\t\tif (this.exprs.WINDOWS_CLAUSE || aggrExprs.win.length) {\n\t\t\tvar completed = [];\n\t\t\taggrExprs.win.forEach(expr => {\n\t\t\t\tvar uuid = expr.window.stringify();\n\t\t\t\tif (completed.indexOf(uuid) === -1) {\n\t\t\t\t\texpr.window.eval(tempRows, this.exprs.WINDOWS_CLAUSE, params);\n\t\t\t\t\tcompleted.push(uuid);\n\t\t\t\t}\n\t\t\t});\n\t\t\t// REVISIT RESPONSE ROWS and apply AGGR OVER () columns\n\t\t\tapplyFields(tempRows, aggrFields.win);\n\t\t}\n\n\t\t// ---------------------------\n\t\t// ORDER BY\n\t\t// ---------------------------\n\t\tif (this.exprs.ORDER_BY_CLAUSE) {\n\t\t\ttempRows = this.exprs.ORDER_BY_CLAUSE.eval(tempRows, params);\n\t\t}\n\n\t\t// ---------------------------\n\t\t// DISTINCT\n\t\t// ---------------------------\n\t\tif (this.flags.includes('DISTINCT')) {\n\t\t\ttempRows = tempRows.filter((tempRow, i) => i === _find(tempRows, _tempRow => _even(_tempRow, tempRow)));\n\t\t}\n\n\t\t// ---------------------------\n\t\t// LIMIT\n\t\t// ---------------------------\n\t\tif (this.exprs.OFFSET_CLAUSE || this.exprs.LIMIT_CLAUSE) {\n\t\t\tvar limit = this.exprs.LIMIT_CLAUSE ? this.exprs.LIMIT_CLAUSE.slice() : [];\n\t\t\tvar offset = this.exprs.OFFSET_CLAUSE || (limit.length === 2 ? limit.shift() : 0);\n\t\t\ttempRows = limit.length \n\t\t\t\t? tempRows.slice(offset, offset + limit[0]) \n\t\t\t\t: tempRows.slice(offset);\n\t\t}\n\n\t\t// ---------------------------\n\t\t// SEND RESPONSE ROWS\n\t\t// ---------------------------\n\t\treturn tempRows.map(tempRow => tempRow.$);\n\t}\n\t\n\t/**\n\t * @inheritdoc\n\t */\n\ttoString() {\n\t\treturn this.stringify();\n\t}\n\t\n\t/**\n\t * @inheritdoc\n\t */\n\tstringify(params = {}) {\n\t\treturn this.getToString(params, (clauseType, expr, clause, _params) => {\n\t\t\tif (clauseType === 'SELECT_LIST') {\n\t\t\t\treturn clause + ' ' + /*(this.flags.length ? ' ' + this.flags.join(' ') + ' ' : '') +*/ expr.map(x => x.stringify(_params)).join(', ');\n\t\t\t} else if (clauseType === 'WINDOWS_CLAUSE') {\n\t\t\t\treturn clause + ' ' + Object.keys(expr).map(\n\t\t\t\t\twindowName => windowName + ' AS ' + expr[windowName].stringify(_params)\n\t\t\t\t).join(', ');\n\t\t\t} else if (clauseType === 'GROUP_BY_CLAUSE' || clauseType === 'ORDER_BY_CLAUSE') {\n\t\t\t\treturn clause + ' ' + expr.stringify(_params);\n\t\t\t} else if (clauseType === 'LIMIT_CLAUSE') {\n\t\t\t\treturn clause + ' ' + expr.join(', ');\n\t\t\t}\n\t\t});\n\t}\n\t\n\t/**\n\t * @inheritdoc\n\t */\n\tstatic parse(expr, parseCallback, params = {}) {\n\n\t\tif (expr.trim().substr(0, 6).toLowerCase() === 'select') {\n\t\t\tvar withUac = false;\n\t\t\tif (expr.match(/SELECT[ ]+WITH[ ]+UAC/i)) {\n\t\t\t\twithUac = true;\n\t\t\t\texpr = expr.replace(/[ ]+WITH[ ]+UAC/i, '');\n\t\t\t}\n\t\t\tvar aliases = [];\n\t\t\tvar stmtParse = super.getParse(expr, withUac, this.clauses, parseCallback, params, (clauseType, _expr) => {\n\t\t\t\tif (clauseType === 'SELECT_LIST') {\n\t\t\t\t\treturn Lexer.split(_expr, [',']).map(field => {\n\t\t\t\t\t\tvar field = parseCallback(field.trim(), [Field]);\n\t\t\t\t\t\taliases.push(field.getAlias());\n\t\t\t\t\t\treturn field;\n\t\t\t\t\t});\n\t\t\t\t} else if (clauseType === 'WINDOWS_CLAUSE') {\n\t\t\t\t\tvar windowsByName = {};\n\t\t\t\t\tLexer.split(_expr, [',']).forEach(window => {\n\t\t\t\t\t\t// WINDOW w AS (PARTITION BY country ORDER BY city ASC, state DESC), u AS (...)\n\t\t\t\t\t\t// NOTICE the space around \"as\", important in view of \"city ASC\"\n\t\t\t\t\t\tvar windowSplit = window.split(new RegExp(' as ', 'i'));\n\t\t\t\t\t\twindowsByName[windowSplit[0].trim()] = parseCallback(windowSplit[1].trim(), [Window]);\n\t\t\t\t\t});\n\t\t\t\t\treturn windowsByName;\n\t\t\t\t} else if (clauseType === 'GROUP_BY_CLAUSE') {\n\t\t\t\t\treturn parseCallback(_expr, [GroupBy]);\n\t\t\t\t} else if (clauseType === 'ORDER_BY_CLAUSE') {\n\t\t\t\t\treturn parseCallback(_expr, [OrderBy]);\n\t\t\t\t} else if (clauseType === 'LIMIT_CLAUSE') {\n\t\t\t\t\treturn _expr.split(',').map(n => parseInt(n));\n\t\t\t\t}\n\t\t\t}, (literal, clauseType) => (clauseType === 'ORDER_BY_CLAUSE' || clauseType === 'GROUP_BY_CLAUSE') && aliases.includes(literal));\n\n\t\t\treturn new this(\n\t\t\t\tstmtParse.exprs, \n\t\t\t\tstmtParse.clauses, \n\t\t\t\twithUac,\n\t\t\t\tstmtParse.clauses.SELECT_LIST.replace(/SELECT/i, '').split(' ').filter(flag => flag),\n\t\t\t\tstmtParse.vars,\n\t\t\t);\n\t\t}\n\t}\n}\n\n/**\n * @prop object\n */\nSelect.clauses = {\n\tSELECT_LIST: 'SELECT([ ]+(ALL|DISTINCT))?',\n\tTABLE_REFERENCES: 'FROM',\n\tWHERE_CLAUSE: 'WHERE',\n\t// INNER JOIN, CROSS JOIN, {LEFT|RIGHT} [OUTER] JOIN\n\tJOIN_CLAUSE: '(INNER[ ]+|CROSS[ ]+|(LEFT|RIGHT)([ ]+OUTER)?[ ]+)?JOIN',\n\tGROUP_BY_CLAUSE: 'GROUP[ ]+BY',\n\tWINDOWS_CLAUSE: 'WINDOW',\n\tORDER_BY_CLAUSE: 'ORDER[ ]+BY',\n\tOFFSET_CLAUSE: 'OFFSET',\n\tLIMIT_CLAUSE: 'LIMIT',\n};", "\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * StrInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'StringType'; },\r\n});\r\nexport default Interface;\r\n", "\r\n/**\r\n * @imports\r\n */\r\nimport _wrapped from '@webqit/util/str/wrapped.js';\r\nimport _unwrap from '@webqit/util/str/unwrap.js';\r\nimport StrInterface from './StrInterface.js';\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport Bool from './Bool.js';\r\n\r\n/**\r\n * ---------------------------\r\n * String utils\r\n * ---------------------------\r\n */\r\n\r\nconst Str = class extends StrInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(expr, quote) {\r\n\t\tsuper();\r\n\t\tthis.expr = expr;\r\n\t\tthis.quote = quote;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval() {\r\n\t\treturn this.expr;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn this.quote + this.expr + this.quote;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\texpr = expr.trim();\r\n\t\tif ((_wrapped(expr, '\"', '\"') || _wrapped(expr, \"'\", \"'\")) \r\n\t\t&& !Lexer.match(expr, [' ']).length) {\r\n\t\t\tvar quote = _wrapped(expr, '\"', '\"') ? '\"' : \"'\";\r\n\t\t\treturn new this(\r\n\t\t\t\t_unwrap(expr, quote, quote),\r\n\t\t\t\tquote\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Str;\r\n", "\n/**\n * @imports\n */\nimport ExprInterface from '../ExprInterface.js';\n\n/**\n * ---------------------------\n * UnionInterface\n * ---------------------------\n */\t\t\t\t\n\nconst Interface = class extends ExprInterface {};\nObject.defineProperty(Interface.prototype, 'jsenType', {\n\tget() { return 'UnionConstruct'; },\n});\nexport default Interface;\n", "\n/**\n * @imports\n */\nimport Lexer from '@webqit/util/str/Lexer.js';\nimport OrderBy from '../grammar/OrderBy.js';\nimport UnionInterface from './UnionInterface.js';\n\n/**\n * ---------------------------\n * Union class\n * ---------------------------\n */\t\t\t\t\n\nexport default class Union extends UnionInterface {\n\t \n\t/**\n\t * @inheritdoc\n\t */\n\tconstructor(query, queries, orderBy = null, limit = null) {\n\t\tsuper();\n\t\tthis.query = query;\n\t\tthis.queries = queries;\n\t\tthis.orderBy = orderBy;\n\t\tthis.limit = limit;\n\t}\n\t\n\t/**\n\t * @inheritdoc\n\t */\n\ttoString() {\n\t\treturn this.stringify();\n\t}\n\t\n\t/**\n\t * @inheritdoc\n\t */\n\tstringify(params = {}) {\n\t\tvar str = [[this.query.stringify(params)].concat(\n\t\t\tthis.queries.map(q => (q.onDuplicate ? q.onDuplicate.toUpperCase() + ' ' : '') + q.select.stringify(params))\n\t\t).join(' UNION ')];\n\t\tif (this.orderBy) {\n\t\t\tstr.push('ORDER BY ' + this.orderBy.stringify(params));\n\t\t}\n\t\tif (this.limit) {\n\t\t\tstr.push('LIMIT ' + this.limit.join(', '));\n\t\t}\n\t\treturn str.join(' ');\n\t}\n\t\n\t/**\n\t * @inheritdoc\n\t */\n\tstatic parse(expr, parseCallback, params = {}) {\n\t\tvar parse = null;\n\t\tvar paramsRegex = {useRegex: 'i'};\n\t\tif ((parse = Lexer.lex(expr, [' UNION([ ]+(ALL|DISTINCT))? '], paramsRegex)) && parse.matches.length) {\n\t\t\tvar selects = parse.tokens;\n\t\t\tvar clauses = parse.matches;\n\t\t\tvar orderBy = null;\n\t\t\tvar limit = null;\n\t\t\t// Are the selects parenthisized? Then there could be outer ORDER BY / LIMIT clauses\n\t\t\tif (selects[0].trim().startsWith('(')) {\n\t\t\t\tvar lastStmtSplit = Lexer.lex(selects.pop(), ['ORDER[ ]+BY', 'LIMIT'], paramsRegex);\n\t\t\t\tselects.push(lastStmtSplit.tokens.shift());\n\t\t\t\tlastStmtSplit.matches.forEach(clause => {\n\t\t\t\t\tvar _expr = lastStmtSplit.tokens.shift().trim();\n\t\t\t\t\tif (clause.toUpperCase().startsWith('ORDER')) {\n\t\t\t\t\t\torderBy = parseCallback(_expr, [OrderBy]);\n\t\t\t\t\t} else if (clause.toUpperCase().startsWith('LIMIT')) {\n\t\t\t\t\t\tlimit = _expr.split(',').map(n => parseInt(n));\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn new this(\n\t\t\t\tparseCallback(selects.shift().trim()),\n\t\t\t\tselects.map((select, i) => {return {\n\t\t\t\t\tselect: parseCallback(select.trim()),\n\t\t\t\t\tonDuplicate: (clauses[i].match(new RegExp('ALL|DISTINCT', 'i')) || [])[0]\n\t\t\t\t}}),\n\t\t\t\torderBy,\n\t\t\t\tlimit\n\t\t\t);\n\t\t}\n\t}\n}", "\n/**\n * @imports\n */\nimport IndependentExprInterface from '../IndependentExprInterface.js';\n\n/**\n * ---------------------------\n * UpdateInterface\n * ---------------------------\n */\t\t\t\t\n\nconst Interface = class extends IndependentExprInterface {};\nObject.defineProperty(Interface.prototype, 'jsenType', {\n\tget() { return 'UpdateStatement'; },\n});\nexport default Interface;\n", "\n/**\n * @imports\n */\nimport _mixin from '@webqit/util/js/mixin.js';\nimport _isArray from '@webqit/util/js/isArray.js';\nimport Lexer from '@webqit/util/str/Lexer.js';\nimport UpdateInterface from './UpdateInterface.js';\nimport _Assignment from './_Assignment.js';\nimport Stmt from './Stmt.js';\n\n/**\n * ---------------------------\n * Update class\n * ---------------------------\n */\t\t\t\t\n\nexport default class Update extends _mixin(Stmt, UpdateInterface) {\n\t \n\t/**\n\t * @inheritdoc\n\t */\n\tconstructor(exprs, clauses, withUac) {\n\t\tsuper();\n\t\tthis.exprs = exprs;\n\t\tthis.clauses = clauses;\n\t\tthis.withUac = withUac;\n\t}\n\t\n\t/**\n\t * @inheritdoc\n\t */\n\tasync eval(database, params = {}) {\n\t\t// ---------------------------\n\t\t// INITIALIZE DATASOURCES WITH JOIN ALGORITHIMS APPLIED\n\t\t// ---------------------------\n\t\tvar _params = {...params};\n\t\t_params.mode = 'readwrite';\n\t\tthis.base = this.getBase(database, _params);\n\t\tvar rowComposition;\n\t\twhile(rowComposition = await this.base.fetch()) {\n\t\t\tthis.exprs.ASSIGNMENT_LIST.forEach(assignment => assignment.eval(rowComposition, params));\n\t\t}\n\t\tvar __keys = await this.base.syncCursors();\n\t\treturn Promise.all(this.base.joins.concat(this.base.main))\n\t\t\t.then(list => list.reduce((result, t, i) => ({[t.name]: __keys[i], ...result}), {}));\n\t}\n\t\n\t/**\n\t * @inheritdoc\n\t */\n\ttoString() {\n\t\treturn this.stringify();\n\t}\n\t\n\t/**\n\t * @inheritdoc\n\t */\n\tstringify(params = {}) {\n\t\treturn this.getToString(params, (clauseType, expr, clause, _params, _t) => {\n\t\t\tif (clauseType === 'ASSIGNMENT_LIST') {\n\t\t\t\treturn clause + ' ' + expr.map(assignment => assignment.stringify(_params)).join(', ');\n\t\t\t}\n\t\t});\n\t}\n\t\n\t/**\n\t * @inheritdoc\n\t */\n\tstatic parse(expr, parseCallback, params = {}) {\n\t\tif (expr.trim().substr(0, 6).toLowerCase() === 'update') {\n\t\t\tvar withUac = false;\n\t\t\tif (expr.match(/UPDATE[ ]+WITH[ ]+UAC/i)) {\n\t\t\t\twithUac = true;\n\t\t\t\texpr = expr.replace(/[ ]+WITH[ ]+UAC/i, '');\n\t\t\t}\n\t\t\tvar stmtParse = super.getParse(expr, withUac, this.clauses, parseCallback, params, (clauseType, _expr) => {\n\t\t\t\tif (clauseType === 'ASSIGNMENT_LIST') {\n\t\t\t\t\treturn Lexer.split(_expr, [','])\n\t\t\t\t\t\t.map(assignment => parseCallback(assignment.trim(), [_Assignment]));\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn new this(stmtParse.exprs, stmtParse.clauses, withUac);\n\t\t}\n\t}\n}\n\n/**\n * @prop object\n */\nUpdate.clauses = {\n\tTABLE_REFERENCES: 'UPDATE',\n\tASSIGNMENT_LIST: 'SET',\n\tWHERE_CLAUSE: 'WHERE',\n\t// inner join, cross join, {left|right} [outer] join\n\tJOIN_CLAUSE: '(INNER[ ]+|CROSS[ ]+|(LEFT|RIGHT)([ ]+OUTER)?[ ]+)?JOIN',\n};", "\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * VoidInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'Void'; },\r\n});\r\nexport default Interface;\r\n", "\r\n/**\r\n * @imports\r\n */\r\nimport Lexer from '@webqit/util/str/Lexer.js';\r\nimport VoidInterface from './VoidInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Void (boolean) class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Void = class extends VoidInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(val) {\r\n\t\tsuper();\r\n\t\tthis.val = val;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval() {\r\n\t\treturn this.val.toLowerCase().trim() === 'null' ? null : undefined;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.stringify();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstringify(params = {}) {\r\n\t\treturn this.val;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, params = {}) {\r\n\t\tvar expr = expr.toLowerCase().trim();\r\n\t\tif (expr === 'null' || expr === 'undefined') {\r\n\t\t\treturn new this(expr);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Void;\r\n", "\n/**\n * @imports\n */\nimport ExprInterface from './ExprInterface.js';\n// Mains\nimport Abstraction from './grammar/Abstraction.js';\nimport AbstractionInterface from './grammar/AbstractionInterface.js';\nimport Aggr from './grammar/Aggr.js';\nimport AggrInterface from './grammar/AggrInterface.js';\nimport ArrowReference from './grammar/ArrowReference.js';\nimport ArrowReferenceInterface from './grammar/ArrowReferenceInterface.js';\nimport Assertion from './grammar/Assertion.js';\nimport AssertionInterface from './grammar/AssertionInterface.js';\nimport Assignment from './grammar/Assignment.js';\nimport AssignmentInterface from './grammar/AssignmentInterface.js';\nimport Bool from './grammar/Bool.js';\nimport BoolInterface from './grammar/BoolInterface.js';\nimport Call from './grammar/Call.js';\nimport CallInterface from './grammar/CallInterface.js';\nimport Comparison from './grammar/Comparison.js';\nimport ComparisonInterface from './grammar/ComparisonInterface.js';\nimport Condition from './grammar/Condition.js';\nimport ConditionInterface from './grammar/ConditionInterface.js';\nimport Delete from './statement/Delete.js';\nimport DeleteInterface from './statement/DeleteInterface.js';\nimport Field from './grammar/Field.js';\nimport FieldInterface from './grammar/FieldInterface.js';\nimport GroupBy from './grammar/GroupBy.js';\nimport GroupByInterface from './grammar/GroupByInterface.js';\nimport Insert from './statement/Insert.js';\nimport InsertInterface from './statement/InsertInterface.js';\nimport Join from './grammar/Join.js';\nimport JoinInterface from './grammar/JoinInterface.js';\nimport Math from './grammar/Math.js';\nimport MathInterface from './grammar/MathInterface.js';\nimport Num from './grammar/Num.js';\nimport NumInterface from './grammar/NumInterface.js';\nimport OrderBy from './grammar/OrderBy.js';\nimport OrderByInterface from './grammar/OrderByInterface.js';\nimport Placeholder from './grammar/Placeholder.js';\nimport PlaceholderInterface from './grammar/PlaceholderInterface.js';\nimport Reference from './grammar/Reference.js';\nimport ReferenceInterface from './grammar/ReferenceInterface.js';\nimport Select from './statement/Select.js';\nimport SelectInterface from './statement/SelectInterface.js';\nimport Str from './grammar/Str.js';\nimport StrInterface from './grammar/StrInterface.js';\nimport Table from './grammar/Table.js';\nimport TableInterface from './grammar/TableInterface.js';\nimport Union from './statement/Union.js';\nimport UnionInterface from './statement/UnionInterface.js';\nimport Update from './statement/Update.js';\nimport UpdateInterface from './statement/UpdateInterface.js';\nimport Void from './grammar/Void.js';\nimport VoidInterface from './grammar/VoidInterface.js';\nimport Window from './grammar/Window.js';\nimport WindowInterface from './grammar/WindowInterface.js';\n\n/**\n * @var object\n */\nexport default {\n\t// Statements and union\n\tUnion: Union,\t\t\t\t// ... UNION ...\n\tSelect: Select,\t\t\t\t// SELECT ... FROM ...\n\tInsert: Insert,\t\t\t\t// INSERT INTO ...\n\tUpdate: Update,\t\t\t\t// UPDATE ...\n\tDelete: Delete,\t\t\t\t// DELETE FROM ...\n\t// Expressions\n\tJoin: Join,\t\t\t\t\t// table2 ON|USING ...\n\tAbstraction: Abstraction,\t// (...)\n\tCondition: Condition,\t\t// IF(..., ..., ...)\n\tAssertion: Assertion,\t\t// !field1 OR field2\n\tComparison: Comparison,\t\t// field1 > field2\n\tMath: Math,\t\t\t\t\t// field1 + field2\n\tNum: Num,\t\t\t\t\t// [0-9]\n\tStr: Str,\t\t\t\t\t// \"\"\n\tBool: Bool,\t\t\t\t\t// true\n\tVoid: Void,\t\t\t\t\t// null|undefined\n\tAggr: Aggr,\t\t\t\t\t// MIN() OVER()\n\tCall: Call,\t\t\t\t\t// COUNT()\n\tPlaceholder: Placeholder,\t// ? :var\n\tArrowReference: ArrowReference, // ref1 ~> ref2\n\tReference: Reference,\t\t// field1\n};\n\n/**\n * @exports\n */\nexport {\n\tExprInterface,\n};\nexport {\n\tAbstraction,\n\tAggr,\n\tArrowReference,\n\tAssertion,\n\tAssignment,\n\tBool,\n\tCall,\n\tComparison,\n\tCondition,\n\tDelete,\n\tField,\n\tGroupBy,\n\tInsert,\n\tJoin,\n\tMath,\n\tNum,\n\tOrderBy,\n\tPlaceholder,\n\tReference,\n\tSelect,\n\tStr,\n\tTable,\n\tUnion,\n\tUpdate,\n\tVoid,\n\tWindow\n};\nexport {\n\tAbstractionInterface,\n\tAggrInterface,\n\tArrowReferenceInterface,\n\tAssertionInterface,\n\tAssignmentInterface,\n\tBoolInterface,\n\tCallInterface,\n\tComparisonInterface,\n\tConditionInterface,\n\tDeleteInterface,\n\tFieldInterface,\n\tGroupByInterface,\n\tInsertInterface,\n\tJoinInterface,\n\tMathInterface,\n\tNumInterface,\n\tOrderByInterface,\n\tPlaceholderInterface,\n\tReferenceInterface,\n\tSelectInterface,\n\tStrInterface,\n\tTableInterface,\n\tUnionInterface,\n\tUpdateInterface,\n\tVoidInterface,\n\tWindowInterface\n};\n", "\n/**\n * @imports\n */\nimport Parser from './Parser.js';\nimport grammar from './grammar.js';\nimport ODB from './database/odb/ODBDriver.js';\n\n/**\n * @var object\n */\nParser.grammar = grammar;\n\n/**\n * @exports\n */\nexport default Parser;\nexport {\n\tODB,\n};", "\n/**\n * @imports\n */\nimport _Cursor from '../_Cursor.js';\n\n/**\n * ---------------------------\n * SQLCursor class\n * ---------------------------\n */\t\t\t\t\n\nexport default class SQLCursor extends _Cursor {\n\t \n\t/**\n\t * @inheritdoc\n\t */\n\tconstructor(store) {\n\t\tsuper([]);\n\t\t// ---------------\n\t\tthis._store = store;\n\t\t// ---------------\n\t\tthis._storeFetch = new Promise(async resolve => {\n\t\t\tthis.cache = await this._store.getAll();\n\t\t\tresolve();\n\t\t});\n\t}\n\t \n\t/**\n\t * @inheritdoc\n\t */\n\tasync fetch() {\n\t\tawait this._storeFetch;\n\t\treturn super.fetch();\n\t}\n}\n", "\r\n/**\r\n * Tells if ANY items pass the test.\r\n *\r\n * @param array \tarr\r\n * @param function \tcallback\r\n *\r\n * @return bool\r\n */\r\nexport default function(arr, callback) {\r\n\treturn arr.reduce((prevTest, itm, i) => prevTest || callback(itm, i), false);\r\n};\r\n", "\n/**\n * @imports\n */\nimport _all from '@webqit/util/arr/all.js';\nimport _any from '@webqit/util/arr/any.js';\nimport _unique from '@webqit/util/arr/unique.js';\nimport _isArray from '@webqit/util/js/isArray.js';\n\n/**\n * ---------------------\n * The _InsertQueryResult class\n * ---------------------\n */\nexport default class _InsertQueryResult {\n\n    /**\n     * Accepts the insert payload\n     * \n     * @param _Table table\n     * @param Object rawResultMeta\n     * @param Array columns\n     * @param Array entries\n     * @param Object duplicateKeyUpdateObj\n     */\n    constructor(table, rawResultMeta, columns, entries, duplicateKeyUpdateObj = {}) {\n        this.table = table;\n        this.rawResultMeta = rawResultMeta;\n        this.columns = columns;\n        this.entries = entries;\n        this.duplicateKeyUpdateObj = duplicateKeyUpdateObj;\n    }\n\n\t/**\n\t * Returns the pointers for the inserts.\n     * \n     * @return Object\n\t */\n    getAffectedRowsPointers() {\n        if (!_isArray(this.columns) || !_isArray(this.entries)) {\n            return;\n        }\n\t\tvar keyPaths = [], wheres = { all: {}, each: [], };\n\t\tvar primaryKeyColumns = this.table.getKeyPathForPrimaryKey();\n\t\tif (_any(primaryKeyColumns, columnName => this.columns.includes(columnName))) {\n\t\t\tkeyPaths = [primaryKeyColumns];\n\t\t\twheres.by = 'primaryKey';\n\t\t} else {\n\t\t\tvar uniqueColumnsKeyPaths = this.table.getKeyPathsForIndex('unique');\n\t\t\tkeyPaths = uniqueColumnsKeyPaths.filter(keyPath => _any(keyPath, columnName => this.columns.includes(columnName)));\n\t\t\twheres.by = 'uniqueKeys';\n\t\t}\n\t\tif (keyPaths.length) {\n\t\t\t// -------------\n            var columnIndexes = {};\n            _unique(keyPaths.reduce((all, keyPath) => all.concat(keyPath), [])).forEach(columnName => {\n                var columnNameIndexInRows = this.columns.indexOf(columnName);\n                if (columnNameIndexInRows === -1) {\n                    // Use default value\n                    wheres.all[columnName] = this.table.def.schema.columns[columnName].default;\n                } else {\n                    columnIndexes[columnName] = columnNameIndexInRows;\n                }\n            });\n            var columnIndexNames = Object.keys(columnIndexes);\n            if (columnIndexNames.length) {\n                this.entries.forEach(entry => {\n                    var where = {};\n                    columnIndexNames.forEach(columnName => {\n                        if (_isArray(entry)) {\n                            where[columnName] = entry[columnIndexes[columnName]];\n                        } else {\n                            where[columnName] = entry[columnName];\n                        }\n                        if (this.duplicateKeyUpdateObj && (columnName in this.duplicateKeyUpdateObj)) {\n                            where[columnName] = [where[columnName], this.duplicateKeyUpdateObj[columnName]];\n                        }\n                    });\n                    wheres.each.push(where);\n                });\n            }\n\t\t\t// -------------\n\t\t}\n        return wheres;\n\t}\n}", "\n/**\n * @imports\n */\nimport _isEmpty from '@webqit/util/js/isEmpty.js';\nimport _isArray from '@webqit/util/js/isArray.js';\nimport _isNumeric from '@webqit/util/js/isNumeric.js';\nimport _all from '@webqit/util/arr/all.js';\nimport _InsertQueryResult from '../_InsertQueryResult.js';\n\n/**\n * ---------------------\n * The SQLInsertQueryResult class\n * ---------------------\n */\nexport default class SQLInsertQueryResult extends _InsertQueryResult {\n\n    /**\n     * Returns the query result info.\n     * \n     * @return Object\n     */\n    info() {\n        var infoArray;\n        var match = (this.rawResultMeta.info || '').replace(/ /g, '').match(/Records:([0-9]*)Duplicates:([0-9]*)Warnings:([0-9]*)/);\n        if (match) {\n            infoArray = match.slice(1).map(n => parseInt(n));\n        } else {\n            infoArray = [0, 0, 0];\n        }\n        return {\n            records: infoArray[0],\n            duplicates: infoArray[1],\n            warnings: infoArray[2],\n        };\n    }\n\n    /**\n     * Returns the affected rows for the query.\n     * \n     * @param Bool withIDs\n     * \n     * @return Array\n     */\n    async getAffectedRows(withIDs = false) {\n        // Lets first attemp to inspect the entries themselves\n        var pointers = this.getAffectedRowsPointers();\n        // ---------------------\n        // If IDs where explicitly assigned to each entry...\n        if (pointers.by === 'primaryKey') {\n            var primaryKeys = Object.keys(pointers.each[0]);\n            if (primaryKeys.length === 1) {\n                var affectedRows = pointers.each.map(entryPointer => entryPointer[primaryKeys[0]]);\n                if (_all(affectedRows, id => _isNumeric(id))) {\n                    if (!withIDs) {\n                        return affectedRows.length;\n                    }\n                    return affectedRows.map(id => parseInt(id));\n                }\n            }\n        }\n        // ---------------------\n        var primaryKey = 'id';\n        // Here we query the databse with the pointers\n        const where = pointerObj => {\n            var pointerNames = Object.keys(pointerObj);\n            var sql = pointerNames.reduce((sql, columnName) => sql.concat((\n                _isArray(pointerObj[columnName]) ? `${columnName} IN (\"${pointerObj[columnName].join('\", \"')}\")` : `${columnName} = \"${pointerObj[columnName]}\"`)\n            ), []).join(' AND ');\n            return pointerNames.length > 1 ? `(${sql})` : sql;\n        };\n        // ---------------------\n        var whereAll = '', whereEach = '';\n        if (!_isEmpty(pointers.all)) {\n            whereAll = where(pointers.all);\n        }\n        if (!_isEmpty(pointers.each)) {\n            var pointerNames = Object.keys(pointers.each[0]);\n            if (pointerNames.length === 1 && !_isArray(pointers.each[0][pointerNames[0]])) {\n                whereEach = `${pointerNames[0]} IN (${pointers.each.map(pointerObj => pointerObj[pointerNames[0]]).join(', ')})`\n            } else {\n                whereEach = pointers.each.map(pointerObj => where(pointerObj)).join(' OR ');\n            }\n        }\n        if (whereAll || whereEach) {\n            var conn = await this.table.database.driver.getConnection();\n            return new Promise((resolve, reject) => {\n                var whereSql = whereAll && whereEach ? `${whereAll} AND (${whereEach})` : whereAll || whereEach;\n                var query = `SELECT ${!withIDs ? `COUNT(*) AS count` : primaryKey} FROM ${this.table.name} WHERE ${whereSql} ORDER BY ${primaryKey} ASC`;\n                conn.query(query, (err, result) => {\n                    if (err) return reject(err);\n                    if (!withIDs) {\n                        return resolve(result[0].count);\n                    }\n                    resolve(result.map(row => row[primaryKey]));\n                });\n            });\n        }\n        // ---------------------\n        if (this.rawResultMeta.insertId) {\n            return !withIDs ? this.entries.length : this.entries.map(\n                (entry, i) => this.rawResultMeta.insertId + 1\n            );\n        }\n        return !withIDs ? 0 : [];\n    }\n}", "\n/**\n * ---------------------\n * The _DeleteQueryResult class\n * ---------------------\n */\nexport default class _DeleteQueryResult {\n\n    /**\n     * Accepts the insert payload\n     * \n     * @param _Table table\n     * @param Object rawResultMeta\n     * @param Object whereObj\n     */\n    constructor(table, rawResultMeta, whereObj) {\n        this.table = table;\n        this.rawResultMeta = rawResultMeta;\n        this.whereObj = whereObj;\n    }\n}", "\n/**\n * @imports\n */\nimport _DeleteQueryResult from '../_DeleteQueryResult.js';\n\n/**\n * ---------------------\n * The SQLDeleteQueryResult class\n * ---------------------\n */\nexport default class SQLDeleteQueryResult extends _DeleteQueryResult {\n\n    /**\n     * Returns the affected rows for the query.\n     * \n     * @param Bool withIDs\n     * \n     * @return Array\n     */\n    async getAffectedRows(withIDs = false) {\n        if (withIDs) {\n            throw new Error(`The \"withIDs\" argument is not supported for delete queries.`)\n        }\n        return this.rawResultMeta.affectedRows;\n    }\n}", "\n/**\n * @imports\n */\nimport _isObject from '@webqit/util/js/isObject.js';\nimport _isNull from '@webqit/util/js/isNull.js';\nimport _arrFrom from '@webqit/util/arr/from.js';\nimport _isNumeric from '@webqit/util/js/isNumeric.js';\nimport _wrapped from '@webqit/util/str/wrapped.js';\nimport _Table from '../_Table.js';\nimport SQLCursor from './SQLCursor.js';\nimport SQLInsertQueryInspector from './SQLInsertQueryResult.js';\nimport SQLDeleteQueryInspector from './SQLDeleteQueryResult.js';\n\n/**\n * ---------------------------\n * SQLTable class\n * ---------------------------\n */\n\nexport default class SQLTable extends _Table {\n\n\t/**\n\t * Returns a cursor.\n\t * \n\t * @return SQLCursor\n\t */\n\tgetCursor() {\n\t\treturn new SQLCursor(this);\n\t}\n\t \n\t/**\n\t * @inheritdoc\n\t */\n\tasync getAll() {\n\t\tvar conn = await this.database.driver.getConnection();\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconn.query('SELECT * FROM ' + this.name, (err, result) => {\n\t\t\t\tif (err) return reject(err);\n\t\t\t\tresolve(result);\n\t\t\t});\n\t\t});\n\t}\n\t \n\t/**\n\t * @inheritdoc\n\t */\n\tasync get(primaryKey) {\n\t\tvar conn = await this.database.driver.getConnection();\n\t\tvar primaryKeyColumns = this.getPrimaryKeyColumns();\n\t\tif (primaryKeyColumns.length !== 1) {\n\t\t\tthrow new Error('Cannot find records by primary key on a table with zero or multiple primary keys.');\n\t\t}\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconn.query('SELECT * FROM ' + this.name + ' WHERE `' + primaryKeyColumns[0] + '` = ?', [primaryKey], (err, result) => {\n\t\t\t\tif (err) return reject(err);\n\t\t\t\tresolve(result[0]);\n\t\t\t});\n\t\t});\n\t}\n\t\n\t/**\n\t * @inheritdoc\n\t */\n\tasync count(query = '*') {\n\t\tvar conn = await this.database.driver.getConnection();\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconn.query('SELECT COUNT(' + query + ') AS c FROM ' + this.name, (err, result) => {\n\t\t\t\tif (err) return reject(err);\n\t\t\t\tresolve(result[0].c);\n\t\t\t});\n\t\t});\n\t}\n\t\n\t/**\n\t * @inheritdoc\n\t */\n\tasync addAll(entries, columns = [], duplicateKeyCallback = null) {\n\t\tif (!entries.length) {\n\t\t\treturn;\n\t\t}\n\t\tvar duplicateKeyUpdateObj = {};\n\t\tif (!columns.length) {\n\t\t\tif (_isObject(entries[0])) {\n\t\t\t\tcolumns = Object.keys(entries[0]);\n\t\t\t} else {\n\t\t\t\tcolumns = Object.keys(this.def.schema.columns);\n\t\t\t}\n\t\t}\t\t\n\t\tvar conn = await this.database.driver.getConnection();\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tvar insertSql = 'INSERT INTO `' + this.name + '`' + \"\\r\\n\" + (columns.length ? '(`' + columns.join('`, `') + '`)' + \"\\r\\n\" : '');\n\t\t\tinsertSql += 'VALUES' + \"\\r\\n\" + entries.map(row => formatAddRow(Object.values(row))).join(\",\\r\\n\") + \"\\r\\n\";\n\t\t\tif (duplicateKeyCallback) {\n\t\t\t\tduplicateKeyCallback(duplicateKeyUpdateObj);\n\t\t\t\tinsertSql += ' ON DUPLICATE KEY UPDATE ' + formatAssignments(duplicateKeyUpdateObj);\n\t\t\t}\n\t\t\tconn.query(insertSql, (err, result) => {\n\t\t\t\tif (err) return reject(err);\n\t\t\t\tresolve(new SQLInsertQueryInspector(\n\t\t\t\t\tthis, \n\t\t\t\t\tresult, \n\t\t\t\t\tcolumns, \n\t\t\t\t\tentries, \n\t\t\t\t\tduplicateKeyUpdateObj\n\t\t\t\t));\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * @inheritdoc\n\t */\n\tasync add(rowObj) {\n\t\tvar conn = await this.database.driver.getConnection();\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tvar insertSql = 'INSERT INTO `' + this.name + '`' + \"\\r\\n\" + '(`' + Object.keys(rowObj).join('`, `') + '`)' + \"\\r\\n\";\n\t\t\tinsertSql += 'VALUES' + \"\\r\\n\" + formatAddRow(Object.values(rowObj));\n\t\t\tconn.query(insertSql, (err, result) => {\n\t\t\t\tif (err) return reject(err);\n\t\t\t\tresolve(new SQLInsertQueryInspector(\n\t\t\t\t\tthis, \n\t\t\t\t\tresult, \n\t\t\t\t\tObject.keys(rowObj), \n\t\t\t\t\tObject.values(rowObj), \n\t\t\t\t));\n\t\t\t});\n\t\t});\n\t}\n\t\n\t/**\n\t * @inheritdoc\n\t */\n\tasync putAll(rowObjs) {\n\t\tawait Promise.all(rowObjs.map(rowObj => this.put(rowObj)));\n\t\treturn new SQLInsertQueryInspector(\n\t\t\tthis, \n\t\t\t{}, \n\t\t\tObject.keys(rowObjs[0]), \n\t\t\trowObjs, \n\t\t);\n\t}\n\n\t/**\n\t * @inheritdoc\n\t */\n\tasync put(rowObj) {\n\t\tvar conn = await this.database.driver.getConnection();\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tvar putSql = 'INSERT INTO `' + this.name + '`' + \"\\r\\n\" + formatPutRow(rowObj);\n\t\t\tconn.query(putSql, (err, result) => {\n\t\t\t\tif (err) return reject(err);\n\t\t\t\tresolve(new SQLInsertQueryInspector(\n\t\t\t\t\tthis, \n\t\t\t\t\tresult, \n\t\t\t\t\tObject.keys(rowObj), \n\t\t\t\t\tObject.values(rowObj), \n\t\t\t\t));\n\t\t\t});\n\t\t});\n\t}\n\t\n\t/**\n\t * @inheritdoc\n\t */\n\tasync deleteAll(IDs = []) {\n\t\tvar conn = await this.database.driver.getConnection();\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tvar deleteSql = 'DELETE FROM `' + this.name + '`' + (IDs.length ? ' WHERE id in (' + IDs.join(', ') + ')' : '');\n\t\t\tconn.query(deleteSql, (err, result) => {\n\t\t\t\tif (err) return reject(err);\n\t\t\t\tresolve(new SQLDeleteQueryInspector(\n\t\t\t\t\tthis,\n\t\t\t\t\tresult\n\t\t\t\t));\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * @inheritdoc\n\t */\n\tasync delete(primaryKey) {\n\t\tvar conn = await this.database.driver.getConnection();\n\t\tvar primaryKeyColumns = this.getPrimaryKeyColumns();\n\t\tif (primaryKeyColumns.length !== 1) {\n\t\t\tthrow new Error('Cannot delete records by primary key on a table with zero or multiple primary keys.');\n\t\t}\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tvar deleteSql = 'DELETE FROM `' + this.name + '` WHERE `' + primaryKeyColumns[0] + '` = ?';\n\t\t\tconn.query(deleteSql, [primaryKey], (err, result) => {\n\t\t\t\tif (err) return reject(err);\n\t\t\t\tresolve(new SQLDeleteQueryInspector(\n\t\t\t\t\tthis,\n\t\t\t\t\tresult\n\t\t\t\t));\n\t\t\t});\n\t\t});\n\t}\n\n}\n\n/**\n * --------\n * HELPERS\n * --------\n */\nconst isJSON = str => _wrapped(str, '{', '}') || _wrapped(str, '[', ']');\nconst formatVal = val => {\n\tif (val instanceof Date) {\n\t\ttry {\n\t\t\treturn \"'\" + val.toISOString().split('.')[0] + \"'\";\n\t\t} catch(e) {\n\t\t\treturn 'NULL';\n\t\t}\n\t}\n\treturn _isNumeric(val) ? val : (_isNull(val) ? 'NULL' : \"'\" + val + \"'\");\n};\nconst formatAssignments = rowObj => Object.keys(rowObj).map(key => '`' + key + '` = ' + formatVal(rowObj[key])).join(', ');\nconst formatAddRow = values => '(' + values.map(formatVal).join(', ') + ')';\nconst formatPutRow = rowObj => {\n\tvar assignments = formatAssignments(rowObj);\n\treturn 'SET ' + assignments + ' ON DUPLICATE KEY UPDATE ' + assignments;\n};\n\n", "\n\n/**\n * @imports\n */\nimport _isFunction from '@webqit/util/js/isFunction.js';\nimport _isObject from '@webqit/util/js/isObject.js';\nimport _isNull from '@webqit/util/js/isNull.js';\nimport _arrFrom from '@webqit/util/arr/from.js';\nimport _each from '@webqit/util/obj/each.js';\nimport _diff from '@webqit/util/obj/diff.js';\nimport _Database from '../_Database.js';\nimport SQLTable from './SQLTable.js';\n\n/**\n * ---------------------------\n * SQLDatabase class\n * ---------------------------\n */\t\t\t\t\n\nexport default class SQLDatabase extends _Database {\n\t\n    /**\n     * @inheritdoc\n     */\n    async tables() {\n        var conn = await this.driver.getConnection();\n        return new Promise((resolve, reject) => {\n            conn.query(`SHOW TABLES FROM ${this.name}`, (err, result) => {\n                if (err) return reject(err);\n                resolve(result.map(row => row['Tables_in_' + this.name]));\n            });\n        });\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async table(tableName, params = {}) {\n        return new SQLTable(this, tableName, {\n            schema: this.getTableSchema(tableName),\n        }, params);\n    }\n\n    /**\n     * CREATE/ALTER/DROP\n     */\n\n    /**\n     * @inheritdoc\n     */\n    async createTable(tableName, tableSchema, params = {}) {\n        \n        var sqlStmt = [], actions = this.diffTableSchema({}, tableSchema);\n        _each(actions, (changeName, changeDef) => {\n            if (changeName === 'primaryKey') {\n                if (changeDef.add) {\n                    sqlStmt.push(this.toSql[changeName](changeDef.add, changeDef.add));\n                }\n            } else if (changeName !== 'renameTo') {\n                _each(changeDef.add, (prop, def) => {\n                    sqlStmt.push(this.toSql[changeName](prop, def));\n                });\n            }\n        });\n        \n        var sql = `CREATE TABLE ${params.ifNotExists ? 'IF NOT EXISTS ' : ''}\\`${tableName}\\` (`;\n        sql += \"\\r\\n\\t\" + Object.values(sqlStmt).join(\",\\r\\n\\t\") + \"\\r\\n\";\n        sql += ') ENGINE=' + (tableSchema.engine || 'InnoDB') + ';';\n    \n        var conn = await this.driver.getConnection();\n        return await (new Promise((resolve, reject) => {\n            conn.query(sql, (err, result) => {\n                if (err) return reject(err);\n                this.setTableSchema(tableName, tableSchema);\n                resolve(new SQLTable(this, tableName, {\n                    schema: this.getTableSchema(tableName),\n                }));\n            });\n        }));\n\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async alterTable(tableName, newTableSchemaOrCallback, params = {}) {\n\n        var tableSchema = this.getTableSchema(tableName),\n            newTableSchema;\n        if (_isFunction(newTableSchemaOrCallback)) {\n            // Modify existing schema\n            newTableSchema = this.cloneTableSchema(tableSchema);\n            await newTableSchemaOrCallback(newTableSchema);\n        } else if (_isObject(newTableSchemaOrCallback)) {\n            newTableSchema = newTableSchemaOrCallback;\n        } else {\n            throw new Error('Table/store modification expects only an object (new schema) or a function (callback that recieves existing schema).')\n        }\n\n        var sqlStmt = [], actions = this.diffTableSchema(tableSchema, newTableSchema, tableName);\n        _each(actions, (changeName, changeDef) => {\n            if (changeName === 'renameTo') {\n                sqlStmt.push(this.toSql[changeName](changeDef));\n            } else if (changeName === 'renamedColumns') {\n                // \"renamedColumns\" actually comes last from source...\n                // and really should\n                _each(changeDef, (oldName, newName) => {\n                    sqlStmt.push(this.toSql[changeName](oldName, newName));\n                });\n            } else {\n                // \"primaryKey\", \"columns\", \"foreignKeys\", \"indexes\", \"jsonColumns\"\n                if (changeName === 'primaryKey') {\n                    if ((changeDef.add && changeDef.drop) || changeDef.alter) {\n                        sqlStmt.push(this.toSql[changeName](changeDef.alter, changeDef.add || changeDef.alter, 'alter'));\n                    } else if (changeDef.add) {\n                        sqlStmt.push(this.toSql[changeName](changeDef.add, changeDef.add, 'add'));\n                    } else if (changeDef.drop) {\n                        sqlStmt.push(this.toSql[changeName](changeDef.drop, changeDef.drop, 'drop'));\n                    }\n                } else {\n                    _each(changeDef.add, (prop, def) => {\n                        sqlStmt.push(this.toSql[changeName](prop, def, 'add'));\n                    });\n                    _each(changeDef.alter, (prop, changes) => {\n                        sqlStmt.push(this.toSql[changeName](prop, changes.current, 'alter'));\n                    });\n                    _each(changeDef.drop, (prop, oldDef) => {\n                        sqlStmt.push(this.toSql[changeName](prop, oldDef, 'drop'));\n                    });\n                }\n            }\n        });\n\n        var sql = `ALTER TABLE ${params.ifExists ? 'IF EXISTS ' : ''}\\`${tableName}\\``;\n        sql += \"\\r\\n\\t\" + Object.values(sqlStmt).join(\",\\r\\n\\t\") + \"\\r\\n\";\n        sql += ';';\n        \n        var conn = await this.driver.getConnection();\n        return await (new Promise((resolve, reject) => {\n            conn.query(sql, (err, result) => {\n                if (err) return reject(err);\n                this.setTableSchema(tableName, newTableSchema);\n                resolve(new SQLTable(this, tableName, {\n                    schema: this.getTableSchema(tableName),\n                }));\n            });\n        }));\n\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async dropTable(tableName, params = {}) {\n        var sql = `DROP TABLE ${params.ifExists ? 'IF EXISTS ' : ''}\\`${tableName}\\``;\n        \n        var conn = await this.driver.getConnection();\n        return await (new Promise((resolve, reject) => {\n            conn.query(sql, (err, result) => {\n                if (err) return reject(err);\n                this.unsetTableSchema(tableName);\n                resolve(result);\n            });\n        }));\n    }\n\n    // ----------------\n\n    /**\n     * @var Object.\n     * \n     * SQL translators.\n     */\n    toSql = {\n\n        renameTo: (newTableName) => {\n            return 'RENAME TO `' + newTableName + '`';\n        },\n\n        primaryKey: (columnName, def, delta) => {\n            if (delta === 'drop') {\n                return 'DROP PRIMARY KEY';\n            }\n            // Compose STRING\n            var columnSql = 'PRIMARY KEY (`' + _arrFrom(def).join('`, `') + '`)';\n            if (delta) {\n                return (delta === 'alter' ? 'DROP PRIMARY KEY, ADD ' : 'ADD ') + columnSql;\n            }\n            return columnSql;\n        },\n    \n        columns: (columnName, def, delta) => {\n            if (delta === 'drop') {\n                return 'DROP COLUMN `' + columnName + '`';\n            }\n            // Compose STRING\n            var columnSql = '`' + columnName + '` ' + (def.type ? def.type + (def.charlen ? ' (' + def.charlen + ')' : '') : (def.referencedEntity ? 'int' : 'varchar(255)')) + (def.notNull ? ' NOT NULL' : '') + (def.autoIncrement ? ' AUTO_INCREMENT' : '');\n            if ('default' in def) {\n                columnSql += ' DEFAULT ' + (!_isNull(def.default) ? (def.default === 'CURRENT_TIMESTAMP' ? def.default : '\"' + def.default + '\"') : 'NULL');\n            }\n            if (def.onupdate === 'CURRENT_TIMESTAMP') {\n                columnSql += ' ON UPDATE CURRENT_TIMESTAMP';\n            }\n            if (delta) {\n                return (delta === 'alter' ? 'ALTER COLUMN ' : 'ADD COLUMN ') + columnSql + (def.before ? ' BEFORE ' + def.before : (def.after ? ' AFTER ' + def.after : ''));\n            }\n            return columnSql;\n        },\n    \n        foreignKeys: (alias, def, delta) => {\n            if (delta === 'drop') {\n                return 'DROP CONSTRAINT `' + alias + '`';\n            }\n            var columnSql = 'CONSTRAINT `' + alias + '` FOREIGN KEY (`' + def.columnName + '`) REFERENCES ' + def.table + ' (`' + (def.column) + '`)';\n            if (def.onupdate) {\n                columnSql += ' ON UPDATE ' + def.onupdate.replace(/_/g, ' ');\n            }\n            if (def.ondelete) {\n                columnSql += ' ON DELETE ' + def.ondelete.replace(/_/g, ' ');\n            }\n            if (delta) {\n                return (delta === 'alter' ? 'ALTER ' : 'ADD ') + columnSql;\n            }\n            return columnSql;\n        },\n    \n        indexes: (alias, def, delta) => {\n            if (delta === 'drop') {\n                return 'DROP CONSTRAINT `' + alias + '`';\n            }\n            var columnSql;\n            if (def.type === 'fulltext' || def.type === 'unique') {\n                columnSql = (def.type === 'fulltext' ? 'FULLTEXT' : 'UNIQUE KEY') + ' `' + alias + '` (`' + _arrFrom(def.keyPath).join('`, `') + '`)';\n            } else {\n                columnSql = 'INDEX `' + alias + '` (`' + _arrFrom(def.keyPath).join('`, `') + '`)';\n            }\n            if (delta) {\n                return (delta === 'alter' ? 'ALTER ' : 'ADD ') + columnSql;\n            }\n            return columnSql;\n        },\n    \n        jsonColumns: (alias, columnName, delta) => {\n            if (delta === 'drop') {\n                return 'DROP CONSTRAINT `' + alias + '`';\n            }\n            var columnSql = 'CONSTRAINT `' + alias + '` CHECK(JSON_VALID(' + columnName + '))';\n            if (delta) {\n                return (delta === 'alter' ? 'ALTER ' : 'ADD ') + columnSql;\n            }\n            return columnSql;\n        },\n    \n        renamedColumns: (columnName, newColumnName) => {\n            return 'RENAME COLUMN `' + columnName + '` TO `' + newColumnName + '`';\n        },\n    \n    }\n\n}", "\n\n/**\n * @imports\n */\nimport Driver from '../_Driver.js';\nimport _isNumeric from '@webqit/util/js/isNumeric.js';\nimport ObjSQL from '../../index.js';\nimport SQLDatabase from './SQLDatabase.js';\n\n/**\n * ---------------------------\n * SQLDriver class\n * ---------------------------\n */\t\t\t\t\n\nexport default class SQLDriver extends Driver {\n\n    /**\n     * Instance.\n     * \n     * @param Object params \n     * @param String sqlClient \n     */\n    constructor(sqlClient, params) {\n        super();\n        this.name = 'sql';\n        this.sqlClient = sqlClient;\n        this.params = params;\n    }\n\n    /**\n     * ---------\n     * CONNECT\n     * ---------\n     */\n\n    /**\n     * Connects to an SQL database.\n     * \n     * @param Object params \n     * @param String sqlClient \n     * \n     * @returns this\n     */\n    static connect(sqlClient, params) {\n        return new this(sqlClient, params);\n    }\n\n    /**\n     * Returns the active SQL connection.\n     * \n     * @return Promise\n\t */\n    async getConnection() {\n        if (!this.conn) {\n            const SqlClient = await import(this.sqlClient);\n            var conn = SqlClient.createConnection({\n                host: this.params.host,\n                user: this.params.user,\n                password: this.params.password,\n            });\n            this.conn = new Promise((resolve, reject) => {\n                conn.connect(err => {\n                    if (err) return reject(err);\n                    conn.query(`SELECT database() AS default_db`, (err, result) => {\n                        if (err) return reject(err);\n                        var defaultDB = (result[0] || {}).default_db;\n                        if (defaultDB) {\n                            this.defaultDB = defaultDB;\n                        }\n                        resolve(conn);\n                    });\n                });\n            });\n        }\n        return this.conn;\n    }\n\n\t/**\n\t * Sets default database.\n\t * \n\t * @param String databaseName\n\t * @param Object params\n     * \n     * @return void\n\t */\n\tasync setDefaultDB(databaseName, params = this.defaultDBParams) {\n        var conn = await this.getConnection();\n        return new Promise((resolve, reject) => {\n            conn.query('USE ' + databaseName, err => {\n                if (err) return reject(err);\n                resolve(super.setDefaultDB(databaseName, params));\n            });\n        });\n\t}\n    \n\t/**\n     * Returns a list of databases.\n     * \n     * @param String databaseName\n     * @param Object params\n     * @param Bool includeSystemDBs\n     * \n     * @return Array\n\t */\n    async databases(databaseName = null, params = {}, includeSystemDBs = false) {\n        var conn = await this.getConnection();\n        var databaseList = await new Promise((resolve, reject) => {\n            conn.query('SHOW DATABASES', (err, result) => {\n                if (err) return reject(err);\n                if (!includeSystemDBs) {\n                    var systemDBs = ['information_schema', 'mysql', 'performance_schema', 'sys'];\n                    result = result.filter(row => !systemDBs.includes(row.Database));\n                }\n                resolve(result.map(row => {\n                    return {name: row.Database};\n                }));\n            });\n        });\n        return this.matchDatabaseList(databaseList, databaseName, params);\n\t}\n\n\t/**\n     * Returns a database handle.\n     * \n     * @param String databaseName\n     * @param Object params\n     * \n     * @return SQLDatabase\n\t */\n    async database(databaseName = this.defaultDB, params = this.defaultDBParams) {\n        var databases = await this.databases();\n        if (!databases.filter(d => d.name = databaseName && d.version === params.version).length) {\n            // Fire upgradedneeded!\n        }\n        await this.setDefaultDB(databaseName, params);\n        return new SQLDatabase(this, databaseName, {}, params);\n\t}\n\n\n    /**\n     * ---------\n     * CREATE/DROP\n     * ---------\n     */\n\n    /**\n     * Creates.\n     * \n     * @param String databaseName\n     * @param Object params\n     * \n     * @return Object\n     */\n    async createDatabase(databaseName, params = this.defaultDBParams) {\n        if (params.version && !_isNumeric(params.version)) {\n            throw new Error(`Database version (params.version) must be numeric.`);\n        }\n        var conn = await this.getConnection();\n        return new Promise((resolve, reject) => {\n            // Drop-on-exists, if specified in onExist, would have been fullfiled as super.create()\n            conn.query(`CREATE DATABASE${params.ifNotExists ? ` IF NOT EXISTS` : ``} ${databaseName}`, err => {\n                if (err) return reject(err);\n                // ----------------\n                this.setDatabaseSchema(databaseName, {});\n                // ----------------\n                this.setDefaultDB(databaseName, params).then(() => {\n                    resolve(new SQLDatabase(this, databaseName, {}, params));\n                });\n            });\n        });\n    }\n\n    /**\n     * Drops a database.\n     * \n     * @param String databaseName\n     * @param Object params\n     * \n     * @return Bool\n     */\n    async dropDatabase(databaseName, params = {}) {\n        var conn = await this.getConnection();\n        return new Promise((resolve, reject) => {\n            conn.query(`DROP DATABASE${params.ifExists ? ` IF EXISTS` : ``} ${databaseName}`, err => {\n                if (err) return reject(err);\n                // ----------------\n                this.unsetDatabaseSchema(databaseName);\n                // ----------------\n                resolve(true);\n            });\n        });\n    }\n\n    /**\n     * ---------\n     * QUERY\n     * ---------\n     */\n\t \n\t/**\n     * @inheritdoc\n\t */\n\tasync query(query, vars = [], params = {}) {\n        var conn = await this.getConnection();\n        params = {...params};\n        params.vars = vars;\n        params.dbDriver = this;\n        var sql = ObjSQL.parse(query, null, params).stringify({interpreted: true});\n        return new Promise((resolve, reject) => {\n            conn.query(sql, (err, result) => {\n                if (err) return reject(err);\n                resolve(result);\n            });\n        });\n    }\n}", "\n/**\n * @imports\n */\nimport ODB from './database/odb/ODBDriver.js';\nimport IDB from './database/idb/IDBDriver.js';\nimport SQL from './database/sql/SQLDriver.js';\n\n// As globals\nif (!self.webqit) { self.webqit = {}; }\nself.webqit.ObjectiveSQL = {\n\tODB,\n\tIDB,\n\tSQL\n};\n"],
  "mappings": "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",
  "names": ["isArray_default", "val", "isString_default", "val", "isUndefined_default", "val", "isTypeArray_default", "val", "isString_default", "isUndefined_default", "isNull_default", "val", "isTypeFunction_default", "val", "isTypeObject_default", "val", "isTypeFunction_default", "isEmpty_default", "val", "isNull_default", "isUndefined_default", "isTypeObject_default", "isObject_default", "val", "from_default", "val", "castObject", "isArray_default", "isObject_default", "isEmpty_default", "isTypeArray_default", "isNumber_default", "val", "isNumeric_default", "val", "isNumber_default", "each_default", "obj", "callback", "returnValue", "isTypeObject_default", "k", "isNumeric_default", "Driver", "schema", "isObject_default", "databaseName", "params", "databaseDump", "database", "tableName", "tableSchema", "tableData", "isNumeric_default", "isArray_default", "table", "tableNames", "databaseSchema", "_databaseSchema", "each_default", "tablenName", "databaseList", "databasename", "db", "isUndefined_default", "isNull_default", "isEmpty_default", "isFunction_default", "val", "isTypeFunction_default", "intersect_default", "arr", "arr2", "callback", "isArray_default", "val1", "val2", "unique_default", "arr", "distinct", "value", "index", "self", "difference_default", "arr", "arr2", "callback", "isArray_default", "val1", "val2", "_Database", "driver", "databaseName", "def", "tableName", "tableSchema", "params", "newTableSchemaOrCallback", "schema", "schemaColumns", "each_default", "columnName", "columnDef", "databaseSchema", "isObject_default", "newSchema", "name", "value", "isArray_default", "prevSchema", "schemaChanges", "schemaChangeRecorders", "action", "newColumnsDef", "prevColumnsDef", "currentColumns", "prevColumns", "difference_default", "intersect_default", "currentColumnProps", "prevColumnProps", "changes", "prop", "isSame", "unique_default", "newTableName", "newPrimaryKeyDef", "prevPrimaryKeyDef", "keyName", "from_default", "prevKeyName", "newKeysDef", "prevKeysDef", "currentKeys", "prevKeys", "newIndexesDef", "prevIndexesDef", "currentProps", "prevProps", "assert", "column", "e", "a", "b", "prev", "v", "temp", "k", "pushUnique_default", "arr", "items", "itm", "getPrototypeChain_default", "obj", "until", "isArray_default", "prototypalChain", "getAllPropertyNames_default", "obj", "until", "keysAll", "getPrototypeChain_default", "pushUnique_default", "mergeCallback", "objs", "callback", "deepProps", "isReplace", "withSymbols", "depth", "obj1", "isNumeric_default", "obj2", "i", "isTypeObject_default", "isFunction_default", "getAllPropertyNames_default", "key", "valAtObj1", "valAtObj2", "isArray_default", "isObject_default", "merge_default", "objs", "mergeCallback", "k", "obj1", "obj2", "DuplicateKeyViolationError_default", "all_default", "arr", "callback", "prevTest", "itm", "wrapped_default", "subject", "openingTag", "closingTag", "_Table", "database", "tableName", "def", "params", "isEmpty_default", "keyPath", "name", "from_default", "type", "keyPaths", "indexName", "cursor", "rowObj", "primaryKey", "existing", "readKeyPath", "match", "uniqueKeys", "alias", "existingRow", "i", "constraintName", "multiValues", "columns", "duplicateKeyCallback", "forceAutoIncrement", "ongoingAdd", "forUpdates", "inserts", "values", "line", "isObject_default", "_columns", "columnName", "resolve", "duplicateRow", "n", "timestamp", "each_default", "field", "multiRows", "ongoingPut", "updates", "all_default", "key", "multiIDs", "deletes", "applyDefaults", "rowObjColumns", "schemaColumns", "unknownFields", "col", "value", "isTypeObject_default", "isString_default", "wrapped_default", "isNumeric_default", "intersect_default", "isNull_default", "isUndefined_default", "v", "_Cursor", "rows", "callback", "ODBCursor", "_Cursor", "ODBStore", "_Table", "database", "tableName", "def", "params", "ODBCursor", "_store", "row", "rowID", "primaryKeyColumn", "name", "autoIncrementColumn", "store", "from_default", "rowObj", "match", "DuplicateKeyViolationError_default", "processPrimaryKey", "resolve", "reject", "primaryKey", "readKeyPath", "each_default", "key", "value", "assertExisting", "keyPath", "v", "canAutoIncrement", "primaryKeyVal", "primaryKeyPath", "ODBDatabase", "_Database", "tableName", "params", "ODBStore", "tableSchema", "newTableSchemaOrCallback", "newTableSchema", "isFunction_default", "isObject_default", "store", "each_default", "changeName", "changeDef", "prop", "def", "changes", "oldDef", "oldName", "newName", "columnName", "delta", "alias", "newColumnName", "ODBDriver", "Driver", "databaseName", "params", "databaseList", "name", "isNumeric_default", "databases", "ODBDatabase", "query", "vars", "IDBCursor", "_Cursor", "store", "resolve", "getAllRequest", "e", "from_default", "IDBProgressiveCursor", "store", "callback", "resolve", "e", "value", "IDBStore", "_Table", "IDBCursor", "IDBProgressiveCursor", "resolve", "reject", "getAllRequest", "e", "from_default", "primaryKey", "isNumeric_default", "getRequest", "query", "countRequest", "multiValues", "columns", "duplicateKeyCallback", "rowObj", "addRequest", "error", "DuplicateKeyViolationError_default", "putRequest", "isArray_default", "delRequest", "IDBDatabase", "_Database", "from_default", "tableName", "params", "getStore", "_mode", "transaction", "IDBStore", "tableSchema", "database", "storeParams", "primaryKeyColumn", "name", "autoIncrementColumn", "store", "each_default", "changeName", "changeDef", "prop", "def", "newTableSchemaOrCallback", "newTableSchema", "isFunction_default", "isObject_default", "changes", "oldDef", "oldName", "newName", "columnName", "delta", "alias", "newColumnName", "IDBDriver", "Driver", "databaseName", "params", "databaseList", "from_default", "resolve", "dbOpenRequest", "e", "IDBDatabase", "callback", "isNumeric_default", "upgradeneededCalled", "callbackReturn", "dbDeleteRequest", "query", "vars", "_flatten", "arr", "depth", "withObjects", "isNumeric_default", "isArray_default", "isObject_default", "acc", "val", "flatten_default", "first_default", "arr", "amount", "count", "itm", "firsts", "last_default", "arr", "amount", "first_default", "isPlainObject_default", "obj", "isObject_default", "isBoolean_default", "val", "compareCallback_default", "obj1", "obj2", "assertion", "netComparison", "contrast", "returnOnFirstFalse", "isArray_default", "result", "contn", "v1", "testPass", "each_default", "k", "v2", "isTypeObject_default", "isObject_default", "isBoolean_default", "_even", "obj1", "obj2", "assertion", "depth", "isArray_default", "isObject_default", "obj1Keys", "obj2Keys", "isPlainObject_default", "result", "compareCallback_default", "v1", "v2", "isFunction_default", "isNumber_default", "even_default", "copyPlain_default", "obj", "filter", "mergeCallback", "key", "obj1", "obj2", "isFunction_default", "isArray_default", "Lexer", "_Lexer", "str", "delims", "options", "isString_default", "copyResult", "result", "copyPlain_default", "i", "cached", "even_default", "instance", "runtime", "from_default", "merge_default", "cursor", "flatten_default", "charWidth", "commentTest", "quoteTest", "nestingTest", "chars", "stopChar", "matchedDelim", "nextIndex", "quote", "block", "last_default", "ending", "starting", "first_default", "testList", "k", "test", "isFunction_default", "ret", "m", "target", "isNewSeries", "splitSeries", "isUndefined_default", "splitSeries2", "comments", "ExprInterface_default", "Expr", "isObject_default", "even_default", "Super", "comments", "vars", "Interface", "ExprInterface_default", "ReferenceInterface_default", "Interface", "ExprInterface_default", "CallInterface_default", "IndependentExprInterface_default", "ExprInterface_default", "SyntaxError_default", "args", "cache", "BaseParser", "expr", "grammar", "params", "_parsed", "_grammar", "i", "parsed", "SyntaxError_default", "Expr", "meta", "createMeta", "_expr", "_params", "subStmt", "merge_default", "ReferenceInterface_default", "hasCallHead", "_context", "CallInterface_default", "type", "_var", "IndependentExprInterface_default", "isArray_default", "Parser", "BaseParser", "expr", "Parsers", "params", "Lexer", "t", "i", "after_default", "subject", "search", "afterLast", "pos", "before_default", "subject", "search", "beforeLast", "pos", "beforeLast_default", "subject", "search", "before_default", "unwrap_default", "subject", "openingTag", "closingTag", "beforeLast_default", "after_default", "Interface", "ExprInterface_default", "AbstractionInterface_default", "Abstraction", "AbstractionInterface_default", "expr", "context", "params", "parseCallback", "wrapped_default", "Lexer", "unwrap_default", "Abstraction_default", "mixin", "classes", "Traps", "RetrnDirective", "isArray_default", "Base", "last_default", "supersMap", "Mixin", "args", "_this", "_class", "i", "__this", "WQSubclassesSymbolKey", "getPrototypeChain_default", "__class", "originalInstanceChecker", "instance", "yes", "_mixin", "mergeCallback", "prop", "obj1", "obj2", "isFunction_default", "each_default", "supers", "supersReturnValues", "supr", "_find", "obj", "callback", "deep", "keys", "values", "isArray_default", "subKey", "value", "prev", "curr", "isTypeObject_default", "isFunction_default", "key", "from_default", "find_default", "Interface", "ExprInterface_default", "ArgumentsInterface_default", "Arguments", "ArgumentsInterface_default", "list", "context", "params", "arg", "expr", "parseCallback", "args", "wrapped_default", "Lexer", "unwrap_default", "Arguments_default", "ReferenceError_default", "args", "Call", "CallInterface_default", "reference", "args", "context", "params", "e", "ReferenceError_default", "expr", "parseCallback", "Lexer", "tokens", "ReferenceInterface_default", "Arguments_default", "SyntaxError_default", "Call_default", "Interface", "ExprInterface_default", "AggrInterface_default", "inherit_default", "objs", "mergeCallback", "key", "obj1", "obj2", "isArray_default", "Interface", "ExprInterface_default", "WindowInterface_default", "sort_default", "arr", "order", "callback", "_arr", "length", "i", "a", "b", "isString_default", "itm", "Interface", "ExprInterface_default", "OrderByInterface_default", "OrderBy", "OrderByInterface_default", "columns", "withRollup", "tempRows", "params", "order", "rows", "by", "grouping", "row", "_for", "result", "sort_default", "str", "c", "expr", "parseCallback", "parse", "Lexer", "beforeLast_default", "Window", "WindowInterface_default", "dfn", "tempRows", "definitions", "params", "uuid", "inherit_default", "exec", "rows", "partitionBy", "partitioning", "row", "_for", "partition", "e", "length", "str", "expr", "a", "parseCallback", "wrapped_default", "unwrap_default", "parse", "Lexer", "clauseType", "OrderBy", "Aggr", "mixin", "Call_default", "AggrInterface_default", "context", "params", "args", "str", "expr", "parseCallback", "aggrMatch", "funcFlagMatch", "aggrFlag", "aggrMatchRegex", "flatten_default", "funcName", "before_default", "funcFlagStart", "after_default", "funcCategory", "find_default", "val", "splits", "Lexer", "instance", "Window", "first_default", "obj", "isArray_default", "isClass_default", "val", "isTypeFunction_default", "Scope", "_Scope", "stack", "params", "trap", "callback", "e", "prop", "_has", "_params", "changes", "references", "c", "keysMain", "unique_default", "isTypeObject_default", "k", "ref", "props", "final", "level", "callMain", "bindThis", "contxtObj", "contxtMeta", "advance", "val", "_get", "isUndefined_default", "isFunction_default", "isClass_default", "initKeyword", "isRootVar", "_set", "cntxt", "localContxtMeta", "ReferenceError_default", "prop2", "contextObj2", "args", "fn", "scopeObj", "cntxts", "supr", "i", "isNull_default", "Reference", "_Reference", "ReferenceInterface_default", "context", "name", "backticks", "params", "ref", "subjectContext", "ExprInterface_default", "tempRow", "map", "sourceContext", "Scope", "prop", "val", "initKeyword", "args", "expr", "parseCallback", "Lexer", "splits", "nameSplit", "wrapped_default", "unwrap_default", "SyntaxError_default", "Interface", "Reference", "ArrowReferenceInterface_default", "ArrowReference", "_ArrowReference", "ArrowReferenceInterface_default", "schema1", "dbDriver", "reference", "expr", "parseCallback", "params", "parse", "str", "before_default", "schema2", "SCHEMAS", "actingKey", "sourceTable", "after_default", "select", "_sourceTable", "referencedEntity", "foreignKey", "first_default", "Interface", "ExprInterface_default", "AssertionInterface_default", "Assertion", "AssertionInterface_default", "exprs", "logic", "context", "params", "first_default", "operators", "flatten_default", "isOr", "isNor", "isAnd", "isNand", "lastResult", "trues", "i", "expr", "parseCallback", "parse", "Lexer", "unique_default", "Assertion_default", "Interface", "ExprInterface_default", "AssignmentInterface_default", "Interface", "ExprInterface_default", "BoolInterface_default", "Bool", "BoolInterface_default", "state", "params", "expr", "parseCallback", "Bool_default", "Interface", "ExprInterface_default", "ComparisonInterface_default", "Comparison", "ComparisonInterface_default", "operand1", "operand2", "operator", "context", "params", "expr", "parseCallback", "operators", "flatten_default", "oper", "parse", "Lexer", "first_default", "last_default", "isString_default", "isArray_default", "strict", "Interface", "ExprInterface_default", "ConditionInterface_default", "Condition", "ConditionInterface_default", "assertion", "onTrue", "onFalse", "params", "context", "expr", "parseCallback", "tokens", "Lexer", "unwrap_default", "Interface", "IndependentExprInterface_default", "DeleteInterface_default", "from_default", "key", "val", "obj", "isArray_default", "k", "Interface", "ExprInterface_default", "LiteralInterface_default", "Literal", "LiteralInterface_default", "expr", "params", "parseCallback", "Interface", "IndependentExprInterface_default", "TableInterface_default", "View", "_Table", "stmt", "database", "tableName", "def", "params", "_Cursor", "row", "cursor", "Table", "TableInterface_default", "expr", "alias", "claused", "schema", "from_default", "AbstractionInterface_default", "reference", "derivedName", "derivedQuery", "derivedQuerySources", "getAliasOfField", "fieldName", "field", "ALL_SCHEMAS", "source", "MAIN_SCHEMA", "first_default", "derivedSchema", "ReferenceInterface_default", "ref", "name", "context", "isEmpty_default", "isArray_default", "each_default", "indexName", "indexDef", "keyPathAliased", "dbDriver", "params", "getDatabase", "databaseName", "Driver", "derivedStore", "database", "_params", "View", "_Database", "a", "parseCallback", "parse", "Lexer", "SCHEMA", "tableParse", "Abstraction_default", "Literal", "LiteralInterface_default", "fullTableName", "tableName", "DB_SCHEMA", "sum_default", "arr", "total", "v", "avg_default", "arr", "sum_default", "max_default", "arr", "v1", "v2", "min_default", "arr", "v1", "v2", "rand_default", "arr", "amount", "result", "rand", "get_default", "ctxt", "path", "trap", "reciever", "from_default", "_ctxt", "isUndefined_default", "isNull_default", "_key", "isTypeObject_default", "Row", "params", "args", "prev", "next", "isNull_default", "substr", "str", "val", "rows", "flag", "column", "separator", "avg_default", "max_default", "min_default", "sum_default", "first_default", "last_default", "rand_default", "onColumns", "cum", "i", "match", "by", "byStr", "columnStr", "after_default", "arg", "result", "row", "isArray_default", "width", "values", "_v", "v", "unique_default", "doc", "path", "get_default", "name", "value", "from_default", "doc1", "doc2", "merge_default", "Base", "main", "joins", "where", "params", "m", "join", "j", "joinCursors", "lastJoinCursor", "prevCursor", "currentCursor", "mainCursor", "callback", "rowComposition", "rowCompositionRejection", "__main", "__mainCursor", "__mainFetch", "__mainAlias", "__joins", "__joinCursors", "joinFetches", "__joinCursor", "i", "__joinFetch", "__joinAlias", "column", "conditionRowComposition", "Row", "__joinFetches", "t", "_rowComposition", "rowMember", "e", "__tables", "__cursors", "cursor", "Query", "params", "tableXSchema", "user", "UAC_PARAMS", "createParams", "getExplicitRulesQuery", "ownerGuestRelationshipQuery", "getOwnerGuestRelationshipQuery", "accessType", "withActingRights", "entityAccess", "getRightsRulesIntersectionExpression", "rules", "fields", "fieldsAccesses", "field", "fieldAccess", "rights", "tableSpecifiers", "merge_default", "tableSpecifier", "fullTableName", "tableNameSplit", "tableName", "databaseName", "tableXName", "targetInLineageQuery", "groupConcat", "accessRightQueries", "compiledAccessRights", "each_default", "assertion", "right", "rightsExpression", "explicitFirstRule", "isBoolean_default", "nodeAccessAssertions", "rule", "ruleSql", "r", "isObject_default", "isEmpty_default", "from_default", "Client", "_Client", "params", "tableXSchema", "user", "columns", "from_default", "OBJECT_QUERY", "Query", "organicRights", "priorityAccounts", "UAC_PARAMS", "createParams", "ACCOUNT_QUERY", "getOwnerGuestRelationshipQuery", "accesses", "overObject", "orAsRelatedTo", "withFields", "withActingRights", "entityJson", "fieldsJson", "fields", "accessType", "each_default", "field", "access", "allFieldsJson", "accessesDocs", "Stmt", "databases", "params", "tables", "isArray_default", "table", "main", "joins", "Base", "callback", "t", "_t", "n", "when", "_params", "strArray", "each_default", "clauseType", "expr", "i", "str", "clause", "join", "x", "withUac", "stmtClauses", "parseCallback", "literalValidateCallback", "useRegex", "parse", "Lexer", "EXPRS", "CLAUSES", "TABLES", "SCHEMAS", "VARS", "find_default", "c", "_expr", "_exprParse", "Table", "TABLE_REFERENCES", "j", "tableAlias", "tableSchema", "allRefs", "from_default", "_VARS", "__exprParse", "_var", "CallInterface_default", "ref_name", "ref_context", "ArrowReferenceInterface_default", "ArrowReference", "Reference", "field", "impliedFields", "a", "_ref_context", "alias", "tableName", "Client", "ref", "arrowReferences", "_joins", "_select", "joinUUID", "stmt", "unique_default", "Delete", "mixin", "Stmt", "DeleteInterface_default", "exprs", "clauses", "withUac", "database", "params", "targetTableNames", "mainTable", "t", "before_default", "from_default", "isArray_default", "_params", "targetTables", "deletionIDs", "tables", "alias", "table", "rowComposition", "rowID", "key", "_rowID", "all_default", "id", "i", "result", "affectedRows", "currentResult", "expr", "parseCallback", "stmtParse", "clauseType", "_expr", "Interface", "ExprInterface_default", "FieldInterface_default", "Field", "FieldInterface_default", "expr", "alias", "claused", "isArray_default", "x", "CallInterface_default", "AggrInterface_default", "tempRow", "database", "params", "ReferenceInterface_default", "multiple", "each_default", "name", "ref", "val", "reference", "from_default", "value", "AbstractionInterface_default", "a", "parseCallback", "splits", "Lexer", "exprParse", "wrapped_default", "copy_default", "obj", "filter", "withSymbols", "depth", "isNumeric_default", "isTypeObject_default", "mergeCallback", "key", "obj1", "obj2", "isFunction_default", "isArray_default", "Interface", "ExprInterface_default", "GroupByInterface_default", "GroupBy", "GroupByInterface_default", "columns", "having", "withRollup", "tempRows", "params", "groupBy", "rows", "by", "result", "grouping", "row", "_for", "group", "summaryRow", "Row", "inherit_default", "copy_default", "b", "after_default", "str", "c", "expr", "parseCallback", "parse", "Lexer", "clauseType", "Interface", "IndependentExprInterface_default", "InsertInterface_default", "Assignment", "AssignmentInterface_default", "initKeyword", "reference", "val", "operator", "postIncrDecr", "context", "params", "initialVal", "isNumber_default", "operandA", "operandB", "isArray_default", "e", "ReferenceError_default", "expr", "parseCallback", "parse", "Lexer", "testBlockEnd", "isIncrDecr", "before_default", "SyntaxError_default", "after_default", "ReferenceInterface_default", "a", "b", "Assignment_default", "Insert", "_Insert", "InsertInterface_default", "TABLE_REFERENCES", "COLUMNS_LIST", "VALUES_LIST", "WITH_UAC", "IGNORE", "INSERT_TYPE", "UPDATE_CLAUSE", "context", "params", "_params", "tableBase", "tableSchema", "values", "insertType", "forceAutoIncrement", "columns", "assignment", "row", "e", "val", "c", "duplicateKeyCallback", "newRow", "keys", "_t", "n", "str", "expr", "parseCallback", "withUac", "ignore", "parse", "Lexer", "table", "Table", "Assignment_default", "tableColumnSplit", "wrapped_default", "unwrap_default", "onDuplicateKeyUpdate", "instance", "Interface", "ExprInterface_default", "JoinInterface_default", "Join", "_Join", "JoinInterface_default", "table", "condition", "conditionClause", "database", "params", "t", "expr", "parseCallback", "parse", "Lexer", "clause", "Table", "Literal", "Interface", "ExprInterface_default", "MathInterface_default", "Math", "MathInterface_default", "val", "exprs", "context", "params", "currentTotal", "expr", "operator", "isNumeric_default", "parseCallback", "parse", "Lexer", "flatten_default", "t", "operators", "unique_default", "intersect_default", "i", "Math_default", "Interface", "ExprInterface_default", "NumInterface_default", "Num", "NumInterface_default", "int", "dec", "params", "expr", "parseCallback", "isNumeric_default", "Num_default", "Interface", "ExprInterface_default", "PlaceholderInterface_default", "Placeholder", "PlaceholderInterface_default", "name", "notation", "isNumeric_default", "tempRow", "params", "expr", "parseCallback", "Interface", "IndependentExprInterface_default", "SelectInterface_default", "Select", "mixin", "Stmt", "SelectInterface_default", "exprs", "clauses", "withUac", "flags", "vars", "resolve", "joins", "from_default", "j", "context", "params", "tempRows", "tempRow", "applyFields", "fields", "collectAggrs", "field", "aggrs", "pushUnique_default", "fieldValObject", "key", "aggrExprs", "x", "AggrInterface_default", "aggrFields", "groupBy", "GroupBy", "completed", "expr", "uuid", "i", "find_default", "_tempRow", "limit", "offset", "clauseType", "clause", "_params", "windowName", "parseCallback", "aliases", "stmtParse", "_expr", "Lexer", "Field", "windowsByName", "window", "windowSplit", "Window", "OrderBy", "n", "literal", "flag", "Interface", "ExprInterface_default", "StrInterface_default", "Str", "StrInterface_default", "expr", "quote", "params", "parseCallback", "wrapped_default", "Lexer", "unwrap_default", "Str_default", "Interface", "ExprInterface_default", "UnionInterface_default", "Union", "UnionInterface_default", "query", "queries", "orderBy", "limit", "params", "str", "q", "expr", "parseCallback", "parse", "paramsRegex", "Lexer", "selects", "clauses", "lastStmtSplit", "clause", "_expr", "OrderBy", "n", "select", "i", "Interface", "IndependentExprInterface_default", "UpdateInterface_default", "Update", "mixin", "Stmt", "UpdateInterface_default", "exprs", "clauses", "withUac", "database", "params", "_params", "rowComposition", "assignment", "__keys", "list", "result", "t", "i", "clauseType", "expr", "clause", "_t", "parseCallback", "stmtParse", "_expr", "Lexer", "Assignment_default", "Interface", "ExprInterface_default", "VoidInterface_default", "Void", "VoidInterface_default", "val", "params", "expr", "parseCallback", "Void_default", "grammar_default", "Union", "Select", "Insert", "Update", "Delete", "Join", "Abstraction_default", "Condition", "Assertion_default", "Comparison", "Math_default", "Num_default", "Str_default", "Bool_default", "Void_default", "Aggr", "Call_default", "Placeholder", "ArrowReference", "Reference", "Parser", "grammar_default", "src_default", "SQLCursor", "_Cursor", "store", "resolve", "any_default", "arr", "callback", "prevTest", "itm", "_InsertQueryResult", "table", "rawResultMeta", "columns", "entries", "duplicateKeyUpdateObj", "isArray_default", "keyPaths", "wheres", "primaryKeyColumns", "any_default", "columnName", "uniqueColumnsKeyPaths", "keyPath", "columnIndexes", "unique_default", "all", "columnNameIndexInRows", "columnIndexNames", "entry", "where", "SQLInsertQueryResult", "_InsertQueryResult", "infoArray", "match", "n", "withIDs", "pointers", "primaryKeys", "affectedRows", "entryPointer", "all_default", "id", "isNumeric_default", "primaryKey", "where", "pointerObj", "pointerNames", "sql", "columnName", "isArray_default", "whereAll", "whereEach", "isEmpty_default", "conn", "resolve", "reject", "whereSql", "query", "err", "result", "row", "entry", "i", "_DeleteQueryResult", "table", "rawResultMeta", "whereObj", "SQLDeleteQueryResult", "_DeleteQueryResult", "withIDs", "SQLTable", "_Table", "SQLCursor", "conn", "resolve", "reject", "err", "result", "primaryKey", "primaryKeyColumns", "query", "entries", "columns", "duplicateKeyCallback", "duplicateKeyUpdateObj", "isObject_default", "insertSql", "row", "formatAddRow", "formatAssignments", "SQLInsertQueryResult", "rowObj", "rowObjs", "putSql", "formatPutRow", "IDs", "deleteSql", "SQLDeleteQueryResult", "formatVal", "val", "isNumeric_default", "isNull_default", "formatAssignments", "rowObj", "key", "formatAddRow", "values", "formatPutRow", "assignments", "SQLDatabase", "_Database", "conn", "resolve", "reject", "err", "result", "row", "tableName", "params", "SQLTable", "tableSchema", "sqlStmt", "actions", "each_default", "changeName", "changeDef", "prop", "def", "sql", "newTableSchemaOrCallback", "newTableSchema", "isFunction_default", "isObject_default", "oldName", "newName", "changes", "oldDef", "newTableName", "columnName", "delta", "columnSql", "from_default", "isNull_default", "alias", "newColumnName", "SQLDriver", "Driver", "sqlClient", "params", "conn", "resolve", "reject", "err", "result", "defaultDB", "databaseName", "includeSystemDBs", "databaseList", "systemDBs", "row", "databases", "d", "SQLDatabase", "isNumeric_default", "query", "vars", "sql", "src_default", "ODBDriver", "IDBDriver", "SQLDriver"]
}
