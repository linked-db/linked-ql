(()=>{function bt(u){return u instanceof String||typeof u=="string"&&u!==null}function mt(u){return arguments.length&&(u===void 0||typeof u>"u")}function Ht(u){return typeof u=="function"}function P(u){return Ht(u)||u&&{}.toString.call(u)==="[object function]"}function R(u){return Array.isArray(u)}function ye(u){return!bt(u)&&!mt(u.length)}function $e(u){return u===null||u===""}function q(u){return Array.isArray(u)||typeof u=="object"&&u||Ht(u)}function we(u){return $e(u)||mt(u)||u===!1||u===0||q(u)&&!Object.keys(u).length}function g(u){return!Array.isArray(u)&&typeof u=="object"&&u}function te(u,t=!0){return R(u)?u:!t&&g(u)?[u]:u!==!1&&u!==0&&we(u)?[]:ye(u)?Array.prototype.slice.call(u):g(u)?Object.values(u):[u]}function xt(u){return u instanceof Number||typeof u=="number"}function Rt(u){return xt(u)||u!==!0&&u!==!1&&u!==null&&u!==""&&!isNaN(u*1)}var Ge=function(u,t=1,e=!0){return!Rt(t)||t<=0||(!R(u)&&g(u)&&e&&(u=Object.values(u)),!R(u))?u:u.reduce((r,i)=>R(i)||g(i)&&e?r.concat(Ge(R(i)?i:Object.values(i),t-1,e)):r.concat(i),[])},Ue=Ge;function Mt(u,t=1){var e=0;u.forEach(i=>{e++});var r=u.slice(u.length-e,t);return arguments.length>1?r:r[0]}function at(u,t=1){return arguments.length>1?Mt(u.slice().reverse(),t).reverse():Mt(u.slice().reverse())}function ge(u,...t){return t.forEach(e=>{u.indexOf(e)<0&&u.push(e)}),u}function Ke(r,t){t=t||Object.prototype,t=t&&!R(t)?[t]:t;for(var e=[],r=r;r&&(!t||t.indexOf(r)<0)&&r.name!=="default";)e.push(r),r=r?Object.getPrototypeOf(r):null;return e}function We(u,t){var e=[];return Ke(u,t).forEach(r=>{ge(e,...Object.getOwnPropertyNames(r))}),e}function Dt(u,t,e=!1,r=!1,i=!1){var s=0,n=u.shift();if((Rt(n)||n===!0||n===!1)&&(s=n,n=u.shift()),!u.length)throw new Error("_merge() requires two or more array/objects.");return u.forEach((o,f)=>{!q(o)&&!P(o)||(e?We(o):Object.keys(o)).forEach(c=>{if(t(c,n,o,f)){var l=n[c],h=o[c];if((R(l)&&R(h)||g(l)&&g(h))&&(s===!0||s>0))n[c]=R(l)&&R(h)?[]:{},Dt([Rt(s)?s-1:s,n[c],l,h],t,e,r,i);else if(R(n)&&R(o))r?n[c]=h:n.push(h);else try{i?Object.defineProperty(n,c,Object.getOwnPropertyDescriptor(o,c)):n[c]=o[c]}catch{}}})}),n}function Re(...u){return Dt(u,(t,e,r)=>!0,!1,!1,!1)}function Le(u){return g(u)&&Object.getPrototypeOf(u)===Object.prototype}function ee(u){return u===!0||u===!1}function Ie(u,t){var e=void 0;return q(u)&&Object.keys(u).forEach((r,i)=>{e!==!1&&(e=t(Rt(r)?parseFloat(r):r,u[r],i))}),e}function He(u,t,e=!0,r=!0,i=!1,s=!1){if(R(u)&&R(t)){var n=[],o=!0;return u.forEach(f=>{if(o){var c=!1;Ie(t,(l,h)=>{(!c||r&&q(f))&&(c=e(f,h),(R(c)&&!c.length||g(c)&&!Object.keys(c).length)&&(c=!1),q(c)&&r&&(f=c))}),q(c)?n.push(r?c:f):ee(c)?i&&!c||!i&&c?n.push(f):s&&(o=!1):n.push(c)}}),n}if(g(u)&&g(t)){var n={},o=!0;return Object.keys(u).forEach(l=>{if(o){var h=e(u[l],t[l]);(R(h)&&!h.length||g(h)&&!Object.keys(h).length)&&(h=!1),q(h)?n[l]=r?h:u[l]:ee(h)?i&&!h||!i&&h?n[l]=u[l]:s&&(o=!1):n[l]=h}}),n}}var be=function(u,t,e=!0,r=1){if(R(u)&&R(t)&&u.length!==t.length)return!e;if(g(u)&&g(t)){var i=Object.keys(u),s=Object.keys(t);if(!i.length&&!s.length)return Le(u)&&Le(t)?e:u===t===e;if(!be(i,s))return!e}if(r>0&&(R(u)&&R(t)||g(u)&&g(t))){var n=He(u,t,(o,f)=>be(o,f,e,r-1),!1,!1,!0);return R(n)?n.length===u.length&&n.length===t.length:g(n)&&g(u)?Object.keys(n).length===Object.keys(u).length&&Object.keys(n).length===Object.keys(t).length:n}return P(e)?e(u,t):xt(u)&&xt(t)&&isNaN(u)&&isNaN(t)?e:u===t===e},ke=be;function xe(u,t=[]){return Dt([{},u],(e,r,i)=>{if(!P(i[e]))return P(t)?t(e):R(t)&&t.length?t.indexOf(e)>-1:!0},!1,!1,!1)}function kt(u,t,e=null){return R(t)?u.filter(r=>e?t.filter(i=>e(r,i)).length:t.indexOf(r)!==-1):[]}var ot=class u{static lex(t,e,r={}){if(!bt(t=t+""))throw new Error("Argument1 must be a string!");var i=c=>({delims:c.delims.slice(),options:xe(c.options),nesting:c.nesting.slice(),maxDepth:c.maxDepth,comments:c.comments.slice(),tokens:c.tokens.slice(),matches:c.matches.slice(),matchesi:xe(c.matchesi)});if(u.$cache[t]&&r.cache!==!1)for(var s=0;s<u.$cache[t].length;s++){var n=u.$cache[t][s];if(ke(n.delims,e))return i(n)}var o=new u(t,r),f=o.lex(e);return r.cache!==!1&&(u.$cache[t]=u.$cache[t]||[],u.$cache[t].push(f)),i(f)}static split(t,e,r){return u.lex(t,e,r).tokens}static match(t,e,r){return u.lex(t,e,r).matches}constructor(t,e){if(!bt(t))throw new Error("Lexer requires the first argument to be a string.");this.$str=t,this.$options=e||{},this.$options.blocks||(this.$options.blocks=u.$blocks),this.$options.quotes||(this.$options.quotes=u.$quotes),this.$options.comments||(this.$options.comments=u.$comments)}lex(t,e){for(var r={delims:te(t),options:Re(!0,{},this.$options,e||{}),nesting:[],maxDepth:0,comments:[],tokens:[],matches:[],matchesi:{}},i=0;typeof i=="number";)i=this._evalCharsAt(r,i);if(r.nesting.length)throw new Error("Error parsing the string: "+this.$str+". Unterminated blocks: "+Ue(r.nesting).join(", "));return r}_evalCharsAt(t,e){if(!(e>=this.$str.length)){var r=1,i={},s={},n={};if(t.openComment||(s=this._testQuotes(t,e)),t.openQuote||(i=this._testComments(t,e)),t.openComment||i.ending)if(!t.nesting.length&&!n.ending){var o=i.starting||i.ending||this.$str[e];r=o.length,this._push(t,o,"comments",i.starting)}else this._push(t,this.$str[e]);else if(t.openQuote||s.ending)this._push(t,this.$str[e]);else{if(t.options.limit&&t.matches.length===t.options.limit)return this._push(t,this.$str[e]),e+1;n=this._testNesting(t,e);var n=this._testNesting(t,e),f=this._testChars(t.options.stopChars||[],t,e);if(!t.nesting.length&&f!==!1){t.options.stopChar=f,t.options.stopCharForward=this.$str.substr(e);return}if(!t.delims.length)t.nesting.length===2&&n.starting?(t.matches.push(null),this._push(t,n.starting),r=n.starting.length):!t.nesting.length&&n.ending?(this._push(t,n.ending),r=n.ending.length,t.matches.push(null)):this._push(t,this.$str[e]);else if(!t.nesting.length&&!n.ending){this._push(t,"");var c=this._testChars(t.delims,t,e);if(c!==!1&&(t.matches.push(c),t.matchesi[e]=c,r=c.length||1,!t.options.preserveDelims)){var l=e+(c.length||1);return l===this.$str.length&&this._push(t,""),l}this._push(t,c||this.$str[e])}else{var o=n.starting||n.ending||this.$str[e];r=o.length,this._push(t,o)}}return e+r}}_testQuotes(t,e){var r={};return(t.options.quotes||[]).forEach(i=>{this.$str.substr(e,1)===i&&(t.openQuote?i===t.openQuote&&(t.openQuote=!1,r.ending=i):(t.openQuote=i,r.starting=i))}),r}_testComments(t,e){var r={};return(t.options.comments||[]).forEach(i=>{if(t.openComment){if(at(i)===at(t.openComment)){var n=at(i);this.$str.substr(e).startsWith(n)&&(t.openComment=!1,r.ending=n)}}else{var s=Mt(i);this.$str.substr(e).startsWith(s)&&(t.openComment=i,r.starting=s)}}),r}_testNesting(t,e){var r={};return(t.options.blocks||[]).forEach(i=>{let s=Mt(i),n;if(s instanceof RegExp?[n]=s.exec(this.$str.substr(e))||[]:this.$str.substr(e).startsWith(s)&&(n=s),n)t.nesting=t.nesting.concat([i]),r.starting=n;else if(t.nesting.length&&at(i)===at(at(t.nesting))){var o=at(i),f;o instanceof RegExp?[f]=o.exec(this.$str.substr(e))||[]:this.$str.substr(e).startsWith(o)&&(f=o),f&&(t.nesting=t.nesting.slice(0,-1),r.ending=f)}}),t.maxDepth=Math.max(t.maxDepth,t.nesting.length),r}_testChars(t,e,r){for(var i=0;i<t.length;i++){let o={useRegex:e.options.useRegex,ci:e.options.ci,...g(t[i])?t[i]:{test:t[i]}};if(P(o.test)){var s=o.test(this.$str.substr(0,r),this.$str.substr(r),e.tokens.slice());if(s!==!1)return s;continue}if(o.useRegex){let c=o.useRegex!==!0?o.useRegex:"";var n=this.$str.substr(r).match(new RegExp("^"+o.test,c));if(n&&(!o.backtest||this.$str.substr(0,r).match(new RegExp(o.backtest,c))))return n[0];continue}let f=(c,l)=>o.ci?c.toLowerCase()===l.toLowerCase():c===l;if(f(this.$str.substr(r,o.test.length),o.test)&&(!o.backtest||f(this.$str.substr(r-o.backtest.length,r),o.backtest)))return o.test}return!1}_push(t,e,r="tokens",i=!1){var s=t.matches.length;if(mt(t.tokens[s])&&(t.tokens[s]=""),r==="comments"){t.tokens[s].comments||(t.tokens[s]=new String(t.tokens[s]),t.tokens[s].comments=[]);var n=t.tokens[s].comments.length-(!t.tokens[s].comments.length||i?0:1);t.tokens[s].comments[n]=(t.tokens[s].comments[n]||"")+e}else{var o=t.tokens[s].comments;t.tokens[s]=t.tokens[s]+e}}split(t,e,r){return this.lex(e,r).tokens}match(t,e,r){return this.lex(e,r).matches}regParse(t,e){return this.lex(t,Re({useRegex:!0},e||{}))}regSplit(t,e){return this.regParse(t,e).tokens}regMatch(t,e){return this.regParse(t,e).matches}};ot.$blocks=[["(",")"],["[","]"],["{","}"]];ot.$quotes=['"',"'","`"];ot.$comments=[["/*","*/"],["//",`
`]];ot.$cache=Object.create(null);var m=class extends ot{static $blocks=[...ot.$blocks,[new RegExp("^CASE ","i"),new RegExp("^ END","i")]]};var A=class u{CONTEXT;FLAGS=[];constructor(t){this.CONTEXT=t,this.CONTEXT?.$trace?.("event:connected",this)}$trace(t,...e){return t==="get:node:root"&&!(this.CONTEXT instanceof u)?this:this.CONTEXT?.$trace?.(t,...e)}get params(){return this.CONTEXT?.params||{}}get quoteChars(){return this.constructor.getQuoteChars(this)}static getQuoteChars(t,e=!1){return(e&&t?.params?.inputDialect||t?.params?.dialect)==="mysql"&&!t.params.ansiQuotes?["'",'"']:["'"]}get escChar(){return this.constructor.getEscChar(this)}autoEsc(t){let e=(Array.isArray(t)?t:[t]).map(r=>r&&!/^(\*|[\w]+)$/.test(r)?`${this.escChar}${r.replace(new RegExp(this.escChar,"g"),this.escChar.repeat(2))}${this.escChar}`:r);return Array.isArray(t)?e:e[0]}static autoUnesc(t,e,r=!1){let i=this.getEscChar(t,r);return(e||"").replace(new RegExp(i+i,"g"),i)}static getEscChar(t,e=!1){return(e&&t?.params?.inputDialect||t?.params?.dialect)==="mysql"&&!t.params.ansiQuotes?"`":'"'}static parseIdent(t,e,r=!1){let i=this.getEscChar(t,r),s=m.split(e,["."]),n=s.map(f=>new RegExp(`^(?:(\\*|[\\w]+)|(${i})((?:\\2\\2|[^\\2])+)\\2)$`).exec(f.trim())).filter(f=>f);if(n.length!==s.length)return;let o=f=>f?.[1]||this.autoUnesc(t,f?.[3]);return[o(n.pop()),o(n.pop())]}with(t){for(let e in t)this[e]=t[e];return this}withFlag(...t){return t=new Set(t.filter(e=>e)),this.FLAGS=this.FLAGS.reduce((e,r)=>{let i=r.split(":");for(let s of t){let n=s.split(":");n[0]===i[0]&&(r=[...new Set([...i,...n])].join(":"),t.delete(s))}return e.concat(r)},[]).concat(...t),this}getFlag(t){let e=t.toUpperCase().split(":");return this.FLAGS.find(r=>{let i=r.split(":");return e[0]===i[0]&&e.every(s=>i.includes(s))})}hasFlag(t){return!!this.getFlag(t)}build(t,e,r,i){let s=Array.isArray(r)?r:r?[r]:[];if(!s.length)throw new Error("At least one node type must be defined.");let n=f=>s.find(c=>f instanceof c)?f:s.reduce((c,l)=>c||l.fromJSON(this,f),null),o=(...f)=>{for(let c of f)Array.isArray(this[t])?this[t].push(c):this[t]=c};if(e.length===1&&typeof e[0]!="function"){let f=n(e[0]);if(f)return o(f)}if(i){if(s.length!==1)throw new Error("To support argument delegation, number of node types must be 1.");let f=this[t]&&!Array.isArray(this[t])?this[t]:new s[0](this);return o(f),f[i](...e)}for(let f of e){if(typeof f=="function"){if(this[t]&&!Array.isArray(this[t])){f(this[t]);continue}if(s.length===1){let p=new s[0](this);o(p),f(p);continue}let h=p=>(...E)=>{let N=s.reduce((d,T)=>d||(T.factoryMethods?typeof T.factoryMethods[p]=="function"&&T.factoryMethods[p](this,...E):typeof T.prototype[p]=="function"&&new T(this)),null);if(!N)throw new Error(`Unknow method: ${p}()`);if(o(N),N[p])return N[p](...E);for(let d of E)d(N)};f(new Proxy({},{get:(p,E)=>h(E)}));continue}let c=n(f);if(c){o(c);continue}let l;if(typeof f=="object"&&f)try{l=JSON.stringify(f)}catch{l=f.constructor.name}else l=f+"";throw new Error(`Arguments must be of type ${s.map(h=>h.name).join(", ")} or a JSON equivalent. Recieved: ${l}`)}}clone(){return this.constructor.fromJSON(this.CONTEXT,this.toJSON())}static parse(t,e,r=null){}toString(){return this.stringify()}static fromJSON(t,e){}toJSON(){return{flags:this.FLAGS.slice(0)}}};var S=class extends A{BASENAME;NAME;name(t){let e=Array.isArray(t)?[...t]:[t];if(this.NAME=e.pop(),this.BASENAME=e.pop(),e.length)throw new Error(`Idents can be maximum of two parts. Recieved: ${e.reverse().join(".")}.${this.BASENAME}.${this.NAME}`);return this}toJSON(){let t=this.BASENAME?[this.BASENAME,this.NAME]:this.NAME;return this.FLAGS.length?{name:t,flags:this.FLAGS}:t}static fromJSON(t,e){if(typeof e=="string"||Array.isArray(e)&&e.every(i=>typeof i=="string"))e={name:e};else if(typeof e?.name!="string"&&!Array.isArray(e?.name))return;let r=new this(t).withFlag(...e?.flags||[]);return r.name(e.name),r}stringify(){return this.autoEsc([this.BASENAME,this.NAME].filter(t=>t)).join(".")+""}static parse(t,e){if(/^(TRUE|FALSE|NULL)$/i.test(e))return;let[r,i]=this.parseIdent(t,e,!0)||[];if(!r)return;let s=new this(t);return s.name(i?[i,r]:r),s}};function Ce(u,t,e=!1){if(t=="")return u;var r=e?u.lastIndexOf(t):u.indexOf(t);return r===-1?"":u.substr(r+t.length)}function Me(u,t,e=!1){if(t=="")return u;var r=e?u.lastIndexOf(t):u.indexOf(t);return r===-1?u:u.substr(0,r)}function De(u,t){return Me(u,t,!0)}function re(u,t){return u===void 0?"":u.split(/(?=[A-Z])/).join(t||" ")}function Pe(u,t){return typeof u!="string"?u:u.replace(/\w\S*/g,function(e){return e.charAt(0).toUpperCase()+(typeof t!==void 0&&t?e.substr(1).toLowerCase():e.substr(1))})}function Je(u,t){return u=Pe(u.replace(/-/g," ")).replace(/ /g,""),t?u:u[0].toLowerCase()+u.substr(1)}function y(u,t,e){return De(Ce(u,t),e)}function b(u,t,e){return u.startsWith(t)&&u.endsWith(e)}var et=class extends A{constructor(t){super(t),this._BINDINGS=[]}get BINDINGS(){return this._BINDINGS}$trace(t,...e){if(t==="get:node:statement")return this;if(t==="get:node:statement.bindings")return this._BINDINGS;if(t.startsWith("get:name:")){let r=this.$trace("get:node:table");if(r&&!(r.EXPR instanceof S)&&!this._ongoingNameTrace){this._ongoingNameTrace=!0;let i=r.EXPR.$trace(t,...e);return delete this._ongoingNameTrace,i}if(r&&t==="get:name:table")return r.EXPR.NAME;if(r&&t==="get:name:database"&&r.EXPR.BASENAME)return r.EXPR.BASENAME}return super.$trace?.(t,...e)}clone(){let t=super.clone();return this._BINDINGS.length&&(t._BINDINGS=this._BINDINGS.slice(0)),t}static mySubstitutePlaceholders(t,e){return(t?.params?.inputDialect||t?.params?.dialect)!=="mysql"||e.indexOf("?")===-1?e:m.split(e,["?"],{blocks:[]}).reduce((r,i,s)=>r?r+"?"+s+i:i,null)}get expandable(){return!1}async expand(t=!1){return t?this:this.clone()}};var Xt=class extends A{CONDITION=null;CONSEQUENCE=null;condition(t){return this.build("CONDITION",[t],L.Types),this}then_(t){return this.build("CONSEQUENCE",[t],L.Types)}toJSON(){return{condition:this.CONDITION?.toJSON(),consequence:this.CONSEQUENCE?.toJSON()}}static fromJSON(t,e){if(!(typeof e=="object"&&e&&"condition"in e))return;let r=new this(t);return r.condition(e.condition),r.then_(e.consequence),r}stringify(){return`${this.CONDITION} THEN ${this.CONSEQUENCE}`}static parse(t,e,r){let i=m.split(e,["\\s+THEN\\s+"],{useRegex:"i"});if(i.length!==2)return;let s=new this(t),[n,o]=i.map(f=>r(s,f.trim()));return s.condition(n).then_(o),s}};var Pt=class extends A{BASE_VALUE;WHEN_CLAUSES=[];ELSE_CLAUSE;compare(t){if(this.WHEN_CLAUSES.length||this.ELSE_CLAUSE)throw new Error('A "case" clause must come before any "when" or "else" clauses.');return this.build("BASE_VALUE",[t],L.Types)}when(t){if(this.ELSE_CLAUSE)throw new Error('A "when" clause cannot come after an "else" clause.');return this.build("WHEN_CLAUSES",[t],Xt,"condition"),this.WHEN_CLAUSES[this.WHEN_CLAUSES.length-1]}else(t){if(!this.WHEN_CLAUSES.length)throw new Error('An "else" clause cannot come before "when" clauses.');return this.build("ELSE_CLAUSE",[t],L.Types)}toJSON(){return{base_value:this.BASE_VALUE?.toJSON(),when_clauses:this.WHEN_CLAUSES.map(t=>t.toJSON()),else_clause:this.ELSE_CLAUSE?.toJSON(),flags:this.FLAGS}}static fromJSON(t,e){if(!Array.isArray(e?.when_clauses))return;let r=new this(t).withFlag(...e.flags||[]);e.base_value&&r.compare(e.base_value);for(let i of e.when_clauses)r.when(i);return e.else_clause&&r.else(e.else_clause),r}stringify(){let t=[];return this.BASE_VALUE&&t.push(this.BASE_VALUE),t.push(`WHEN ${this.WHEN_CLAUSES.join(" WHEN ")}`),this.ELSE_CLAUSE&&t.push("ELSE",this.ELSE_CLAUSE),`CASE ${t.join(" ")} END${this.params.dialect==="mysql"?" CASE":""}`}static parse(t,e,r){let[i,s]=e.match(/^CASE\s+([\s\S]*)\s+END(\s+CASE)?$/i)||[];if(!i)return;let{tokens:[n,...o],matches:f}=m.lex(s,["WHEN","ELSE"],{useRegex:"i"}),c=new this(t);n.trim()&&c.compare(r(c,n.trim()));for(let l of f){let h=o.shift();if(/ELSE/i.test(l))c.else(r(c,h.trim()));else if(/WHEN/i.test(l))c.when(r(c,h.trim(),[Xt]));else throw new Error(`Can't have multiple "${l}" clauses in a CASE construct.`)}return c}static factoryMethods={case:t=>new this(t)}};var J=class extends A{OPERATOR="";OPERANDS=[];constructor(t,e,...r){super(t),this.OPERATOR=e,this.OPERANDS=r}assert(t,...e){return this.OPERATOR&&this.OPERANDS.splice(0),this.OPERATOR=t,this.build("OPERANDS",e,L.Types),this}equals(...t){return this.assert("=",...t)}eq(...t){return this.equals(...t)}notEqual(...t){return this.assert("<>",...t)}notEq(...t){return this.notEqual(...t)}lesserThan(...t){return this.assert("<",...t)}lt(...t){return this.lesserThan(...t)}lessThanOrEqual(...t){return this.assert("<=",...t)}ltOrEq(...t){return this.lessThanOrEqual(...t)}greaterThan(...t){return this.assert(">",...t)}gt(...t){return this.greaterThan(...t)}greaterThanOrEqual(...t){return this.assert(">=",...t)}gtOrEq(...t){return this.greaterThanOrEqual(...t)}in(...t){return this.assert("IN",...t)}any(...t){return this.assert("ANY",...t)}like(...t){return this.assert("LIKE",...t)}isNull(...t){return this.assert("IS NULL",...t)}isNotNull(...t){return this.assert("IS NOT NULL",...t)}isTrue(...t){return this.assert("IS TRUE",...t)}isNotTrue(...t){return this.assert("IS NOT TRUE",...t)}isFalse(...t){return this.assert("IS FALSE",...t)}isNotFalse(...t){return this.assert("IS NOT FALSE",...t)}isUnknow(...t){return this.assert("IS UNKNOWN",...t)}isNotUnknow(...t){return this.assert("IS NOT UNKNOWN",...t)}isDistinctFrom(...t){return this.assert("IS DISTINCT FROM",...t)}isNotDistinctFrom(...t){return this.assert("IS NOT DISTINCT FROM",...t)}isBetween(...t){return this.assert("IS BETWEEN",...t)}isNotBetween(...t){return this.assert("IS NOT BETWEEN",...t)}isBetweenSymmetric(...t){return this.assert("IS BETWEEN SYMMETRIC",...t)}isNotBetweenSymmetric(...t){return this.assert("IS NOT BETWEEN SYMMETRIC",...t)}and(...t){return new $(this,"AND").and(this,...t)}or(...t){return new $(this,"OR").or(this,...t)}toJSON(){return{operator:this.OPERATOR,operands:this.OPERANDS.map(t=>t.toJSON()),flags:this.FLAGS}}static fromJSON(t,e){if(!Array.isArray(e?.operands)||typeof e?.operator!="string"||!this.regexes.some(i=>new RegExp(i.regex||i.test||i).test(` ${e.operator} `)))return;let r=new this(t).withFlag(...e.flags||[]);return r.assert(e.operator,...e.operands),r}stringify(){let t=this.OPERANDS.slice(0),e=[t.shift(),this.OPERATOR.toUpperCase()],r=t;return this.OPERATOR==="IN"?e.push(`(${r.join(", ")})`):/BETWEEN/i.test(this.OPERATOR)?e.push(`(${r.join(" AND ")})`):e.push(`${r.join(" ")}`),e.filter(i=>i).join(" ")}static parse(t,e,r){let{tokens:[i,s=""],matches:[n]}=m.lex(e,this.regexes,{useRegex:"i"});if(!n)return;let o=n.trim().toUpperCase(),f=[i];return o==="IN"?f.push(...m.split(y(s.trim(),"(",")"),[","])):/BETWEEN/.test(o)?f.push(...m.split(s,[" AND "])):s&&f.push(s),new this(t,o,...f.map(c=>r(t,c.trim())))}static regexes=[{test:"<(?!~)"},{backtest:"^(?!.*~$)",test:">",regex:"(?<!~)>"},"((\\s+(?:NOT\\s+)?IS\\s+(?:NOT\\s+)?(TRUE|FALSE|NULL|UNKNOWN|DISTINCT\\s+FROM\\s+))|\\s+(ISNULL|NOTNULL|IN|ANY|LIKE|(?:NOT\\s+)?BETWEEN(?:\\s+SYMMETRIC)?)\\s+|(?:\\s+)?(=|<=|>=|!=|<>)(?:\\s+)?)"]};var Jt=class extends A{OFFSET;constructor(t,e){super(t),this.OFFSET=parseInt(e)}$var(t){this.OFFSET=t}$bind(t,e){this.OFFSET=t;let r=this.$trace("get:node:statement.bindings");r?.push(e),this.OFFSET===0&&(this.OFFSET=r?.length)}toJSON(){return{offset:this.OFFSET}}static fromJSON(t,e){if(typeof e?.offset=="number")return new this(t,e.offset)}stringify(){return this.params.dialect==="mysql"?"?":"$"+this.OFFSET}static parse(t,e){let r=(t?.params?.inputDialect||t?.params?.dialect)==="mysql"?"?":"$",[i,s]=new RegExp(`^\\${r}(\\d)$`).exec(e)||[];if(i)return new this(t,parseInt(s))}};var pt=class extends A{VALUE;true(){return this.VALUE=!0,this}false(){return this.VALUE=!1,this}null(){return this.VALUE=null,this}sql(t){return this.VALUE=t,this}toJSON(){return this.VALUE}static fromJSON(t,e){let r=new this(t);return e==!0?r.true():e==!1?r.false():e==null?r.null():r.sql(e)}stringify(){return`${this.VALUE}`}static parse(t,e){let r=new this(t);return/^TRUE$/i.test(e)?r.true():/^FALSE$/i.test(e)?r.false():/^NULL$/i.test(e)?r.null():r.sql(e)}};var Q=class extends A{NAME;$NAME;KEEP;static get WRITABLE_PROPS(){return["NAME"]}static get SUBTREE_PROPS(){return[]}get WRITABLE_PROPS(){return this.constructor.WRITABLE_PROPS}get SUBTREE_PROPS(){return this.constructor.SUBTREE_PROPS}name(t){return arguments.length?(this[this.smartKey("NAME",!0)]=t,this):this[this.smartKey("NAME")]}diffWith(t){typeof t.keep()=="boolean"&&this.keep(t.keep()),t.name()!==this.name()&&this.name(t.name())}smartKey(t,e=!1){if(this.keep()===!0)return e||Fe(this[`$${t}`])?`$${t}`:t;if(this.keep()===!1){if(e)throw new Error(`Cannot alter ${this.constructor.name} after having been dropped.`);return t}return t}hardSet(...t){let e=t.pop();if(t.length){let s=t[0],n=()=>{if(this.keep()===!1)throw new Error(`Diffing cannot be done on a node ${this.constructor.name} after having been dropped.`);return typeof this.keep()!="boolean"&&this.keep(!0),e(s)};return typeof this.CONTEXT?.hardSet=="function"?this.CONTEXT.hardSet(s,n):Fe(s)?n():void 0}let r=this.KEEP;this.KEEP=null;let i=e();return this.KEEP=r,i}keep(t,e=!1){if(!arguments.length)return this.KEEP;if(![void 0,!0,!1].includes(t))throw new Error(`Status can only be true, false, or undefined. Received: ${t}`);if(this.KEEP=t,e)for(let r of this.SUBTREE_PROPS.reduce((i,s)=>[...i,...this[s]],[]))t!==!0?r.keep(void 0,!0):r.keep(e==="auto"?r.keep():!0,e);return this}drop(){return this.keep(!1)}dropped(){return this.keep()===!1||this.CONTEXT?.dropped?.()}reverseAlt(t=!1){if(this.keep()===!0){for(let e of this.WRITABLE_PROPS)if(Fe(this[`$${e}`])){let r=this[e];this[e]=this[`$${e}`],this[`$${e}`]=r}}else this.keep()===!1?this.keep(void 0):typeof this.keep()!="boolean"&&this.keep(!1);if(t)for(let e of this.SUBTREE_PROPS.reduce((r,i)=>[...r,...this[i]],[]))e.reverseAlt(t)}isSame(t,e,r=null){if(typeof t=="string"&&typeof e=="string"&&r==="ci")return t.toLowerCase()===e.toLowerCase();if(t===e)return!0;if(Array.isArray(t)&&Array.isArray(e)&&t.length===e.length){let s=e.slice(0).sort();return t.slice(0).sort().every((n,o)=>this.isSame(n,s[o],r))}let i={};return typeof t=="object"&&t&&typeof e=="object"&&e&&(i.keys_a=Object.keys(t)).length===(i.keys_b=Object.keys(e)).length?i.keys_a.reduce((s,n)=>s&&this.isSame(t[n],e[n],r),!0):!1}toJSON(){return{...this.NAME?{name:this.NAME}:{},...this.$NAME?{$name:this.$NAME}:{},...typeof this.KEEP=="boolean"?{keep:this.KEEP}:{},...this.FLAGS.length?{flags:[...this.FLAGS]}:{}}}static fromJSON(t,e,r=null){if(e?.name&&typeof e.name!="string"||e.$name&&typeof e.$name!="string")return;let i=r?r():new this(t);return i.hardSet(()=>i.name(e.name)),i.hardSet(e.$name,s=>i.name(s)),typeof e.keep=="boolean"&&i.keep(e.keep),e.flags&&i.withFlag(...e.flags),i}},Fe=u=>Array.isArray(u)?u.length:typeof u=="object"&&u?Object.keys(u).length:![void 0,null,""].includes(u);var Ft=class extends Q{NAME;$NAME;KEEP;$trace(t,...e){return t==="get:node:schema"?this:super.$trace(t,...e)}name(t){return arguments.length?(this.build(this.smartKey("NAME",!0),[t],S,"name"),this):this[this.smartKey("NAME")]}diffWith(t){typeof t.keep()=="boolean"&&this.keep(t.keep()),this.isSame(t.name().toJSON(),this.name().toJSON())||this.name(t.name().toJSON())}toJSON(){return{name:this.NAME.toJSON(),...this.$NAME?{$name:this.$NAME.toJSON()}:{},...typeof this.KEEP=="boolean"?{keep:this.KEEP}:{},...this.FLAGS.length?{flags:[...this.FLAGS]}:{}}}static fromJSON(t,e,r=null){if(!e?.name||!S.fromJSON({},e.name))return;let i=r?r():new this(t);return i.hardSet(()=>i.name(e.name)),i.hardSet(e.$name,s=>i.name(s)),typeof e.keep=="boolean"&&i.keep(e.keep),e.flags&&i.withFlag(...e.flags),i}};var B=class extends A{get CLAUSE(){return this.constructor.CLAUSE}KIND;constructor(t,e){super(t),this.KIND=e}toJSON(){return{clause:this.CLAUSE,...this.KIND?{kind:this.KIND}:{},...super.toJSON()}}static fromJSON(t,e){if(!(e?.clause&&e.clause!==this.CLAUSE||e?.kind&&!this.KINDS.includes(e.kind)))return new this(t,e.kind).withFlag(...e.flags||[])}static KINDS=[]};var Lt=u=>class extends u{$trace(t,...e){if(t==="get:node:statement")return this;if(t==="get:name:table"&&this.KIND==="TABLE")return this.NAME.NAME;if(t==="get:name:database"){if(["SCHEMA","DATABASE"].includes(this.KIND))return this.NAME.NAME;if(this.KIND==="TABLE"&&this.NAME.BASENAME)return this.NAME.BASENAME}return super.$trace(t,...e)}name(t=void 0){return arguments.length?(this.build("NAME",[t],S),this):this.NAME}};var It=class extends B{NAME;ARGUMENT;name(t=void 0){return arguments.length?(this.NAME=t,this):this.NAME}argument(t=void 0){return arguments.length?(this.ARGUMENT=t,this):this.ARGUMENT}toJSON(){return{name:this.NAME,argument:this.ARGUMENT,...super.toJSON()}}static fromJSON(t,e){if(!(e?.kind&&typeof e.name!="string"||typeof e?.argument!="string"))return super.fromJSON(t,e)?.name(e.name).argument(e.argument)}stringify(){return`${this.CLAUSE}${this.KIND?` ${this.KIND}`:""}${this.NAME?` ${this.autoEsc(this.NAME)}`:""} TO ${this.autoEsc(this.ARGUMENT)}`}static parse(t,e){let[r,i="",s,,n,o,,f]=new RegExp(`^${this.CLAUSE}\\s+(?:(${this.KINDS.map(l=>l).join("|")})\\s+)?(?:(?:(\\w+)|([\`"])((?:\\3\\3|[^\\3])+)\\3)\\s+)?(?:TO|AS)\\s+(?:(\\w+)|([\`"])((?:\\6\\6|[^\\6])+)\\6)$`,"i").exec(e.trim())||[];if(!r)return;let c=new this(t,i.replace(/\s+/g,"_").toUpperCase());return(s||n)&&c.name(s||this.autoUnesc(c,n)),c.argument(o||this.autoUnesc(c,f)),c}static get CLAUSE(){return"RENAME"}static KINDS=["COLUMN","CONSTRAINT","INDEX","KEY"]};var M=class extends Q{static get WRITABLE_PROPS(){return["TYPE"].concat(super.WRITABLE_PROPS)}static get TYPE(){return re(this.name.replace(/TABLE|COLUMN|CONSTRAINT|CLAUSE/ig,""),"_").toUpperCase()}get TYPE(){return this.constructor.TYPE}toJSON(){return{type:this.TYPE,...super.toJSON()}}static fromJSON(t,e,r=null){if(e?.type===this.TYPE)return super.fromJSON(t,e,r)}stringify(){return this.TYPE==="AUTO_INCREMENT"?this.TYPE:`${this.stringifyName()}${this.TYPE.replace("_"," ")}`}static parse(t,e){let{name:r,expr:i}=this.parseName(t,e,!0);if(!(!i||!new RegExp(`^${this.TYPE==="AUTO_INCREMENT"?this.TYPE:this.TYPE.replace("_","\\s+")}$`,"i").test(i)))return new this(t).name(r)}stringifyName(){return this.name()?`CONSTRAINT ${this.autoEsc(this.name())} `:""}static parseName(t,e,r=!1){let s=`(?:CONSTRAINT(?:\\s+(\\w+)|\\s+(${this.getEscChar(t,r)})((?:\\2\\2|[^\\2])+)\\2)\\s+)?`,[,n,,o,f=""]=e.match(new RegExp(`^${s}([\\s\\S]+)$`,"i"))||[];return{name:n||this.autoUnesc(t,o),expr:f.trim()}}};var Bt=class extends M{static get TYPE(){return"AUTO_INCREMENT"}stringify(){return this.params.dialect!=="mysql"?new Et(this.CONTEXT).stringify():"AUTO_INCREMENT"}};var Et=class extends M{ALWAYS;$ALWAYS;static get WRITABLE_PROPS(){return["ALWAYS"].concat(super.WRITABLE_PROPS)}always(t){return arguments.length?(this[this.smartKey("ALWAYS",!0)]=!!t,this):this[this.smartKey("ALWAYS")]}diffWith(t){return super.diffWith(t),t.always()!==this.always()&&this.always(t.always()),this}toJSON(){return{always:!!this.ALWAYS,...typeof this.$ALWAYS=="boolean"?{$always:this.$ALWAYS}:{},...super.toJSON()}}static fromJSON(t,e){return super.fromJSON(t,e,()=>{let r=new this(t).always(e.always);return r.hardSet(e.$always,i=>r.always(i)),r})}stringify(){return this.params.dialect==="mysql"?new Bt(this.CONTEXT).stringify():`GENERATED ${this.always()?"ALWAYS":"BY DEFAULT"} AS IDENTITY`}static parse(t,e){let{name:r,expr:i}=this.parseName(t,e,!0);if(!(!i||!(i=i.match(new RegExp("^GENERATED\\s+(ALWAYS|BY[ ]+DEFAULT)(?:\\s+AS\\s+IDENTITY)?$","i"))?.[1])))return new this(t).name(r).always(/^ALWAYS$/i.test(i))}};var x=class extends M{columns(){return"COLUMNS"in this?[]:[this.CONTEXT.name()]}toJSON(){let t={type:this.TYPE,...super.toJSON()};return!("name"in t)&&this.params.dialect!=="mysql"&&(t={...t,name:void 0}),t}static fromJSON(t,e,r=null){if(e?.type===this.TYPE)return!("name"in e)&&t?.params?.dialect!=="mysql"&&(e={...e,name:`auto_name_${(0|Math.random()*9e6).toString(36)}`}),super.fromJSON(t,e,r)}static parseColumns(t,e,r=!1){return m.split(y(e,"(",")"),[","]).map(i=>this.parseIdent(t,i.trim(),r)[0])}};var Yt=class extends x{};var Vt=u=>class extends u{COLUMNS=[];$COLUMNS=[];static get WRITABLE_PROPS(){return["COLUMNS"].concat(super.WRITABLE_PROPS)}columns(t){return arguments.length?(this[this.smartKey("COLUMNS",!0)]=[].concat(t),this):this[this.smartKey("COLUMNS")]}diffWith(t){return super.diffWith(t),this.isSame(t.columns(),this.columns())||this.columns(t.columns()),this}toJSON(){return{columns:this.COLUMNS,...this.$COLUMNS.length?{$columns:this.$COLUMNS}:{},...super.toJSON()}}static fromJSON(t,e){if(e?.columns?.length)return super.fromJSON(t,e,()=>{let r=new this(t).columns(e.columns);return r.hardSet(e.$columns,i=>r.columns(i)),r})}stringify(){return this.TYPE==="FOREIGN_KEY"?super.stringify():`${super.stringify()} (${this.autoEsc(this.columns()).join(", ")})`}static parse(t,e,r){if(this.TYPE==="FOREIGN_KEY")return super.parse(t,e,r);let[i,s]=m.split(e,[]),n=super.parse(t,i.trim(),r);if(n)return n.columns(this.parseColumns(t,s))}};var Ct=class extends Vt(Yt){};var rt=class extends x{TARGET_TABLE;$TARGET_TABLE;TARGET_COLUMNS=[];$TARGET_COLUMNS=[];MATCH_RULE;$MATCH_RULE;UPDATE_RULE;$UPDATE_RULE;DELETE_RULE;$DELETE_RULE;static get WRITABLE_PROPS(){return["TARGET_TABLE","TARGET_COLUMNS","MATCH_RULE","UPDATE_RULE","DELETE_RULE"].concat(super.WRITABLE_PROPS)}targetTable(t){return arguments.length?(this.build(this.smartKey("TARGET_TABLE",!0),[t],S,"name"),this):this[this.smartKey("TARGET_TABLE")]}targetColumns(t){return arguments.length?(this[this.smartKey("TARGET_COLUMNS",!0)]=[].concat(t),this):this[this.smartKey("TARGET_COLUMNS")]}matchRule(t){return arguments.length?(this[this.smartKey("MATCH_RULE",!0)]=t,this):this[this.smartKey("MATCH_RULE")]}updateRule(t){return arguments.length?(this[this.smartKey("UPDATE_RULE",!0)]=t,this):this[this.smartKey("UPDATE_RULE")]}deleteRule(t){return arguments.length?(this[this.smartKey("DELETE_RULE",!0)]=t,this):this[this.smartKey("DELETE_RULE")]}diffWith(t){return super.diffWith(t),this.isSame(t.targetTable(),this.targetTable())||this.targetTable(t.targetTable()),this.isSame(t.targetColumns(),this.targetColumns())||this.targetColumns(t.targetColumns()),this.isSame(t.matchRule(),this.matchRule())||this.matchRule(t.matchRule()),this.isSame(t.updateRule(),this.updateRule())||this.updateRule(t.updateRule()),this.isSame(t.deleteRule(),this.deleteRule())||this.deleteRule(t.deleteRule()),this}toJSON(){return{targetTable:this.TARGET_TABLE.toJSON(),...this.$TARGET_TABLE?{$targetTable:this.$TARGET_TABLE.toJSON()}:{},targetColumns:this.TARGET_COLUMNS,...this.$TARGET_COLUMNS.length?{$targetColumns:this.$TARGET_COLUMNS}:{},...this.MATCH_RULE?{matchRule:this.MATCH_RULE}:{},...this.$MATCH_RULE?{$matchRule:this.$MATCH_RULE}:{},...this.UPDATE_RULE?{updateRule:this.UPDATE_RULE}:{},...this.$UPDATE_RULE?{$updateRule:this.$UPDATE_RULE}:{},...this.DELETE_RULE?{deleteRule:this.DELETE_RULE}:{},...this.$DELETE_RULE?{$deleteRule:this.$DELETE_RULE}:{},...super.toJSON()}}static fromJSON(t,e,r=null){if(!(!e?.targetTable||!e.targetColumns?.length))return super.fromJSON(t,e,()=>{let i=r?r():new this(t);return i.hardSet(()=>i.targetTable(e.targetTable)),i.hardSet(()=>i.targetColumns(e.targetColumns)),i.hardSet(()=>i.matchRule(e.matchRule)),i.hardSet(()=>i.updateRule(e.updateRule)),i.hardSet(()=>i.deleteRule(e.deleteRule)),i.hardSet(e.$targetTable,s=>i.targetTable(s)),i.hardSet(e.$targetColumns,s=>i.targetColumns(s)),i.hardSet(e.$matchRule,s=>i.matchRule(s)),i.hardSet(e.$updateRule,s=>i.updateRule(s)),i.hardSet(e.$deleteRule,s=>i.deleteRule(s)),i})}stringify(){let t=this.targetTable();if(!t.BASENAME){let i=this.$trace("get:name:database");t=t.clone().name([i,t.NAME])}let e=`${this.stringifyName()}REFERENCES ${t} (${this.autoEsc(this.targetColumns()).join(", ")})`,r=i=>typeof i=="object"&&i?`${i.rule} (${i.columns.join(", ")})`:i;return this.matchRule()&&(e+=` MATCH ${this.matchRule()}`),this.updateRule()&&(e+=` ON UPDATE ${r(this.updateRule())}`),this.deleteRule()&&(e+=` ON DELETE ${r(this.deleteRule())}`),e}static parse(t,e){let{name:r,expr:i}=this.parseName(t,e,!0);if(!i||!(i=i.match(/^REFERENCES\s+([\s\S]+)$/i)?.[1]))return;let[s,n,o=""]=m.split(i,[]),[f,c]=this.parseIdent(t,s.trim(),!0),l=m.split(y(n,"(",")"),[","]).map(p=>this.parseIdent(t,p.trim(),!0)[0]),h=(p,E)=>{if(E==="MATCH")return p.match(/MATCH\s+(\w+)/i)?.[1];let N=/(NO\s+ACTION|RESTRICT|CASCADE|(SET\s+NULL|SET\s+DEFAULT)(?:\s+\(([^\)]+)\))?)/,[,d,T,_]=p.match(new RegExp(`ON\\s+${E}\\s+${N.source}`,"i"))||[];return T?_?{rule:T,columns:_.split(",").map(O=>O.trim())}:T:d};return new this(t).name(r).targetTable(c?[c,f]:f).targetColumns(l).matchRule(h(o,"MATCH")).updateRule(h(o,"UPDATE")).deleteRule(h(o,"DELETE"))}};var ut=class extends Vt(rt){stringify(){let t=this.stringifyName(),e=this.NAME,r=this.$NAME;this.NAME=null,this.$NAME=null;let i=`${t}FOREIGN KEY (${this.autoEsc(this.columns()).join(", ")}) ${super.stringify()}`;return this.NAME=e,this.$NAME=r,i}static parse(t,e,r){let{name:i="",expr:s}=this.parseName(t,e,!0);if(!s||!/^FOREIGN\s+KEY/i.test(s))return;let[,n,...o]=m.split(s,[]);return super.parse(t,o.join("").trim(),r).name(i).columns(this.parseColumns(t,n))}};var vt=class extends x{stringify(){return`${this.stringifyName()}UNIQUE`}static parse(t,e){let{name:r,expr:i}=this.parseName(t,e,!0);if(!(!i||!/^UNIQUE(\s+KEY)?$/i.test(i)))return new this(t).name(r)}};var yt=class extends Vt(vt){};var $t=u=>class extends u{EXPR;$EXPR;static get WRITABLE_PROPS(){return["EXPR"].concat(super.WRITABLE_PROPS)}expr(t){return arguments.length?(this[this.smartKey("EXPR",!0)]=t,this):this[this.smartKey("EXPR")]}diffWith(t){return super.diffWith(t),t.expr()!==this.expr()&&this.expr(t.expr()),this}toJSON(){return{expr:this.EXPR,...[void 0,null].includes(this.$EXPR)?{}:{$expr:this.$EXPR},...super.toJSON()}}static fromJSON(t,e){if(![void 0,null].includes(e?.expr))return super.fromJSON(t,e,()=>{let r=new this(t).expr(e.expr);return r.hardSet(e.$expr,i=>r.expr(i)),r})}stringify(){return`${super.stringify()} (${this.expr()})`}static parse(t,e){let{name:r,expr:i}=this.parseName(t,e,!0);return!i||!(i=i.match(new RegExp(`^${this.TYPE.replace(/_/g,"\\s+")}\\s+([\\s\\S]+)$`,"i"))?.[1])?void 0:new this(t).expr(b(i.trim(),"(",")")?y(i.trim(),"(",")"):i).name(r)}};var it=class extends $t(x){};var X=class extends Q{TYPE;$TYPE;COLUMNS=[];$COLUMNS=[];static get WRITABLE_PROPS(){return["TYPE","COLUMNS"].concat(super.WRITABLE_PROPS)}type(t){return arguments.length?(this[this.smartKey("TYPE",!0)]=t,this):this[this.smartKey("TYPE")]}columns(t){return arguments.length?(this[this.smartKey("COLUMNS",!0)]=[].concat(t),this):this[this.smartKey("COLUMNS")]}diffWith(t){return super.diffWith(t),this.isSame(this.type(),t.type())||this.type(t.type()),this.isSame(this.columns(),t.columns())||this.columns(t.columns()),this}toJSON(){return{type:this.TYPE,...this.$TYPE?{$type:this.$TYPE}:{},columns:this.COLUMNS,...this.$COLUMNS.length?{$columns:this.$COLUMNS}:{},...super.toJSON()}}static fromJSON(t,e){if(!(typeof e?.type!="string"||!/^(INDEX|KEY|FULLTEXT)$/i.test(e.type)||!e.columns?.length))return super.fromJSON(t,e,()=>{let r=new this(t).columns(e.columns).type(e.type);return r.hardSet(e.$columns,i=>r.columns(i)),r.hardSet(e.$type,i=>r.type(i)),r})}stringify(){return`${this.type()}${this.name()?` ${this.name()}`:""} (${this.columns().join(", ")})`}static parse(t,e){let[r,i,s]=/^((?:(?:FULLTEXT|SPATIAL)(?:\s+INDEX|\s+KEY)?)|(?:INDEX|KEY))([\s\S]+)$/i.exec(e)||[];if(!r)return;let[n,o]=m.split(s,[]),[f]=this.parseIdent(t,n.trim(),!0),c=m.split(y(o,"(",")"),[","]).map(l=>this.parseIdent(t,l.trim(),!0)[0]);return new this(t).type(i.replace(/\s+(INDEX|KEY)/i,"").toUpperCase()).columns(c).name(f)}};var ie=class extends $t(M){STORED;$STORED;static get WRITABLE_PROPS(){return["STORED"].concat(super.WRITABLE_PROPS)}stored(t){return arguments.length?(this[this.smartKey("STORED",!0)]=!!t,this):this[this.smartKey("STORED")]}diffWith(t){return super.diffWith(t),t.stored()!==this.stored()&&this.stored(t.stored()),this}toJSON(){return{stored:!!this.STORED,...typeof this.$STORED=="boolean"?{$stored:this.$STORED}:{},...super.toJSON()}}static fromJSON(t,e){return super.fromJSON(t,e,()=>{let r=new this(t).stored(e.stored);return r.hardSet(e.$stored,i=>r.stored(i)),r})}stringify(){return`GENERATED ALWAYS AS (${this.expr()})${this.stored()?" STORED":""}`}static parse(t,e){let r,{name:i,expr:s}=this.parseName(t,e,!0);if([,s,r=""]=s.match(new RegExp("^GENERATED\\s+ALWAYS\\s+AS\\s+\\(([\\s\\S]+)\\)(?:\\s+(VIRTUAL|STORED))?$","i"))||[],!!s)return new this(t).name(i).expr(s).stored(/^STORED$/i.test(r))}};var se=class extends $t(M){};var ne=class extends M{};var ae=class extends $t(M){};var oe=class extends M{};var K=class extends A{SPEC=[];constructor(t,e){super(t),this.SPEC=e}toJSON(){return this.SPEC.length===1?this.SPEC[0]:this.SPEC}static fromJSON(t,e){let r=[].concat(e);if(typeof r[0]!="string")return;let[i,s,n]=Ve.call(this,r[0]);if(i)return new this(t,qe(i,...s.split(","),...n,...r.slice(1)))}stringify(){let[t,e]=this.SPEC.slice(1).reduce(([r,i],s)=>/^\d+$/.test(s)?[r.concat(s),i]:[r,i.concat(s)],[[],[]]);return`${this.SPEC[0]}${t.length?`(${t.join(",")})`:""}${e.length?` ${e.join(" ")}`:""}`}static parse(t,e){let[r,i,s]=Ve.call(this,e);if(r)return new this(t,qe(r,...i.split(","),...s))}static pgFixedTypesRe=/^(bigint|int8|bigserial|serial8|boolean|bool|box|bytea|cidr|circle|date|double\s+precision|float8|inet|integer|int|int4|jsonb|json|line|lseg|macaddr8|macaddr|money|path|pg_lsn|pg_snapshot|point|polygon|real|float4|smallint|int2|smallserial|serial2|serial4|serial|text|timetz|timestamptz|tsquery|tsvector|txid_snapshot|uuid|xml)$/;static pgVariableTypesRe=/^(bit\s+varying|bit|varbit|character\s+varying|character|char|varchar|interval|numeric|timestamp|time)(?:\s+)?(?:\(([\d, ]+)\))?(\s+(?:with|without)\s+time\s+zone)?$/;static myFixedTypesRe=/^(tinyint|smallint|mediumint|enum|set|tinyblob|mediumblob|longblob|geometry|longstring|geometrycollection|multilinestring|multipoint|multipolygon)$/;static myVariableTypesRe=/^(float|decimal|double|tinytext|mediumtext|longtext|binary|varbinary|blob)(?:\s+)?(?:\(([\d, ]+)\))?$/};function Ve(u){let t,e,r;for(let i of["pgFixedTypesRe","pgVariableTypesRe","myFixedTypesRe","myVariableTypesRe"])if([,t,e="",...r]=u.match(new RegExp(this[i].source,"i"))||[],t)break;return[t,e,r]}function qe(...u){return u.map(t=>/^\d+$/.test(t)?parseFloat(t):t?.trim().replace(/\s+/," ").toUpperCase()).filter(t=>t)}var Y=class extends Q{TYPE;$TYPE;CONSTRAINTS=[];static get WRITABLE_PROPS(){return["TYPE"].concat(super.WRITABLE_PROPS)}static get SUBTREE_PROPS(){return["CONSTRAINTS"]}static CONSTRAINT_TYPES=[Bt,Et,ie,se,ne,oe,ae,Yt,rt,vt,it];type(t){return arguments.length?(this.build(this.smartKey("TYPE",!0),[t],K),this):this[this.smartKey("TYPE")]}autoIncrement(...t){return this.constraint("AUTO_INCREMENT",...t)}identity(...t){return this.constraint("IDENTITY",...t)}expression(...t){return this.constraint("EXPRESSION",...t)}default(...t){return this.constraint("DEFAULT",...t)}notNull(...t){return this.constraint("NOT_NULL",...t)}null(...t){return this.constraint("NULL",...t)}onUpdate(...t){return this.constraint("ON_UPDATE",...t)}primaryKey(...t){return this.constraint("PRIMARY_KEY",...t)}foreignKey(...t){return this.constraint("FOREIGN_KEY",...t)}uniqueKey(...t){return this.constraint("UNIQUE_KEY",...t)}check(...t){return this.constraint("CHECK",...t)}constraint(t,...e){let r,i=s=>this.CONSTRAINTS.find(n=>n.TYPE===s);if(typeof t=="string"){if(r=i(t),e.length){if(e[0]===!1)return r?.drop()}else return r;t={type:t,...typeof e[0]=="object"?e[0]:typeof e[0]=="string"?{expr:e[0]}:{}}}else t instanceof Q||(r=i(t.type));if(r){let s=this.constructor.CONSTRAINT_TYPES.reduce((n,o)=>n||o.fromJSON(this,t));r.diffWith(s)}else this.build("CONSTRAINTS",[t],this.constructor.CONSTRAINT_TYPES);return this}diffWith(t){super.diffWith(t);let e=this.type().toJSON(),r=t.type().toJSON();this.isSame(e,r)||this.type(r);for(let i of["IDENTITY","EXPRESSION","NOT_NULL","NULL","DEFAULT","AUTO_INCREMENT","ON_UPDATE"]){let s=this.constraint(i),n=t.constraint(i);s&&(!n||n.dropped())?s.drop():!s&&n&&!n.dropped()?this.constraint(n.toJSON()):s&&n&&s.diffWith(n)}return this}toJSON(){let t={type:this.TYPE.toJSON(),...this.$TYPE?{$type:this.$TYPE.toJSON()}:{}};for(let e of this.CONSTRAINTS){let{type:r,...i}=e.toJSON(),s=r==="FOREIGN_KEY"?"references":Je(r.toLowerCase().replace("_"," ")),n=Object.keys(i),o=n.length===1?i[n[0]]:null,f=n.length?o===!1&&n[0]==="keep"?!1:n.length===1&&n[0]==="expr"?o:i:!0;t={...t,[s]:f}}return{...t,...super.toJSON()}}static fromJSON(t,e){let{type:r,$type:i,name:s,$name:n,keep:o,...f}=e;if(K.fromJSON({},r))return super.fromJSON(t,e,()=>{let c=new this(t);c.type(K.fromJSON(c,r)),c.hardSet(i,h=>c.type(K.fromJSON(c,h)));let l=Object.entries(f).reduce((h,[p,E])=>{if([void 0,null].includes(E))return h;if(!["boolean","number","string"].includes(typeof E)&&!(typeof E=="object"&&E))throw new Error(`Invalid value for constraint "${p}": ${E}`);let N={...E===!1?{keep:!1}:E===!0?{}:["number","string"].includes(typeof E)?{expr:E}:E};return p.startsWith("$")&&(N=Object.fromEntries(Object.entries(N).map(([d,T])=>[`$${d}`,T])),p=p.slice(1)),p==="references"&&(p="foreignKey"),p in h?Object.assign(h[p],N):h[p]=N,h},{});for(let h in l)c.constraint(re(h,"_").toUpperCase(),l[h]);return c})}stringify(){let t=this.CONSTRAINTS;return this.params.dialect==="mysql"&&(t=t.filter(e=>e.TYPE!=="FOREIGN_KEY")),`${this.autoEsc(this.name())} ${this.type()}${t.length?` ${t.join(" ")}`:""}`}static parse(t,e,r){let[i,s]=m.split(e,["\\s+"],{useRegex:!0,limit:1}),[n]=this.parseIdent(t,i.trim(),!0)||[];if(!n)return;let o=new this(t).name(n),f="(CONSTRAINT\\s+.+?\\s+)?",c=[{test:`${f}(PRIMARY[ ]+KEY|NOT[ ]+NULL|GENERATED|REFERENCES|UNIQUE(?:[ ]+KEY)?|CHECK|AUTO_INCREMENT)`},{backtest:"^(?!.*\\s+(NOT|SET)\\s+$)",test:`${f}NULL`},{backtest:"^(?!.*\\s+BY\\s+$)",test:`${f}DEFAULT`},{backtest:"^(?!.*\\s+REFERENCES\\s+)",test:"ON\\s+UPDATE"}],[l,...h]=m.split(s,c,{useRegex:"i",preserveDelims:!0});o.type(r(o,l.trim(),[K]));for(let p of h){let E=r(o,p,this.CONSTRAINT_TYPES);o.build("CONSTRAINTS",[E],this.CONSTRAINT_TYPES)}return o}};var St=class extends B{ARGUMENT;argument(t=void 0){return arguments.length?(this.build("ARGUMENT",[t],this.constructor.NODE_TYPES),this):this.ARGUMENT}toJSON(){return{argument:this.ARGUMENT.toJSON(),...super.toJSON()}}static fromJSON(t,e){if(e?.argument)return super.fromJSON(t,e)?.argument(e.argument)}stringify(){let t=[`${this.CLAUSE}${this.KIND&&/^(COLUMN|TABLE|SCHEMA|DATABASE)$/i.test(this.KIND)?` ${this.KIND.replace(/_/g," ")}${this.hasFlag("IF_NOT_EXISTS")?" IF NOT EXISTS":""}`:""} ${this.argument()}`];return this.argument()instanceof Y&&(this.hasFlag("AFTER")?t.push(this.getFlag("AFTER")?.replace(":"," ")):this.hasFlag("FIRST")&&t.push("FIRST"),this.params.dialect==="mysql"&&this.argument().foreignKey())?[t.join(" "),`ADD ${ut.fromJSON(this,constraint.toJSON()).columns([this.argument().name()])}`].join(`;
`):t.join(" ")}static parse(t,e,r){let[i,s="",n,o]=new RegExp(`^${this.CLAUSE}\\s+(?:(${this.KINDS.map(c=>c.replace(/_/g,"\\s+")).join("|")})\\s+)?(IF\\s+NOT\\s+EXISTS\\s+)?([\\s\\S]+)$`,"i").exec(e.trim())||[];if(!i)return;let f=new this(t,s.replace(/\s+/g,"_").toUpperCase());if(n&&f.withFlag("IF_NOT_EXISTS"),!s||/^COLUMN$/i.test(s)){let[,c,l,h]=o.trim().match(/([\s\S]+)\s+(?:(FIRST)|AFTER\s+(.+))$/i)||[,o.trim()];l&&f.withFlag("FIRST"),h&&f.withFlag(`AFTER:${h}`),f.argument(r(f,c,[Y]))}else/^TABLE|SCHEMA|DATABASE$/i.test(s)?f.argument(r(f,o,this.NODE_TYPES)):f.argument(r(f,`${s} ${o}`,this.NODE_TYPES));return f}static get CLAUSE(){return"ADD"}static NODE_TYPES=[Et,Ct,ut,yt,it,X,Y];static KINDS=["COLUMN","CONSTRAINT","PRIMARY_KEY","FOREIGN_KEY","UNIQUE_KEY","CHECK","FULLTEXT_INDEX","SPATIAL_INDEX","INDEX","KEY"]};var Gt=class extends B{NAME;name(t=void 0){return arguments.length?(this.NAME=t,this):this.NAME}toJSON(){return{name:this.NAME,...super.toJSON()}}static fromJSON(t,e){if(!(!e?.kind&&typeof e?.name!="string"))return super.fromJSON(t,e)?.name(e.name)}stringify(){let t=this.getFlag("RESTRICT")||this.getFlag("CASCADE"),e=this.KIND?.replace(/_/g," "),r=this.NAME&&this.autoEsc(this.NAME);return["PRIMARY_KEY","FOREIGN_KEY","CHECK"].includes(this.KIND)&&(this.params.dialect==="mysql"?this.KIND==="PRIMARY_KEY"&&(r=null):e="CONSTRAINT"),`${this.CLAUSE}${e?` ${e}`:""}${this.hasFlag("IF_EXISTS")?" IF EXISTS":""}${r?` ${r}`:""}${t?` ${t}`:""}`}static parse(t,e){let[r,i="",s,n,,o,f]=new RegExp(`^${this.CLAUSE}(?:\\s+(${this.KINDS.map(l=>l.replace(/_/g,"\\s+")).join("|")}))?(\\s+IF\\s+EXISTS)?(?:\\s+(\\w+)|\\s+([\`"])((?:\\4\\4|[^\\4])+)\\4)?(?:\\s+(RESTRICT|CASCADE))?$`,"i").exec(e.trim())||[];if(!r)return;let c=new this(t,i.replace(/\s+/g,"_").toUpperCase());return(n||o)&&c.name(n||this.autoUnesc(c,o)),s&&c.withFlag("IF_EXISTS"),f&&c.withFlag(f),c}static get CLAUSE(){return"DROP"}static KINDS=["COLUMN","CONSTRAINT","PRIMARY_KEY","FOREIGN_KEY","UNIQUE_KEY","CHECK","INDEX","KEY","IDENTITY","EXPRESSION","DEFAULT","NOT_NULL","NULL","AUTO_INCREMENT","ON_UPDATE"]};var Nt=class extends B{ARGUMENT;argument(t=void 0){return arguments.length?(["DATA_TYPE","TYPE"].includes(this.KIND)?this.build("ARGUMENT",[t],K):this.KIND==="SCHEMA"?this.build("ARGUMENT",[t],S):this.ARGUMENT=t,this):this.ARGUMENT}toJSON(){return{argument:this.ARGUMENT?.toJSON?.()||this.ARGUMENT,...super.toJSON()}}static fromJSON(t,e){if(e?.kind)return super.fromJSON(t,e)?.argument(e.argument)}stringify(){return this.KIND==="IDENTITY"?`SET GENERATED ${/^ALWAYS$/i.test(this.ARGUMENT)?"AS ALWAYS":"BY DEFAULT"}`:`${this.CLAUSE} ${this.KIND.replace(/_/g," ")}${this.ARGUMENT?` ${this.ARGUMENT}`:""}`}static parse(t,e,r){let[i,s,n]=new RegExp(`^${this.CLAUSE}\\s+(${this.KINDS.map(c=>c==="IDENTITY"?"GENERATED":c.replace(/_/g,"\\s+")).join("|")})(?:\\s+([\\s\\S]+))?$`,"i").exec(e.trim())||[];if(!i)return;let o=/^GENERATED$/i.test(s),f=new this(t,o?"IDENTITY":s.replace(/\s+/g,"_").toUpperCase());return/^(DATA\s+)?TYPE$/i.test(s)?f.argument(r(f,n,[K])):/^SCHEMA$/i.test(s)?f.argument(r(f,n,[S])):f.argument(o?/^AS\s+ALWAYS$/i.test(n)?"always":!0:n),f}static get CLAUSE(){return"SET"}static KINDS=["SCHEMA","DATA_TYPE","TYPE","IDENTITY","DEFAULT","NOT_NULL","NULL","AUTO_INCREMENT","ON_UPDATE"]};var At=class extends B{ARGUMENT;argument(t){return arguments.length?(this.build("ARGUMENT",[t],this.constructor.NODE_TYPES),this):this.ARGUMENT}toJSON(){return{argument:this.ARGUMENT.toJSON(),...super.toJSON()}}static fromJSON(t,e){if(!(!e?.kind||!e.argument))return super.fromJSON(t,e)?.argument(e.argument)}stringify(){return`${this.CLAUSE} ${this.KIND} ${this.ARGUMENT}`}static parse(t,e,r){let[i,s,n]=new RegExp(`^${this.CLAUSE}\\s+(${this.KINDS.map(f=>f).join("|")})\\s+([\\s\\S]+)$`,"i").exec(e.trim())||[];if(!i)return;let o=new this(t,s.toUpperCase());return o.argument(r(o,n,this.NODE_TYPES)),o}static get CLAUSE(){return"MODIFY"}static NODE_TYPES=[Y];static KINDS=["COLUMN"]};var ue=class extends At{NAME;name(t=void 0){return arguments.length?(this.NAME=t,this):this.NAME}add(t,e){return this.argument({clause:"ADD",kind:t,argument:e})}drop(t){return this.argument({clause:"DROP",kind:t})}set(t,e){return this.argument({clause:"SET",kind:t,argument:e})}toJSON(){return{name:this.NAME,...super.toJSON()}}static fromJSON(t,e){if(typeof e?.name=="string")return super.fromJSON(t,e)?.name(e.name)}stringify(){return`${this.CLAUSE} ${this.KIND} ${this.autoEsc(this.NAME)} ${this.ARGUMENT}`}static parse(t,e,r){let[i,s,n,,o,f]=new RegExp(`^${this.CLAUSE}\\s+(${this.KINDS.map(l=>l).join("|")})\\s+(?:(\\w+)|([\`"])((?:\\3\\3|[^\\3])+)\\3)?\\s+([\\s\\S]+)$`,"i").exec(e.trim())||[];if(!i)return;let c=new this(t,s.toUpperCase());return c.name(n||this.autoUnesc(c,o)),/^(DATA\+)?TYPE\s+/i.test(f)?c.argument(r(c,`SET ${f}`,[Nt])):c.argument(r(c,f,this.NODE_TYPES)),c}static get CLAUSE(){return"ALTER"}static NODE_TYPES=[St,Gt,Nt,pt];static KINDS=["COLUMN","CONSTRAINT","INDEX"]};var fe=class extends At{NAME;name(t=void 0){return arguments.length?(this.NAME=t,this):this.NAME}toJSON(){return{name:this.NAME,...super.toJSON()}}static fromJSON(t,e){if(typeof e?.name=="string")return super.fromJSON(t,e)?.name(e.name)}stringify(){let t=[`${this.CLAUSE} ${this.KIND} ${this.autoEsc(this.NAME)} ${this.ARGUMENT}`];return this.hasFlag("AFTER")?t.push(this.getFlag("AFTER")?.replace(":"," ")):this.hasFlag("FIRST")&&t.push("FIRST"),t.join(" ")}static parse(t,e,r){let[i,s,n,,o,f]=new RegExp(`^${this.CLAUSE}\\s+(${this.KINDS.map(E=>E).join("|")})\\s+(?:(\\w+)|([\`"])((?:\\3\\3|[^\\3])+)\\3)?\\s+([\\s\\S]+)$`,"i").exec(e.trim())||[];if(!i)return;let c=new this(t,s.toUpperCase());c.name(n||this.autoUnesc(c,o));let{tokens:[l,h],matches:p}=m.lex(f,["FIRST","AFTER"],{useRegex:"i"});return c.argument(r(c,l,this.NODE_TYPES)),h?c.withFlag(`AFTER:${h}`):p.length&&c.withFlag("FIRST"),c}static get CLAUSE(){return"CHANGE"}};var V=class extends Lt(B){NAME;ACTIONS=[];SUBTREE=[];get length(){return this.ACTIONS.length+this.SUBTREE.length}action(...t){return arguments.length?(this.build("ACTIONS",t,this.constructor.NODE_TYPES),this):this.ACTIONS[this.ACTIONS.length-1]}create(t,e){return this.action({clause:"CREATE",kind:t,argument:e})}rename(t,e,r){return this.action({clause:"RENAME",kind:t,name:e,argument:r})}modify(t,e){return this.action({clause:"MODIFY",kind:t,argument:e})}change(t,e,r){return this.action({clause:"CHANGE",kind:t,name:e,argument:r})}alter(t,e,r){return this.action({clause:"ALTER",kind:t,name:e,argument:r})}add(t,e){return this.action({clause:"ADD",kind:t,argument:e})}drop(t,e){return this.action({clause:"DROP",kind:t,name:e})}set(t,e){return this.action({clause:"SET",kind:t,argument:e})}toJSON(){return{name:this.NAME.toJSON(),actions:this.ACTIONS.map(t=>t.toJSON()),...super.toJSON()}}static fromJSON(t,e){if(!e?.kind||!e.name||!Array.isArray(e.actions))return;let r=super.fromJSON(t,e)?.name(e.name);return r.action(...e.actions),r}stringify(){if(!this.length)return"";let t=c=>{if(c.BASENAME||["SCHEMA","DATABASE"].includes(this.KIND))return c;let l=this.$trace("get:name:database");return c.clone().name([l,c.NAME])},[e,r,i,s]=this.ACTIONS.reduce(([c,l,h,p],E)=>E instanceof It?E.KIND?[c,l.concat(E),h,p]:[c,l,E,p]:E instanceof Nt&&E.KIND==="SCHEMA"?[c,l,h,E]:[c.concat(E),l,h,p],[[],[]]),n=c=>`${this.CLAUSE} ${this.KIND}${this.hasFlag("IF_EXISTS")?" IF EXISTS":""} ${c}`,o=[...this.SUBTREE],f=t(this.name());e.length&&o.push(`${n(f)}
	${e.join(`,
	`)}`);for(let c of r.concat(i||[]))o.push(`${n(f)} ${c}`);return s&&o.push(`${n(i&&t(S.fromJSON(this,i.ARGUMENT))||f)} ${s}`),o.join(`;
`)}static parse(t,e,r){let[i,s,n,o]=new RegExp(`^${this.CLAUSE}\\s+(${this.KINDS.map(h=>h).join("|")})\\s+(?:(IF\\s+EXISTS)\\s+)?([\\s\\S]+)$`,"i").exec(e.trim())||[];if(!i)return;let f=new this(t,s.toUpperCase()),[c,l]=m.split(o,["\\s+"],{useRegex:!0,limit:1});return f.name(r(f,c,[S])),f.action(...m.split(l,[","]).map(h=>r(f,h,this.NODE_TYPES))),n&&f.withFlag("IF_EXISTS"),f}static get CLAUSE(){return"ALTER"}static NODE_TYPES=[It,ue,fe,At,St,Gt,Nt];static KINDS=["TABLE","SCHEMA","DATABASE"]};var k=class extends Ft{COLUMNS=[];CONSTRAINTS=[];INDEXES=[];NODES=new Set;static get WRITABLE_PROPS(){return["BASENAME"].concat(super.WRITABLE_PROPS)}static get SUBTREE_PROPS(){return["COLUMNS","CONSTRAINTS","INDEXES"]}static CONSTRAINT_TYPES=[Ct,ut,yt,it];$trace(t,...e){return t==="get:schema:table"?this:t==="get:name:table"?this.NAME.NAME:t==="get:name:database"&&this.NAME.BASENAME?this.NAME.BASENAME:(t==="event:connected"&&[Y,x,X].some(r=>e[0]instanceof r)&&this.NODES.add(e[0]),super.$trace(t,...e))}primaryKey(){return[...this.NODES].find(t=>t.TYPE==="PRIMARY_KEY")}column(t){return typeof t=="string"?this.COLUMNS.find(e=>this.isSame(e.name(),t,"ci")):(this.build("COLUMNS",[t],Y),this.COLUMNS[this.COLUMNS.length-1])}constraint(t){return typeof t=="string"?this.CONSTRAINTS.find(e=>this.isSame(e.name(),t,"ci")):(this.build("CONSTRAINTS",[t],this.constructor.CONSTRAINT_TYPES),this.CONSTRAINTS[this.CONSTRAINTS.length-1])}index(t){return typeof t=="string"?this.INDEXES.find(e=>this.isSame(e.name(),t,"ci")):(this.build("INDEXES",[t],X),this.INDEXES[this.INDEXES-1])}diffWith(t){super.diffWith(t);let e=(f,c)=>[...f.NODES].find(l=>l.NAME===c),r=f=>[...f.NODES].reduce(([c,l],h)=>[Y,x,X].some(p=>h instanceof p)?h.NAME?[c.add(h.NAME),l]:[c,l.add(h)]:[c,l],[new Set,new Set]),[i]=r(this),[s,n]=r(t),o=f=>{if(f instanceof x)if(f.CONTEXT instanceof Y){let c=f.CONTEXT.NAME;if(!i.has(c))return;e(this,c).constraint(f.toJSON())}else this.constraint(f.toJSON());else f instanceof X?this.index(f.toJSON()):this.column(f.toJSON())};for(let f of new Set([...i,...s])){let c=e(this,f),l=e(t,f);i.has(f)&&!s.has(f)?c.drop():i.has(f)?c.diffWith(l):o(l)}for(let f of n)o(f);return this}alterWith(t){let e=(r,i=!1)=>{let s=[...this.NODES].find(n=>(r.kind==="COLUMN"?n instanceof Y:r.kind==="CONSTRAINT"?n instanceof x:n.TYPE===r.kind)&&(r.name?this.isSame(n.NAME,r.name,"ci"):r.kind==="PRIMARY_KEY"));if(!s&&!i)throw new Error(`${r.kind}${r.name?` "${r.name}"`:""} does not exist.`);return s};for(let r of t.ACTIONS)if(r.CLAUSE==="RENAME")r.KIND?e({kind:r.KIND,name:r.name()}).name(r.argument()):this.name([this.name().BASENAME,r.argument()]);else if(r.CLAUSE==="ADD")r.argument()instanceof x?r.argument().columns().length===1?e({kind:"COLUMN",name:r.argument().columns()[0]}).constraint(r.argument().toJSON()):this.constraint(r.argument().toJSON()):r.argument()instanceof X?this.index(r.argument().toJSON()):(!r.hasFlag("IF_NOT_EXISTS")||!e({kind:"COLUMN",name:r.argument().name()},!0))&&this.column(r.argument().toJSON());else if(r.CLAUSE==="DROP")e(r.toJSON(),r.hasFlag("IF_EXISTS"))?.drop();else if(r.CLAUSE==="SET")r.KIND==="SCHEMA"&&this.name([r.argument(),this.name().NAME]);else if(["CHANGE","MODIFY"].includes(r.CLAUSE))(r.CLAUSE==="CHANGE"?e({kind:"COLUMN",name:r.name()}):e({kind:"COLUMN",name:r.argument().name()})).diffWith(r.argument());else if(r.CLAUSE==="ALTER"){let i=e({kind:r.KIND,name:r.name()},r.hasFlag("IF_EXISTS"));if(!i)continue;let s=r.argument();if(s.CLAUSE==="ADD"){if(s.argument().TYPE==="EXPRESSION")throw new Error("Cannot add EXPRESSION constraint after column creation.");if(i.constraint(s.argument().TYPE))throw new Error(`Constraint ${s.argument().TYPE} already exists on ${i.name()}.`);i.constraint(s.argument())}else if(s.CLAUSE==="DROP"){let n=i.constraint(s.KIND);if(n)n.drop();else if(["IDENTITY","EXPRESSION"].includes(s.KIND)&&!s.hasFlag("IF_EXISTS"))throw new Error(`Cannot drop ${s.KIND}; does not exist.`)}else if(s.CLAUSE==="SET"){if(s.argument()instanceof K)i.type(s.argument().toJSON());else if(["DEFAULT","ON_UPDATE"].includes(s.KIND))i.constraint(s.KIND,s.argument());else if(["NOT_NULL","NULL","AUTO_INCREMENT"].includes(s.KIND))i.constraint(s.KIND,!0);else if(s.KIND==="IDENTITY"){let n=i.identity();if(!n)throw new Error(`Cannot modify IDENTITY constraint on ${i.name()}; does not exist.`);n.always(/^ALWAYS$/i.test(s.argument()))}}}return this}getAlt(){let t=V.fromJSON(this.CONTEXT,{kind:"TABLE",name:this.NAME.toJSON(),actions:[]});this.$NAME&&this.NAME&&(this.isSame(this.$NAME.NAME,this.NAME.NAME,"ci")||t.rename(null,null,this.$NAME.NAME),this.$NAME.BASENAME&&!this.isSame(this.$NAME.BASENAME,this.NAME.BASENAME,"ci")&&t.set("SCHEMA",this.$NAME.BASENAME));let e=(i,s=!1)=>i.keep()!==!0||["$EXPR","$ALWAYS","$TARGET_TABLE","$TARGET_COLUMNS","$MATCH_RULE","$UPDATE_RULE","$DELETE_RULE"].concat(s?"$NAME":[]).some(n=>n in i&&(Array.isArray(i[n])?i[n].length:![void 0,null].includes(i[n]))&&!this.isSame(i[n.slice(1)],i[n],"ci"));for(let i of this.COLUMNS){if(i.keep()===!1){t.drop("COLUMN",i.NAME);continue}if(i.keep()!==!0){t.add("COLUMN",i.clone());continue}if(i.keep()===!0){if(this.params.dialect==="mysql")if(i.$TYPE&&!this.isSame(i.$TYPE.toJSON(),i.TYPE.toJSON(),"ci")||i.CONSTRAINTS.some(n=>["EXPRESSION","NOT_NULL","NULL","AUTO_INCREMENT","ON_UPDATE"].includes(n.TYPE)&&e(n,!0))){let n=i.clone();n.CONSTRAINTS=n.CONSTRAINTS.filter(o=>!(o instanceof x)),t.modify("COLUMN",n)}else{let n=i.CONSTRAINTS.find(o=>o.TYPE==="DEFAULT"&&e(o,!0));n&&t.alter("COLUMN",i.NAME,o=>{n.keep()===!1?o.drop("DEFAULT"):a.set("DEFAULT",n.expr())}),i.$NAME&&!this.isSame(i.$NAME,i.NAME,"ci")&&t.rename("COLUMN",i.NAME,i.$NAME)}else{i.$TYPE&&!this.isSame(i.$TYPE.toJSON(),i.TYPE.toJSON(),"ci")&&t.alter("COLUMN",i.NAME,{clause:"SET",kind:"DATA_TYPE",argument:K.fromJSON(i,i.$TYPE.toJSON())});let n=i.CONSTRAINTS.filter(o=>!(o instanceof x)&&e(o,!0));for(let o of n)t.alter("COLUMN",i.NAME,(()=>{if(o.keep()===!1)return{clause:"DROP",kind:o.TYPE};if(o.TYPE==="EXPRESSION")throw new Error("EXPRESSION constraints cannot be added or modified after column creation.");if(o.TYPE==="IDENTITY")return o.keep()?{clause:"SET",kind:"IDENTITY",argument:o.always()?"ALWAYS":!0}:{clause:"ADD",argument:o.clone()};if(["DEFAULT"].includes(o.TYPE))return{clause:"SET",kind:o.TYPE,argument:o.expr()};if(["NOT_NULL"].includes(o.TYPE))return{clause:"SET",kind:o.TYPE}})());i.$NAME&&!this.isSame(i.$NAME,i.NAME,"ci")&&t.rename("COLUMN",i.NAME,i.$NAME)}let s=i.CONSTRAINTS.filter(n=>n instanceof x);for(let n of s)if(e(n)){if([!0,!1].includes(n.keep())&&t.drop(n.TYPE,n.NAME),n.keep()!==!1){let o=i.$trace("get:schema:table").altsCascaded?i.name():i.NAME,f=this.constructor.CONSTRAINT_TYPES.find(c=>c.TYPE===n.TYPE).fromJSON(n.CONTEXT,{...n.toJSON(),columns:[o]});t.add(f.TYPE,f)}}else n.keep()===!0&&n.$NAME&&!this.isSame(n.$NAME,n.NAME,"ci")&&t.rename("CONSTRAINT",n.NAME,n.$NAME)}}let r=i=>e(i)||i.$COLUMNS?.length&&!this.isSame(i.$COLUMNS,i.COLUMNS,"ci");for(let i of this.CONSTRAINTS)r(i)?([!0,!1].includes(i.keep())&&t.drop(i.TYPE,i.NAME),i.keep()!==!1&&t.add(i.TYPE,i.clone())):i.keep()===!0&&i.$NAME&&!this.isSame(i.$NAME,i.NAME,"ci")&&t.rename("CONSTRAINT",i.NAME,i.$NAME);return t}cascadeAlt(){this.keep(this.keep(),"auto");let t=r=>r.dropped()?"DOWN":r.$NAME&&!this.isSame(r.$NAME,r.NAME,"ci")?"RENAME":null,e=t(this);for(let r of this.COLUMNS){let i=t(r);if(i)for(let s of this.CONSTRAINTS){if(s instanceof it)continue;let n=s.$COLUMNS.length?s.$COLUMNS:s.COLUMNS,o=n.indexOf(r.NAME);o>-1&&(i==="DOWN"?n.splice(o,1):i==="RENAME"&&(n[o]=r.$NAME))}}return this.altsCascaded=!0,this}updateDatabaseReferences(t,e){for(let r of this.NODES)r instanceof rt&&r.targetTable().basename()===t.NAME&&(e==="DOWN"?r.drop():e==="RENAME"&&r.targetTable().basename(t.$NAME))}updateTableReferences(t,e){for(let r of this.NODES)r instanceof rt&&(r.targetTable().basename()&&t.basename()&&r.targetTable().basename()!==t.basename()||r.targetTable().name()===t.NAME&&(e==="DOWN"?r.drop():e==="RENAME"&&r.targetTable().name(t.$NAME)))}updateColumnReferences(t,e){for(let r of this.NODES){if(!(r instanceof rt)||r.targetTable().basename()&&t.$trace("get:name:database")&&r.targetTable().basename()!==t.$trace("get:name:database")||r.targetTable().name()!==t.$trace("get:table:name"))continue;let i=cons.$TARGET_COLUMNS.length?cons.$TARGET_COLUMNS:cons.TARGET_COLUMNS,s=i.indexOf(t.NAME);s>-1&&(e==="DOWN"?i.splice(s,1):e==="RENAME"&&(i[s]=t.$NAME))}}toJSON(){return{columns:this.COLUMNS.map(t=>t.toJSON()),constraints:this.CONSTRAINTS.map(t=>t.toJSON()),indexes:this.INDEXES.map(t=>t.toJSON()),...super.toJSON()}}static fromJSON(t,e){if(!(!Array.isArray(e?.columns)||["constraints","indexes"].some(r=>r in e&&!Array.isArray(e[r]))))return super.fromJSON(t,e,()=>{let r=new this(t);for(let i of e.columns)r.column(i);for(let i of e.constraints||[])r.constraint(i);for(let i of e.indexes||[])r.index(i);return r})}stringify(){let t=[this.COLUMNS.map(s=>s.stringify()).join(`,
	`)],e=this.CONSTRAINTS.slice(0),r=this.INDEXES.slice(0);this.params.dialect==="mysql"&&e.push(...this.COLUMNS.reduce((s,n)=>{let o=n.foreignKey();return o?s.concat(ut.fromJSON(this,{...o.toJSON(),columns:[n.name()]})):s},[])),e.length&&t.push(e.map(s=>s.stringify()).join(`,
	`)),r.length&&t.push(r.map(s=>s.stringify()).join(`,
	`));let i=this.name();if(!i.BASENAME){let s=this.$trace("get:name:database");i=i.clone().name([s,i.NAME])}return`${i} (
	${t.join(`,
	`)}
)`}static parse(t,e,r){let[i,s,...n]=m.split(e,[],{limit:2});if(!i||!b(s||"","(",")"))return;let o=new this(t);o.name(r(o,i.trim(),[S]));let f=m.split(y(s,"(",")"),[","]).map(c=>r(o,c.trim(),[Ct,ut,yt,it,X,Y]));for(let c of f)c instanceof Y?o.column(c):c instanceof X?o.index(c):o.constraint(c);return o}};var ft=class extends A{VALUE="";QUOTE="";constructor(t,e,r="'"){super(t),this.VALUE=e,this.QUOTE=r}value(t){this.VALUE=t}stringify(){let t=this.QUOTE||this.quoteChars[0];return`${t}${(this.VALUE+"").replace(new RegExp(t,"g"),t.repeat(2))}${t}`}toJSON(){return{value:this.VALUE}}static fromJSON(t,e){if(typeof e?.value=="string")return new this(t,e.value,e.quote)}static parse(t,e){let[r,i]=this.parseText(t,e,!0)||[];if(i)return new this(t,r,i)}static parseText(t,e,r=!1){let i=this.getQuoteChars(t,r),s={};if(!(!(s.quote=i.find(n=>b(e,n,n)))||m.match(e,[" "]).length))return[y(e,s.quote,s.quote).replace(new RegExp(s.quote+s.quote,"g"),s.quote),s.quote]}};var wt=class extends A{VALUE=0;constructor(t,e){super(t),this.VALUE=e}value(t){this.VALUE=t}toJSON(){return{value:this.VALUE,flags:this.FLAGS}}static fromJSON(t,e){if(typeof e=="number"||typeof e=="string"&&/^[.\d]+$/.test(e)&&(e=parseFloat(e)))e={value:e};else if(typeof e?.value!="number")return;return new this(t,e.value).withFlag(...e.flags||[])}stringify(){return`${this.VALUE}`}static parse(t,e){if(/^\d+$/.test(e))return new this(t,parseFloat(e))}static factoryMethods={value:(t,e)=>/^\d+$/.test(e)&&new this(t)}};var ct=class extends ft{TYPE;constructor(t,e,r,i){super(t,e,i),this.TYPE=r}array(t){this.VALUE=Array.isArray(t)?JSON.stringify(t):t,this.TYPE="ARRAY"}object(t){this.VALUE=g(t)?JSON.stringify(t):t,this.TYPE="OBJECT"}toJSON(){return{type:this.TYPE,...super.toJSON()}}static fromJSON(t,e){if(typeof e?.type!="string"||!/OBJECT|ARRAY/i.test(e.type)||!e.value)return;let r=new this(t);return r[e.type.toLowerCase()](e.value),r}stringify(){return`${super.stringify()}`}static parse(t,e){let r=[["{","}"],["[","]"]],i={},[s,n]=this.parseText(t,e)||[];if(n&&!(!(i.braces=r.find(o=>b(e,o[0],o[1])))||m.match(e,[" "]).length))return new this(t,s,i.braces[0]==="{"?"OBJECT":"ARRAY",n)}static factoryMethods={array:(t,e)=>Array.isArray(e)&&new this(t),object:(t,e)=>g(e)&&new this(t)}};var st=class extends A{static OPERATORS=["->","->>","#>","#>>"];OPERATOR="";LHS=null;RHS=null;path(t,e,r){if(!this.constructor.OPERATORS.includes(e))throw new Error(`Unknown operator: "${e}".`);this.build("LHS",[t],[ct,S]),this.build("RHS",[r],[ct,wt,ft]),this.OPERATOR=e}toJSON(){return{lhs:this.LHS?.toJSON(),rhs:this.RHS?.toJSON(),operator:this.OPERATOR,flags:this.FLAGS}}static fromJSON(t,e){if(!this.OPERATORS.includes(e?.operator))return;let r=new this(t).withFlag(...e.flags||[]);return r.path(e.lhs,e.operator,e.rhs),r}stringify(){return`${this.LHS} ${this.OPERATOR} ${this.RHS}`}static parse(t,e,r){if((t?.params?.inputDialect||t?.params?.dialect)==="mysql")return;let{tokens:i,matches:s}=m.lex(e,this.OPERATORS,{limit:1});if(!s.length)return;let n=new this(t),o=r(n,i[0],[ct,S]),f=r(n,i[1].trim(),[ct,wt,ft]);return n.path(o,s[0],f),n}static factoryMethods={path:(t,e,r,i)=>this.OPERATORS.includes(r)&&new this(t)}};var z=class u extends A{static ARR_RIGHT="~>";static ARR_LEFT="<~";OPERATOR="";LHS=null;RHS=null;UUID=null;get isOutgoing(){return this.OPERATOR===this.constructor.ARR_RIGHT}get isIncoming(){return this.OPERATOR===this.constructor.ARR_LEFT}get uuid(){return this.UUID||(this.UUID=`$path:${(0|Math.random()*9e6).toString(36)}`),this.UUID}path(t,e,r){let i=this.constructor;if(![i.ARR_LEFT,i.ARR_RIGHT].includes(e))throw new Error(`Unknown operator: "${e}".`);this.build("LHS",[t],S),this.build("RHS",[r],[i,st,S]),this.OPERATOR=e}async eval(){let t=this.$trace("get:api:client");if(!t)throw new Error("No client API in context.");let e=p=>p.primaryKey()?.columns()[0],r=async(p,E)=>{let N=[...p.NODES].find(d=>d.TYPE==="FOREIGN_KEY"&&d.columns().includes(E.NAME))?.targetTable();return N&&!N.BASENAME?S.fromJSON(this,[await t.basenameGet(N.NAME),N.NAME]):N},i=async(p,E)=>{let N=t.database(E);if(await N.hasTable(p))return k.fromJSON(N,await N.describeTable(p))};if(this.isIncoming){if(!(this.RHS instanceof u))throw new Error(`Unterminated path: ${this.RHS}`);let p,E,N,d;if(this.RHS.isIncoming){if(!(this.RHS.RHS instanceof u))throw new Error(`Unterminated path: ${this.RHS.RHS}`);({LHS:p,RHS:d}=this),{schema:N,table:E}=(await d.eval()).lhs}else if({LHS:p,RHS:{LHS:E,RHS:d}}=this,E.BASENAME||(E=S.fromJSON(this,[await t.basenameGet(E.NAME),E.NAME])),N=await i(E.NAME,E.BASENAME),!N)throw new Error(`[${this}]: The implied table ${E} does not exist.`);let T=await r(N,p);if(!T)throw new Error(`[${this}]: Table ${E} does not define the implied foreign key: ${p}.`);let _=await i(T.NAME,T.BASENAME);if(!_)throw new Error(`[${this}]: The implied table ${T} does not exist.`);let O=e(_);if(!O)throw new Error(`[${this}]: Table ${_} does not define a primary key.`);return{lhs:{table:T,schema:_,primaryKey:O},rhs:{table:E,schema:N,foreignKey:p,path:d}}}let s=await Qe.call(this);if(!s)throw new Error("No tables in query.");let n=await i(s.NAME,s.BASENAME);if(!n)throw new Error(`[${this}]: The implied table ${s} does not exist.`);let{LHS:o,RHS:f}=this,c=await r(n,o);if(!c)throw new Error(`[${this}]: Table ${s} does not define the implied foreign key: ${o}.`);let l=await i(c.NAME,c.BASENAME);if(!l)throw new Error(`[${this}]: The implied table ${c} does not exist.`);let h=e(l);if(!h)throw new Error(`[${this}]: Table ${c} does not define a primary key.`);return{lhs:{table:s,schema:n,foreignKey:o},rhs:{table:c,schema:l,primaryKey:h,path:f}}}async plot(){if(this.JOINT)return;let t=this.$trace("get:node:statement"),e=await Qe.call(this);if(!e)throw new Error("No tables in query.");let{lhs:r,rhs:i}=await this.eval(),s=r.foreignKey?.NAME||r.primaryKey,n=i.primaryKey||i.foreignKey.NAME;if(r.primaryKey&&(r.table.NAME.toLowerCase()!==e.NAME.toLowerCase()||r.table.BASENAME.toLowerCase()!==e.BASENAME.toLowerCase()))throw new Error(`[${this}]: Cannot resolve incoming path to base table ${e.EXPR}.`);let o=`_view:${[s,i.table.BASENAME,i.table.NAME,n].join(":")}`,f=()=>this.JOINT=t.JOIN_LIST.find(c=>c.ALIAS.NAME.toLowerCase()===o.toLowerCase());if(!f()){let c=this.$trace("get:node:table").ALIAS?.NAME||e.NAME,l=`${n}:${(0|Math.random()*9e6).toString(36)}`;t.leftJoin(h=>h.query(p=>p.select(E=>E.name(n).as(l)),p=>p.from([i.table.BASENAME,i.table.NAME].filter(E=>E)))).with({IS_SMART_JOIN:!0}).as(o).on(h=>h.equals([o,l],[c,s])),f()}this.JOINT.EXPR.select(c=>c.expr(i.path.toJSON()).as(this.uuid))}toJSON(){return{lhs:this.LHS?.toJSON(),rhs:this.RHS?.toJSON(),operator:this.OPERATOR,flags:this.FLAGS}}static fromJSON(t,e){if(![this.ARR_LEFT,this.ARR_RIGHT].includes(e?.operator))return;let r=new this(t).withFlag(...e.flags||[]);return r.path(e.lhs,e.operator,e.rhs),r}stringify(){return this.JOINT?this.autoEsc([this.JOINT.ALIAS.NAME,this.uuid]).join("."):`${this.LHS} ${this.OPERATOR} ${this.RHS}`}static parse(t,e,r){let{tokens:i,matches:s}=m.lex(e,[this.ARR_LEFT,this.ARR_RIGHT],{limit:1});if(!s.length)return;let n=new this(t),o=r(n,i[0],[S]),f=r(n,i[1],s[0]===this.ARR_LEFT?[this]:[this,st,S]);return n.path(o,s[0],f),n}static factoryMethods={path:(t,e,r,i)=>[this.ARR_LEFT,this.ARR_RIGHT].includes(r)&&new this(t)}};async function Qe(){let u=this.$trace("get:name:table");if(u){let t=this.$trace("get:name:database");return S.fromJSON(this,[t||await this.$trace("get:api:client")?.basenameGet(u),u])}}var Kt=class extends A{$EXPR;ALIAS;CLAUSED;get NAME(){return this.$EXPR?.NAME}get BASENAME(){return this.$EXPR?.BASENAME}get EXPR(){return this.$EXPR?.EXPR||this.$EXPR}name(t){return this.build("$EXPR",[t],S,"name"),this}query(...t){return this.build("$EXPR",t,Z,"query"),this}expr(t){return this.build("$EXPR",[t],this.constructor.exprTypes),this}as(t,e=!0){return this.build("ALIAS",[t],S),this.CLAUSED=e,this}toJSON(){return{expr:this.$EXPR?.toJSON(),alias:this.ALIAS?.toJSON(),claused:this.CLAUSED,flags:this.FLAGS}}static fromJSON(t,e){let r=new this(t).withFlag(...e.flags||[]);return e?.expr?(r.expr(e.expr),e.alias&&r.as(e.alias,e.claused)):e&&r.expr(e),r}stringify(){let t=this.ALIAS||this.$EXPR instanceof z&&this.$EXPR.JOINT&&this.autoEsc(this.$EXPR.clone().stringify());return[this.$EXPR,this.CLAUSED?"AS":"",t].filter(e=>e).join(" ")}static parse(t,e,r){let i=new this(t),s=this.getEscChar(t,!0),[,n,o,f,,c]=new RegExp(`^([\\s\\S]+?)(?:(\\s+AS\\s+|(?<!(?:~>|<~))\\s+)(?:([\\w]+)|(${s})((?:\\4\\4|[^\\4])+)\\4))?$`,"i").exec(e.trim())||[],l,h=f||c;if(h&&!o?.trim()&&!n.trim().endsWith(")")){try{l=r(i,n,this.exprTypes)}catch{}l||(h=f=c=null,n=e)}if(l||(l=r(i,n,this.exprTypes)),i.expr(l),h){let p=f||this.autoUnesc(i,c),E=!!o?.trim();i.as(p,E)}return i}static get exprTypes(){return L.Types.filter(t=>t!==pt)}};var D=class extends Kt{static get exprTypes(){return[Z,S]}};var w=class extends D{TYPE="";CORRELATION=null;full(t){return this.TYPE="JOIN",this.expr(t),this}left(t){return this.TYPE="LEFT_JOIN",this.expr(t),this}right(t){return this.TYPE="RIGHT_JOIN",this.expr(t),this}inner(t){return this.TYPE="INNER_JOIN",this.expr(t),this}cross(t){return this.TYPE="CROSS_JOIN",this.expr(t),this}on(...t){return this.build("CORRELATION",t,$,"and")}using(t){return this.build("CORRELATION",[t],S)}toJSON(){return{type:this.TYPE,correlation:this.CORRELATION?.toJSON(),...super.toJSON()}}static fromJSON(t,e){let r=super.fromJSON(t,e);if(!(!r||!e.type))return e?.expr&&e.type&&(r.TYPE=e.type),e?.expr&&e.correlation&&r.build("CORRELATION",[e.correlation],[S,$]),r}stringify(){return[this.TYPE?.replace(/_/," ").toUpperCase()||"JOIN",super.stringify(),this.CORRELATION instanceof S?`USING ${this.CORRELATION}`:`ON ${this.CORRELATION}`].filter(t=>t).join(" ")}static parse(t,e,r){let[i,s,n]=e.match(new RegExp(`^${this.regex}([\\s\\S]*)$`,"i"))||[];if(!i)return;let{tokens:[o,f],matches:c}=m.lex(n,["\\s+(?:ON|USING)\\s+"],{useRegex:"i"}),l=super.parse(t,o.trim(),r);return l.TYPE=s.trim().toUpperCase()+"_JOIN",/USING/i.test(c[0])?l.using(r(l,f.trim(),[S])):/ON/i.test(c[0])&&l.on(r(l,f.trim(),[$,J])),l}static regex="(INNER\\s+|CROSS\\s+|(?:LEFT|RIGHT)(?:\\s+OUTER)?\\s+)?JOIN"};var Tt=class extends A{NAME="";ARGS=[];fn(t,...e){return this.NAME=t,this.build("ARGS",e,L.Types)}toJSON(){return{name:this.NAME,args:this.ARGS.map(t=>t.toJSON()),flags:this.FLAGS}}static fromJSON(t,e){if(typeof e?.name!="string"||!Array.isArray(e.args))return;let r=new this(t).withFlag(...e.flags||[]);return r.fn(e.name,...e.args),r}stringify(){return`${this.NAME.toUpperCase()}(${this.ARGS.join(", ")})`}static parse(t,e,r){if(!e.endsWith(")")||m.match(e,[" "]).length)return;let[,i,s=""]=/^(\w+)\(([\s\S]+)?\)$/i.exec(e),n=new this(t);return n.fn(i,...m.split(s,[","]).map(o=>r(n,o.trim()))),n}};var ce=class extends A{CRITERIA=[];criterion(...t){return this.build("CRITERIA",t,L.Types)}toJSON(){return{criteria:this.CRITERIA.map(t=>t.toJSON()),flags:this.FLAGS}}static fromJSON(t,e){if(!Array.isArray(e?.criteria))return;let r=new this(t).withFlag(...e.flags||[]);return r.criterion(...e.criteria),r}stringify(){return this.CRITERIA.map(t=>[t,...t.FLAGS].join(" ")).join(", ")}static parse(t,e,r){let[i,s]=e.match(new RegExp(`^${this.regex}([\\s\\S]*)$`,"i"))||[];if(!i)return;let n=new this(t);for(let o of m.split(s.trim(),[","])){let[,f,c]=/([\s\S]+)\s+(ASC|DESC)$/i.exec(o)||[,o];n.criterion(r(n,f).withFlag(c))}return n}static regex="ORDER\\s+BY"};var F=class extends ce{withRollup(){return this.withFlag("WITH_ROLLUP")}stringify(){return["ORDER BY",super.stringify(),...this.FLAGS.map(t=>t.replace(/_/g," "))].join(" ")}static parse(t,e,r){let{tokens:[i],matches:s}=m.lex(e,["\\s+WITH\\s+ROLLUP$"],{useRegex:"i"}),n=super.parse(t,i.trim(),r);if(n)return s.length&&n.withFlag("WITH_ROLLUP"),n}};var Wt=class extends A{CRITERIA=[];criterion(...t){return this.build("CRITERIA",t,L.Types)}stringify(){return this.CRITERIA.map(t=>t.stringify()).join(",")}toJSON(){return{criteria:this.CRITERIA.map(t=>t.toJSON()),flags:this.FLAGS}}static fromJSON(t,e){if(!Array.isArray(e?.criteria))return;let r=new this(t).withFlag(...e.flags||[]);return r.criterion(...e.criteria),r}static parse(t,e,r){let[i,s]=e.match(new RegExp(`^${this.regex}([\\s\\S]*)$`,"i"))||[];if(!i)return;let n=new this(t);for(let o of m.split(s.trim(),[","]))n.criterion(r(n,o));return n}static regex="GROUP\\s+BY"};var qt=class extends Wt{stringify(){return["PARTITION BY",super.stringify()].join(" ")}static regex="PARTITION\\s+BY"};var Ut=class extends A{NAME;WINDOW_REF;PARTITION_BY_CLAUSE;ORDER_BY_CLAUSE;name(t){return this.NAME=t,this}existing(t){return this.WINDOW_REF=t,this}extends(t){return this.WINDOW_REF=t,this}partitionBy(...t){if(this.WINDOW_REF)throw new Error("The PARTITION BY clause is not allowed when inheriting from a base window.");return this.build("PARTITION_BY_CLAUSE",t,qt,"criterion")}orderBy(...t){return this.build("ORDER_BY_CLAUSE",t,F,"criterion")}toJSON(){return{name:this.NAME,window_ref:this.WINDOW_REF,partition_by_clause:this.PARTITION_BY_CLAUSE?.toJSON(),order_by_clause:this.ORDER_BY_CLAUSE?.toJSON()}}static fromJSON(t,e){if(typeof e=="string")e={window_ref:e};else if(!(typeof e=="object"&&e)||!["name","window_ref","partition_by_clause","order_by_clause"].some(i=>i in e))return;let r=new this(t);return e.name&&r.name(e.name),e.window_ref&&r.extends(e.window_ref),e.partition_by_clause&&r.partitionBy(e.partition_by_clause),e.order_by_clause&&r.orderBy(e.order_by_clause),r}stringify(){let t=[];return!this.NAME&&this.WINDOW_REF&&!this.PARTITION_BY_CLAUSE&&!this.ORDER_BY_CLAUSE?t.push(this.WINDOW_REF):(this.NAME&&t.push(`${this.NAME} AS `),t.push(`(${[this.WINDOW_REF,this.PARTITION_BY_CLAUSE,this.ORDER_BY_CLAUSE].filter(e=>e).join(" ")})`)),t.join("")}static parse(t,e,r){let i=new this(t),s=async f=>{let{tokens:[c,...l],matches:h}=m.lex(y(f.trim(),"(",")"),["PARTITION\\s+BY","ORDER\\s+BY"],{useRegex:"i",preserveDelims:!0});c.trim()&&i.extends(c.trim());for(let p of h){if(/PARTITION\s+BY/i.test(p)){i.partitionBy(r(i,l.shift().trim(),[qt]));continue}i.orderBy(r(i,l.shift().trim(),[F]))}},n=e.endsWith(")");if(n&&!e.startsWith("(")){let[f,c]=spec.split(new RegExp(" AS ","i"));i.name(f.trim()),s(c)}else n?s(e):i.existing(e);return i}static regex="WINDOW|OVER"};var lt=class extends Tt{ORDER_BY_CLAUSE;OVER_CLAUSE;fn(...t){return super.fn(...t),this}orderBy(...t){return this.build("ORDER_BY_CLAUSE",t,F,"criterion"),this}over(t){return t||(t={name:""}),this.build("OVER_CLAUSE",[t],Ut),this.OVER_CLAUSE}toJSON(){return{...super.toJSON(),order_by_clause:this.ORDER_BY_CLAUSE?.toJSON(),over_clause:this.OVER_CLAUSE?.toJSON()}}static fromJSON(t,e){let r=super.fromJSON(t,e);if(r)return this.names.flat().includes(r.NAME.toUpperCase())&&(e.order_by_clause&&r.orderBy(e.order_by_clause),e.over_clause&&r.over(e.over_clause)),r}stringify(){return`${this.NAME.toUpperCase()}(${[...this.FLAGS,this.ARGS.join(","),this.ORDER_BY_CLAUSE].filter(e=>e).join(" ")})`+(this.OVER_CLAUSE?` OVER ${this.OVER_CLAUSE}`:"")}static parse(t,e,r){let[i,s]=m.split(e,["OVER\\s+"],{useRegex:"i"}).map(p=>p.trim());if(!i.endsWith(")")||m.match(i,[" "]).length)return;let[,n,o,f=""]=/^(\w+)\((?:\s+)?(?:(ALL|DISTINCT)\s+)?([\s\S]+)?\)$/i.exec(i);if(!this.names.flat().includes(n.toUpperCase()))return;let[,c,l]=/^([\s\S]+)(?:\s+(ORDER\s+BY\s+.+))$/i.exec(f)||[,f],h=super.parse(t,`${n}(${c})`,r);return o&&h.withFlag(o),l?h.orderBy(r(h,l,[F])):s&&h.over(r(h,s,[Ut])),h}static factoryMethods={fn:(t,e,...r)=>this.names.flat().includes(e?.toUpperCase())&&new this(t)};static names=[["AVG","BIT_AND","BIT_OR","BIT_XOR","COUNT","JSON_ARRAYAGG","JSON_OBJECTAGG","MAX","MIN","STDDEV_POP","STDDEV","STD","STDDEV_SAMP","SUM","VAR_POP","VARIANCE","VAR_SAMP","GROUP_CONCAT","GROUP_CONCAT_WS"],["CUME_DIST","DENSE_RANK","FIRST_VALUE","LAG","LAST_VALUE","LEAD","NTH_VALUE","NTLE","PERCENT_RANK","RANK","ROW_NUMBER"],["ANY_VALUE","COLUMN","COLUMNS","GROUPING"]]};var W=class extends Kt{path(t,e,r){return this.build("$EXPR",[t,e,r],st.OPERATORS.includes(e)?st:z,"path"),this}fn(t,...e){return this.build("$EXPR",[t,...e],lt.names.flat().includes(t.toUpperCase())?lt:Tt,"fn"),this}case(...t){return this.build("$EXPR",t,Pt),this}};var Qt=class extends A{WINDOWS_LIST=[];define(...t){return this.build("WINDOWS_LIST",t,Ut)}toJSON(){return{window_list:this.WINDOWS_LIST.map(t=>t.toJSON())}}static fromJSON(t,e){if(!Array.isArray(e?.window_list))return;let r=new this(t);return r.define(...e.window_list),r}stringify(){return`WINDOW ${this.WINDOWS_LIST.join(",")}`}static parse(t,e,r){let[i,s]=e.match(new RegExp(`^${this.regex}([\\s\\S]*)$`,"i"))||[];if(!i)return;let n=new this(t);for(let o of m.split(s,[","]))n.define(r(n,o.trim(),[Window]));return n}static regex="WINDOW"};var zt=class extends Wt{withRollup(){return this.withFlag("WITH_ROLLUP")}stringify(){return["GROUP BY",super.stringify(),...this.FLAGS.map(t=>t.replace(/_/g," "))].join(" ")}static parse(t,e,r){let{tokens:[i],matches:s}=m.lex(e,["\\s+WITH\\s+ROLLUP$"],{useRegex:"i"}),n=super.parse(t,i,r);if(n)return s.length&&n.withFlag("WITH_ROLLUP"),n}};var H=class u extends et{SELECT_LIST=[];FROM_LIST=[];JOIN_LIST=[];WHERE_CLAUSE=null;GROUP_BY_CLAUSE=null;HAVING_CLAUSE=null;WINDOW_CLAUSE=null;ORDER_BY_CLAUSE=null;OFFSET_CLAUSE=null;LIMIT_CLAUSE=null;UNION_CLAUSE=null;AGGRS=[];PATHS=[];VARS=[];SUBQUERIES=[];$trace(t,...e){return t==="get:node:table"?this.FROM_LIST[0]:(t==="event:connected"&&(e[0]instanceof lt&&this.AGGRS.push(e[0]),e[0]instanceof z&&!(e[0].CONTEXT instanceof z)&&this.PATHS.push(e[0]),e[0]instanceof Jt&&this.VARS.push(e[0]),e[0]instanceof u&&this.SUBQUERIES.push(e[0])),super.$trace(t,...e))}select(...t){return this.build("SELECT_LIST",t,W)}from(...t){return this.build("FROM_LIST",t,D),this.FROM_LIST[this.FROM_LIST.length-1]}join(t){return this.build("JOIN_LIST",[t],w,"full")}leftJoin(t){return this.build("JOIN_LIST",[t],w,"left")}rightJoin(t){return this.build("JOIN_LIST",[t],w,"right")}innerJoin(t){return this.build("JOIN_LIST",[t],w,"inner")}crossJoin(t){return this.build("JOIN_LIST",[t],w,"cross")}where(...t){return this.build("WHERE_CLAUSE",t,$,"and")}groupBy(...t){return this.build("GROUP_BY_CLAUSE",t,zt,"criterion"),this.GROUP_BY_CLAUSE}having(...t){return this.build("HAVING_CLAUSE",t,$,"and")}window(...t){return this.build("WINDOW_CLAUSE",t,Qt,"define")}orderBy(...t){return this.build("ORDER_BY_CLAUSE",t,F,"criterion"),this.ORDER_BY_CLAUSE}offset(t){if(typeof t!="number")throw new Error("Offsets must be of type number.");this.OFFSET_CLAUSE=t}limit(...t){if(!t.every(e=>typeof e=="number"))throw new Error("Limits must be of type number.");this.LIMIT_CLAUSE=t}union(...t){return this.build("UNION_CLAUSE",t,this.constructor,"select"),this.UNION_CLAUSE}get expandable(){return this.PATHS.length>0||this.SUBQUERIES.some(t=>t.expandable)}async expand(t=!1){let e=t?this:this.clone();if(!e.expandable)return e;for(let r of e.PATHS)await r.plot();for(let r of e.SUBQUERIES)await r.expand(!0);return e}toJSON(){return{select_list:this.SELECT_LIST.map(t=>t.toJSON()),from_list:this.FROM_LIST.map(t=>t.toJSON()),join_list:this.JOIN_LIST.map(t=>t.toJSON()),where_clause:this.WHERE_CLAUSE?.toJSON(),group_by_clause:this.GROUP_BY_CLAUSE?.toJSON(),having_clause:this.HAVING_CLAUSE?.toJSON(),window_clause:this.WINDOW_CLAUSE?.toJSON(),order_by_clause:this.ORDER_BY_CLAUSE?.toJSON(),offset_clause:this.OFFSET_CLAUSE,limit_clause:this.LIMIT_CLAUSE,union_clause:this.UNION_CLAUSE,flags:this.FLAGS}}static fromJSON(t,e){if(!Array.isArray(e?.select_list))return;let r=new this(t).withFlag(...e.flags||[]);return r.select(...e.select_list),e.from_list?.length&&r.from(...e.from_list),e.join_list?.length&&r.join(...e.join_list),e.where_clause&&r.where(e.where_clause),e.group_by_clause&&r.groupBy(e.group_by_clause),e.having_clause&&r.having(e.having_clause),e.window_clause&&r.window(e.window_clause),e.order_by_clause&&r.orderBy(e.order_by_clause),e.offset_clause&&r.offset(e.offset_clause),e.limit_clause&&r.limit(e.limit_clause),e.union_clause&&r.union(e.union_clause),r}stringify(t={}){let e=["SELECT"];return this.FLAGS.length&&e.push(this.FLAGS.map(r=>r.replace(/_/g," "))),e.push(this.SELECT_LIST.join(", ")),this.FROM_LIST.length&&e.push("FROM",this.FROM_LIST.join(", ")),this.JOIN_LIST.length&&e.push(...this.JOIN_LIST),this.WHERE_CLAUSE&&e.push("WHERE",this.WHERE_CLAUSE),this.GROUP_BY_CLAUSE&&e.push(this.GROUP_BY_CLAUSE),this.HAVING_CLAUSE&&e.push("HAVING",this.HAVING_CLAUSE),this.WINDOW_CLAUSE&&e.push(this.WINDOW_CLAUSE),this.ORDER_BY_CLAUSE&&e.push(this.ORDER_BY_CLAUSE),this.OFFSET_CLAUSE&&e.push("OFFSET",this.OFFSET_CLAUSE),this.LIMIT_CLAUSE&&e.push("LIMIT",(Array.isArray(this.LIMIT_CLAUSE)?this.LIMIT_CLAUSE:[this.LIMIT_CLAUSE]).join(",")),this.UNION_CLAUSE&&e.push("UNION",this.UNION_CLAUSE),e.join(" ")}static parse(t,e,r){let[i,s,n,o]=/^SELECT\s+(?:(WITH\s+UAC)\s+)?(ALL|DISTINCT)?([\s\S]+)$/i.exec(e.trim())||[];if(!i)return;let f=new this(t);s&&f.withFlag("WITH_UAC"),n&&f.withFlag(n);let c=this.mySubstitutePlaceholders(f,o.trim()),l={from:{backtest:"^(?!.*\\s+DISTINCT\\s+$)",test:"FROM"},join:w,where:"WHERE",groupBy:zt,having:"HAVING",window:Qt,orderBy:F,offset:"OFFSET",limit:"LIMIT",union:"UNION"},{tokens:[h,...p],matches:E}=m.lex(c,Object.values(l).map(N=>typeof N=="string"||N.test?N:N.regex),{useRegex:"i"});for(let N of m.split(h,[","])){let d=r(f,N.trim(),[W]);f.select(d)}for(let N of E){let d=N.replace(/\s+/g,""),T=Object.keys(l).find(_=>new RegExp(_,"i").test(d));if(T==="from")for(let _ of m.split(p.shift(),[","])){let O=r(f,_.trim(),[D]);f.from(O)}else if(["where","having"].includes(T)){let _=r(f,p.shift().trim(),[$,J]);f[T](_)}else if(T==="UNION"){let _=r(f,p.shift().trim(),[this]);f[T](_)}else if(["offset","limit"].includes(T)){let _=p.shift().split(",").map(O=>parseInt(O.trim()));f[T](..._)}else{let _=r(f,`${N} ${p.shift().trim()}`,[l[T]]);f[T](_)}}return f}};var Z=class extends A{$EXPR;constructor(t,e){super(t),this.$EXPR=e}get NAME(){return this.$EXPR?.NAME}get BASENAME(){return this.$EXPR?.BASENAME}get EXPR(){return this.$EXPR?.EXPR||this.$EXPR}query(...t){return this.build("$EXPR",t,H),this.$EXPR}expr(...t){return this.build("$EXPR",t,[H,...L.Types]),this.$EXPR}toJSON(){return{expr:this.$EXPR?.toJSON(),flags:this.FLAGS}}static fromJSON(t,e){if(!e?.expr||Object.keys(e).length!==(e.flags?2:1))return;let r=new this(t).withFlag(...e.flags||[]);return r.expr(e.expr),r}stringify(){return"("+this.$EXPR.stringify()+")"}static parse(t,e,r){if(!(!b(e,"(",")")||m.match(e,[" "]).length&&m.split(e,[]).length===2))return new this(t,r(t,y(e,"(",")"),[H,...L.Types]))}};var $=class u extends A{LOGIC="";ASSERTIONS=[];constructor(t,e){super(t),this.LOGIC=e}and(...t){return this.LOGIC==="OR"?new this.constructor(this).and(this,...t):(this.LOGIC="AND",this.build("ASSERTIONS",t,[u,J,Z]),this)}or(...t){return this.LOGIC==="AND"?new this.constructor(this).or(this,...t):(this.LOGIC="OR",this.build("ASSERTIONS",t,[u,J,Z]),this)}toJSON(){return{logic:this.LOGIC,assertions:this.ASSERTIONS.map(t=>t.toJSON()),flags:this.FLAGS}}static fromJSON(t,e){if(typeof e?.logic!="string"||!/AND|OR/i.test(e.logic)||!Array.isArray(e.assertions))return;let r=new this(t).withFlag(...e.flags||[]);return r[e.logic.toLowerCase()](...e.assertions),r}stringify(){return this.ASSERTIONS.map(t=>t instanceof u?`(${t.stringify()})`:t.stringify()).join(" "+this.LOGIC+" ")}static parse(t,e,r){for(let i of["AND","OR"]){let s=m.split(e,[`\\s+${i}\\s+`],{useRegex:"i"});if(s.length>1){let n=new this(t,i);for(let o of s)n[i.toLowerCase()](r(n,o));return n}}}};var le=class extends A{OPERAND=null;TYPE="";SYNTAX2=!1;cast(t,e,r=!1){return this.TYPE=e,this.SYNTAX2=r,this.build("OPERAND",[t],L.Types)}toJSON(){return{operand:this.OPERAND?.toJSON(),type:this.TYPE,syntax2:this.SYNTAX2,flags:this.FLAGS}}static fromJSON(t,e){if(!e?.operand||!e?.type)return;let r=new this(t).withFlag(...e.flags||[]);return r.cast(e.operand,e.type,e.syntax2),r}stringify(){return this.SYNTAX2?`${this.OPERAND}::${this.TYPE}`:`CAST(${this.OPERAND} AS ${this.TYPE})`}static parse(t,e,r){let i,s,n=!1;if(/^CAST(?:\s+)?\([\s\S]+\)$/i.test(e)){let[,f]=m.split(e,[]);[i,s]=m.split(f.slice(1,-1),["AS"],{useRegex:"i"})}else{if((t?.params?.inputDialect||t?.params?.dialect)==="mysql"||([i,s]=m.split(e,["::"]),!s))return;n=!0}let o=new this(t);return o.cast(r(o,i.trim()),s.trim(),n),o}};var he=class extends A{OPERATOR="";OPERANDS=[];constructor(t,e,...r){super(t),this.OPERATOR=e,this.OPERANDS=r}calc(t,...e){return this.OPERATOR&&this.OPERATOR!==t?new this.constructor(this).calc(t,this,...e):(this.OPERATOR=t,this.build("OPERANDS",e,L.Types),this)}sum(...t){return this.calc("+",...t)}sub(...t){return this.calc("-",...t)}div(...t){return this.calc("/",...t)}times(...t){return this.calc("*",...t)}toJSON(){return{operator:this.OPERATOR,operands:this.OPERANDS.map(t=>t.toJSON()),flags:this.FLAGS}}static fromJSON(t,e){if(typeof e?.operator!="string"||!/\+|\-|\*|\//.test(e.operator)||!Array.isArray(e.operands))return;let r=new this(t).withFlag(...e.flags||[]);return r.calc(e.operator,...e.operands),r}stringify(){return this.OPERANDS.join(` ${this.OPERATOR} `)}static parse(t,e,r){for(let i of["\\*","\\/","\\+","\\-"]){let{tokens:s,matches:n}=m.lex(e,[`(\\s+)?${i}(\\s+)?`],{useRegex:"i"});if(!(s.filter(o=>o.trim()).length<2))return new this(t,n.pop().trim(),...s.map(o=>r(t,o.trim())))}}};var me=class extends A{STRINGS=[];join(...t){return this.build("STRINGS",t,L.Types)}toJSON(){return{strings:this.STRINGS.map(t=>t.toJSON()),flags:this.FLAGS}}static fromJSON(t,e){if(!Array.isArray(e?.strings))return;let r=new this(t).withFlag(...e.flags||[]);return r.join(...e.strings),r}stringify(){return this.STRINGS.join(" || ")}static parse(t,e,r){if((t?.params?.inputDialect||t?.params?.dialect)==="mysql")return;let i=m.split(e,["||"]);if(i.length<2)return;let s=new this(t);return s.join(...i.map(n=>r(s,n.trim()))),s}};var L=class{static cast(t,e,r=this.Types){if(typeof e=="function"){if(r.length===1){let n=new r[0](t);return e(n),n}let i,s=n=>(...o)=>{let f=r.reduce((c,l)=>c||(l.factoryMethods?typeof l.factoryMethods[n]=="function"&&l.factoryMethods[n](t,...o):typeof l.prototype[n]=="function"&&new l(t)),null);if(!f)throw new Error(`Unknown method: ${n}()`);if(i=f,f[n])return f[n](...o);for(let c of o)c(f)};return e(new Proxy({},{get:(n,o)=>s(o)})),i}return this.fromJSON(t,e,r)}static fromJSON(t,e,r=this.Types){let i=r.find(s=>e instanceof s)?e:r.reduce((s,n)=>s||n.fromJSON(t,e),null);if(!i)throw new Error("");return i}static parse(t,e,r){return r(t,e,this.Types)}static get Types(){return[Z,Pt,me,$,z,st,J,he,le,lt,Tt,ct,wt,ft,Jt,S,pt]}};var dt=class extends A{LIST=[];list(...t){return this.build("LIST",t,S),this}toJSON(){return{list:this.LIST.map(t=>t.toJSON())}}static fromJSON(t,e){if(Array.isArray(e?.list))return new this(t).list(...e.list)}stringify(){return`(${this.LIST.join(", ")})`}static parse(t,e,r){if(!b(e,"(",")"))return;let i=new this(t);return i.list(...m.split(y(e,"(",")"),[","]).map(s=>r(i,s.trim(),[S]))),i}};var _t=class extends A{LIST=[];list(...t){return this.build("LIST",t,L.Types),this}toJSON(){return{list:this.LIST.slice(0)}}static fromJSON(t,e){if(Array.isArray(e?.list))return new this(t).list(...e.list)}stringify(){return`(${this.LIST.join(", ")})`}static parse(t,e,r){if(!b(e,"(",")"))return;let i=new this(t);return i.list(...m.split(y(e,"(",")"),[","]).map(s=>r(i,s.trim(),L.Types))),i}};var nt=class extends A{ENTRIES=[];set(t,e){return Array.isArray(t)?(t=dt.fromJSON(this,t),Array.isArray(e)?e=_t.fromJSON(this,e):e=L.cast(this,e)):(t=t instanceof A?t:S.fromJSON(this,t),e=e instanceof A?e:L.cast(this,e)),this.ENTRIES.push([t,e]),this}toJSON(){return{entries:this.ENTRIES.map(([t,e])=>[t.toJSON(),e.toJSON()])}}static fromJSON(t,e){if(!Array.isArray(e?.entries))return;let r=new this(t);for(let[i,s]of e.entries)r.set(i,s);return r}stringify(){return`
	${this.ENTRIES.map(([t,e])=>`${t} = ${e}`).join(`,
	`)}`}static parse(t,e,r){let i=new this(t);for(let s of m.split(e,[","])){let[n,o]=m.split(s,["="]).map(f=>f.trim()).filter(f=>f);if(!o)return;if(b(n,"(",")")){let f=r(i,o.trim(),[dt]);if(!b(o,"(",")"))return;let c=/^\((\s+)?SELECT\s+/i.test(o)?r(i,o.trim()):r(i,o.trim(),[_t]);i.set(f,c)}else{let f=r(i,n),c=r(i,o);i.set(f,c)}}return i}};var Zt=class extends nt{WHERE_CLAUSE=null;CONFLICT_TARGET=[];target(...t){return this.build("CONFLICT_TARGET",t,S),this}where(...t){return this.build("WHERE_CLAUSE",t,$,"and"),this}toJSON(){return{...super.toJSON(),conflict_target:this.CONFLICT_TARGET.map(t=>t.toJSON()),where_clause:this.WHERE_CLAUSE?.toJSON()}}static fromJSON(t,e){let r=super.fromJSON(t,e);if(r)return e.conflict_target&&r.target(...[].concat(e.conflict_target)),e.where_clause&&r.where(e.where_clause),r}stringify(){let t=[];return this.params.dialect==="mysql"?t.push("ON DUPLICATE KEY UPDATE"):t.push(`ON CONFLICT ${this.CONFLICT_TARGET.length?`(${this.CONFLICT_TARGET.join(", ")})`:""} ${this.ENTRIES.length?"DO UPDATE SET":"DO NOTHING"}`),t.push(super.stringify()),this.WHERE_CLAUSE&&t.push("WHERE",this.WHERE_CLAUSE),t.join(" ")}static parse(t,e,r){let[i,s,n,o]=e.match(new RegExp(`^${this.regex}([\\s\\S]*)$`,"i"))||[];if(!i)return;if(/DO\s+NOTHING/i.test(n))return new this(t);let[f,c]=m.split(o,["WHERE"],{ci:!0}),l=super.parse(t,f,r);if(s){let h=m.split(b(s,"(",")")?y(s,"(",")"):s,[","]).map(p=>r(l,p.trim(),[S]));l.target(...h)}return c&&l.where(r(l,c.trim(),[$,J])),l}static regex="ON\\s+(?:DUPLICATE\\s+KEY|CONFLICT(?:\\s+([\\s\\S]+))?)\\s+(UPDATE|DO\\s+NOTHING|DO\\s+UPDATE\\s+SET\\s+)"};var j=class extends et{TABLE=null;COLUMNS_CLAUSE=null;VALUES_LIST=[];SET_CLAUSE=null;SELECT_CLAUSE=null;ON_CONFLICT_CLAUSE=null;RETURNING_LIST=[];$trace(t,...e){return t==="get:node:table"?this.TABLE:super.$trace(t,...e)}into(t){return this.build("TABLE",[t],D)}columns(...t){return this.build("COLUMNS_CLAUSE",t,dt,"list")}values(...t){return this.build("VALUES_LIST",t,_t,"list")}set(...t){return this.build("SET_CLAUSE",t,nt,"set")}select(t){return this.build("SELECT_CLAUSE",[t],H)}onConflict(...t){return this.build("ON_CONFLICT_CLAUSE",t,Zt)}returning(...t){return this.build("RETURNING_LIST",t,W)}toJSON(){return{table:this.TABLE.toJSON(),columns_clause:this.COLUMNS_CLAUSE?.toJSON(),values_list:this.VALUES_LIST.map(t=>t.toJSON()),set_clause:this.SET_CLAUSE?.toJSON(),select_clause:this.SELECT_CLAUSE?.toJSON(),on_conflict_clause:this.ON_CONFLICT_CLAUSE?.toJSON(),returning_list:this.RETURNING_LIST.slice(0),flags:this.FLAGS}}static fromJSON(t,e){if(!e?.table)return;let r=new this(t).withFlag(...e.flags||[]);return r.into(e.table),e.columns_clause&&r.columns(e.columns_clause),e.values_list?.length&&r.values(...e.values_list),e.set_clause&&r.set(e.set_clause),e.select_clause&&r.select(e.select_clause),e.on_conflict_clause&&r.onConflict(e.on_conflict_clause),e.returning_list?.length&&r.returning(...e.returning_list),r}stringify(){let t=["INSERT"];return this.FLAGS.length&&t.push(this.FLAGS.map(e=>e.replace(/_/g," "))),t.push("INTO",this.TABLE),this.SET_CLAUSE?t.push("SET",this.SET_CLAUSE):(this.COLUMNS_CLAUSE&&t.push(this.COLUMNS_CLAUSE),this.SELECT_CLAUSE?t.push(this.SELECT_CLAUSE):t.push("VALUES",this.VALUES_LIST)),this.ON_CONFLICT_CLAUSE&&t.push(this.ON_CONFLICT_CLAUSE),this.RETURNING_LIST.length&&t.push("RETURNING",this.RETURNING_LIST.join(", ")),t.join(" ")}static parse(t,e,r){let[i,s,n,o]=/^INSERT(\s+WITH\s+UAC)?(?:\s+(IGNORE))?(?:\s+INTO)?([\s\S]+)$/i.exec(e.trim())||[];if(!i)return;let f=this.mySubstitutePlaceholders(t,o.trim()),{tokens:[c,l,h,p],matches:[E,N]}=m.lex(f,["(VALUES|VALUE|SET|SELECT)","ON\\s+(DUPLICATE\\s+KEY|CONFLICT)","RETURNING"],{useRegex:"i"}),d=new this(t);if(s&&d.withFlag("WITH_UAC"),n&&d.withFlag(n),/^SET$/i.test(E))d.into(r(d,c,[D])),d.set(r(d,l.trim(),[nt]));else{let T=m.split(c,[]);if(d.into(r(d,T.shift().trim(),[D])),T.length&&d.columns(r(d,T.shift().trim(),[dt])),/^SELECT$/i.test(E))d.select(r(d,`SELECT ${l}`));else for(let _ of m.split(l,[","]))d.values(r(d,_.trim(),[_t]))}return N&&d.onConflict(r(d,`${N} ${h}`,[Zt])),p&&d.returning(...m.split(p,[","]).map(T=>r(d,T.trim(),[W]))),d}};var Ot=class extends et{TABLE_LIST=[];JOIN_LIST=[];SET_CLAUSE=null;WHERE_CLAUSE=null;ORDER_BY_CLAUSE=null;LIMIT_CLAUSE=null;RETURNING_LIST=[];$trace(t,...e){return t==="get:node:table"?this.TABLE_LIST[0]:super.$trace(t,...e)}table(...t){return this.build("TABLE_LIST",t,D)}join(t){return this.build("JOIN_LIST",[t],w,"full")}leftJoin(t){return this.build("JOIN_LIST",[t],w,"left")}rightJoin(t){return this.build("JOIN_LIST",[t],w,"right")}innerJoin(t){return this.build("JOIN_LIST",[t],w,"inner")}crossJoin(t){return this.build("JOIN_LIST",[t],w,"cross")}set(...t){return this.build("SET_CLAUSE",t,nt,"set")}where(...t){return this.build("WHERE_CLAUSE",t,$,"and")}orderBy(...t){return this.build("ORDER_BY_CLAUSE",t,F,"criterion"),this.ORDER_BY_CLAUSE}limit(...t){if(!t.every(e=>typeof e=="number"))throw new Error("Limits must be of type number.");this.LIMIT_CLAUSE=t}returning(...t){return this.build("RETURNING_LIST",t,W)}toJSON(){return{table_list:this.TABLE_LIST.map(t=>t.toJSON()),join_list:this.JOIN_LIST.map(t=>t.toJSON()),set_clause:this.SET_CLAUSE?.toJSON(),where_clause:this.WHERE_CLAUSE?.toJSON(),order_by_clause:this.ORDER_BY_CLAUSE?.toJSON(),limit_clause:this.LIMIT_CLAUSE,returning_list:this.RETURNING_LIST,flags:this.FLAGS}}static fromJSON(t,e){if(!Array.isArray(e?.table_list))return;let r=new this(t).withFlag(...e.flags||[]);return r.table(...e.table_list),e.join_list?.length&&r.join(...e.join_list),e.set_clause&&r.set(e.set_clause),e.where_clause&&r.where(e.where_clause),e.order_by_clause&&r.orderBy(e.order_by_clause),e.limit_clause&&r.limit(e.limit_clause),e.returning_list?.length&&r.returning(...e.returning_list),r}stringify(){let t=["UPDATE"];return this.FLAGS.length&&t.push(this.FLAGS.map(e=>e.replace(/_/g," "))),t.push(this.TABLE_LIST.join(", ")),this.JOIN_LIST.length&&t.push(...this.JOIN_LIST),t.push("SET",this.SET_CLAUSE),this.WHERE_CLAUSE&&t.push("WHERE",this.WHERE_CLAUSE),this.ORDER_BY_CLAUSE&&t.push(this.ORDER_BY_CLAUSE),this.LIMIT_CLAUSE&&t.push("LIMIT",this.LIMIT_CLAUSE),this.RETURNING_LIST.length&&t.push("RETURNING",this.RETURNING_LIST.join(", ")),t.join(" ")}static parse(t,e,r){let[i,s,n,o]=/^UPDATE(\s+WITH\s+UAC)?(?:\s+(IGNORE))?([\s\S]+)$/i.exec(e.trim())||[];if(!i)return;let f=new this(t);s&&f.withFlag("WITH_UAC"),n&&f.withFlag(n);let c=this.mySubstitutePlaceholders(f,o.trim()),l={join:w,set:"SET",where:"WHERE",orderBy:F,limit:"LIMIT",returning:"RETURNING"},{tokens:[h,...p],matches:E}=m.lex(c,Object.values(l).map(N=>typeof N=="string"||N.test?N:N.regex),{useRegex:"i"});for(let N of m.split(h,[","])){let d=r(f,N.trim(),[D]);f.table(d)}for(let N of E){let d=N.replace(/\s+/g,""),T=Object.keys(l).find(_=>new RegExp(_,"i").test(d));if(T==="set"){let _=r(f,p.shift().trim(),[nt]);f.set(_)}else if(T==="where"){let _=r(f,p.shift().trim(),[$,J]);f.where(_)}else if(T==="limit")f.limit(parseInt(p.shift().trim()));else if(T==="returning")f.returning(...m.split(p.shift(),[","]).map(_=>r(f,_.trim(),[W])));else{let _=r(f,`${N} ${p.shift().trim()}`,[l[T]]);f[T](_)}}return f}};var ht=class extends et{DELETE_LIST=[];FROM_LIST=[];USING_LIST=[];JOIN_LIST=[];WHERE_CLAUSE=null;ORDER_BY_CLAUSE=null;LIMIT_CLAUSE=null;RETURNING_LIST=[];$trace(t,...e){return t==="get:node:table"?this.USING_LIST[0]||this.FROM_LIST[0]:super.$trace(t,...e)}delete(...t){return this.build("DELETE_LIST",t,S)}from(...t){return this.build("FROM_LIST",t,[S,D])}using(...t){return this.build("USING_LIST",t,D)}join(t){return this.build("JOIN_LIST",[t],w,"full")}leftJoin(t){return this.build("JOIN_LIST",[t],w,"left")}rightJoin(t){return this.build("JOIN_LIST",[t],w,"right")}innerJoin(t){return this.build("JOIN_LIST",[t],w,"inner")}crossJoin(t){return this.build("JOIN_LIST",[t],w,"cross")}where(...t){return this.build("WHERE_CLAUSE",t,$,"and")}orderBy(...t){return this.build("ORDER_BY_CLAUSE",t,F,"criterion"),this.ORDER_BY_CLAUSE}limit(...t){if(!t.every(e=>typeof e=="number"))throw new Error("Limits must be of type number.");this.LIMIT_CLAUSE=t}returning(...t){return this.build("RETURNING_LIST",t,W)}toJSON(){return{delete_list:this.DELETE_LIST.map(t=>t.toJSON()),from_list:this.FROM_LIST.map(t=>t.toJSON()),using_list:this.USING_LIST.map(t=>t.toJSON()),join_list:this.JOIN_LIST.map(t=>t.toJSON()),where_clause:this.WHERE_CLAUSE?.toJSON(),order_by_clause:this.ORDER_BY_CLAUSE?.toJSON(),limit_clause:this.LIMIT_CLAUSE,returning_list:this.RETURNING_LIST,flags:this.FLAGS}}static fromJSON(t,e){if(!Array.isArray(e?.from_list))return;let r=new this(t).withFlag(...e.flags||[]);return e.delete_list?.length&&r.delete(...e.delete_list),r.from(...e.from_list),e.using_list?.length&&r.using(...e.using_list),e.join_list?.length&&r.join(...e.join_list),e.where_clause&&r.where(e.where_clause),e.order_by_clause&&r.orderBy(e.order_by_clause),e.limit_clause&&r.limit(e.limit_clause),e.returning_list&&r.returning(...e.returning_list),r}stringify(){let t=["DELETE"];return this.FLAGS.length&&t.push(this.FLAGS.map(e=>e.replace(/_/g," "))),this.DELETE_LIST.length&&t.push(this.DELETE_LIST.join(", ")),t.push("FROM",this.FROM_LIST.join(", ")),this.USING_LIST.length&&t.push("USING",this.USING_LIST.join(", ")),this.JOIN_LIST.length&&t.push(...this.JOIN_LIST),this.WHERE_CLAUSE&&t.push("WHERE",this.WHERE_CLAUSE),this.ORDER_BY_CLAUSE&&t.push(this.ORDER_BY_CLAUSE),this.LIMIT_CLAUSE&&t.push("LIMIT",this.LIMIT_CLAUSE),this.RETURNING_LIST.length&&t.push("RETURNING",this.RETURNING_LIST.join(", ")),t.join(" ")}static parse(t,e,r){let[i,s,n,o]=/^DELETE(\s+WITH\s+UAC)?(?:\s+(IGNORE))?([\s\S]+)$/i.exec(e.trim())||[];if(!i)return;let f=new this(t);s&&f.withFlag("WITH_UAC"),n&&f.withFlag(n);let c=this.mySubstitutePlaceholders(f,o.trim()),l={from:{backtest:"^(?!.*\\s+DISTINCT\\s+$)",test:"FROM"},using:{backtest:"^(?!.*\\s+JOIN\\s+)",test:"USING"},join:w,where:"WHERE",orderBy:F,limit:"LIMIT",returning:"RETURNING"},{tokens:[h,...p],matches:E}=m.lex(c,Object.values(l).map(N=>typeof N=="string"||N.test?N:N.regex),{useRegex:"i"});for(let N of m.split(h,[","])){let d=r(f,N.trim(),[S]);f.delete(d)}for(let N of E){let d=N.replace(/\s+/g,""),T=Object.keys(l).find(_=>new RegExp(_,"i").test(d));if(["from","using"].includes(T))for(let _ of m.split(p.shift(),[","])){let O=T==="from"&&E.some(U=>U.toLowerCase()==="using")?S:D,I=r(f,_.trim(),[O]);f[T](I)}else if(T==="where"){let _=r(f,p.shift().trim(),[$,J]);f.where(_)}else if(T==="limit")f.limit(parseInt(p.shift().trim()));else if(T==="returning")f.returning(...m.split(p.shift(),[","]).map(_=>r(f,_.trim(),[W])));else{let _=r(f,`${N} ${p.shift().trim()}`,[l[T]]);f[T](_)}}return f}};var v=class extends Lt(B){toJSON(){return{name:this.NAME.toJSON(),...super.toJSON()}}static fromJSON(t,e){if(e.name)return super.fromJSON(t,e)?.name(e.name)}stringify(){let t=this.getFlag("RESTRICT")||this.getFlag("CASCADE"),r=(i=>{if(i.BASENAME||["SCHEMA","DATABASE"].includes(this.KIND))return i;let s=this.$trace("get:name:database");return i.clone().name([s,i.NAME])})(this.name());return`${this.CLAUSE}${this.getFlag("TEMPORARY")?" TEMPORARY":""} ${this.KIND}${this.hasFlag("IF_EXISTS")?" IF EXISTS":""} ${r}${t?` ${t}`:""}`}static parse(t,e,r){let[i,s,n,o,f,c]=new RegExp(`^${this.CLAUSE}\\s+(TEMPORARY\\s+)?(${this.KINDS.map(h=>h).join("|")})\\s+(?:(IF\\s+EXISTS)\\s+)?([\\s\\S]+?)(?:\\s+(RESTRICT|CASCADE|FORCE))?$`,"i").exec(e.trim())||[];if(!i)return;let l=new this(t,n.toUpperCase());return l.name(r(l,f,[S])),s&&l.withFlag("TEMPORARY"),o&&l.withFlag("IF_EXISTS"),c&&l.withFlag(c),l}static get CLAUSE(){return"DROP"}static KINDS=["TABLE","SCHEMA","DATABASE"]};var tt=class extends Ft{TABLES=[];static get SUBTREE_PROPS(){return["TABLES"]}$trace(t,...e){return t==="get:schema:database"?this:t==="get:name:database"?this.NAME.NAME:super.$trace(t,...e)}table(t){return typeof t=="string"?this.TABLES.find(e=>this.isSame(e.name().NAME,t,"ci")):(this.build("TABLES",[t],k),this.TABLES[this.TABLES.length-1])}diffWith(t){super.diffWith(t);let e=(n,o)=>n.TABLES.find(f=>this.isSame(f.NAME.NAME,o,"ci")),r=n=>new Set(n.TABLES.map(o=>o.NAME.NAME)),i=r(this),s=r(t);for(let n of new Set([...i,...s])){let o=e(this,n),f=e(t,n);i.has(n)&&!s.has(n)?o.drop():i.has(n)?o.diffWith(f):this.table(f.toJSON())}return this}alterWith(t){let e=(r,i=!1)=>{let s=this.TABLES.find(n=>this.isSame(n.NAME.NAME,r,"ci"));if(!s&&!i)throw new Error(`TABLE ${r} does not exist.`);return s};for(let r of t.ACTIONS)if(r.CLAUSE==="RENAME")r.KIND?e(r.name()).name(r.argument()):this.name(r.argument());else if(r.CLAUSE==="DROP")e(r.name(),r.hasFlag("IF_EXISTS"))?.drop();else if(r.CLAUSE==="ADD")(!r.hasFlag("IF_NOT_EXISTS")||!e(r.argument().name().NAME,!0))&&this.table(r.argument().toJSON());else if(r.CLAUSE==="MODIFY"){let i=e(r.argument().name().NAME,r.hasFlag("IF_EXISTS"));if(!i)continue;i.diffWith(r.argument())}return this}getAlt(){let t=V.fromJSON(this.CONTEXT,{kind:"SCHEMA",name:this.NAME.toJSON(),actions:[]});this.$NAME&&!this.isSame(this.$NAME.NAME,this.NAME.NAME,"ci")&&t.rename(null,null,this.$NAME.NAME);for(let e of this.TABLES)if(typeof e.keep()!="boolean")t.SUBTREE.push(G.fromJSON(this,{kind:"TABLE",argument:e.clone()}));else if(e.keep()===!1)t.SUBTREE.push(v.fromJSON(this,{kind:"TABLE",name:e.name().toJSON()}));else{let r=e.getAlt();r.length&&t.SUBTREE.push(r)}return t}cascadeAlt(){this.keep(this.keep(),"auto");let t=this.dropped()?"DOWN":this.$NAME&&this.$NAME!==this.NAME?"RENAME":null;for(let e of this.TABLES)e.cascadeAlt();return this.altsCascaded=!0,this}toJSON(){return{...super.toJSON(),tables:this.TABLES.map(t=>t.toJSON())}}static fromJSON(t,e){if(!(!e||["tables"].some(r=>r in e&&!Array.isArray(e[r]))))return super.fromJSON(t,e,()=>{let r=new this(t);for(let i of e.tables||[])r.table(i);return r})}stringify(){return this.name()+""}static parse(t,e,r){let i=new this(t);return i.name(r(i,e.trim(),[S])),i}};var G=class extends Lt(St){get NAME(){return this.ARGUMENT?.NAME}stringify(){let t=[super.stringify()];return["SCHEMA","DATABASE"].includes(this.KIND)&&t.push(...this.argument().TABLES.map(e=>this.constructor.fromJSON(this,{kind:"TABLE",argument:e}))),t.join(`;
`)}static get CLAUSE(){return"CREATE"}static NODE_TYPES=[k,tt];static KINDS=["TABLE","SCHEMA","DATABASE"]};var pe=class extends Lt(It){static KINDS=["TABLE","SCHEMA","DATABASE"]};var ze=[G,V,v,pe,j,Ot,ht,H,...L.Types];var Ee=class{static grammar=ze;static parse(t,e,r,i={}){if(!e?.length)return;let s=r?.length?r:this.grammar;for(let n of s){let o=this.parseOne(t,e,n,i);if(o)return i.log&&console.log(".................",e,".................>",o.constructor.name),o}if(i.assert!==!1)throw new SyntaxError(e)}static parseOne(t,e,r,i={}){return r.parse(t,e,(s,n,o,f={})=>this.parse(s,n,o,{...i,...f}))}};var jt=class{constructor(t,e,r="backward"){Object.defineProperty(this,"$",{value:{client:t,json:e,direction:r}})}get client(){return this.$.client}get direction(){return this.$.direction}get id(){return this.$.json.id}get databaseTag(){return this.$.json.database_tag}get versionTag(){return this.$.json.version_tag}get versionMax(){return this.$.json.version_max}get cursor(){return this.$.json.$cursor}get description(){return this.$.json.savepoint_description}get savepointDate(){return this.$.json.savepoint_date}get rollbackDate(){return this.$.json.rollback_date}get rollbackEffect(){let t=typeof this.$.json.keep!="boolean"?["DROP","RECREATE"]:this.$.json.keep===!1?["RECREATE","DROP"]:["ALTER"];return this.direction==="forward"?t.reverse()[0]:t[0]}get rollbackQuery(){let t=tt.fromJSON(this.client,this.schema());return this.direction!=="forward"&&(t.reverseAlt(!0),t.keep(t.keep(),"auto")),t.keep()===!1?v.fromJSON(this.client,{kind:"SCHEMA",name:t.name()}).withFlag(this.client.params.dialect==="mysql"?"":"CASCADE"):t.keep()===!0?t.getAlt().with({resultSchema:t}):G.fromJSON(this.client,{kind:"SCHEMA",argument:t})}name(t=!1){return t?this.direction==="forward"&&this.$.json.$name||this.$.json.name:this.direction!=="forward"&&this.$.json.$name||this.$.json.name}schema(){let{name:t,$name:e,tables:r=[],keep:i}=this.$.json;return{name:t,...e?{$name:e}:{},tables:r,keep:i}}toJSON(){let{id:t,database_tag:e,version_tag:r,version_max:i,$cursor:s,savepoint_description:n,savepoint_date:o,rollback_date:f}=this.$.json;return{id:t,name:this.name(),databaseTag:e,versionTag:r,versionMax:i,cursor:s,description:n,savepointDate:o,rollbackDate:f,rollbackEffect:this.rollbackEffect}}async isNextPointInTime(){return(await this.client.database(this.name()).savepoint({direction:this.direction})||{}).id===this.$.json.id}async rollback(){if(!await this.isNextPointInTime())throw new Error("Invalid rollback order.");await this.client.query(this.rollbackQuery,{noCreateSavepoint:!0});let t=[this.client.constructor.OBJ_INFOSCHEMA_DB,"database_savepoints"].join("."),e=await this.client.query(`UPDATE ${t} SET rollback_date = ${this.direction==="forward"?"NULL":"now()"} WHERE id = '${this.$.json.id}' RETURNING rollback_date`);return this.$.json.rollback_date=e[0].rollback_date,!0}};var Se=class{static get OBJ_INFOSCHEMA_DB(){return"obj_information_schema"}constructor(t,e={}){Object.defineProperty(this,"$",{value:{driver:t,params:e}})}get driver(){return this.$.driver}get params(){return this.$.params}$trace(t,...e){if(t==="get:api:client")return this;if(t==="get:client:kind")return this.constructor.kind}database(t,e={}){return new this.constructor.Database(this,...arguments)}async databases(){return[]}async hasDatabase(t){return(await this.databases()).includes(t)}async createDatabase(t,e={}){if(typeof t=="string")t={name:t};else if(typeof t?.name!="string")throw new Error("createDatabase() called with invalid arguments.");let r=G.fromJSON(this,{kind:"SCHEMA",argument:t});return e.ifNotExists&&r.withFlag("IF_NOT_EXISTS"),await this.query(r,e)}async alterDatabase(t,e,r={}){if(typeof e!="function")throw new Error("alterDatabase() called with invalid arguments.");if(typeof t=="string")t={name:t};else if(typeof t?.name!="string")throw new Error("alterDatabase() called with invalid arguments.");let i=await this.describeDatabase(t.name,t.tables);if(!i)throw new Error(`Database "${t.name}" does not exist.`);let s=tt.fromJSON(this,i)?.keep(!0,!0);await e(s);let n=s.getAlt().with({resultSchema:s});if(n.length)return await this.query(n,r)}async dropDatabase(t,e={}){if(typeof t!="string")throw new Error(`dropDatabase() called with an invalid name: ${t}.`);let r=v.fromJSON(this,{kind:"SCHEMA",name:t});return e.ifExists&&r.withFlag("IF_EXISTS"),e.cascade&&r.withFlag("CASCADE"),await this.query(r,e)}async describeDatabase(t,e=["*"]){return this.describeDatabaseCallback(async(r,i)=>{let s=i&&await this.database(r).describeTable(i)||[];return{name:r,tables:s}},...arguments)}async describeDatabaseCallback(t,e,r=["*"]){let i;typeof e=="string"?i=[{name:e,tables:r}]:Array.isArray(e)?i=e.map(c=>typeof c=="object"?c:{name:c}):i=[].concat(e);let s=i.length===1&&i[0].name!=="*",n=i.length===1&&i[0].name==="*",o=await this.databases(),f=await Promise.all(o.map(c=>{let l=n?{name:c,tables:i[0].tables}:i.find(h=>h.name.toLowerCase()===c.toLowerCase());return l&&t(l.name,l.tables)}).filter(c=>c));return s?f[0]:f}async queryCallback(t,e,r={}){if(typeof e=="string")e=Ee.parse(this,e,null,{log:r.log});else if(!(e instanceof A))throw new Error("query() called with invalid arguments.");let i={},s=f=>f&&!new RegExp(f,"i").test(this.constructor.OBJ_INFOSCHEMA_DB)&&(!r.noCreateSavepoint||r.$resultSchema==="always");if(((f,c)=>c.some(l=>f instanceof l))(e,[G,V,v])){let f=e.KIND==="TABLE"&&e.$trace("get:name:table"),c=e.$trace("get:name:database")||e.KIND==="TABLE"&&await this.basenameGet(f,!0);if(["DATABASE","SCHEMA"].includes(e.KIND)&&s(c)){if(e instanceof v){let l=tt.fromJSON(this,await this.describeDatabase(c)).drop();e.with({resultSchema:l})}else if(e instanceof V&&!e.resultSchema){let l=e.ACTIONS.map(p=>p.CLAUSE==="MODIFY"?p.ARGUMENT.$trace("get:name:table"):p.CLAUSE==="DROP"?p.name():null).filter(p=>p),h=tt.fromJSON(this,await this.describeDatabase(c,l)).keep(!0,!0).alterWith(e);e.with({resultSchema:h})}else e instanceof G&&e.with({resultSchema:e.ARGUMENT});i.savepoint=e.resultSchema}else if(e.KIND==="TABLE"&&s(c)){let l=this.database(c);if(e instanceof v&&c){let h=k.fromJSON(l,await l.describeTable(f)).drop();e.with({resultSchema:h})}else if(e instanceof V&&!e.resultSchema&&c){let h=k.fromJSON(l,await l.describeTable(f)).keep(!0,!0).alterWith(e);e.with({resultSchema:h})}else e instanceof G&&c&&e.with({resultSchema:e.ARGUMENT});!r.noCreateSavepoint&&c&&(i.savepoint=tt.fromJSON(this,{name:l.name,tables:[e.resultSchema]}).keep(!0))}}let o=await t(e,r);return!r.noCreateSavepoint&&i.savepoint?(i.savepoint.keep(i.savepoint.keep(),"auto"),await this.createSavepoint(i.savepoint,r.description)):o}async basenameResolution(t=[]){return arguments.length?(this.$.resolutionPath=[].concat(t),this):new BasenameResolutor(this.$.basenameResolution)}async basenameGet(t,e=!1){let r=await this.basenameResolution();return await r.reduce(async(i,s)=>await i||await this.database(s).hasTable(t)?s:null,null)||(e?r.find(i=>!i.startsWith("$"))||r[0]:null)}async getSavepoints(t={}){let e=this.constructor.OBJ_INFOSCHEMA_DB;if(!await this.hasDatabase(e))return[];let r=[e,"database_savepoints"].join(".");return(await this.query(`
            SELECT id, database_tag, name, ${S.fromJSON(this,"$name")}, keep, version_tag, version_max, CONCAT(rank_for_cursor, '/', total) AS ${S.fromJSON(this,"$cursor")}, savepoint_description, tables, savepoint_date, rollback_date FROM (
                SELECT *,
                ROW_NUMBER() OVER (PARTITION BY database_tag ORDER BY rollback_date IS NOT NULL ${t.direction==="forward"?"DESC":"ASC"}, version_tag ${t.direction==="forward"?"ASC":"DESC"}) AS rank_for_target,
                ROW_NUMBER() OVER (PARTITION BY database_tag ORDER BY version_tag ASC) AS rank_for_cursor,
                MAX(version_tag) OVER (PARTITION BY database_tag) AS version_max,
                COUNT(version_tag) OVER (PARTITION BY database_tag) AS total
                FROM ${r}
            ) AS savepoint WHERE rollback_date IS ${t.direction==="forward"?"NOT NULL":"NULL"} AND rank_for_target = 1${t.name?t.direction==="forward"?` AND name = '${t.name}'`:` AND COALESCE(${S.fromJSON(this,"$name")}, name) = '${t.name}'`:""}
        `)).map(s=>new jt(this,s,t.direction))}async createSavepoint(t,e=null){let r=this.constructor.OBJ_INFOSCHEMA_DB;await this.hasDatabase(r)||await this.createDatabase({name:r,tables:[{name:"database_savepoints",columns:[{name:"id",...this.params.dialect==="mysql"?{type:"char(36)",default:{expr:"uuid()"}}:{type:"uuid",default:{expr:"gen_random_uuid()"}},primaryKey:!0},{name:"name",type:["varchar",255],notNull:!0},{name:"$name",type:["varchar",255]},{name:"tables",type:"json"},{name:"keep",type:this.params.dialect==="mysql"?["bit",1]:"boolean"},{name:"savepoint_description",type:["varchar",255]},{name:"database_tag",type:["varchar",12],notNull:!0},{name:"version_tag",type:"int",notNull:!0},{name:"savepoint_date",type:["timestamp",3],notNull:!0},{name:"rollback_date",type:["timestamp",3]}]}]},{noCreateSavepoint:!0});let{name:i,$name:s,...n}=t.toJSON(),o={name:i,$name:s,database_tag:null,...n,version_tag:null,savepoint_description:e,savepoint_date:new Date},f=t.NAME,c=await this.database(f).savepoint({direction:"forward"})||await this.database(f).savepoint();if(c){let h=[r,"database_savepoints"].join(".");o.database_tag=c.databaseTag,o.version_tag=c.versionMax+1,c.direction==="forward"?await this.query(`DELETE FROM ${h} WHERE database_tag = '${c.databaseTag}' AND rollback_date IS NOT NULL`):o.version_tag=c.versionTag+1}else o.database_tag=`db:${(0|Math.random()*9e6).toString(36)}`,o.version_tag=1;let l=await this.database(r).table("database_savepoints").insert(o,{returning:"*"});return new jt(this,{...l,version_max:o.version_tag,$cursor:null})}};var Ne=class{constructor(t,e,r={}){Object.defineProperty(this,"$",{value:{client:t,name:e,params:r}})}get client(){return this.$.client}get name(){return this.$.name}get params(){return Object.assign({},this.client.params,this.$.params)}$trace(t,...e){return t==="get:api:database"?this:t==="get:name:database"?this.name:this.client.$trace(t,...e)}table(t,e={}){return new this.constructor.Table(this,...arguments)}async tables(){return[]}async hasTable(t){return(await this.tables()).includes(t)}async createTable(t,e={}){if(typeof t?.name!="string")throw new Error("createTable() called with invalid arguments.");let r=G.fromJSON(this,{kind:"TABLE",argument:t});return e.ifNotExists&&r.withFlag("IF_NOT_EXISTS"),this.client.query(r,e)}async alterTable(t,e,r={}){if(typeof e!="function"||typeof t!="string")throw new Error("alterTable() called with invalid arguments.");let i=await this.describeTable(t);if(!i)throw new Error(`Table "${t}" does not exist.`);let s=k.fromJSON(this,i)?.keep(!0,!0);await e(s);let n=s.getAlt().with({resultSchema:s});if(n.length)return r.ifExists&&n.withFlag("IF_EXISTS"),this.client.query(n,r)}async dropTable(t,e={}){if(typeof t!="string")throw new Error("dropTable() called with invalid arguments.");let r=v.fromJSON(this,{kind:"TABLE",name:t});return e.ifExists&&r.withFlag("IF_EXISTS"),e.cascade&&r.withFlag("CASCADE"),this.client.query(r,e)}async savepoint(t={}){return(await this.client.getSavepoints({...t,name:this.name}))[0]}async describeTableCallback(t,e){let r=[].concat(e),i=r.length===1&&r[0]!=="*",s=r.length===1&&r[0]==="*",n=await t(r,s),o=await this.tables(),f=(s?o:r).reduce((c,l)=>{let h=l.toLowerCase(),p=n.find(E=>E.name===h);return!p&&(s||o.includes(h))&&(p={name:h,columns:[],constraints:[],indexes:[]}),c.concat(p||[])},[]);return i?f[0]:f}};var Ae=class{constructor(t,e,r={}){this.$={database:t,name:e,params:r}}get database(){return this.$.database}get name(){return this.$.name}get params(){return Object.assign({},this.database.params,this.$.params)}$trace(t,...e){return t==="get:api:table"?this:t==="get:table:name"?this.name:this.database.$trace(t,...e)}async count(...t){let e=[].concat(Array.isArray(t[0])||typeof t[0]=="string"?t.shift():"*");if(e.length!==1)throw new Error("Count expects exactly one field.");let r=await this.select([i=>i.fn("COUNT",e[0]).as("c")],...t);return Array.isArray(r)?r[0].c:r.c}async select(...t){let e=new H(this.database.client);e.from([this.database.name,this.name]);let r=Array.isArray(t[0])?t.shift():["*"];e.select(...r);let i=t.shift()||{};await this.$applyClauses(e,i);let s=await this.database.client.query(e);return["string","number"].includes(typeof i.where)?s[0]:s}async insert(...t){let e=new j(this.database.client);e.into([this.database.name,this.name]);let[r=[],i=[],s]=await this.$resolvePayload(...t);r.length&&e.columns(...r);for(let o of i)e.values(...o);g(s)&&s.returning?e.returning(s.returning):P(s)&&s(e);let n=await this.database.client.query(e);return g(t[0])&&s?.returning?n[0]:n}async upsert(...t){let e=new j(this.database.client);e.into([this.database.name,this.name]);let[r=[],i=[],s]=await this.$resolvePayload(...t);r.length&&e.columns(...r);for(let o of i)e.values(...o);if(g(s)&&s.returning?e.returning(s.returning):P(s)&&s(e),e.onConflict({entries:r.map((o,f)=>[o,i[0][f]])}),this.params.dialect==="postgres"){let o=await this.database.describeTable(this.name),f=o.columns?.filter(h=>h.uniqueKey).map(h=>[h.name]).concat(o.constraints?.filter(h=>h.type==="UNIQUE").map(h=>h.targetColumns));if(!f.length)throw new Error("Table has no unique keys defined. You may want to perform a direct INSERT operation.");let c=e.columns()?.toJSON().list||[],l=f.find(h=>kt(h,c).length)||f[0];e.onConflict(h=>h.target(...l))}let n=await this.database.client.query(e);return g(t[0])&&s?.returning?n[0]:n}async update(t,e){if(!e)throw new Error('The "clauses" parameter cannot be ommitted.');let r=new Ot(this.database.client);r.table([this.database.name,this.name]);for(let[s,n]of Object.entries(t))r.set(s,Ye(n,this.params.autoBindings));await this.$applyClauses(r,e);let i=await this.database.client.query(r);return["string","number"].includes(typeof e.where)&&e.returning?i[0]:i}async delete(t){if(!t)throw new Error('The "clauses" parameter cannot be ommitted.');let e=new ht(this.database.client);e.from([this.database.name,this.name]),await this.$applyClauses(e,t);let r=await this.database.client.query(e);return["string","number"].includes(typeof t.where)&&t.returning?r[0]:r}async $applyClauses(t,e){if(e!==!0)if(g(e)){let r=i=>t.where(...Object.entries(i).map(([s,n])=>o=>o.equals(s,Ye(n,this.params.autoBindings))));if(["string","number"].includes(typeof e.where)){let i=await this.database.describeTable(this.name),s=i.columns?.find(n=>n.primaryKey)?.name||i.constraints?.find(n=>n.type==="PRIMARY_KEY")?.targetColumns[0];if(!s)throw new Error("Cannot resolve primary key name for implied record.");r({[s]:e.where})}else g(e.where)?r(e.where):e.where&&t.where(e.where);e.limit&&t.limit(e.limit),e.returning&&t.returning(e.returning)}else P(e)?e(t):/^\d+$/.test(e)&&t.limit(e)}async $resolvePayload(...t){let e=[],r=[],i;if(Array.isArray(t[0])&&t[0].every(s=>typeof s=="string")&&Array.isArray(t[1])){if(!t[1].every(s=>Array.isArray(s)))throw new TypeError("Invalid payload format.");[e,r,i]=t.splice(0,3)}else{let s=[].concat(t.shift());if(!g(s[0]))throw new TypeError("Invalid payload format.");e=Object.keys(s[0]),r=s.map(n=>Object.values(n)),i=t.shift()}return r=r.map(s=>s.map(n=>Ye(n,this.params.autoBindings))),[e,r,i]}},Ye=(u,t)=>u instanceof Date?e=>e.value(u.toISOString().split(".")[0]):t!==!1?e=>e.$bind(0,u):[!0,!1,null].includes(u)?e=>e.literal(u):Array.isArray(u)?e=>e.array(u):g(u)?e=>e.object(u):e=>e.value(u);var Te=class{_pos=0;_eof=!1;_onfinish=[];constructor(t){this._cache=t}get eof(){return!this._cache.length||this._pos===this._cache.length-1}onfinish(t){this._onfinish.push(t)}next(){if(this.eof){this._onfinish.forEach(t=>t()),this._pos=0;return}this._pos++}async fetch(){if(!this.eof)return this._cache[this._pos]}};var de=class extends Te{constructor(t){super([]),this._store=t,this._storeFetch=new Promise(async e=>{this.cache=await this._store.getAll(),e()})}async fetch(){return await this._storeFetch,super.fetch()}};var _e=class extends Ae{getCursor(){return new de(this)}};var Oe=class extends Ne{static Table=_e;async tables(){let t=`SELECT table_name FROM information_schema.tables WHERE table_schema = '${this.name}'`,e=await this.client.driver.query(t);return(e.rows||e).map(r=>r.table_name)}async describeTable(t){return this.describeTableCallback(async(e,r)=>{let[i,s]=this.getDescribeTableSql(e),n=await this.client.driver.query(i),o=await this.client.driver.query(s);return this.formatDescribeTableResult(e,n.rows||n,o.rows||o,[])},...arguments)}getDescribeTableSql(t){let e=`
        SELECT
            COLUMNS.column_name,
            COLUMNS.table_name,
            COLUMNS.ordinal_position,
            COLUMNS.column_default,
            COLUMNS.is_nullable,
            COLUMNS.data_type,
            COLUMNS.character_maximum_length,
            ${this.client.params.dialect==="mysql"?`
            COLUMNS.extra,
            `:`
            COLUMNS.is_identity,
            COLUMNS.identity_generation,
            COLUMNS.identity_start,
            COLUMNS.identity_increment,
            COLUMNS.identity_maximum,
            COLUMNS.identity_minimum,
            COLUMNS.identity_cycle,
            `}
            COLUMNS.is_generated,
            COLUMNS.generation_expression

        FROM INFORMATION_SCHEMA.COLUMNS AS COLUMNS

        WHERE COLUMNS.TABLE_SCHEMA='${this.name}'
            ${t.length&&t[0]!=="*"?`AND COLUMNS.TABLE_NAME IN ('${t.join("','")}')`:""}
        ORDER BY COLUMNS.ordinal_position
        `,r=n=>this.client.params.dialect==="mysql"?n:`ANY_VALUE(${n})`,i=(n,o)=>this.client.params.dialect==="mysql"?`GROUP_CONCAT(${n}${o?` ORDER BY ${o}`:""} SEPARATOR ',')`:`STRING_AGG(${n}, ','${o?` ORDER BY ${o}`:""})`,s=`
        SELECT
            ${r("TABLE_CONSTRAINTS.table_name")} AS table_name,
            ${i("TABLE_CONSTRAINTS_DETAILS.column_name","TABLE_CONSTRAINTS_DETAILS.ordinal_position")} AS column_name,
            TABLE_CONSTRAINTS.constraint_name AS constraint_name,
            ${r("TABLE_CONSTRAINTS.constraint_type")} AS constraint_type,
            ${r("CHECK_CONSTRAINTS_DETAILS.check_clause")} AS check_clause,
                
            ${this.client.params.dialect==="mysql"?`
            ${r("CHECK_CONSTRAINTS_DETAILS.level")} AS check_constraint_level,
            ${i("TABLE_CONSTRAINTS_DETAILS.referenced_column_name")} AS referenced_column_name,
            ${r("TABLE_CONSTRAINTS_DETAILS.referenced_table_name")} AS referenced_table_name,
            ${r("TABLE_CONSTRAINTS_DETAILS.referenced_table_schema")} AS referenced_table_schema,
            `:`
            ${i("RELATION_DETAILS.column_name")} AS referenced_column_name,
            ${r("RELATION_DETAILS.table_name")} AS referenced_table_name,
            ${r("RELATION_DETAILS.table_schema")} AS referenced_table_schema,
            `}
            --${i("RELATION.unique_constraint_name")} AS referenced_constraint_name,
            ${r("RELATION.match_option")} AS match_rule,
            ${r("RELATION.update_rule")} AS update_rule,
            ${r("RELATION.delete_rule")} AS delete_rule

        FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS TABLE_CONSTRAINTS

        LEFT JOIN INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS TABLE_CONSTRAINTS_DETAILS
            ON TABLE_CONSTRAINTS_DETAILS.CONSTRAINT_NAME = TABLE_CONSTRAINTS.CONSTRAINT_NAME
            AND TABLE_CONSTRAINTS_DETAILS.TABLE_NAME = TABLE_CONSTRAINTS.TABLE_NAME
            AND TABLE_CONSTRAINTS_DETAILS.CONSTRAINT_SCHEMA = TABLE_CONSTRAINTS.CONSTRAINT_SCHEMA
            AND TABLE_CONSTRAINTS_DETAILS.CONSTRAINT_CATALOG = TABLE_CONSTRAINTS.CONSTRAINT_CATALOG
        LEFT JOIN INFORMATION_SCHEMA.CHECK_CONSTRAINTS AS CHECK_CONSTRAINTS_DETAILS
            ON CHECK_CONSTRAINTS_DETAILS.CONSTRAINT_NAME = TABLE_CONSTRAINTS.CONSTRAINT_NAME
            AND CHECK_CONSTRAINTS_DETAILS.CONSTRAINT_SCHEMA = TABLE_CONSTRAINTS.CONSTRAINT_SCHEMA
            AND CHECK_CONSTRAINTS_DETAILS.CONSTRAINT_CATALOG = TABLE_CONSTRAINTS.CONSTRAINT_CATALOG

        LEFT JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS RELATION
            ON RELATION.CONSTRAINT_NAME = TABLE_CONSTRAINTS.CONSTRAINT_NAME
            AND RELATION.CONSTRAINT_SCHEMA = TABLE_CONSTRAINTS.CONSTRAINT_SCHEMA
            AND RELATION.CONSTRAINT_CATALOG = TABLE_CONSTRAINTS.CONSTRAINT_CATALOG
        ${this.client.params.dialect==="mysql"?"":`
        LEFT JOIN INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS RELATION_DETAILS
            ON RELATION_DETAILS.CONSTRAINT_NAME = RELATION.UNIQUE_CONSTRAINT_NAME
            AND RELATION_DETAILS.CONSTRAINT_SCHEMA = RELATION.UNIQUE_CONSTRAINT_SCHEMA
            AND RELATION_DETAILS.CONSTRAINT_CATALOG = RELATION.UNIQUE_CONSTRAINT_CATALOG
            `}

        WHERE TABLE_CONSTRAINTS.CONSTRAINT_SCHEMA = '${this.name}'
            ${t.length&&t[0]!=="*"?`AND TABLE_CONSTRAINTS.TABLE_NAME IN ('${t.join("','")}')`:""}
        GROUP BY (TABLE_CONSTRAINTS.constraint_name)
        `;return[e,s]}formatDescribeTableResult(t,e,r,i){let s=o=>o==="character varying"?"varchar":o==="integer"?"int":o,n=(o,f=!1)=>({...f?{}:{name:o.constraint_name},targetTable:[o.referenced_table_schema,o.referenced_table_name],targetColumns:o.referenced_column_name.split(",").map(c=>c.trim()),...o.match_rule!=="NONE"?{matchRule:o.match_rule}:{},updateRule:o.update_rule,deleteRule:o.delete_rule});return(t.length&&t[0]!=="*"?t:[...new Set(e.map(o=>o.table_name))]).map(o=>{let f=e.filter(O=>O.table_name===o),c=r.filter(O=>O.table_name===o),l=i.filter(O=>O.table_name===o),h=f.map(O=>O.column_name),p=O=>{let I=(O.check_clause.replace(/(["'])(?:(?=(\\?))\2.)*?\1/g,"").match(/\w+/g)||[]).map(U=>U.toLowerCase());return O.columns=kt(h,I),O},[E,N,d,T]=c.reduce(([O,I,U,gt],C)=>C.constraint_type==="PRIMARY KEY"?[O.concat(C),I,U,gt]:C.constraint_type==="UNIQUE"?[O,I.concat(C),U,gt]:C.constraint_type==="FOREIGN KEY"?[O,I,U.concat(C),gt]:C.constraint_type==="CHECK"&&!(this.client.params.dialect==="postgres"&&/^[\d_]+not_null/.test(C.constraint_name))?[O,I,U,gt.concat(p(C))]:[O,I,U,gt],[[],[],[],[]]),_={name:o,columns:f.reduce((O,I)=>{let U={},gt=I.extra?.split(",").map(C=>C.trim())||[];return gt.includes("INVISIBLE"),O.concat({name:I.column_name,type:I.character_maximum_length?[s(I.data_type),I.character_maximum_length]:s(I.data_type),...E.length===1&&E[0].column_name===I.column_name&&(U.pKeys=E.pop())?{primaryKey:{name:U.pKeys.constraint_name}}:{},...(U.uKeys=N.filter(C=>C.column_name===I.column_name)).length===1&&(N=N.filter(C=>C!==U.uKeys[0]))?{uniqueKey:{name:U.uKeys[0].constraint_name}}:{},...(U.fKeys=d.filter(C=>C.column_name===I.column_name)).length===1&&(d=d.filter(C=>C!==U.fKeys[0]))?{references:n(U.fKeys[0])}:{},...(U.cKeys=T.filter(C=>C.check_constraint_level!=="Table"&&C.columns.length===1&&C.columns[0]===I.column_name)).length===1&&(T=T.filter(C=>C!==U.cKeys[0]))?{check:{name:U.cKeys[0].constraint_name,expr:U.cKeys[0].check_clause}}:{},...I.is_identity==="YES"?{identity:{always:I.identity_generation==="ALWAYS"}}:{},...I.is_generated!=="NEVER"?{expression:{always:I.is_generated==="ALWAYS",expr:I.generation_expression}}:{},...gt.includes("auto_increment")?{autoIncrement:!0}:{},...I.is_nullable==="NO"?{notNull:!0}:{},...I.column_default&&I.column_default!=="NULL"?{default:{expr:I.column_default}}:{}})},[]),constraints:[],indexes:[]};return _.constraints.push(...[...E,...N,...d].map(O=>({name:O.constraint_name,type:O.constraint_type==="UNIQUE"?"UNIQUE_KEY":O.constraint_type.replace(" ","_"),columns:O.column_name.split(",").map(I=>I.trim()),...O.constraint_type==="FOREIGN KEY"?{references:n(O,!0)}:{}}))),_.constraints.push(...T.map(O=>({name:O.constraint_name,type:O.constraint_type,columns:O.columns,expr:O.check_clause}))),_})}};var ve=class extends Se{constructor(t,e={}){if(typeof t!="object")throw new Error("The options.driver parameter is required and must be an object.");if(typeof t.query!="function")throw new Error("The provided driver must expose a .query() function.");super(t,e)}static kind="sql";static Database=Oe;async databases(){let e=await this.driver.query("SELECT schema_name FROM information_schema.schemata");return(e.rows||e).map(r=>r.schema_name)}async query(t,e={}){return await this.queryCallback(async(r,i)=>{r.expandable&&await r.expand(!0);let s=[j,Ot,ht].some(c=>r instanceof c),n;if(s&&this.params.dialect==="mysql"&&r.RETURNING_LIST.length){if(this.params.returningClause===!1)throw new Error('Support for the "RETURNING" clause has been disabled.');[r,n]=await this.$myReturningMagic(r)}let o=(r.BINDINGS||[]).concat(i.values||[]).map(c=>Array.isArray(c)||typeof c=="object"&&c?JSON.stringify(c):c),f=await this.driver.query(r.toString(),o);return n&&(f=await n()),r instanceof H||s&&r.RETURNING_LIST.length||n?f.rows||f:"rowCount"in f?f.rowCount:f.affectedRows},...arguments)}async $myReturningMagic(t){t=t.clone();let e=t.RETURNING_LIST.splice(0),r=t.$trace("get:name:table"),i=t.$trace("get:name:database"),s=S.fromJSON(this,[i,r]);if(t instanceof ht){let c=await this.driver.query(`SELECT ${e.join(", ")} FROM ${s}${t.WHERE_CLAUSE?` WHERE ${t.WHERE_CLAUSE}`:""}`);return[t,()=>c]}let n="obj_column_for_returning_clause_support",o=S.fromJSON(this,n);await this.driver.query(`ALTER TABLE ${s} ADD COLUMN ${o} char(36) INVISIBLE`);let f=(0|Math.random()*9e6).toString(36);if(!t.SET_CLAUSE&&t instanceof j){if(!t.COLUMNS_CLAUSE&&(t.SELECT_CLAUSE||t.VALUES_LIST.length))throw new Error("Support for the RETURNING clause currently requires explicit column list in INSERT statements.");if(t.columns(n),t.SELECT_CLAUSE)t.SELECT_CLAUSE.select(c=>c.value(f));else if(t.VALUES_LIST.length)for(let c of t.VALUES_LIST)c.list(l=>l.value(f));else t.values(f)}else t.set(n,c=>c.value(f));return t instanceof j&&t.ON_CONFLICT_CLAUSE&&t.ON_CONFLICT_CLAUSE.set(n,c=>c.value(f)),[t,async()=>{let c=await this.driver.query(`SELECT ${e.join(", ")} FROM ${s} WHERE ${o} = '${f}'`);return await this.driver.query(`ALTER TABLE ${s} DROP COLUMN ${o}`),c}]}async basenameResolution(t=[]){if(arguments.length){t=[].concat(t).map(o=>S.fromJSON(this,o));let n=this.params.dialect==="mysql"?`USE ${t[0]}`:`SET SEARCH_PATH TO ${t.join(",")}`;return await this.driver.query(n)}let e,r;this.params.dialect==="mysql"?(e="SELECT database() AS default_db",r="default_db"):(e="SHOW SEARCH_PATH",r="search_path",e="SELECT current_setting('SEARCH_PATH')",r="current_setting");let i=await this.driver.query(e),s=((i.rows||i)[0]||{})[r];return m.split(s,[","]).map(n=>S.parseIdent(this,n.trim())[0])}};})();
//# sourceMappingURL=sql.js.map
