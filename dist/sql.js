(()=>{function Ut(u){return u instanceof String||typeof u=="string"&&u!==null}function pt(u){return arguments.length&&(u===void 0||typeof u>"u")}function Ht(u){return typeof u=="function"}function P(u){return Ht(u)||u&&{}.toString.call(u)==="[object function]"}function I(u){return Array.isArray(u)}function be(u){return!Ut(u)&&!pt(u.length)}function Ue(u){return u===null||u===""}function Q(u){return Array.isArray(u)||typeof u=="object"&&u||Ht(u)}function xe(u){return Ue(u)||pt(u)||u===!1||u===0||Q(u)&&!Object.keys(u).length}function R(u){return!Array.isArray(u)&&typeof u=="object"&&u}function re(u,t=!0){return I(u)?u:!t&&R(u)?[u]:u!==!1&&u!==0&&xe(u)?[]:be(u)?Array.prototype.slice.call(u):R(u)?Object.values(u):[u]}function xt(u){return u instanceof Number||typeof u=="number"}function Rt(u){return xt(u)||u!==!0&&u!==!1&&u!==null&&u!==""&&!isNaN(u*1)}var He=function(u,t=1,e=!0){return!Rt(t)||t<=0||(!I(u)&&R(u)&&e&&(u=Object.values(u)),!I(u))?u:u.reduce((r,s)=>I(s)||R(s)&&e?r.concat(He(I(s)?s:Object.values(s),t-1,e)):r.concat(s),[])},Me=He;function Mt(u,t=1){var e=0;u.forEach(s=>{e++});var r=u.slice(u.length-e,t);return arguments.length>1?r:r[0]}function ot(u,t=1){return arguments.length>1?Mt(u.slice().reverse(),t).reverse():Mt(u.slice().reverse())}function Ie(u,...t){return t.forEach(e=>{u.indexOf(e)<0&&u.push(e)}),u}function ke(r,t){t=t||Object.prototype,t=t&&!I(t)?[t]:t;for(var e=[],r=r;r&&(!t||t.indexOf(r)<0)&&r.name!=="default";)e.push(r),r=r?Object.getPrototypeOf(r):null;return e}function Xe(u,t){var e=[];return ke(u,t).forEach(r=>{Ie(e,...Object.getOwnPropertyNames(r))}),e}function Dt(u,t,e=!1,r=!1,s=!1){var n=0,i=u.shift();if((Rt(i)||i===!0||i===!1)&&(n=i,i=u.shift()),!u.length)throw new Error("_merge() requires two or more array/objects.");return u.forEach((o,c)=>{!Q(o)&&!P(o)||(e?Xe(o):Object.keys(o)).forEach(f=>{if(t(f,i,o,c)){var l=i[f],h=o[f];if((I(l)&&I(h)||R(l)&&R(h))&&(n===!0||n>0))i[f]=I(l)&&I(h)?[]:{},Dt([Rt(n)?n-1:n,i[f],l,h],t,e,r,s);else if(I(i)&&I(o))r?i[f]=h:i.push(h);else try{s?Object.defineProperty(i,f,Object.getOwnPropertyDescriptor(o,f)):i[f]=o[f]}catch{}}})}),i}function Ce(...u){return Dt(u,(t,e,r)=>!0,!1,!1,!1)}function ye(u){return R(u)&&Object.getPrototypeOf(u)===Object.prototype}function se(u){return u===!0||u===!1}function $e(u,t){var e=void 0;return Q(u)&&Object.keys(u).forEach((r,s)=>{e!==!1&&(e=t(Rt(r)?parseFloat(r):r,u[r],s))}),e}function Ve(u,t,e=!0,r=!0,s=!1,n=!1){if(I(u)&&I(t)){var i=[],o=!0;return u.forEach(c=>{if(o){var f=!1;$e(t,(l,h)=>{(!f||r&&Q(c))&&(f=e(c,h),(I(f)&&!f.length||R(f)&&!Object.keys(f).length)&&(f=!1),Q(f)&&r&&(c=f))}),Q(f)?i.push(r?f:c):se(f)?s&&!f||!s&&f?i.push(c):n&&(o=!1):i.push(f)}}),i}if(R(u)&&R(t)){var i={},o=!0;return Object.keys(u).forEach(l=>{if(o){var h=e(u[l],t[l]);(I(h)&&!h.length||R(h)&&!Object.keys(h).length)&&(h=!1),Q(h)?i[l]=r?h:u[l]:se(h)?s&&!h||!s&&h?i[l]=u[l]:n&&(o=!1):i[l]=h}}),i}}var De=function(u,t,e=!0,r=1){if(I(u)&&I(t)&&u.length!==t.length)return!e;if(R(u)&&R(t)){var s=Object.keys(u),n=Object.keys(t);if(!s.length&&!n.length)return ye(u)&&ye(t)?e:u===t===e;if(!De(s,n))return!e}if(r>0&&(I(u)&&I(t)||R(u)&&R(t))){var i=Ve(u,t,(o,c)=>De(o,c,e,r-1),!1,!1,!0);return I(i)?i.length===u.length&&i.length===t.length:R(i)&&R(u)?Object.keys(i).length===Object.keys(u).length&&Object.keys(i).length===Object.keys(t).length:i}return P(e)?e(u,t):xt(u)&&xt(t)&&isNaN(u)&&isNaN(t)?e:u===t===e},qe=De;function Pe(u,t=[]){return Dt([{},u],(e,r,s)=>{if(!P(s[e]))return P(t)?t(e):I(t)&&t.length?t.indexOf(e)>-1:!0},!1,!1,!1)}function kt(u,t,e=null){return I(t)?u.filter(r=>e?t.filter(s=>e(r,s)).length:t.indexOf(r)!==-1):[]}var ct=class u{static lex(t,e,r={}){if(!Ut(t=t+""))throw new Error("Argument1 must be a string!");var s=f=>({delims:f.delims.slice(),options:Pe(f.options),nesting:f.nesting.slice(),maxDepth:f.maxDepth,comments:f.comments.slice(),tokens:f.tokens.slice(),matches:f.matches.slice(),matchesi:Pe(f.matchesi)});if(u.$cache[t]&&r.cache!==!1)for(var n=0;n<u.$cache[t].length;n++){var i=u.$cache[t][n];if(qe(i.delims,e))return s(i)}var o=new u(t,r),c=o.lex(e);return r.cache!==!1&&(u.$cache[t]=u.$cache[t]||[],u.$cache[t].push(c)),s(c)}static split(t,e,r){return u.lex(t,e,r).tokens}static match(t,e,r){return u.lex(t,e,r).matches}constructor(t,e){if(!Ut(t))throw new Error("Lexer requires the first argument to be a string.");this.$str=t,this.$options=e||{},this.$options.blocks||(this.$options.blocks=u.$blocks),this.$options.quotes||(this.$options.quotes=u.$quotes),this.$options.comments||(this.$options.comments=u.$comments)}lex(t,e){for(var r={delims:re(t),options:Ce(!0,{},this.$options,e||{}),nesting:[],maxDepth:0,comments:[],tokens:[],matches:[],matchesi:{}},s=0;typeof s=="number";)s=this._evalCharsAt(r,s);if(r.nesting.length)throw new Error("Error parsing the string: "+this.$str+". Unterminated blocks: "+Me(r.nesting).join(", "));return r}_evalCharsAt(t,e){if(!(e>=this.$str.length)){var r=1,s={},n={},i={};if(t.openComment||(n=this._testQuotes(t,e)),t.openQuote||(s=this._testComments(t,e)),t.openComment||s.ending)if(!t.nesting.length&&!i.ending){var o=s.starting||s.ending||this.$str[e];r=o.length,this._push(t,o,"comments",s.starting)}else this._push(t,this.$str[e]);else if(t.openQuote||n.ending)this._push(t,this.$str[e]);else{if(t.options.limit&&t.matches.length===t.options.limit)return this._push(t,this.$str[e]),e+1;i=this._testNesting(t,e);var i=this._testNesting(t,e),c=this._testChars(t.options.stopChars||[],t,e);if(!t.nesting.length&&c!==!1){t.options.stopChar=c,t.options.stopCharForward=this.$str.substr(e);return}if(!t.delims.length)t.nesting.length===2&&i.starting?(t.matches.push(null),this._push(t,i.starting),r=i.starting.length):!t.nesting.length&&i.ending?(this._push(t,i.ending),r=i.ending.length,t.matches.push(null)):this._push(t,this.$str[e]);else if(!t.nesting.length&&!i.ending){this._push(t,"");var f=this._testChars(t.delims,t,e);if(f!==!1&&(t.matches.push(f),t.matchesi[e]=f,r=f.length||1,!t.options.preserveDelims)){var l=e+(f.length||1);return l===this.$str.length&&this._push(t,""),l}this._push(t,f||this.$str[e])}else{var o=i.starting||i.ending||this.$str[e];r=o.length,this._push(t,o)}}return e+r}}_testQuotes(t,e){var r={};return(t.options.quotes||[]).forEach(s=>{this.$str.substr(e,1)===s&&(t.openQuote?s===t.openQuote&&(t.openQuote=!1,r.ending=s):(t.openQuote=s,r.starting=s))}),r}_testComments(t,e){var r={};return(t.options.comments||[]).forEach(s=>{if(t.openComment){if(ot(s)===ot(t.openComment)){var i=ot(s);this.$str.substr(e).startsWith(i)&&(t.openComment=!1,r.ending=i)}}else{var n=Mt(s);this.$str.substr(e).startsWith(n)&&(t.openComment=s,r.starting=n)}}),r}_testNesting(t,e){var r={};return(t.options.blocks||[]).forEach(s=>{let n=Mt(s),i;if(n instanceof RegExp?[i]=n.exec(this.$str.substr(e))||[]:this.$str.substr(e).startsWith(n)&&(i=n),i)t.nesting=t.nesting.concat([s]),r.starting=i;else if(t.nesting.length&&ot(s)===ot(ot(t.nesting))){var o=ot(s),c;o instanceof RegExp?[c]=o.exec(this.$str.substr(e))||[]:this.$str.substr(e).startsWith(o)&&(c=o),c&&(t.nesting=t.nesting.slice(0,-1),r.ending=c)}}),t.maxDepth=Math.max(t.maxDepth,t.nesting.length),r}_testChars(t,e,r){for(var s=0;s<t.length;s++){let o={useRegex:e.options.useRegex,ci:e.options.ci,...R(t[s])?t[s]:{test:t[s]}};if(P(o.test)){var n=o.test(this.$str.substr(0,r),this.$str.substr(r),e.tokens.slice());if(n!==!1)return n;continue}if(o.useRegex){let f=o.useRegex!==!0?o.useRegex:"";var i=this.$str.substr(r).match(new RegExp("^"+o.test,f));if(i&&(!o.backtest||this.$str.substr(0,r).match(new RegExp(o.backtest,f))))return i[0];continue}let c=(f,l)=>o.ci?f.toLowerCase()===l.toLowerCase():f===l;if(c(this.$str.substr(r,o.test.length),o.test)&&(!o.backtest||c(this.$str.substr(r-o.backtest.length,r),o.backtest)))return o.test}return!1}_push(t,e,r="tokens",s=!1){var n=t.matches.length;if(pt(t.tokens[n])&&(t.tokens[n]=""),r==="comments"){t.tokens[n].comments||(t.tokens[n]=new String(t.tokens[n]),t.tokens[n].comments=[]);var i=t.tokens[n].comments.length-(!t.tokens[n].comments.length||s?0:1);t.tokens[n].comments[i]=(t.tokens[n].comments[i]||"")+e}else{var o=t.tokens[n].comments;t.tokens[n]=t.tokens[n]+e}}split(t,e,r){return this.lex(e,r).tokens}match(t,e,r){return this.lex(e,r).matches}regParse(t,e){return this.lex(t,Ce({useRegex:!0},e||{}))}regSplit(t,e){return this.regParse(t,e).tokens}regMatch(t,e){return this.regParse(t,e).matches}};ct.$blocks=[["(",")"],["[","]"],["{","}"]];ct.$quotes=['"',"'","`"];ct.$comments=[["/*","*/"],["//",`
`]];ct.$cache=Object.create(null);var m=class extends ct{static $blocks=[...ct.$blocks,[new RegExp("^CASE ","i"),new RegExp("^ END","i")]]};var d=class u{CONTEXT;FLAGS=[];constructor(t){this.CONTEXT=t,this.CONTEXT?.$trace?.("event:connected",this)}$trace(t,...e){return t==="get:node:root"&&!(this.CONTEXT instanceof u)?this:this.CONTEXT?.$trace?.(t,...e)}get params(){return this.CONTEXT?.params||{}}get quoteChars(){return this.constructor.getQuoteChars(this)}static getQuoteChars(t,e=!1){return(e&&t?.params?.inputDialect||t?.params?.dialect)==="mysql"&&!t.params.ansiQuotes?["'",'"']:["'"]}get escChar(){return this.constructor.getEscChar(this)}autoEsc(t){let e=(Array.isArray(t)?t:[t]).map(r=>r&&!/^(\*|[\w]+)$/.test(r)?`${this.escChar}${r.replace(new RegExp(this.escChar,"g"),this.escChar.repeat(2))}${this.escChar}`:r);return Array.isArray(t)?e:e[0]}static autoUnesc(t,e,r=!1){let s=this.getEscChar(t,r);return(e||"").replace(new RegExp(s+s,"g"),s)}static getEscChar(t,e=!1){return(e&&t?.params?.inputDialect||t?.params?.dialect)==="mysql"&&!t.params.ansiQuotes?"`":'"'}static parseIdent(t,e,r=!1){let s=this.getEscChar(t,r),n=m.split(e,["."]),i=n.map(c=>new RegExp(`^(?:(\\*|[\\w]+)|(${s})((?:\\2\\2|[^\\2])+)\\2)$`).exec(c.trim())).filter(c=>c);if(i.length!==n.length)return;let o=c=>c?.[1]||this.autoUnesc(t,c?.[3]);return[o(i.pop()),o(i.pop())]}with(t){for(let e in t)this[e]=t[e];return this}withFlag(...t){return t=new Set(t.filter(e=>e)),this.FLAGS=this.FLAGS.reduce((e,r)=>{let s=r.split(":");for(let n of t){let i=n.split(":");i[0]===s[0]&&(r=[...new Set([...s,...i])].join(":"),t.delete(n))}return e.concat(r)},[]).concat(...t),this}getFlag(t){let e=t.toUpperCase().split(":");return this.FLAGS.find(r=>{let s=r.split(":");return e[0]===s[0]&&e.every(n=>s.includes(n))})}hasFlag(t){return!!this.getFlag(t)}build(t,e,r,s){let n=Array.isArray(r)?r:r?[r]:[];if(!n.length)throw new Error("At least one node type must be defined.");let i=c=>n.find(f=>c instanceof f)?c:n.reduce((f,l)=>f||l.fromJSON(this,c),null),o=(...c)=>{for(let f of c)Array.isArray(this[t])?this[t].push(f):this[t]=f};if(e.length===1&&typeof e[0]!="function"){let c=i(e[0]);if(c)return o(c)}if(s){if(n.length!==1)throw new Error("To support argument delegation, number of node types must be 1.");let c=this[t]&&!Array.isArray(this[t])?this[t]:new n[0](this);return o(c),c[s](...e)}for(let c of e){if(typeof c=="function"){if(this[t]&&!Array.isArray(this[t])){c(this[t]);continue}if(n.length===1){let p=new n[0](this);o(p),c(p);continue}let h=p=>(...E)=>{let S=n.reduce((N,T)=>N||(T.factoryMethods?typeof T.factoryMethods[p]=="function"&&T.factoryMethods[p](this,...E):typeof T.prototype[p]=="function"&&new T(this)),null);if(!S)throw new Error(`Unknow method: ${p}()`);if(o(S),S[p])return S[p](...E);for(let N of E)N(S)};c(new Proxy({},{get:(p,E)=>h(E)}));continue}let f=i(c);if(f){o(f);continue}let l;if(typeof c=="object"&&c)try{l=JSON.stringify(c)}catch{l=c.constructor.name}else l=c+"";throw new Error(`Arguments must be of type ${n.map(h=>h.name).join(", ")} or a JSON equivalent. Recieved: ${l}`)}}clone(){return this.constructor.fromJSON(this.CONTEXT,this.toJSON())}static parse(t,e,r=null){}toString(){return this.stringify()}static fromJSON(t,e){}toJSON(){return{flags:this.FLAGS.slice(0)}}};var A=class extends d{BASENAME;NAME;name(t){let e=Array.isArray(t)?[...t]:[t];if(this.NAME=e.pop(),this.BASENAME=e.pop(),e.length)throw new Error(`Idents can be maximum of two parts. Recieved: ${e.reverse().join(".")}.${this.BASENAME}.${this.NAME}`);return this}toJSON(){let t=this.BASENAME?[this.BASENAME,this.NAME]:this.NAME;return this.FLAGS.length?{name:t,flags:this.FLAGS}:t}static fromJSON(t,e){if(typeof e=="string"||Array.isArray(e)&&e.every(s=>typeof s=="string"))e={name:e};else if(typeof e?.name!="string"&&!Array.isArray(e?.name))return;let r=new this(t).withFlag(...e?.flags||[]);return r.name(e.name),r}stringify(){return this.autoEsc([this.BASENAME,this.NAME].filter(t=>t)).join(".")+""}static parse(t,e){if(/^(TRUE|FALSE|NULL)$/i.test(e))return;let[r,s]=this.parseIdent(t,e,!0)||[];if(!r)return;let n=new this(t);return n.name(s?[s,r]:r),n}};function ie(u,t,e=!1){if(t=="")return u;var r=e?u.lastIndexOf(t):u.indexOf(t);return r===-1?"":u.substr(r+t.length)}function Je(u,t){return ie(u,t,!0)}function Fe(u,t,e=!1){if(t=="")return u;var r=e?u.lastIndexOf(t):u.indexOf(t);return r===-1?u:u.substr(0,r)}function Xt(u,t){return Fe(u,t,!0)}function ne(u,t){return u===void 0?"":u.split(/(?=[A-Z])/).join(t||" ")}function Be(u,t){return typeof u!="string"?u:u.replace(/\w\S*/g,function(e){return e.charAt(0).toUpperCase()+(typeof t!==void 0&&t?e.substr(1).toLowerCase():e.substr(1))})}function Ye(u,t){return u=Be(u.replace(/-/g," ")).replace(/ /g,""),t?u:u[0].toLowerCase()+u.substr(1)}function $(u,t,e){return Xt(ie(u,t),e)}function U(u,t,e){return u.startsWith(t)&&u.endsWith(e)}var rt=class extends d{constructor(t){super(t),this._BINDINGS=[]}get BINDINGS(){return this._BINDINGS}$trace(t,...e){if(t==="get:node:statement")return this;if(t==="get:node:statement.bindings")return this._BINDINGS;if(t.startsWith("get:name:")){let r=this.$trace("get:node:table");if(r&&!(r.EXPR instanceof A)&&!this._ongoingNameTrace){this._ongoingNameTrace=!0;let s=r.EXPR.$trace(t,...e);return delete this._ongoingNameTrace,s}if(r&&t==="get:name:table")return r.EXPR.NAME;if(r&&t==="get:name:database"&&r.EXPR.BASENAME)return r.EXPR.BASENAME}return super.$trace?.(t,...e)}clone(){let t=super.clone();return this._BINDINGS.length&&(t._BINDINGS=this._BINDINGS.slice(0)),t}static mySubstitutePlaceholders(t,e){return(t?.params?.inputDialect||t?.params?.dialect)!=="mysql"||e.indexOf("?")===-1?e:m.split(e,["?"],{blocks:[]}).reduce((r,s,n)=>r?r+"?"+n+s:s,null)}get expandable(){return!1}async expand(t=!1){return t?this:this.clone()}};var Vt=class extends d{CONDITION=null;CONSEQUENCE=null;condition(t){return this.build("CONDITION",[t],C.Types),this}then_(t){return this.build("CONSEQUENCE",[t],C.Types)}toJSON(){return{condition:this.CONDITION?.toJSON(),consequence:this.CONSEQUENCE?.toJSON()}}static fromJSON(t,e){if(!(typeof e=="object"&&e&&"condition"in e))return;let r=new this(t);return r.condition(e.condition),r.then_(e.consequence),r}stringify(){return`${this.CONDITION} THEN ${this.CONSEQUENCE}`}static parse(t,e,r){let s=m.split(e,["\\s+THEN\\s+"],{useRegex:"i"});if(s.length!==2)return;let n=new this(t),[i,o]=s.map(c=>r(n,c.trim()));return n.condition(i).then_(o),n}};var Pt=class extends d{BASE_VALUE;WHEN_CLAUSES=[];ELSE_CLAUSE;compare(t){if(this.WHEN_CLAUSES.length||this.ELSE_CLAUSE)throw new Error('A "case" clause must come before any "when" or "else" clauses.');return this.build("BASE_VALUE",[t],C.Types)}when(t){if(this.ELSE_CLAUSE)throw new Error('A "when" clause cannot come after an "else" clause.');return this.build("WHEN_CLAUSES",[t],Vt,"condition"),this.WHEN_CLAUSES[this.WHEN_CLAUSES.length-1]}else(t){if(!this.WHEN_CLAUSES.length)throw new Error('An "else" clause cannot come before "when" clauses.');return this.build("ELSE_CLAUSE",[t],C.Types)}toJSON(){return{base_value:this.BASE_VALUE?.toJSON(),when_clauses:this.WHEN_CLAUSES.map(t=>t.toJSON()),else_clause:this.ELSE_CLAUSE?.toJSON(),flags:this.FLAGS}}static fromJSON(t,e){if(!Array.isArray(e?.when_clauses))return;let r=new this(t).withFlag(...e.flags||[]);e.base_value&&r.compare(e.base_value);for(let s of e.when_clauses)r.when(s);return e.else_clause&&r.else(e.else_clause),r}stringify(){let t=[];return this.BASE_VALUE&&t.push(this.BASE_VALUE),t.push(`WHEN ${this.WHEN_CLAUSES.join(" WHEN ")}`),this.ELSE_CLAUSE&&t.push("ELSE",this.ELSE_CLAUSE),`CASE ${t.join(" ")} END${this.params.dialect==="mysql"?" CASE":""}`}static parse(t,e,r){let[s,n]=e.match(/^CASE\s+([\s\S]*)\s+END(\s+CASE)?$/i)||[];if(!s)return;let{tokens:[i,...o],matches:c}=m.lex(n,["WHEN","ELSE"],{useRegex:"i"}),f=new this(t);i.trim()&&f.compare(r(f,i.trim()));for(let l of c){let h=o.shift();if(/ELSE/i.test(l))f.else(r(f,h.trim()));else if(/WHEN/i.test(l))f.when(r(f,h.trim(),[Vt]));else throw new Error(`Can't have multiple "${l}" clauses in a CASE construct.`)}return f}static factoryMethods={case:t=>new this(t)}};var J=class extends d{OPERATOR="";OPERANDS=[];constructor(t,e,...r){super(t),this.OPERATOR=e,this.OPERANDS=r}assert(t,...e){return this.OPERATOR&&this.OPERANDS.splice(0),this.OPERATOR=t,this.build("OPERANDS",e,C.Types),this}equals(...t){return this.assert("=",...t)}eq(...t){return this.equals(...t)}notEqual(...t){return this.assert("<>",...t)}notEq(...t){return this.notEqual(...t)}lesserThan(...t){return this.assert("<",...t)}lt(...t){return this.lesserThan(...t)}lessThanOrEqual(...t){return this.assert("<=",...t)}ltOrEq(...t){return this.lessThanOrEqual(...t)}greaterThan(...t){return this.assert(">",...t)}gt(...t){return this.greaterThan(...t)}greaterThanOrEqual(...t){return this.assert(">=",...t)}gtOrEq(...t){return this.greaterThanOrEqual(...t)}in(...t){return this.assert("IN",...t)}any(...t){return this.assert("ANY",...t)}like(...t){return this.assert("LIKE",...t)}isNull(...t){return this.assert("IS NULL",...t)}isNotNull(...t){return this.assert("IS NOT NULL",...t)}isTrue(...t){return this.assert("IS TRUE",...t)}isNotTrue(...t){return this.assert("IS NOT TRUE",...t)}isFalse(...t){return this.assert("IS FALSE",...t)}isNotFalse(...t){return this.assert("IS NOT FALSE",...t)}isUnknow(...t){return this.assert("IS UNKNOWN",...t)}isNotUnknow(...t){return this.assert("IS NOT UNKNOWN",...t)}isDistinctFrom(...t){return this.assert("IS DISTINCT FROM",...t)}isNotDistinctFrom(...t){return this.assert("IS NOT DISTINCT FROM",...t)}isBetween(...t){return this.assert("IS BETWEEN",...t)}isNotBetween(...t){return this.assert("IS NOT BETWEEN",...t)}isBetweenSymmetric(...t){return this.assert("IS BETWEEN SYMMETRIC",...t)}isNotBetweenSymmetric(...t){return this.assert("IS NOT BETWEEN SYMMETRIC",...t)}and(...t){return new w(this,"AND").and(this,...t)}or(...t){return new w(this,"OR").or(this,...t)}toJSON(){return{operator:this.OPERATOR,operands:this.OPERANDS.map(t=>t.toJSON()),flags:this.FLAGS}}static fromJSON(t,e){if(!Array.isArray(e?.operands)||typeof e?.operator!="string"||!this.regexes.some(s=>new RegExp(s.regex||s.test||s).test(` ${e.operator} `)))return;let r=new this(t).withFlag(...e.flags||[]);return r.assert(e.operator,...e.operands),r}stringify(){let t=this.OPERANDS.slice(0),e=[t.shift(),this.OPERATOR.toUpperCase()],r=t;return this.OPERATOR==="IN"?e.push(`(${r.join(", ")})`):/BETWEEN/i.test(this.OPERATOR)?e.push(`(${r.join(" AND ")})`):e.push(`${r.join(" ")}`),e.filter(s=>s).join(" ")}static parse(t,e,r){let{tokens:[s,n=""],matches:[i]}=m.lex(e,this.regexes,{useRegex:"i"});if(!i)return;let o=i.trim().toUpperCase(),c=[s];return o==="IN"?c.push(...m.split($(n.trim(),"(",")"),[","])):/BETWEEN/.test(o)?c.push(...m.split(n,[" AND "])):n&&c.push(n),new this(t,o,...c.map(f=>r(t,f.trim())))}static regexes=[{test:"<(?!~)"},{backtest:"^(?!.*~$)",test:">",regex:"(?<!~)>"},"((\\s+(?:NOT\\s+)?IS\\s+(?:NOT\\s+)?(TRUE|FALSE|NULL|UNKNOWN|DISTINCT\\s+FROM\\s+))|\\s+(ISNULL|NOTNULL|IN|ANY|LIKE|(?:NOT\\s+)?BETWEEN(?:\\s+SYMMETRIC)?)\\s+|(?:\\s+)?(=|<=|>=|!=|<>)(?:\\s+)?)"]};var Jt=class extends d{OFFSET;constructor(t,e){super(t),this.OFFSET=parseInt(e)}$var(t){this.OFFSET=t}$bind(t,e){this.OFFSET=t;let r=this.$trace("get:node:statement.bindings");r?.push(e),this.OFFSET===0&&(this.OFFSET=r?.length)}toJSON(){return{offset:this.OFFSET}}static fromJSON(t,e){if(typeof e?.offset=="number")return new this(t,e.offset)}stringify(){return this.params.dialect==="mysql"?"?":"$"+this.OFFSET}static parse(t,e){let r=(t?.params?.inputDialect||t?.params?.dialect)==="mysql"?"?":"$",[s,n]=new RegExp(`^\\${r}(\\d)$`).exec(e)||[];if(s)return new this(t,parseInt(n))}};var Et=class extends d{VALUE;true(){return this.VALUE=!0,this}false(){return this.VALUE=!1,this}null(){return this.VALUE=null,this}sql(t){return this.VALUE=t,this}toJSON(){return this.VALUE}static fromJSON(t,e){let r=new this(t);return e==!0?r.true():e==!1?r.false():e==null?r.null():r.sql(e)}stringify(){return`${this.VALUE}`}static parse(t,e){let r=new this(t);return/^TRUE$/i.test(e)?r.true():/^FALSE$/i.test(e)?r.false():/^NULL$/i.test(e)?r.null():r.sql(e)}};var z=class extends d{NAME;$NAME;KEEP;static get WRITABLE_PROPS(){return["NAME"]}static get SUBTREE_PROPS(){return[]}get WRITABLE_PROPS(){return this.constructor.WRITABLE_PROPS}get SUBTREE_PROPS(){return this.constructor.SUBTREE_PROPS}name(t){return arguments.length?(this[this.smartKey("NAME",!0)]=t,this):this[this.smartKey("NAME")]}diffWith(t){typeof t.keep()=="boolean"&&this.keep(t.keep()),t.name()!==this.name()&&this.name(t.name())}smartKey(t,e=!1){if(this.keep()===!0)return e||ve(this[`$${t}`])?`$${t}`:t;if(this.keep()===!1){if(e)throw new Error(`Cannot alter ${this.constructor.name} after having been dropped.`);return t}return t}hardSet(...t){let e=t.pop();if(t.length){let n=t[0],i=()=>{if(this.keep()===!1)throw new Error(`Diffing cannot be done on a node ${this.constructor.name} after having been dropped.`);return typeof this.keep()!="boolean"&&this.keep(!0),e(n)};return typeof this.CONTEXT?.hardSet=="function"?this.CONTEXT.hardSet(n,i):ve(n)?i():void 0}let r=this.KEEP;this.KEEP=null;let s=e();return this.KEEP=r,s}keep(t,e=!1){if(!arguments.length)return this.KEEP;if(![void 0,!0,!1].includes(t))throw new Error(`Status can only be true, false, or undefined. Received: ${t}`);if(this.KEEP=t,e)for(let r of this.SUBTREE_PROPS.reduce((s,n)=>[...s,...this[n]],[]))t!==!0?r.keep(void 0,!0):r.keep(e==="auto"?r.keep():!0,e);return this}drop(){return this.keep(!1)}dropped(){return this.keep()===!1||this.CONTEXT?.dropped?.()}reverseAlt(t=!1){if(this.keep()===!0){for(let e of this.WRITABLE_PROPS)if(ve(this[`$${e}`])){let r=this[e];this[e]=this[`$${e}`],this[`$${e}`]=r}}else this.keep()===!1?this.keep(void 0):typeof this.keep()!="boolean"&&this.keep(!1);if(t)for(let e of this.SUBTREE_PROPS.reduce((r,s)=>[...r,...this[s]],[]))e.reverseAlt(t)}isSame(t,e,r=null){if(typeof t=="string"&&typeof e=="string"&&r==="ci")return t.toLowerCase()===e.toLowerCase();if(t===e)return!0;if(Array.isArray(t)&&Array.isArray(e)&&t.length===e.length){let n=e.slice(0).sort();return t.slice(0).sort().every((i,o)=>this.isSame(i,n[o],r))}let s={};return typeof t=="object"&&t&&typeof e=="object"&&e&&(s.keys_a=Object.keys(t)).length===(s.keys_b=Object.keys(e)).length?s.keys_a.reduce((n,i)=>n&&this.isSame(t[i],e[i],r),!0):!1}toJSON(){return{...this.NAME?{name:this.NAME}:{},...this.$NAME?{$name:this.$NAME}:{},...typeof this.KEEP=="boolean"?{keep:this.KEEP}:{},...this.FLAGS.length?{flags:[...this.FLAGS]}:{}}}static fromJSON(t,e,r=null){if(e?.name&&typeof e.name!="string"||e.$name&&typeof e.$name!="string")return;let s=r?r():new this(t);return s.hardSet(()=>s.name(e.name)),s.hardSet(e.$name,n=>s.name(n)),typeof e.keep=="boolean"&&s.keep(e.keep),e.flags&&s.withFlag(...e.flags),s}},ve=u=>Array.isArray(u)?u.length:typeof u=="object"&&u?Object.keys(u).length:![void 0,null,""].includes(u);var Ft=class extends z{NAME;$NAME;KEEP;$trace(t,...e){return t==="get:node:schema"?this:super.$trace(t,...e)}name(t){return arguments.length?(this.build(this.smartKey("NAME",!0),[t],A,"name"),this):this[this.smartKey("NAME")]}diffWith(t){typeof t.keep()=="boolean"&&this.keep(t.keep()),this.isSame(t.name().toJSON(),this.name().toJSON())||this.name(t.name().toJSON())}toJSON(){return{name:this.NAME.toJSON(),...this.$NAME?{$name:this.$NAME.toJSON()}:{},...typeof this.KEEP=="boolean"?{keep:this.KEEP}:{},...this.FLAGS.length?{flags:[...this.FLAGS]}:{}}}static fromJSON(t,e,r=null){if(!e?.name||!A.fromJSON({},e.name))return;let s=r?r():new this(t);return s.hardSet(()=>s.name(e.name)),s.hardSet(e.$name,n=>s.name(n)),typeof e.keep=="boolean"&&s.keep(e.keep),e.flags&&s.withFlag(...e.flags),s}};var B=class extends d{get CLAUSE(){return this.constructor.CLAUSE}KIND;constructor(t,e){super(t),this.KIND=e}toJSON(){return{clause:this.CLAUSE,...this.KIND?{kind:this.KIND}:{},...super.toJSON()}}static fromJSON(t,e){if(!(e?.clause&&e.clause!==this.CLAUSE||e?.kind&&!this.KINDS.includes(e.kind)))return new this(t,e.kind).withFlag(...e.flags||[])}static KINDS=[]};var Lt=u=>class extends u{$trace(t,...e){if(t==="get:node:statement")return this;if(t==="get:name:table"&&this.KIND==="TABLE")return this.NAME.NAME;if(t==="get:name:database"){if(["SCHEMA","DATABASE"].includes(this.KIND))return this.NAME.NAME;if(this.KIND==="TABLE"&&this.NAME.BASENAME)return this.NAME.BASENAME}return super.$trace(t,...e)}name(t=void 0){return arguments.length?(this.build("NAME",[t],A),this):this.NAME}};var It=class extends B{NAME;ARGUMENT;name(t=void 0){return arguments.length?(this.NAME=t,this):this.NAME}argument(t=void 0){return arguments.length?(this.ARGUMENT=t,this):this.ARGUMENT}toJSON(){return{name:this.NAME,argument:this.ARGUMENT,...super.toJSON()}}static fromJSON(t,e){if(!(e?.kind&&typeof e.name!="string"||typeof e?.argument!="string"))return super.fromJSON(t,e)?.name(e.name).argument(e.argument)}stringify(){return`${this.CLAUSE}${this.KIND?` ${this.KIND}`:""}${this.NAME?` ${this.autoEsc(this.NAME)}`:""} TO ${this.autoEsc(this.ARGUMENT)}`}static parse(t,e){let[r,s="",n,,i,o,,c]=new RegExp(`^${this.CLAUSE}\\s+(?:(${this.KINDS.map(l=>l).join("|")})\\s+)?(?:(?:(\\w+)|([\`"])((?:\\3\\3|[^\\3])+)\\3)\\s+)?(?:TO|AS)\\s+(?:(\\w+)|([\`"])((?:\\6\\6|[^\\6])+)\\6)$`,"i").exec(e.trim())||[];if(!r)return;let f=new this(t,s.replace(/\s+/g,"_").toUpperCase());return(n||i)&&f.name(n||this.autoUnesc(f,i)),f.argument(o||this.autoUnesc(f,c)),f}static get CLAUSE(){return"RENAME"}static KINDS=["COLUMN","CONSTRAINT","INDEX","KEY"]};var M=class extends z{static get WRITABLE_PROPS(){return["TYPE"].concat(super.WRITABLE_PROPS)}static get TYPE(){return ne(this.name.replace(/TABLE|COLUMN|CONSTRAINT|CLAUSE/ig,""),"_").toUpperCase()}get TYPE(){return this.constructor.TYPE}toJSON(){return{type:this.TYPE,...super.toJSON()}}static fromJSON(t,e,r=null){if(e?.type===this.TYPE)return super.fromJSON(t,e,r)}stringify(){return this.TYPE==="AUTO_INCREMENT"?this.TYPE:`${this.stringifyName()}${this.TYPE.replace("_"," ")}`}static parse(t,e){let{name:r,expr:s}=this.parseName(t,e,!0);if(!(!s||!new RegExp(`^${this.TYPE==="AUTO_INCREMENT"?this.TYPE:this.TYPE.replace("_","\\s+")}$`,"i").test(s)))return new this(t).name(r)}stringifyName(){return this.name()?`CONSTRAINT ${this.autoEsc(this.name())} `:""}static parseName(t,e,r=!1){let n=`(?:CONSTRAINT(?:\\s+(\\w+)|\\s+(${this.getEscChar(t,r)})((?:\\2\\2|[^\\2])+)\\2)\\s+)?`,[,i,,o,c=""]=e.match(new RegExp(`^${n}([\\s\\S]+)$`,"i"))||[];return{name:i||this.autoUnesc(t,o),expr:c.trim()}}};var Bt=class extends M{static get TYPE(){return"AUTO_INCREMENT"}stringify(){return this.params.dialect!=="mysql"?new St(this.CONTEXT).stringify():"AUTO_INCREMENT"}};var St=class extends M{ALWAYS;$ALWAYS;static get WRITABLE_PROPS(){return["ALWAYS"].concat(super.WRITABLE_PROPS)}always(t){return arguments.length?(this[this.smartKey("ALWAYS",!0)]=!!t,this):this[this.smartKey("ALWAYS")]}diffWith(t){return super.diffWith(t),t.always()!==this.always()&&this.always(t.always()),this}toJSON(){return{always:!!this.ALWAYS,...typeof this.$ALWAYS=="boolean"?{$always:this.$ALWAYS}:{},...super.toJSON()}}static fromJSON(t,e){return super.fromJSON(t,e,()=>{let r=new this(t).always(e.always);return r.hardSet(e.$always,s=>r.always(s)),r})}stringify(){return this.params.dialect==="mysql"?new Bt(this.CONTEXT).stringify():`GENERATED ${this.always()?"ALWAYS":"BY DEFAULT"} AS IDENTITY`}static parse(t,e){let{name:r,expr:s}=this.parseName(t,e,!0);if(!(!s||!(s=s.match(new RegExp("^GENERATED\\s+(ALWAYS|BY[ ]+DEFAULT)(?:\\s+AS\\s+IDENTITY)?$","i"))?.[1])))return new this(t).name(r).always(/^ALWAYS$/i.test(s))}};var x=class extends M{columns(){return"COLUMNS"in this?[]:[this.CONTEXT.name()]}toJSON(){let t={type:this.TYPE,...super.toJSON()};return!("name"in t)&&this.params.dialect!=="mysql"&&(t={...t,name:void 0}),t}static fromJSON(t,e,r=null){if(e?.type===this.TYPE)return!("name"in e)&&t?.params?.dialect!=="mysql"&&(e={...e,name:`auto_name_${(0|Math.random()*9e6).toString(36)}`}),super.fromJSON(t,e,r)}static parseColumns(t,e,r=!1){return m.split($(e,"(",")"),[","]).map(s=>this.parseIdent(t,s.trim(),r)[0])}};var Yt=class extends x{};var qt=u=>class extends u{COLUMNS=[];$COLUMNS=[];static get WRITABLE_PROPS(){return["COLUMNS"].concat(super.WRITABLE_PROPS)}columns(t){return arguments.length?(this[this.smartKey("COLUMNS",!0)]=[].concat(t),this):this[this.smartKey("COLUMNS")]}diffWith(t){return super.diffWith(t),this.isSame(t.columns(),this.columns())||this.columns(t.columns()),this}toJSON(){return{columns:this.COLUMNS,...this.$COLUMNS.length?{$columns:this.$COLUMNS}:{},...super.toJSON()}}static fromJSON(t,e){if(e?.columns?.length)return super.fromJSON(t,e,()=>{let r=new this(t).columns(e.columns);return r.hardSet(e.$columns,s=>r.columns(s)),r})}stringify(){return this.TYPE==="FOREIGN_KEY"?super.stringify():`${super.stringify()} (${this.autoEsc(this.columns()).join(", ")})`}static parse(t,e,r){if(this.TYPE==="FOREIGN_KEY")return super.parse(t,e,r);let[s,n]=m.split(e,[]),i=super.parse(t,s.trim(),r);if(i)return i.columns(this.parseColumns(t,n))}};var Ct=class extends qt(Yt){};var st=class extends x{TARGET_TABLE;$TARGET_TABLE;TARGET_COLUMNS=[];$TARGET_COLUMNS=[];MATCH_RULE;$MATCH_RULE;UPDATE_RULE;$UPDATE_RULE;DELETE_RULE;$DELETE_RULE;static get WRITABLE_PROPS(){return["TARGET_TABLE","TARGET_COLUMNS","MATCH_RULE","UPDATE_RULE","DELETE_RULE"].concat(super.WRITABLE_PROPS)}targetTable(t){return arguments.length?(this.build(this.smartKey("TARGET_TABLE",!0),[t],A,"name"),this):this[this.smartKey("TARGET_TABLE")]}targetColumns(t){return arguments.length?(this[this.smartKey("TARGET_COLUMNS",!0)]=[].concat(t),this):this[this.smartKey("TARGET_COLUMNS")]}matchRule(t){return arguments.length?(this[this.smartKey("MATCH_RULE",!0)]=t,this):this[this.smartKey("MATCH_RULE")]}updateRule(t){return arguments.length?(this[this.smartKey("UPDATE_RULE",!0)]=t,this):this[this.smartKey("UPDATE_RULE")]}deleteRule(t){return arguments.length?(this[this.smartKey("DELETE_RULE",!0)]=t,this):this[this.smartKey("DELETE_RULE")]}diffWith(t){return super.diffWith(t),this.isSame(t.targetTable(),this.targetTable())||this.targetTable(t.targetTable()),this.isSame(t.targetColumns(),this.targetColumns())||this.targetColumns(t.targetColumns()),this.isSame(t.matchRule(),this.matchRule())||this.matchRule(t.matchRule()),this.isSame(t.updateRule(),this.updateRule())||this.updateRule(t.updateRule()),this.isSame(t.deleteRule(),this.deleteRule())||this.deleteRule(t.deleteRule()),this}toJSON(){return{targetTable:this.TARGET_TABLE.toJSON(),...this.$TARGET_TABLE?{$targetTable:this.$TARGET_TABLE.toJSON()}:{},targetColumns:this.TARGET_COLUMNS,...this.$TARGET_COLUMNS.length?{$targetColumns:this.$TARGET_COLUMNS}:{},...this.MATCH_RULE?{matchRule:this.MATCH_RULE}:{},...this.$MATCH_RULE?{$matchRule:this.$MATCH_RULE}:{},...this.UPDATE_RULE?{updateRule:this.UPDATE_RULE}:{},...this.$UPDATE_RULE?{$updateRule:this.$UPDATE_RULE}:{},...this.DELETE_RULE?{deleteRule:this.DELETE_RULE}:{},...this.$DELETE_RULE?{$deleteRule:this.$DELETE_RULE}:{},...super.toJSON()}}static fromJSON(t,e,r=null){if(!(!e?.targetTable||!e.targetColumns?.length))return super.fromJSON(t,e,()=>{let s=r?r():new this(t);return s.hardSet(()=>s.targetTable(e.targetTable)),s.hardSet(()=>s.targetColumns(e.targetColumns)),s.hardSet(()=>s.matchRule(e.matchRule)),s.hardSet(()=>s.updateRule(e.updateRule)),s.hardSet(()=>s.deleteRule(e.deleteRule)),s.hardSet(e.$targetTable,n=>s.targetTable(n)),s.hardSet(e.$targetColumns,n=>s.targetColumns(n)),s.hardSet(e.$matchRule,n=>s.matchRule(n)),s.hardSet(e.$updateRule,n=>s.updateRule(n)),s.hardSet(e.$deleteRule,n=>s.deleteRule(n)),s})}stringify(){let t=this.targetTable();if(!t.BASENAME){let s=this.$trace("get:name:database");t=t.clone().name([s,t.NAME])}let e=`${this.stringifyName()}REFERENCES ${t} (${this.autoEsc(this.targetColumns()).join(", ")})`,r=s=>typeof s=="object"&&s?`${s.rule} (${s.columns.join(", ")})`:s;return this.matchRule()&&(e+=` MATCH ${this.matchRule()}`),this.updateRule()&&(e+=` ON UPDATE ${r(this.updateRule())}`),this.deleteRule()&&(e+=` ON DELETE ${r(this.deleteRule())}`),e}static parse(t,e){let{name:r,expr:s}=this.parseName(t,e,!0);if(!s||!(s=s.match(/^REFERENCES\s+([\s\S]+)$/i)?.[1]))return;let[n,i,o=""]=m.split(s,[]),[c,f]=this.parseIdent(t,n.trim(),!0),l=m.split($(i,"(",")"),[","]).map(p=>this.parseIdent(t,p.trim(),!0)[0]),h=(p,E)=>{if(E==="MATCH")return p.match(/MATCH\s+(\w+)/i)?.[1];let S=/(NO\s+ACTION|RESTRICT|CASCADE|(SET\s+NULL|SET\s+DEFAULT)(?:\s+\(([^\)]+)\))?)/,[,N,T,O]=p.match(new RegExp(`ON\\s+${E}\\s+${S.source}`,"i"))||[];return T?O?{rule:T,columns:O.split(",").map(_=>_.trim())}:T:N};return new this(t).name(r).targetTable(f?[f,c]:c).targetColumns(l).matchRule(h(o,"MATCH")).updateRule(h(o,"UPDATE")).deleteRule(h(o,"DELETE"))}};var ut=class extends qt(st){stringify(){let t=this.stringifyName(),e=this.NAME,r=this.$NAME;this.NAME=null,this.$NAME=null;let s=`${t}FOREIGN KEY (${this.autoEsc(this.columns()).join(", ")}) ${super.stringify()}`;return this.NAME=e,this.$NAME=r,s}static parse(t,e,r){let{name:s="",expr:n}=this.parseName(t,e,!0);if(!n||!/^FOREIGN\s+KEY/i.test(n))return;let[,i,...o]=m.split(n,[]);return super.parse(t,o.join("").trim(),r).name(s).columns(this.parseColumns(t,i))}};var vt=class extends x{stringify(){return`${this.stringifyName()}UNIQUE`}static parse(t,e){let{name:r,expr:s}=this.parseName(t,e,!0);if(!(!s||!/^UNIQUE(\s+KEY)?$/i.test(s)))return new this(t).name(r)}};var yt=class extends qt(vt){};var $t=u=>class extends u{EXPR;$EXPR;static get WRITABLE_PROPS(){return["EXPR"].concat(super.WRITABLE_PROPS)}expr(t){return arguments.length?(this[this.smartKey("EXPR",!0)]=t,this):this[this.smartKey("EXPR")]}diffWith(t){return super.diffWith(t),t.expr()!==this.expr()&&this.expr(t.expr()),this}toJSON(){return{expr:this.EXPR,...[void 0,null].includes(this.$EXPR)?{}:{$expr:this.$EXPR},...super.toJSON()}}static fromJSON(t,e){if(![void 0,null].includes(e?.expr))return super.fromJSON(t,e,()=>{let r=new this(t).expr(e.expr);return r.hardSet(e.$expr,s=>r.expr(s)),r})}stringify(){return`${super.stringify()} (${this.expr()})`}static parse(t,e){let{name:r,expr:s}=this.parseName(t,e,!0);return!s||!(s=s.match(new RegExp(`^${this.TYPE.replace(/_/g,"\\s+")}\\s+([\\s\\S]+)$`,"i"))?.[1])?void 0:new this(t).expr(U(s.trim(),"(",")")?$(s.trim(),"(",")"):s).name(r)}};var it=class extends $t(x){};var V=class extends z{TYPE;$TYPE;COLUMNS=[];$COLUMNS=[];static get WRITABLE_PROPS(){return["TYPE","COLUMNS"].concat(super.WRITABLE_PROPS)}type(t){return arguments.length?(this[this.smartKey("TYPE",!0)]=t,this):this[this.smartKey("TYPE")]}columns(t){return arguments.length?(this[this.smartKey("COLUMNS",!0)]=[].concat(t),this):this[this.smartKey("COLUMNS")]}diffWith(t){return super.diffWith(t),this.isSame(this.type(),t.type())||this.type(t.type()),this.isSame(this.columns(),t.columns())||this.columns(t.columns()),this}toJSON(){return{type:this.TYPE,...this.$TYPE?{$type:this.$TYPE}:{},columns:this.COLUMNS,...this.$COLUMNS.length?{$columns:this.$COLUMNS}:{},...super.toJSON()}}static fromJSON(t,e){if(!(typeof e?.type!="string"||!/^(INDEX|KEY|FULLTEXT)$/i.test(e.type)||!e.columns?.length))return super.fromJSON(t,e,()=>{let r=new this(t).columns(e.columns).type(e.type);return r.hardSet(e.$columns,s=>r.columns(s)),r.hardSet(e.$type,s=>r.type(s)),r})}stringify(){return`${this.type()}${this.name()?` ${this.name()}`:""} (${this.columns().join(", ")})`}static parse(t,e){let[r,s,n]=/^((?:(?:FULLTEXT|SPATIAL)(?:\s+INDEX|\s+KEY)?)|(?:INDEX|KEY))([\s\S]+)$/i.exec(e)||[];if(!r)return;let[i,o]=m.split(n,[]),[c]=this.parseIdent(t,i.trim(),!0),f=m.split($(o,"(",")"),[","]).map(l=>this.parseIdent(t,l.trim(),!0)[0]);return new this(t).type(s.replace(/\s+(INDEX|KEY)/i,"").toUpperCase()).columns(f).name(c)}};var ae=class extends $t(M){STORED;$STORED;static get WRITABLE_PROPS(){return["STORED"].concat(super.WRITABLE_PROPS)}stored(t){return arguments.length?(this[this.smartKey("STORED",!0)]=!!t,this):this[this.smartKey("STORED")]}diffWith(t){return super.diffWith(t),t.stored()!==this.stored()&&this.stored(t.stored()),this}toJSON(){return{stored:!!this.STORED,...typeof this.$STORED=="boolean"?{$stored:this.$STORED}:{},...super.toJSON()}}static fromJSON(t,e){return super.fromJSON(t,e,()=>{let r=new this(t).stored(e.stored);return r.hardSet(e.$stored,s=>r.stored(s)),r})}stringify(){return`GENERATED ALWAYS AS (${this.expr()})${this.stored()?" STORED":""}`}static parse(t,e){let r,{name:s,expr:n}=this.parseName(t,e,!0);if([,n,r=""]=n.match(new RegExp("^GENERATED\\s+ALWAYS\\s+AS\\s+\\(([\\s\\S]+)\\)(?:\\s+(VIRTUAL|STORED))?$","i"))||[],!!n)return new this(t).name(s).expr(n).stored(/^STORED$/i.test(r))}};var oe=class extends $t(M){};var ce=class extends M{};var ue=class extends $t(M){};var fe=class extends M{};var W=class extends d{SPEC=[];constructor(t,e){super(t),this.SPEC=e}toJSON(){return this.SPEC.length===1?this.SPEC[0]:this.SPEC}static fromJSON(t,e){let r=[].concat(e);if(typeof r[0]!="string")return;let[s,n,i]=ze.call(this,r[0]);if(s)return new this(t,Ze(s,...n.split(","),...i,...r.slice(1)))}stringify(){let[t,e]=this.SPEC.slice(1).reduce(([r,s],n)=>/^\d+$/.test(n)?[r.concat(n),s]:[r,s.concat(n)],[[],[]]);return`${this.SPEC[0]}${t.length?`(${t.join(",")})`:""}${e.length?` ${e.join(" ")}`:""}`}static parse(t,e){let[r,s,n]=ze.call(this,e);if(r)return new this(t,Ze(r,...s.split(","),...n))}static pgFixedTypesRe=/^(bigint|int8|bigserial|serial8|boolean|bool|box|bytea|cidr|circle|date|double\s+precision|float8|inet|integer|int|int4|jsonb|json|line|lseg|macaddr8|macaddr|money|path|pg_lsn|pg_snapshot|point|polygon|real|float4|smallint|int2|smallserial|serial2|serial4|serial|text|timetz|timestamptz|tsquery|tsvector|txid_snapshot|uuid|xml)$/;static pgVariableTypesRe=/^(bit\s+varying|bit|varbit|character\s+varying|character|char|varchar|interval|numeric|timestamp|time)(?:\s+)?(?:\(([\d, ]+)\))?(\s+(?:with|without)\s+time\s+zone)?$/;static myFixedTypesRe=/^(tinyint|smallint|mediumint|enum|set|tinyblob|mediumblob|longblob|geometry|longstring|geometrycollection|multilinestring|multipoint|multipolygon)$/;static myVariableTypesRe=/^(float|decimal|double|tinytext|mediumtext|longtext|binary|varbinary|blob)(?:\s+)?(?:\(([\d, ]+)\))?$/};function ze(u){let t,e,r;for(let s of["pgFixedTypesRe","pgVariableTypesRe","myFixedTypesRe","myVariableTypesRe"])if([,t,e="",...r]=u.match(new RegExp(this[s].source,"i"))||[],t)break;return[t,e,r]}function Ze(...u){return u.map(t=>/^\d+$/.test(t)?parseFloat(t):t?.trim().replace(/\s+/," ").toUpperCase()).filter(t=>t)}var Y=class extends z{TYPE;$TYPE;CONSTRAINTS=[];static get WRITABLE_PROPS(){return["TYPE"].concat(super.WRITABLE_PROPS)}static get SUBTREE_PROPS(){return["CONSTRAINTS"]}static CONSTRAINT_TYPES=[Bt,St,ae,oe,ce,fe,ue,Yt,st,vt,it];type(t){return arguments.length?(this.build(this.smartKey("TYPE",!0),[t],W),this):this[this.smartKey("TYPE")]}autoIncrement(...t){return this.constraint("AUTO_INCREMENT",...t)}identity(...t){return this.constraint("IDENTITY",...t)}expression(...t){return this.constraint("EXPRESSION",...t)}default(...t){return this.constraint("DEFAULT",...t)}notNull(...t){return this.constraint("NOT_NULL",...t)}null(...t){return this.constraint("NULL",...t)}onUpdate(...t){return this.constraint("ON_UPDATE",...t)}primaryKey(...t){return this.constraint("PRIMARY_KEY",...t)}foreignKey(...t){return this.constraint("FOREIGN_KEY",...t)}uniqueKey(...t){return this.constraint("UNIQUE_KEY",...t)}check(...t){return this.constraint("CHECK",...t)}constraint(t,...e){let r,s=n=>this.CONSTRAINTS.find(i=>i.TYPE===n);if(typeof t=="string"){if(r=s(t),e.length){if(e[0]===!1)return r?.drop()}else return r;t={type:t,...typeof e[0]=="object"?e[0]:typeof e[0]=="string"?{expr:e[0]}:{}}}else t instanceof z||(r=s(t.type));if(r){let n=this.constructor.CONSTRAINT_TYPES.reduce((i,o)=>i||o.fromJSON(this,t));r.diffWith(n)}else this.build("CONSTRAINTS",[t],this.constructor.CONSTRAINT_TYPES);return this}diffWith(t){super.diffWith(t);let e=this.type().toJSON(),r=t.type().toJSON();this.isSame(e,r)||this.type(r);for(let s of["IDENTITY","EXPRESSION","NOT_NULL","NULL","DEFAULT","AUTO_INCREMENT","ON_UPDATE"]){let n=this.constraint(s),i=t.constraint(s);n&&(!i||i.dropped())?n.drop():!n&&i&&!i.dropped()?this.constraint(i.toJSON()):n&&i&&n.diffWith(i)}return this}toJSON(){let t={type:this.TYPE.toJSON(),...this.$TYPE?{$type:this.$TYPE.toJSON()}:{}};for(let e of this.CONSTRAINTS){let{type:r,...s}=e.toJSON(),n=r==="FOREIGN_KEY"?"references":Ye(r.toLowerCase().replace("_"," ")),i=Object.keys(s),o=i.length===1?s[i[0]]:null,c=i.length?o===!1&&i[0]==="keep"?!1:i.length===1&&i[0]==="expr"?o:s:!0;t={...t,[n]:c}}return{...t,...super.toJSON()}}static fromJSON(t,e){let{type:r,$type:s,name:n,$name:i,keep:o,...c}=e;if(W.fromJSON({},r))return super.fromJSON(t,e,()=>{let f=new this(t);f.type(W.fromJSON(f,r)),f.hardSet(s,h=>f.type(W.fromJSON(f,h)));let l=Object.entries(c).reduce((h,[p,E])=>{if([void 0,null].includes(E))return h;if(!["boolean","number","string"].includes(typeof E)&&!(typeof E=="object"&&E))throw new Error(`Invalid value for constraint "${p}": ${E}`);let S={...E===!1?{keep:!1}:E===!0?{}:["number","string"].includes(typeof E)?{expr:E}:E};return p.startsWith("$")&&(S=Object.fromEntries(Object.entries(S).map(([N,T])=>[`$${N}`,T])),p=p.slice(1)),p==="references"&&(p="foreignKey"),p in h?Object.assign(h[p],S):h[p]=S,h},{});for(let h in l)f.constraint(ne(h,"_").toUpperCase(),l[h]);return f})}stringify(){let t=this.CONSTRAINTS;return this.params.dialect==="mysql"&&(t=t.filter(e=>e.TYPE!=="FOREIGN_KEY")),`${this.autoEsc(this.name())} ${this.type()}${t.length?` ${t.join(" ")}`:""}`}static parse(t,e,r){let[s,n]=m.split(e,["\\s+"],{useRegex:!0,limit:1}),[i]=this.parseIdent(t,s.trim(),!0)||[];if(!i)return;let o=new this(t).name(i),c="(CONSTRAINT\\s+.+?\\s+)?",f=[{test:`${c}(PRIMARY[ ]+KEY|NOT[ ]+NULL|GENERATED|REFERENCES|UNIQUE(?:[ ]+KEY)?|CHECK|AUTO_INCREMENT)`},{backtest:"^(?!.*\\s+(NOT|SET)\\s+$)",test:`${c}NULL`},{backtest:"^(?!.*\\s+BY\\s+$)",test:`${c}DEFAULT`},{backtest:"^(?!.*\\s+REFERENCES\\s+)",test:"ON\\s+UPDATE"}],[l,...h]=m.split(n,f,{useRegex:"i",preserveDelims:!0});o.type(r(o,l.trim(),[W]));for(let p of h){let E=r(o,p,this.CONSTRAINT_TYPES);o.build("CONSTRAINTS",[E],this.CONSTRAINT_TYPES)}return o}};var Nt=class extends B{ARGUMENT;argument(t=void 0){return arguments.length?(this.build("ARGUMENT",[t],this.constructor.NODE_TYPES),this):this.ARGUMENT}toJSON(){return{argument:this.ARGUMENT.toJSON(),...super.toJSON()}}static fromJSON(t,e){if(e?.argument)return super.fromJSON(t,e)?.argument(e.argument)}stringify(){let t=[`${this.CLAUSE}${this.KIND&&/^(COLUMN|TABLE|SCHEMA|DATABASE)$/i.test(this.KIND)?` ${this.KIND.replace(/_/g," ")}${this.hasFlag("IF_NOT_EXISTS")?" IF NOT EXISTS":""}`:""} ${this.argument()}`];return this.argument()instanceof Y&&(this.hasFlag("AFTER")?t.push(this.getFlag("AFTER")?.replace(":"," ")):this.hasFlag("FIRST")&&t.push("FIRST"),this.params.dialect==="mysql"&&this.argument().foreignKey())?[t.join(" "),`ADD ${ut.fromJSON(this,constraint.toJSON()).columns([this.argument().name()])}`].join(`;
`):t.join(" ")}static parse(t,e,r){let[s,n="",i,o]=new RegExp(`^${this.CLAUSE}\\s+(?:(${this.KINDS.map(f=>f.replace(/_/g,"\\s+")).join("|")})\\s+)?(IF\\s+NOT\\s+EXISTS\\s+)?([\\s\\S]+)$`,"i").exec(e.trim())||[];if(!s)return;let c=new this(t,n.replace(/\s+/g,"_").toUpperCase());if(i&&c.withFlag("IF_NOT_EXISTS"),!n||/^COLUMN$/i.test(n)){let[,f,l,h]=o.trim().match(/([\s\S]+)\s+(?:(FIRST)|AFTER\s+(.+))$/i)||[,o.trim()];l&&c.withFlag("FIRST"),h&&c.withFlag(`AFTER:${h}`),c.argument(r(c,f,[Y]))}else/^TABLE|SCHEMA|DATABASE$/i.test(n)?c.argument(r(c,o,this.NODE_TYPES)):c.argument(r(c,`${n} ${o}`,this.NODE_TYPES));return c}static get CLAUSE(){return"ADD"}static NODE_TYPES=[St,Ct,ut,yt,it,V,Y];static KINDS=["COLUMN","CONSTRAINT","PRIMARY_KEY","FOREIGN_KEY","UNIQUE_KEY","CHECK","FULLTEXT_INDEX","SPATIAL_INDEX","INDEX","KEY"]};var Gt=class extends B{NAME;name(t=void 0){return arguments.length?(this.NAME=t,this):this.NAME}toJSON(){return{name:this.NAME,...super.toJSON()}}static fromJSON(t,e){if(!(!e?.kind&&typeof e?.name!="string"))return super.fromJSON(t,e)?.name(e.name)}stringify(){let t=this.getFlag("RESTRICT")||this.getFlag("CASCADE"),e=this.KIND?.replace(/_/g," "),r=this.NAME&&this.autoEsc(this.NAME);return["PRIMARY_KEY","FOREIGN_KEY","CHECK"].includes(this.KIND)&&(this.params.dialect==="mysql"?this.KIND==="PRIMARY_KEY"&&(r=null):e="CONSTRAINT"),`${this.CLAUSE}${e?` ${e}`:""}${this.hasFlag("IF_EXISTS")?" IF EXISTS":""}${r?` ${r}`:""}${t?` ${t}`:""}`}static parse(t,e){let[r,s="",n,i,,o,c]=new RegExp(`^${this.CLAUSE}(?:\\s+(${this.KINDS.map(l=>l.replace(/_/g,"\\s+")).join("|")}))?(\\s+IF\\s+EXISTS)?(?:\\s+(\\w+)|\\s+([\`"])((?:\\4\\4|[^\\4])+)\\4)?(?:\\s+(RESTRICT|CASCADE))?$`,"i").exec(e.trim())||[];if(!r)return;let f=new this(t,s.replace(/\s+/g,"_").toUpperCase());return(i||o)&&f.name(i||this.autoUnesc(f,o)),n&&f.withFlag("IF_EXISTS"),c&&f.withFlag(c),f}static get CLAUSE(){return"DROP"}static KINDS=["COLUMN","CONSTRAINT","PRIMARY_KEY","FOREIGN_KEY","UNIQUE_KEY","CHECK","INDEX","KEY","IDENTITY","EXPRESSION","DEFAULT","NOT_NULL","NULL","AUTO_INCREMENT","ON_UPDATE"]};var At=class extends B{ARGUMENT;argument(t=void 0){return arguments.length?(["DATA_TYPE","TYPE"].includes(this.KIND)?this.build("ARGUMENT",[t],W):this.KIND==="SCHEMA"?this.build("ARGUMENT",[t],A):this.ARGUMENT=t,this):this.ARGUMENT}toJSON(){return{argument:this.ARGUMENT?.toJSON?.()||this.ARGUMENT,...super.toJSON()}}static fromJSON(t,e){if(e?.kind)return super.fromJSON(t,e)?.argument(e.argument)}stringify(){return this.KIND==="IDENTITY"?`SET GENERATED ${/^ALWAYS$/i.test(this.ARGUMENT)?"AS ALWAYS":"BY DEFAULT"}`:`${this.CLAUSE} ${this.KIND.replace(/_/g," ")}${this.ARGUMENT?` ${this.ARGUMENT}`:""}`}static parse(t,e,r){let[s,n,i]=new RegExp(`^${this.CLAUSE}\\s+(${this.KINDS.map(f=>f==="IDENTITY"?"GENERATED":f.replace(/_/g,"\\s+")).join("|")})(?:\\s+([\\s\\S]+))?$`,"i").exec(e.trim())||[];if(!s)return;let o=/^GENERATED$/i.test(n),c=new this(t,o?"IDENTITY":n.replace(/\s+/g,"_").toUpperCase());return/^(DATA\s+)?TYPE$/i.test(n)?c.argument(r(c,i,[W])):/^SCHEMA$/i.test(n)?c.argument(r(c,i,[A])):c.argument(o?/^AS\s+ALWAYS$/i.test(i)?"always":!0:i),c}static get CLAUSE(){return"SET"}static KINDS=["SCHEMA","DATA_TYPE","TYPE","IDENTITY","DEFAULT","NOT_NULL","NULL","AUTO_INCREMENT","ON_UPDATE"]};var Tt=class extends B{ARGUMENT;argument(t){return arguments.length?(this.build("ARGUMENT",[t],this.constructor.NODE_TYPES),this):this.ARGUMENT}toJSON(){return{argument:this.ARGUMENT.toJSON(),...super.toJSON()}}static fromJSON(t,e){if(!(!e?.kind||!e.argument))return super.fromJSON(t,e)?.argument(e.argument)}stringify(){return`${this.CLAUSE} ${this.KIND} ${this.ARGUMENT}`}static parse(t,e,r){let[s,n,i]=new RegExp(`^${this.CLAUSE}\\s+(${this.KINDS.map(c=>c).join("|")})\\s+([\\s\\S]+)$`,"i").exec(e.trim())||[];if(!s)return;let o=new this(t,n.toUpperCase());return o.argument(r(o,i,this.NODE_TYPES)),o}static get CLAUSE(){return"MODIFY"}static NODE_TYPES=[Y];static KINDS=["COLUMN"]};var le=class extends Tt{NAME;name(t=void 0){return arguments.length?(this.NAME=t,this):this.NAME}add(t,e){return this.argument({clause:"ADD",kind:t,argument:e})}drop(t){return this.argument({clause:"DROP",kind:t})}set(t,e){return this.argument({clause:"SET",kind:t,argument:e})}toJSON(){return{name:this.NAME,...super.toJSON()}}static fromJSON(t,e){if(typeof e?.name=="string")return super.fromJSON(t,e)?.name(e.name)}stringify(){return`${this.CLAUSE} ${this.KIND} ${this.autoEsc(this.NAME)} ${this.ARGUMENT}`}static parse(t,e,r){let[s,n,i,,o,c]=new RegExp(`^${this.CLAUSE}\\s+(${this.KINDS.map(l=>l).join("|")})\\s+(?:(\\w+)|([\`"])((?:\\3\\3|[^\\3])+)\\3)?\\s+([\\s\\S]+)$`,"i").exec(e.trim())||[];if(!s)return;let f=new this(t,n.toUpperCase());return f.name(i||this.autoUnesc(f,o)),/^(DATA\+)?TYPE\s+/i.test(c)?f.argument(r(f,`SET ${c}`,[At])):f.argument(r(f,c,this.NODE_TYPES)),f}static get CLAUSE(){return"ALTER"}static NODE_TYPES=[Nt,Gt,At,Et];static KINDS=["COLUMN","CONSTRAINT","INDEX"]};var he=class extends Tt{NAME;name(t=void 0){return arguments.length?(this.NAME=t,this):this.NAME}toJSON(){return{name:this.NAME,...super.toJSON()}}static fromJSON(t,e){if(typeof e?.name=="string")return super.fromJSON(t,e)?.name(e.name)}stringify(){let t=[`${this.CLAUSE} ${this.KIND} ${this.autoEsc(this.NAME)} ${this.ARGUMENT}`];return this.hasFlag("AFTER")?t.push(this.getFlag("AFTER")?.replace(":"," ")):this.hasFlag("FIRST")&&t.push("FIRST"),t.join(" ")}static parse(t,e,r){let[s,n,i,,o,c]=new RegExp(`^${this.CLAUSE}\\s+(${this.KINDS.map(E=>E).join("|")})\\s+(?:(\\w+)|([\`"])((?:\\3\\3|[^\\3])+)\\3)?\\s+([\\s\\S]+)$`,"i").exec(e.trim())||[];if(!s)return;let f=new this(t,n.toUpperCase());f.name(i||this.autoUnesc(f,o));let{tokens:[l,h],matches:p}=m.lex(c,["FIRST","AFTER"],{useRegex:"i"});return f.argument(r(f,l,this.NODE_TYPES)),h?f.withFlag(`AFTER:${h}`):p.length&&f.withFlag("FIRST"),f}static get CLAUSE(){return"CHANGE"}};var q=class extends Lt(B){NAME;ACTIONS=[];SUBTREE=[];get length(){return this.ACTIONS.length+this.SUBTREE.length}action(...t){return arguments.length?(this.build("ACTIONS",t,this.constructor.NODE_TYPES),this):this.ACTIONS[this.ACTIONS.length-1]}create(t,e){return this.action({clause:"CREATE",kind:t,argument:e})}rename(t,e,r){return this.action({clause:"RENAME",kind:t,name:e,argument:r})}modify(t,e){return this.action({clause:"MODIFY",kind:t,argument:e})}change(t,e,r){return this.action({clause:"CHANGE",kind:t,name:e,argument:r})}alter(t,e,r){return this.action({clause:"ALTER",kind:t,name:e,argument:r})}add(t,e){return this.action({clause:"ADD",kind:t,argument:e})}drop(t,e){return this.action({clause:"DROP",kind:t,name:e})}set(t,e){return this.action({clause:"SET",kind:t,argument:e})}toJSON(){return{name:this.NAME.toJSON(),actions:this.ACTIONS.map(t=>t.toJSON()),...super.toJSON()}}static fromJSON(t,e){if(!e?.kind||!e.name||!Array.isArray(e.actions))return;let r=super.fromJSON(t,e)?.name(e.name);return r.action(...e.actions),r}stringify(){if(!this.length)return"";let t=f=>{if(f.BASENAME||["SCHEMA","DATABASE"].includes(this.KIND))return f;let l=this.$trace("get:name:database");return f.clone().name([l,f.NAME])},[e,r,s,n]=this.ACTIONS.reduce(([f,l,h,p],E)=>E instanceof It?E.KIND?[f,l.concat(E),h,p]:[f,l,E,p]:E instanceof At&&E.KIND==="SCHEMA"?[f,l,h,E]:[f.concat(E),l,h,p],[[],[]]),i=f=>`${this.CLAUSE} ${this.KIND}${this.hasFlag("IF_EXISTS")?" IF EXISTS":""} ${f}`,o=[...this.SUBTREE],c=t(this.name());e.length&&o.push(`${i(c)}
	${e.join(`,
	`)}`);for(let f of r.concat(s||[]))o.push(`${i(c)} ${f}`);return n&&o.push(`${i(s&&t(A.fromJSON(this,s.ARGUMENT))||c)} ${n}`),o.join(`;
`)}static parse(t,e,r){let[s,n,i,o]=new RegExp(`^${this.CLAUSE}\\s+(${this.KINDS.map(h=>h).join("|")})\\s+(?:(IF\\s+EXISTS)\\s+)?([\\s\\S]+)$`,"i").exec(e.trim())||[];if(!s)return;let c=new this(t,n.toUpperCase()),[f,l]=m.split(o,["\\s+"],{useRegex:!0,limit:1});return c.name(r(c,f,[A])),c.action(...m.split(l,[","]).map(h=>r(c,h,this.NODE_TYPES))),i&&c.withFlag("IF_EXISTS"),c}static get CLAUSE(){return"ALTER"}static NODE_TYPES=[It,le,he,Tt,Nt,Gt,At];static KINDS=["TABLE","SCHEMA","DATABASE"]};var X=class extends Ft{COLUMNS=[];CONSTRAINTS=[];INDEXES=[];NODES=new Set;static get WRITABLE_PROPS(){return["BASENAME"].concat(super.WRITABLE_PROPS)}static get SUBTREE_PROPS(){return["COLUMNS","CONSTRAINTS","INDEXES"]}static CONSTRAINT_TYPES=[Ct,ut,yt,it];$trace(t,...e){return t==="get:schema:table"?this:t==="get:name:table"?this.NAME.NAME:t==="get:name:database"&&this.NAME.BASENAME?this.NAME.BASENAME:(t==="event:connected"&&[Y,x,V].some(r=>e[0]instanceof r)&&this.NODES.add(e[0]),super.$trace(t,...e))}primaryKey(){return[...this.NODES].find(t=>t.TYPE==="PRIMARY_KEY")}column(t){return typeof t=="string"?this.COLUMNS.find(e=>this.isSame(e.name(),t,"ci")):(this.build("COLUMNS",[t],Y),this.COLUMNS[this.COLUMNS.length-1])}constraint(t){return typeof t=="string"?this.CONSTRAINTS.find(e=>this.isSame(e.name(),t,"ci")):(this.build("CONSTRAINTS",[t],this.constructor.CONSTRAINT_TYPES),this.CONSTRAINTS[this.CONSTRAINTS.length-1])}index(t){return typeof t=="string"?this.INDEXES.find(e=>this.isSame(e.name(),t,"ci")):(this.build("INDEXES",[t],V),this.INDEXES[this.INDEXES-1])}diffWith(t){super.diffWith(t);let e=(c,f)=>[...c.NODES].find(l=>l.NAME===f),r=c=>[...c.NODES].reduce(([f,l],h)=>[Y,x,V].some(p=>h instanceof p)?h.NAME?[f.add(h.NAME),l]:[f,l.add(h)]:[f,l],[new Set,new Set]),[s]=r(this),[n,i]=r(t),o=c=>{if(c instanceof x)if(c.CONTEXT instanceof Y){let f=c.CONTEXT.NAME;if(!s.has(f))return;e(this,f).constraint(c.toJSON())}else this.constraint(c.toJSON());else c instanceof V?this.index(c.toJSON()):this.column(c.toJSON())};for(let c of new Set([...s,...n])){let f=e(this,c),l=e(t,c);s.has(c)&&!n.has(c)?f.drop():s.has(c)?f.diffWith(l):o(l)}for(let c of i)o(c);return this}alterWith(t){let e=(r,s=!1)=>{let n=[...this.NODES].find(i=>(r.kind==="COLUMN"?i instanceof Y:r.kind==="CONSTRAINT"?i instanceof x:i.TYPE===r.kind)&&(r.name?this.isSame(i.NAME,r.name,"ci"):r.kind==="PRIMARY_KEY"));if(!n&&!s)throw new Error(`${r.kind}${r.name?` "${r.name}"`:""} does not exist.`);return n};for(let r of t.ACTIONS)if(r.CLAUSE==="RENAME")r.KIND?e({kind:r.KIND,name:r.name()}).name(r.argument()):this.name([this.name().BASENAME,r.argument()]);else if(r.CLAUSE==="ADD")r.argument()instanceof x?r.argument().columns().length===1?e({kind:"COLUMN",name:r.argument().columns()[0]}).constraint(r.argument().toJSON()):this.constraint(r.argument().toJSON()):r.argument()instanceof V?this.index(r.argument().toJSON()):(!r.hasFlag("IF_NOT_EXISTS")||!e({kind:"COLUMN",name:r.argument().name()},!0))&&this.column(r.argument().toJSON());else if(r.CLAUSE==="DROP")e(r.toJSON(),r.hasFlag("IF_EXISTS"))?.drop();else if(r.CLAUSE==="SET")r.KIND==="SCHEMA"&&this.name([r.argument(),this.name().NAME]);else if(["CHANGE","MODIFY"].includes(r.CLAUSE))(r.CLAUSE==="CHANGE"?e({kind:"COLUMN",name:r.name()}):e({kind:"COLUMN",name:r.argument().name()})).diffWith(r.argument());else if(r.CLAUSE==="ALTER"){let s=e({kind:r.KIND,name:r.name()},r.hasFlag("IF_EXISTS"));if(!s)continue;let n=r.argument();if(n.CLAUSE==="ADD"){if(n.argument().TYPE==="EXPRESSION")throw new Error("Cannot add EXPRESSION constraint after column creation.");if(s.constraint(n.argument().TYPE))throw new Error(`Constraint ${n.argument().TYPE} already exists on ${s.name()}.`);s.constraint(n.argument())}else if(n.CLAUSE==="DROP"){let i=s.constraint(n.KIND);if(i)i.drop();else if(["IDENTITY","EXPRESSION"].includes(n.KIND)&&!n.hasFlag("IF_EXISTS"))throw new Error(`Cannot drop ${n.KIND}; does not exist.`)}else if(n.CLAUSE==="SET"){if(n.argument()instanceof W)s.type(n.argument().toJSON());else if(["DEFAULT","ON_UPDATE"].includes(n.KIND))s.constraint(n.KIND,n.argument());else if(["NOT_NULL","NULL","AUTO_INCREMENT"].includes(n.KIND))s.constraint(n.KIND,!0);else if(n.KIND==="IDENTITY"){let i=s.identity();if(!i)throw new Error(`Cannot modify IDENTITY constraint on ${s.name()}; does not exist.`);i.always(/^ALWAYS$/i.test(n.argument()))}}}return this}getAlt(){let t=q.fromJSON(this.CONTEXT,{kind:"TABLE",name:this.NAME.toJSON(),actions:[]});this.$NAME&&this.NAME&&(this.isSame(this.$NAME.NAME,this.NAME.NAME,"ci")||t.rename(null,null,this.$NAME.NAME),this.$NAME.BASENAME&&!this.isSame(this.$NAME.BASENAME,this.NAME.BASENAME,"ci")&&t.set("SCHEMA",this.$NAME.BASENAME));let e=(s,n=!1)=>s.keep()!==!0||["$EXPR","$ALWAYS","$TARGET_TABLE","$TARGET_COLUMNS","$MATCH_RULE","$UPDATE_RULE","$DELETE_RULE"].concat(n?"$NAME":[]).some(i=>i in s&&(Array.isArray(s[i])?s[i].length:![void 0,null].includes(s[i]))&&!this.isSame(s[i.slice(1)],s[i],"ci"));for(let s of this.COLUMNS){if(s.keep()===!1){t.drop("COLUMN",s.NAME);continue}if(s.keep()!==!0){t.add("COLUMN",s.clone());continue}if(s.keep()===!0){if(this.params.dialect==="mysql")if(s.$TYPE&&!this.isSame(s.$TYPE.toJSON(),s.TYPE.toJSON(),"ci")||s.CONSTRAINTS.some(i=>["EXPRESSION","NOT_NULL","NULL","AUTO_INCREMENT","ON_UPDATE"].includes(i.TYPE)&&e(i,!0))){let i=s.clone();i.CONSTRAINTS=i.CONSTRAINTS.filter(o=>!(o instanceof x)),t.modify("COLUMN",i)}else{let i=s.CONSTRAINTS.find(o=>o.TYPE==="DEFAULT"&&e(o,!0));i&&t.alter("COLUMN",s.NAME,o=>{i.keep()===!1?o.drop("DEFAULT"):a.set("DEFAULT",i.expr())}),s.$NAME&&!this.isSame(s.$NAME,s.NAME,"ci")&&t.rename("COLUMN",s.NAME,s.$NAME)}else{s.$TYPE&&!this.isSame(s.$TYPE.toJSON(),s.TYPE.toJSON(),"ci")&&t.alter("COLUMN",s.NAME,{clause:"SET",kind:"DATA_TYPE",argument:W.fromJSON(s,s.$TYPE.toJSON())});let i=s.CONSTRAINTS.filter(o=>!(o instanceof x)&&e(o,!0));for(let o of i)t.alter("COLUMN",s.NAME,(()=>{if(o.keep()===!1)return{clause:"DROP",kind:o.TYPE};if(o.TYPE==="EXPRESSION")throw new Error("EXPRESSION constraints cannot be added or modified after column creation.");if(o.TYPE==="IDENTITY")return o.keep()?{clause:"SET",kind:"IDENTITY",argument:o.always()?"ALWAYS":!0}:{clause:"ADD",argument:o.clone()};if(["DEFAULT"].includes(o.TYPE))return{clause:"SET",kind:o.TYPE,argument:o.expr()};if(["NOT_NULL"].includes(o.TYPE))return{clause:"SET",kind:o.TYPE}})());s.$NAME&&!this.isSame(s.$NAME,s.NAME,"ci")&&t.rename("COLUMN",s.NAME,s.$NAME)}let n=s.CONSTRAINTS.filter(i=>i instanceof x);for(let i of n)if(e(i)){if([!0,!1].includes(i.keep())&&t.drop(i.TYPE,i.NAME),i.keep()!==!1){let o=s.$trace("get:schema:table").altsCascaded?s.name():s.NAME,c=this.constructor.CONSTRAINT_TYPES.find(f=>f.TYPE===i.TYPE).fromJSON(i.CONTEXT,{...i.toJSON(),columns:[o]});t.add(c.TYPE,c)}}else i.keep()===!0&&i.$NAME&&!this.isSame(i.$NAME,i.NAME,"ci")&&t.rename("CONSTRAINT",i.NAME,i.$NAME)}}let r=s=>e(s)||s.$COLUMNS?.length&&!this.isSame(s.$COLUMNS,s.COLUMNS,"ci");for(let s of this.CONSTRAINTS)r(s)?([!0,!1].includes(s.keep())&&t.drop(s.TYPE,s.NAME),s.keep()!==!1&&t.add(s.TYPE,s.clone())):s.keep()===!0&&s.$NAME&&!this.isSame(s.$NAME,s.NAME,"ci")&&t.rename("CONSTRAINT",s.NAME,s.$NAME);return t}cascadeAlt(){this.keep(this.keep(),"auto");let t=r=>r.dropped()?"DOWN":r.$NAME&&!this.isSame(r.$NAME,r.NAME,"ci")?"RENAME":null,e=t(this);for(let r of this.COLUMNS){let s=t(r);if(s)for(let n of this.CONSTRAINTS){if(n instanceof it)continue;let i=n.$COLUMNS.length?n.$COLUMNS:n.COLUMNS,o=i.indexOf(r.NAME);o>-1&&(s==="DOWN"?i.splice(o,1):s==="RENAME"&&(i[o]=r.$NAME))}}return this.altsCascaded=!0,this}updateDatabaseReferences(t,e){for(let r of this.NODES)r instanceof st&&r.targetTable().basename()===t.NAME&&(e==="DOWN"?r.drop():e==="RENAME"&&r.targetTable().basename(t.$NAME))}updateTableReferences(t,e){for(let r of this.NODES)r instanceof st&&(r.targetTable().basename()&&t.basename()&&r.targetTable().basename()!==t.basename()||r.targetTable().name()===t.NAME&&(e==="DOWN"?r.drop():e==="RENAME"&&r.targetTable().name(t.$NAME)))}updateColumnReferences(t,e){for(let r of this.NODES){if(!(r instanceof st)||r.targetTable().basename()&&t.$trace("get:name:database")&&r.targetTable().basename()!==t.$trace("get:name:database")||r.targetTable().name()!==t.$trace("get:table:name"))continue;let s=cons.$TARGET_COLUMNS.length?cons.$TARGET_COLUMNS:cons.TARGET_COLUMNS,n=s.indexOf(t.NAME);n>-1&&(e==="DOWN"?s.splice(n,1):e==="RENAME"&&(s[n]=t.$NAME))}}toJSON(){return{columns:this.COLUMNS.map(t=>t.toJSON()),constraints:this.CONSTRAINTS.map(t=>t.toJSON()),indexes:this.INDEXES.map(t=>t.toJSON()),...super.toJSON()}}static fromJSON(t,e){if(!(!Array.isArray(e?.columns)||["constraints","indexes"].some(r=>r in e&&!Array.isArray(e[r]))))return super.fromJSON(t,e,()=>{let r=new this(t);for(let s of e.columns)r.column(s);for(let s of e.constraints||[])r.constraint(s);for(let s of e.indexes||[])r.index(s);return r})}stringify(){let t=[this.COLUMNS.map(n=>n.stringify()).join(`,
	`)],e=this.CONSTRAINTS.slice(0),r=this.INDEXES.slice(0);this.params.dialect==="mysql"&&e.push(...this.COLUMNS.reduce((n,i)=>{let o=i.foreignKey();return o?n.concat(ut.fromJSON(this,{...o.toJSON(),columns:[i.name()]})):n},[])),e.length&&t.push(e.map(n=>n.stringify()).join(`,
	`)),r.length&&t.push(r.map(n=>n.stringify()).join(`,
	`));let s=this.name();if(!s.BASENAME){let n=this.$trace("get:name:database");s=s.clone().name([n,s.NAME])}return`${s} (
	${t.join(`,
	`)}
)`}static parse(t,e,r){let[s,n,...i]=m.split(e,[],{limit:2});if(!s||!U(n||"","(",")"))return;let o=new this(t);o.name(r(o,s.trim(),[A]));let c=m.split($(n,"(",")"),[","]).map(f=>r(o,f.trim(),[Ct,ut,yt,it,V,Y]));for(let f of c)f instanceof Y?o.column(f):f instanceof V?o.index(f):o.constraint(f);return o}};var ft=class extends d{VALUE="";QUOTE="";constructor(t,e,r="'"){super(t),this.VALUE=e,this.QUOTE=r}value(t){this.VALUE=t}stringify(){let t=this.QUOTE||this.quoteChars[0];return`${t}${(this.VALUE+"").replace(new RegExp(t,"g"),t.repeat(2))}${t}`}toJSON(){return{value:this.VALUE}}static fromJSON(t,e){if(typeof e?.value=="string")return new this(t,e.value,e.quote)}static parse(t,e){let[r,s]=this.parseText(t,e,!0)||[];if(s)return new this(t,r,s)}static parseText(t,e,r=!1){let s=this.getQuoteChars(t,r),n={};if(!(!(n.quote=s.find(i=>U(e,i,i)))||m.match(e,[" "]).length))return[$(e,n.quote,n.quote).replace(new RegExp(n.quote+n.quote,"g"),n.quote),n.quote]}};var wt=class extends d{VALUE=0;constructor(t,e){super(t),this.VALUE=e}value(t){this.VALUE=t}toJSON(){return{value:this.VALUE,flags:this.FLAGS}}static fromJSON(t,e){if(typeof e=="number"||typeof e=="string"&&/^[.\d]+$/.test(e)&&(e=parseFloat(e)))e={value:e};else if(typeof e?.value!="number")return;return new this(t,e.value).withFlag(...e.flags||[])}stringify(){return`${this.VALUE}`}static parse(t,e){if(/^\d+$/.test(e))return new this(t,parseFloat(e))}static factoryMethods={value:(t,e)=>/^\d+$/.test(e)&&new this(t)}};var lt=class extends ft{TYPE;constructor(t,e,r,s){super(t,e,s),this.TYPE=r}array(t){this.VALUE=Array.isArray(t)?JSON.stringify(t):t,this.TYPE="ARRAY"}object(t){this.VALUE=R(t)?JSON.stringify(t):t,this.TYPE="OBJECT"}toJSON(){return{type:this.TYPE,...super.toJSON()}}static fromJSON(t,e){if(typeof e?.type!="string"||!/OBJECT|ARRAY/i.test(e.type)||!e.value)return;let r=new this(t);return r[e.type.toLowerCase()](e.value),r}stringify(){return`${super.stringify()}`}static parse(t,e){let r=[["{","}"],["[","]"]],s={},[n,i]=this.parseText(t,e)||[];if(i&&!(!(s.braces=r.find(o=>U(e,o[0],o[1])))||m.match(e,[" "]).length))return new this(t,n,s.braces[0]==="{"?"OBJECT":"ARRAY",i)}static factoryMethods={array:(t,e)=>Array.isArray(e)&&new this(t),object:(t,e)=>R(e)&&new this(t)}};var nt=class extends d{static OPERATORS=["->","->>","#>","#>>"];OPERATOR="";LHS=null;RHS=null;path(t,e,r){if(!this.constructor.OPERATORS.includes(e))throw new Error(`Unknown operator: "${e}".`);this.build("LHS",[t],[lt,A]),this.build("RHS",[r],[lt,wt,ft]),this.OPERATOR=e}toJSON(){return{lhs:this.LHS?.toJSON(),rhs:this.RHS?.toJSON(),operator:this.OPERATOR,flags:this.FLAGS}}static fromJSON(t,e){if(!this.OPERATORS.includes(e?.operator))return;let r=new this(t).withFlag(...e.flags||[]);return r.path(e.lhs,e.operator,e.rhs),r}stringify(){return`${this.LHS} ${this.OPERATOR} ${this.RHS}`}static parse(t,e,r){if((t?.params?.inputDialect||t?.params?.dialect)==="mysql")return;let{tokens:s,matches:n}=m.lex(e,this.OPERATORS,{limit:1});if(!n.length)return;let i=new this(t),o=r(i,s[0],[lt,A]),c=r(i,s[1].trim(),[lt,wt,ft]);return i.path(o,n[0],c),i}static factoryMethods={path:(t,e,r,s)=>this.OPERATORS.includes(r)&&new this(t)}};var Z=class u extends d{static ARR_RIGHT="~>";static ARR_LEFT="<~";OPERATOR="";LHS=null;RHS=null;UUID=null;get isOutgoing(){return this.OPERATOR===this.constructor.ARR_RIGHT}get isIncoming(){return this.OPERATOR===this.constructor.ARR_LEFT}get uuid(){return this.UUID||(this.UUID=`$path:${(0|Math.random()*9e6).toString(36)}`),this.UUID}path(t,e,r){let s=this.constructor;if(![s.ARR_LEFT,s.ARR_RIGHT].includes(e))throw new Error(`Unknown operator: "${e}".`);this.build("LHS",[t],A),this.build("RHS",[r],[s,nt,A]),this.OPERATOR=e}async eval(){let t=this.$trace("get:api:client");if(!t)throw new Error("No client API in context.");let e=p=>p.primaryKey()?.columns()[0],r=async(p,E)=>{let S=[...p.NODES].find(N=>N.TYPE==="FOREIGN_KEY"&&N.columns().includes(E.NAME))?.targetTable();return S&&!S.BASENAME?A.fromJSON(this,[await t.basenameGet(S.NAME),S.NAME]):S},s=async(p,E)=>{let S=t.database(E);if(await S.hasTable(p))return X.fromJSON(S,await S.describeTable(p))};if(this.isIncoming){if(!(this.RHS instanceof u))throw new Error(`Unterminated path: ${this.RHS}`);let p,E,S,N;if(this.RHS.isIncoming){if(!(this.RHS.RHS instanceof u))throw new Error(`Unterminated path: ${this.RHS.RHS}`);({LHS:p,RHS:N}=this),{schema:S,table:E}=(await N.eval()).lhs}else if({LHS:p,RHS:{LHS:E,RHS:N}}=this,E.BASENAME||(E=A.fromJSON(this,[await t.basenameGet(E.NAME),E.NAME])),S=await s(E.NAME,E.BASENAME),!S)throw new Error(`[${this}]: The implied table ${E} does not exist.`);let T=await r(S,p);if(!T)throw new Error(`[${this}]: Table ${E} does not define the implied foreign key: ${p}.`);let O=await s(T.NAME,T.BASENAME);if(!O)throw new Error(`[${this}]: The implied table ${T} does not exist.`);let _=e(O);if(!_)throw new Error(`[${this}]: Table ${O} does not define a primary key.`);return{lhs:{table:T,schema:O,primaryKey:_},rhs:{table:E,schema:S,foreignKey:p,path:N}}}let n=await je.call(this);if(!n)throw new Error("No tables in query.");let i=await s(n.NAME,n.BASENAME);if(!i)throw new Error(`[${this}]: The implied table ${n} does not exist.`);let{LHS:o,RHS:c}=this,f=await r(i,o);if(!f)throw new Error(`[${this}]: Table ${n} does not define the implied foreign key: ${o}.`);let l=await s(f.NAME,f.BASENAME);if(!l)throw new Error(`[${this}]: The implied table ${f} does not exist.`);let h=e(l);if(!h)throw new Error(`[${this}]: Table ${f} does not define a primary key.`);return{lhs:{table:n,schema:i,foreignKey:o},rhs:{table:f,schema:l,primaryKey:h,path:c}}}async plot(){if(this.JOINT)return;let t=this.$trace("get:node:statement"),e=await je.call(this);if(!e)throw new Error("No tables in query.");let{lhs:r,rhs:s}=await this.eval(),n=r.foreignKey?.NAME||r.primaryKey,i=s.primaryKey||s.foreignKey.NAME;if(r.primaryKey&&(r.table.NAME.toLowerCase()!==e.NAME.toLowerCase()||r.table.BASENAME.toLowerCase()!==e.BASENAME.toLowerCase()))throw new Error(`[${this}]: Cannot resolve incoming path to base table ${e.EXPR}.`);let o=`_view:${[n,s.table.BASENAME,s.table.NAME,i].join(":")}`,c=()=>this.JOINT=t.JOIN_LIST.find(f=>f.ALIAS.NAME.toLowerCase()===o.toLowerCase());if(!c()){let f=this.$trace("get:node:table").ALIAS?.NAME||e.NAME,l=`${i}:${(0|Math.random()*9e6).toString(36)}`;t.leftJoin(h=>h.query(p=>p.select(E=>E.name(i).as(l)),p=>p.from([s.table.BASENAME,s.table.NAME].filter(E=>E)))).with({IS_SMART_JOIN:!0}).as(o).on(h=>h.equals([o,l],[f,n])),c()}this.JOINT.EXPR.select(f=>f.expr(s.path.toJSON()).as(this.uuid))}toJSON(){return{lhs:this.LHS?.toJSON(),rhs:this.RHS?.toJSON(),operator:this.OPERATOR,flags:this.FLAGS}}static fromJSON(t,e){if(![this.ARR_LEFT,this.ARR_RIGHT].includes(e?.operator))return;let r=new this(t).withFlag(...e.flags||[]);return r.path(e.lhs,e.operator,e.rhs),r}stringify(){return this.JOINT?this.autoEsc([this.JOINT.ALIAS.NAME,this.uuid]).join("."):`${this.LHS} ${this.OPERATOR} ${this.RHS}`}static parse(t,e,r){let{tokens:s,matches:n}=m.lex(e,[this.ARR_LEFT,this.ARR_RIGHT],{limit:1});if(!n.length)return;let i=new this(t),o=r(i,s[0],[A]),c=r(i,s[1],n[0]===this.ARR_LEFT?[this]:[this,nt,A]);return i.path(o,n[0],c),i}static factoryMethods={path:(t,e,r,s)=>[this.ARR_LEFT,this.ARR_RIGHT].includes(r)&&new this(t)}};async function je(){let u=this.$trace("get:name:table");if(u){let t=this.$trace("get:name:database");return A.fromJSON(this,[t||await this.$trace("get:api:client")?.basenameGet(u),u])}}var Kt=class extends d{$EXPR;ALIAS;CLAUSED;get NAME(){return this.$EXPR?.NAME}get BASENAME(){return this.$EXPR?.BASENAME}get EXPR(){return this.$EXPR?.EXPR||this.$EXPR}name(t){return this.build("$EXPR",[t],A,"name"),this}query(...t){return this.build("$EXPR",t,j,"query"),this}expr(t){return this.build("$EXPR",[t],this.constructor.exprTypes),this}as(t,e=!0){return this.build("ALIAS",[t],A),this.CLAUSED=e,this}toJSON(){return{expr:this.$EXPR?.toJSON(),alias:this.ALIAS?.toJSON(),claused:this.CLAUSED,flags:this.FLAGS}}static fromJSON(t,e){let r=new this(t).withFlag(...e.flags||[]);return e?.expr?(r.expr(e.expr),e.alias&&r.as(e.alias,e.claused)):e&&r.expr(e),r}stringify(){let t=this.ALIAS||this.$EXPR instanceof Z&&this.$EXPR.JOINT&&this.autoEsc(this.$EXPR.clone().stringify());return[this.$EXPR,this.CLAUSED?"AS":"",t].filter(e=>e).join(" ")}static parse(t,e,r){let s=new this(t),n=this.getEscChar(t,!0),[,i,o,c,,f]=new RegExp(`^([\\s\\S]+?)(?:(\\s+AS\\s+|(?<!(?:~>|<~))\\s+)(?:([\\w]+)|(${n})((?:\\4\\4|[^\\4])+)\\4))?$`,"i").exec(e.trim())||[],l,h=c||f;if(h&&!o?.trim()&&!i.trim().endsWith(")")){try{l=r(s,i,this.exprTypes)}catch{}l||(h=c=f=null,i=e)}if(l||(l=r(s,i,this.exprTypes)),s.expr(l),h){let p=c||this.autoUnesc(s,f),E=!!o?.trim();s.as(p,E)}return s}static get exprTypes(){return C.Types.filter(t=>t!==Et)}};var D=class extends Kt{static get exprTypes(){return[j,A]}};var b=class extends D{TYPE="";CORRELATION=null;full(t){return this.TYPE="JOIN",this.expr(t),this}left(t){return this.TYPE="LEFT_JOIN",this.expr(t),this}right(t){return this.TYPE="RIGHT_JOIN",this.expr(t),this}inner(t){return this.TYPE="INNER_JOIN",this.expr(t),this}cross(t){return this.TYPE="CROSS_JOIN",this.expr(t),this}on(...t){return this.build("CORRELATION",t,w,"and")}using(t){return this.build("CORRELATION",[t],A)}toJSON(){return{type:this.TYPE,correlation:this.CORRELATION?.toJSON(),...super.toJSON()}}static fromJSON(t,e){let r=super.fromJSON(t,e);if(!(!r||!e.type))return e?.expr&&e.type&&(r.TYPE=e.type),e?.expr&&e.correlation&&r.build("CORRELATION",[e.correlation],[A,w]),r}stringify(){return[this.TYPE?.replace(/_/," ").toUpperCase()||"JOIN",super.stringify(),this.CORRELATION instanceof A?`USING ${this.CORRELATION}`:`ON ${this.CORRELATION}`].filter(t=>t).join(" ")}static parse(t,e,r){let[s,n,i]=e.match(new RegExp(`^${this.regex}([\\s\\S]*)$`,"i"))||[];if(!s)return;let{tokens:[o,c],matches:f}=m.lex(i,["\\s+(?:ON|USING)\\s+"],{useRegex:"i"}),l=super.parse(t,o.trim(),r);return l.TYPE=n.trim().toUpperCase()+"_JOIN",/USING/i.test(f[0])?l.using(r(l,c.trim(),[A])):/ON/i.test(f[0])&&l.on(r(l,c.trim(),[w,J])),l}static regex="(INNER\\s+|CROSS\\s+|(?:LEFT|RIGHT)(?:\\s+OUTER)?\\s+)?JOIN"};var dt=class extends d{NAME="";ARGS=[];fn(t,...e){return this.NAME=t,this.build("ARGS",e,C.Types)}toJSON(){return{name:this.NAME,args:this.ARGS.map(t=>t.toJSON()),flags:this.FLAGS}}static fromJSON(t,e){if(typeof e?.name!="string"||!Array.isArray(e.args))return;let r=new this(t).withFlag(...e.flags||[]);return r.fn(e.name,...e.args),r}stringify(){return`${this.NAME.toUpperCase()}(${this.ARGS.join(", ")})`}static parse(t,e,r){if(!e.endsWith(")")||m.match(e,[" "]).length)return;let[,s,n=""]=/^(\w+)\(([\s\S]+)?\)$/i.exec(e),i=new this(t);return i.fn(s,...m.split(n,[","]).map(o=>r(i,o.trim()))),i}};var me=class extends d{CRITERIA=[];criterion(...t){return this.build("CRITERIA",t,C.Types)}toJSON(){return{criteria:this.CRITERIA.map(t=>t.toJSON()),flags:this.FLAGS}}static fromJSON(t,e){if(!Array.isArray(e?.criteria))return;let r=new this(t).withFlag(...e.flags||[]);return r.criterion(...e.criteria),r}stringify(){return this.CRITERIA.map(t=>[t,...t.FLAGS].join(" ")).join(", ")}static parse(t,e,r){let[s,n]=e.match(new RegExp(`^${this.regex}([\\s\\S]*)$`,"i"))||[];if(!s)return;let i=new this(t);for(let o of m.split(n.trim(),[","])){let[,c,f]=/([\s\S]+)\s+(ASC|DESC)$/i.exec(o)||[,o];i.criterion(r(i,c).withFlag(f))}return i}static regex="ORDER\\s+BY"};var F=class extends me{withRollup(){return this.withFlag("WITH_ROLLUP")}stringify(){return["ORDER BY",super.stringify(),...this.FLAGS.map(t=>t.replace(/_/g," "))].join(" ")}static parse(t,e,r){let{tokens:[s],matches:n}=m.lex(e,["\\s+WITH\\s+ROLLUP$"],{useRegex:"i"}),i=super.parse(t,s.trim(),r);if(i)return n.length&&i.withFlag("WITH_ROLLUP"),i}};var Wt=class extends d{CRITERIA=[];criterion(...t){return this.build("CRITERIA",t,C.Types)}stringify(){return this.CRITERIA.map(t=>t.stringify()).join(",")}toJSON(){return{criteria:this.CRITERIA.map(t=>t.toJSON()),flags:this.FLAGS}}static fromJSON(t,e){if(!Array.isArray(e?.criteria))return;let r=new this(t).withFlag(...e.flags||[]);return r.criterion(...e.criteria),r}static parse(t,e,r){let[s,n]=e.match(new RegExp(`^${this.regex}([\\s\\S]*)$`,"i"))||[];if(!s)return;let i=new this(t);for(let o of m.split(n.trim(),[","]))i.criterion(r(i,o));return i}static regex="GROUP\\s+BY"};var Qt=class extends Wt{stringify(){return["PARTITION BY",super.stringify()].join(" ")}static regex="PARTITION\\s+BY"};var bt=class extends d{NAME;WINDOW_REF;PARTITION_BY_CLAUSE;ORDER_BY_CLAUSE;name(t){return this.NAME=t,this}existing(t){return this.WINDOW_REF=t,this}extends(t){return this.WINDOW_REF=t,this}partitionBy(...t){if(this.WINDOW_REF)throw new Error("The PARTITION BY clause is not allowed when inheriting from a base window.");return this.build("PARTITION_BY_CLAUSE",t,Qt,"criterion")}orderBy(...t){return this.build("ORDER_BY_CLAUSE",t,F,"criterion")}toJSON(){return{name:this.NAME,window_ref:this.WINDOW_REF,partition_by_clause:this.PARTITION_BY_CLAUSE?.toJSON(),order_by_clause:this.ORDER_BY_CLAUSE?.toJSON()}}static fromJSON(t,e){if(typeof e=="string")e={window_ref:e};else if(!(typeof e=="object"&&e)||!["name","window_ref","partition_by_clause","order_by_clause"].some(s=>s in e))return;let r=new this(t);return e.name&&r.name(e.name),e.window_ref&&r.extends(e.window_ref),e.partition_by_clause&&r.partitionBy(e.partition_by_clause),e.order_by_clause&&r.orderBy(e.order_by_clause),r}stringify(){let t=[];return!this.NAME&&this.WINDOW_REF&&!this.PARTITION_BY_CLAUSE&&!this.ORDER_BY_CLAUSE?t.push(this.WINDOW_REF):(this.NAME&&t.push(`${this.NAME} AS `),t.push(`(${[this.WINDOW_REF,this.PARTITION_BY_CLAUSE,this.ORDER_BY_CLAUSE].filter(e=>e).join(" ")})`)),t.join("")}static parse(t,e,r){let s=new this(t),n=async c=>{let{tokens:[f,...l],matches:h}=m.lex($(c.trim(),"(",")"),["PARTITION\\s+BY","ORDER\\s+BY"],{useRegex:"i",preserveDelims:!0});f.trim()&&s.extends(f.trim());for(let p of h){if(/PARTITION\s+BY/i.test(p)){s.partitionBy(r(s,l.shift().trim(),[Qt]));continue}s.orderBy(r(s,l.shift().trim(),[F]))}},i=e.endsWith(")");if(i&&!e.startsWith("(")){let[c,f]=spec.split(new RegExp(" AS ","i"));s.name(c.trim()),n(f)}else i?n(e):s.existing(e);return s}static regex="WINDOW|OVER"};var ht=class extends dt{ORDER_BY_CLAUSE;OVER_CLAUSE;fn(...t){return super.fn(...t),this}orderBy(...t){return this.build("ORDER_BY_CLAUSE",t,F,"criterion"),this}over(t){return t||(t={name:""}),this.build("OVER_CLAUSE",[t],bt),this.OVER_CLAUSE}toJSON(){return{...super.toJSON(),order_by_clause:this.ORDER_BY_CLAUSE?.toJSON(),over_clause:this.OVER_CLAUSE?.toJSON()}}static fromJSON(t,e){let r=super.fromJSON(t,e);if(r)return this.names.flat().includes(r.NAME.toUpperCase())&&(e.order_by_clause&&r.orderBy(e.order_by_clause),e.over_clause&&r.over(e.over_clause)),r}stringify(){return`${this.NAME.toUpperCase()}(${[...this.FLAGS,this.ARGS.join(","),this.ORDER_BY_CLAUSE].filter(e=>e).join(" ")})`+(this.OVER_CLAUSE?` OVER ${this.OVER_CLAUSE}`:"")}static parse(t,e,r){let[s,n]=m.split(e,["OVER\\s+"],{useRegex:"i"}).map(p=>p.trim());if(!s.endsWith(")")||m.match(s,[" "]).length)return;let[,i,o,c=""]=/^(\w+)\((?:\s+)?(?:(ALL|DISTINCT)\s+)?([\s\S]+)?\)$/i.exec(s);if(!this.names.flat().includes(i.toUpperCase()))return;let[,f,l]=/^([\s\S]+)(?:\s+(ORDER\s+BY\s+.+))$/i.exec(c)||[,c],h=super.parse(t,`${i}(${f})`,r);return o&&h.withFlag(o),l?h.orderBy(r(h,l,[F])):n&&h.over(r(h,n,[bt])),h}static factoryMethods={fn:(t,e,...r)=>this.names.flat().includes(e?.toUpperCase())&&new this(t)};static names=[["AVG","BIT_AND","BIT_OR","BIT_XOR","COUNT","JSON_ARRAYAGG","JSON_OBJECTAGG","MAX","MIN","STDDEV_POP","STDDEV","STD","STDDEV_SAMP","SUM","VAR_POP","VARIANCE","VAR_SAMP","GROUP_CONCAT","GROUP_CONCAT_WS"],["CUME_DIST","DENSE_RANK","FIRST_VALUE","LAG","LAST_VALUE","LEAD","NTH_VALUE","NTLE","PERCENT_RANK","RANK","ROW_NUMBER"],["ANY_VALUE","COLUMN","COLUMNS","GROUPING"]]};var H=class extends Kt{path(t,e,r){return this.build("$EXPR",[t,e,r],nt.OPERATORS.includes(e)?nt:Z,"path"),this}fn(t,...e){return this.build("$EXPR",[t,...e],ht.names.flat().includes(t.toUpperCase())?ht:dt,"fn"),this}case(...t){return this.build("$EXPR",t,Pt),this}};var zt=class extends d{WINDOWS_LIST=[];define(...t){return this.build("WINDOWS_LIST",t,bt)}toJSON(){return{window_list:this.WINDOWS_LIST.map(t=>t.toJSON())}}static fromJSON(t,e){if(!Array.isArray(e?.window_list))return;let r=new this(t);return r.define(...e.window_list),r}stringify(){return`WINDOW ${this.WINDOWS_LIST.join(",")}`}static parse(t,e,r){let[s,n]=e.match(new RegExp(`^${this.regex}([\\s\\S]*)$`,"i"))||[];if(!s)return;let i=new this(t);for(let o of m.split(n,[","]))i.define(r(i,o.trim(),[Window]));return i}static regex="WINDOW"};var Zt=class extends Wt{withRollup(){return this.withFlag("WITH_ROLLUP")}stringify(){return["GROUP BY",super.stringify(),...this.FLAGS.map(t=>t.replace(/_/g," "))].join(" ")}static parse(t,e,r){let{tokens:[s],matches:n}=m.lex(e,["\\s+WITH\\s+ROLLUP$"],{useRegex:"i"}),i=super.parse(t,s,r);if(i)return n.length&&i.withFlag("WITH_ROLLUP"),i}};var k=class u extends rt{SELECT_LIST=[];FROM_LIST=[];JOIN_LIST=[];WHERE_CLAUSE=null;GROUP_BY_CLAUSE=null;HAVING_CLAUSE=null;WINDOW_CLAUSE=null;ORDER_BY_CLAUSE=null;OFFSET_CLAUSE=null;LIMIT_CLAUSE=null;UNION_CLAUSE=null;AGGRS=[];PATHS=[];VARS=[];SUBQUERIES=[];$trace(t,...e){return t==="get:node:table"?this.FROM_LIST[0]:(t==="event:connected"&&(e[0]instanceof ht&&this.AGGRS.push(e[0]),e[0]instanceof Z&&!(e[0].CONTEXT instanceof Z)&&this.PATHS.push(e[0]),e[0]instanceof Jt&&this.VARS.push(e[0]),e[0]instanceof u&&this.SUBQUERIES.push(e[0])),super.$trace(t,...e))}select(...t){return this.build("SELECT_LIST",t,H)}from(...t){return this.build("FROM_LIST",t,D),this.FROM_LIST[this.FROM_LIST.length-1]}join(t){return this.build("JOIN_LIST",[t],b,"full")}leftJoin(t){return this.build("JOIN_LIST",[t],b,"left")}rightJoin(t){return this.build("JOIN_LIST",[t],b,"right")}innerJoin(t){return this.build("JOIN_LIST",[t],b,"inner")}crossJoin(t){return this.build("JOIN_LIST",[t],b,"cross")}where(...t){return this.build("WHERE_CLAUSE",t,w,"and")}groupBy(...t){return this.build("GROUP_BY_CLAUSE",t,Zt,"criterion"),this.GROUP_BY_CLAUSE}having(...t){return this.build("HAVING_CLAUSE",t,w,"and")}window(...t){return this.build("WINDOW_CLAUSE",t,zt,"define")}orderBy(...t){return this.build("ORDER_BY_CLAUSE",t,F,"criterion"),this.ORDER_BY_CLAUSE}offset(t){if(typeof t!="number")throw new Error("Offsets must be of type number.");this.OFFSET_CLAUSE=t}limit(...t){if(!t.every(e=>typeof e=="number"))throw new Error("Limits must be of type number.");this.LIMIT_CLAUSE=t}union(...t){return this.build("UNION_CLAUSE",t,this.constructor,"select"),this.UNION_CLAUSE}get expandable(){return this.PATHS.length>0||this.SUBQUERIES.some(t=>t.expandable)}async expand(t=!1){let e=t?this:this.clone();if(!e.expandable)return e;for(let r of e.PATHS)await r.plot();for(let r of e.SUBQUERIES)await r.expand(!0);return e}toJSON(){return{select_list:this.SELECT_LIST.map(t=>t.toJSON()),from_list:this.FROM_LIST.map(t=>t.toJSON()),join_list:this.JOIN_LIST.map(t=>t.toJSON()),where_clause:this.WHERE_CLAUSE?.toJSON(),group_by_clause:this.GROUP_BY_CLAUSE?.toJSON(),having_clause:this.HAVING_CLAUSE?.toJSON(),window_clause:this.WINDOW_CLAUSE?.toJSON(),order_by_clause:this.ORDER_BY_CLAUSE?.toJSON(),offset_clause:this.OFFSET_CLAUSE,limit_clause:this.LIMIT_CLAUSE,union_clause:this.UNION_CLAUSE,flags:this.FLAGS}}static fromJSON(t,e){if(!Array.isArray(e?.select_list))return;let r=new this(t).withFlag(...e.flags||[]);return r.select(...e.select_list),e.from_list?.length&&r.from(...e.from_list),e.join_list?.length&&r.join(...e.join_list),e.where_clause&&r.where(e.where_clause),e.group_by_clause&&r.groupBy(e.group_by_clause),e.having_clause&&r.having(e.having_clause),e.window_clause&&r.window(e.window_clause),e.order_by_clause&&r.orderBy(e.order_by_clause),e.offset_clause&&r.offset(e.offset_clause),e.limit_clause&&r.limit(e.limit_clause),e.union_clause&&r.union(e.union_clause),r}stringify(t={}){let e=["SELECT"];return this.FLAGS.length&&e.push(this.FLAGS.map(r=>r.replace(/_/g," "))),e.push(this.SELECT_LIST.join(", ")),this.FROM_LIST.length&&e.push("FROM",this.FROM_LIST.join(", ")),this.JOIN_LIST.length&&e.push(...this.JOIN_LIST),this.WHERE_CLAUSE&&e.push("WHERE",this.WHERE_CLAUSE),this.GROUP_BY_CLAUSE&&e.push(this.GROUP_BY_CLAUSE),this.HAVING_CLAUSE&&e.push("HAVING",this.HAVING_CLAUSE),this.WINDOW_CLAUSE&&e.push(this.WINDOW_CLAUSE),this.ORDER_BY_CLAUSE&&e.push(this.ORDER_BY_CLAUSE),this.OFFSET_CLAUSE&&e.push("OFFSET",this.OFFSET_CLAUSE),this.LIMIT_CLAUSE&&e.push("LIMIT",(Array.isArray(this.LIMIT_CLAUSE)?this.LIMIT_CLAUSE:[this.LIMIT_CLAUSE]).join(",")),this.UNION_CLAUSE&&e.push("UNION",this.UNION_CLAUSE),e.join(" ")}static parse(t,e,r){let[s,n,i,o]=/^SELECT\s+(?:(WITH\s+UAC)\s+)?(ALL|DISTINCT)?([\s\S]+)$/i.exec(e.trim())||[];if(!s)return;let c=new this(t);n&&c.withFlag("WITH_UAC"),i&&c.withFlag(i);let f=this.mySubstitutePlaceholders(c,o.trim()),l={from:{backtest:"^(?!.*\\s+DISTINCT\\s+$)",test:"FROM"},join:b,where:"WHERE",groupBy:Zt,having:"HAVING",window:zt,orderBy:F,offset:"OFFSET",limit:"LIMIT",union:"UNION"},{tokens:[h,...p],matches:E}=m.lex(f,Object.values(l).map(S=>typeof S=="string"||S.test?S:S.regex),{useRegex:"i"});for(let S of m.split(h,[","])){let N=r(c,S.trim(),[H]);c.select(N)}for(let S of E){let N=S.replace(/\s+/g,""),T=Object.keys(l).find(O=>new RegExp(O,"i").test(N));if(T==="from")for(let O of m.split(p.shift(),[","])){let _=r(c,O.trim(),[D]);c.from(_)}else if(["where","having"].includes(T)){let O=r(c,p.shift().trim(),[w,J]);c[T](O)}else if(T==="UNION"){let O=r(c,p.shift().trim(),[this]);c[T](O)}else if(["offset","limit"].includes(T)){let O=p.shift().split(",").map(_=>parseInt(_.trim()));c[T](...O)}else{let O=r(c,`${S} ${p.shift().trim()}`,[l[T]]);c[T](O)}}return c}};var j=class extends d{$EXPR;constructor(t,e){super(t),this.$EXPR=e}get NAME(){return this.$EXPR?.NAME}get BASENAME(){return this.$EXPR?.BASENAME}get EXPR(){return this.$EXPR?.EXPR||this.$EXPR}query(...t){return this.build("$EXPR",t,k),this.$EXPR}expr(...t){return this.build("$EXPR",t,[k,...C.Types]),this.$EXPR}toJSON(){return{expr:this.$EXPR?.toJSON(),flags:this.FLAGS}}static fromJSON(t,e){if(!e?.expr||Object.keys(e).length!==(e.flags?2:1))return;let r=new this(t).withFlag(...e.flags||[]);return r.expr(e.expr),r}stringify(){return"("+this.$EXPR.stringify()+")"}static parse(t,e,r){if(!(!U(e,"(",")")||m.match(e,[" "]).length&&m.split(e,[]).length===2))return new this(t,r(t,$(e,"(",")"),[k,...C.Types]))}};var w=class u extends d{LOGIC="";ASSERTIONS=[];constructor(t,e){super(t),this.LOGIC=e}and(...t){return this.LOGIC==="OR"?new this.constructor(this).and(this,...t):(this.LOGIC="AND",this.build("ASSERTIONS",t,[u,J,j]),this)}or(...t){return this.LOGIC==="AND"?new this.constructor(this).or(this,...t):(this.LOGIC="OR",this.build("ASSERTIONS",t,[u,J,j]),this)}toJSON(){return{logic:this.LOGIC,assertions:this.ASSERTIONS.map(t=>t.toJSON()),flags:this.FLAGS}}static fromJSON(t,e){if(typeof e?.logic!="string"||!/AND|OR/i.test(e.logic)||!Array.isArray(e.assertions))return;let r=new this(t).withFlag(...e.flags||[]);return r[e.logic.toLowerCase()](...e.assertions),r}stringify(){return this.ASSERTIONS.map(t=>t instanceof u?`(${t.stringify()})`:t.stringify()).join(" "+this.LOGIC+" ")}static parse(t,e,r){for(let s of["AND","OR"]){let n=m.split(e,[`\\s+${s}\\s+`],{useRegex:"i"});if(n.length>1){let i=new this(t,s);for(let o of n)i[s.toLowerCase()](r(i,o));return i}}}};var pe=class extends d{OPERAND=null;TYPE="";SYNTAX2=!1;cast(t,e,r=!1){return this.TYPE=e,this.SYNTAX2=r,this.build("OPERAND",[t],C.Types)}toJSON(){return{operand:this.OPERAND?.toJSON(),type:this.TYPE,syntax2:this.SYNTAX2,flags:this.FLAGS}}static fromJSON(t,e){if(!e?.operand||!e?.type)return;let r=new this(t).withFlag(...e.flags||[]);return r.cast(e.operand,e.type,e.syntax2),r}stringify(){return this.SYNTAX2?`${this.OPERAND}::${this.TYPE}`:`CAST(${this.OPERAND} AS ${this.TYPE})`}static parse(t,e,r){let s,n,i=!1;if(/^CAST(?:\s+)?\([\s\S]+\)$/i.test(e)){let[,c]=m.split(e,[]);[s,n]=m.split(c.slice(1,-1),["AS"],{useRegex:"i"})}else{if((t?.params?.inputDialect||t?.params?.dialect)==="mysql"||([s,n]=m.split(e,["::"]),!n))return;i=!0}let o=new this(t);return o.cast(r(o,s.trim()),n.trim(),i),o}};var Ee=class extends d{OPERATOR="";OPERANDS=[];constructor(t,e,...r){super(t),this.OPERATOR=e,this.OPERANDS=r}calc(t,...e){return this.OPERATOR&&this.OPERATOR!==t?new this.constructor(this).calc(t,this,...e):(this.OPERATOR=t,this.build("OPERANDS",e,C.Types),this)}sum(...t){return this.calc("+",...t)}sub(...t){return this.calc("-",...t)}div(...t){return this.calc("/",...t)}times(...t){return this.calc("*",...t)}toJSON(){return{operator:this.OPERATOR,operands:this.OPERANDS.map(t=>t.toJSON()),flags:this.FLAGS}}static fromJSON(t,e){if(typeof e?.operator!="string"||!/\+|\-|\*|\//.test(e.operator)||!Array.isArray(e.operands))return;let r=new this(t).withFlag(...e.flags||[]);return r.calc(e.operator,...e.operands),r}stringify(){return this.OPERANDS.join(` ${this.OPERATOR} `)}static parse(t,e,r){for(let s of["\\*","\\/","\\+","\\-"]){let{tokens:n,matches:i}=m.lex(e,[`(\\s+)?${s}(\\s+)?`],{useRegex:"i"});if(!(n.filter(o=>o.trim()).length<2))return new this(t,i.pop().trim(),...n.map(o=>r(t,o.trim())))}}};var Se=class extends d{STRINGS=[];join(...t){return this.build("STRINGS",t,C.Types)}toJSON(){return{strings:this.STRINGS.map(t=>t.toJSON()),flags:this.FLAGS}}static fromJSON(t,e){if(!Array.isArray(e?.strings))return;let r=new this(t).withFlag(...e.flags||[]);return r.join(...e.strings),r}stringify(){return this.STRINGS.join(" || ")}static parse(t,e,r){if((t?.params?.inputDialect||t?.params?.dialect)==="mysql")return;let s=m.split(e,["||"]);if(s.length<2)return;let n=new this(t);return n.join(...s.map(i=>r(n,i.trim()))),n}};var C=class{static cast(t,e,r=this.Types){if(typeof e=="function"){if(r.length===1){let i=new r[0](t);return e(i),i}let s,n=i=>(...o)=>{let c=r.reduce((f,l)=>f||(l.factoryMethods?typeof l.factoryMethods[i]=="function"&&l.factoryMethods[i](t,...o):typeof l.prototype[i]=="function"&&new l(t)),null);if(!c)throw new Error(`Unknown method: ${i}()`);if(s=c,c[i])return c[i](...o);for(let f of o)f(c)};return e(new Proxy({},{get:(i,o)=>n(o)})),s}return this.fromJSON(t,e,r)}static fromJSON(t,e,r=this.Types){let s=r.find(n=>e instanceof n)?e:r.reduce((n,i)=>n||i.fromJSON(t,e),null);if(!s)throw new Error("");return s}static parse(t,e,r){return r(t,e,this.Types)}static get Types(){return[j,Pt,Se,w,Z,nt,J,Ee,pe,ht,dt,lt,wt,ft,Jt,A,Et]}};var _t=class extends d{LIST=[];list(...t){return this.build("LIST",t,A),this}toJSON(){return{list:this.LIST.map(t=>t.toJSON())}}static fromJSON(t,e){if(Array.isArray(e?.list))return new this(t).list(...e.list)}stringify(){return`(${this.LIST.join(", ")})`}static parse(t,e,r){if(!U(e,"(",")"))return;let s=new this(t);return s.list(...m.split($(e,"(",")"),[","]).map(n=>r(s,n.trim(),[A]))),s}};var Ot=class extends d{LIST=[];list(...t){return this.build("LIST",t,C.Types),this}toJSON(){return{list:this.LIST.slice(0)}}static fromJSON(t,e){if(Array.isArray(e?.list))return new this(t).list(...e.list)}stringify(){return`(${this.LIST.join(", ")})`}static parse(t,e,r){if(!U(e,"(",")"))return;let s=new this(t);return s.list(...m.split($(e,"(",")"),[","]).map(n=>r(s,n.trim(),C.Types))),s}};var at=class extends d{ENTRIES=[];set(t,e){return Array.isArray(t)?(t=_t.fromJSON(this,t),Array.isArray(e)?e=Ot.fromJSON(this,e):e=C.cast(this,e)):(t=t instanceof d?t:A.fromJSON(this,t),e=e instanceof d?e:C.cast(this,e)),this.ENTRIES.push([t,e]),this}toJSON(){return{entries:this.ENTRIES.map(([t,e])=>[t.toJSON(),e.toJSON()])}}static fromJSON(t,e){if(!Array.isArray(e?.entries))return;let r=new this(t);for(let[s,n]of e.entries)r.set(s,n);return r}stringify(){return`
	${this.ENTRIES.map(([t,e])=>`${t} = ${e}`).join(`,
	`)}`}static parse(t,e,r){let s=new this(t);for(let n of m.split(e,[","])){let[i,o]=m.split(n,["="]).map(c=>c.trim()).filter(c=>c);if(!o)return;if(U(i,"(",")")){let c=r(s,o.trim(),[_t]);if(!U(o,"(",")"))return;let f=/^\((\s+)?SELECT\s+/i.test(o)?r(s,o.trim()):r(s,o.trim(),[Ot]);s.set(c,f)}else{let c=r(s,i),f=r(s,o);s.set(c,f)}}return s}};var jt=class extends at{WHERE_CLAUSE=null;CONFLICT_TARGET=[];target(...t){return this.build("CONFLICT_TARGET",t,A),this}where(...t){return this.build("WHERE_CLAUSE",t,w,"and"),this}toJSON(){return{...super.toJSON(),conflict_target:this.CONFLICT_TARGET.map(t=>t.toJSON()),where_clause:this.WHERE_CLAUSE?.toJSON()}}static fromJSON(t,e){let r=super.fromJSON(t,e);if(r)return e.conflict_target&&r.target(...[].concat(e.conflict_target)),e.where_clause&&r.where(e.where_clause),r}stringify(){let t=[];return this.params.dialect==="mysql"?t.push("ON DUPLICATE KEY UPDATE"):t.push(`ON CONFLICT ${this.CONFLICT_TARGET.length?`(${this.CONFLICT_TARGET.join(", ")})`:""} ${this.ENTRIES.length?"DO UPDATE SET":"DO NOTHING"}`),t.push(super.stringify()),this.WHERE_CLAUSE&&t.push("WHERE",this.WHERE_CLAUSE),t.join(" ")}static parse(t,e,r){let[s,n,i,o]=e.match(new RegExp(`^${this.regex}([\\s\\S]*)$`,"i"))||[];if(!s)return;if(/DO\s+NOTHING/i.test(i))return new this(t);let[c,f]=m.split(o,["WHERE"],{ci:!0}),l=super.parse(t,c,r);if(n){let h=m.split(U(n,"(",")")?$(n,"(",")"):n,[","]).map(p=>r(l,p.trim(),[A]));l.target(...h)}return f&&l.where(r(l,f.trim(),[w,J])),l}static regex="ON\\s+(?:DUPLICATE\\s+KEY|CONFLICT(?:\\s+([\\s\\S]+))?)\\s+(UPDATE|DO\\s+NOTHING|DO\\s+UPDATE\\s+SET\\s+)"};var tt=class extends rt{TABLE=null;COLUMNS_CLAUSE=null;VALUES_LIST=[];SET_CLAUSE=null;SELECT_CLAUSE=null;ON_CONFLICT_CLAUSE=null;RETURNING_LIST=[];$trace(t,...e){return t==="get:node:table"?this.TABLE:super.$trace(t,...e)}into(t){return this.build("TABLE",[t],D)}columns(...t){return this.build("COLUMNS_CLAUSE",t,_t,"list")}values(...t){return this.build("VALUES_LIST",t,Ot,"list")}set(...t){return this.build("SET_CLAUSE",t,at,"set")}select(t){return this.build("SELECT_CLAUSE",[t],k)}onConflict(...t){return this.build("ON_CONFLICT_CLAUSE",t,jt)}returning(...t){return this.build("RETURNING_LIST",t,H)}toJSON(){return{table:this.TABLE.toJSON(),columns_clause:this.COLUMNS_CLAUSE?.toJSON(),values_list:this.VALUES_LIST.map(t=>t.toJSON()),set_clause:this.SET_CLAUSE?.toJSON(),select_clause:this.SELECT_CLAUSE?.toJSON(),on_conflict_clause:this.ON_CONFLICT_CLAUSE?.toJSON(),returning_list:this.RETURNING_LIST.slice(0),flags:this.FLAGS}}static fromJSON(t,e){if(!e?.table)return;let r=new this(t).withFlag(...e.flags||[]);return r.into(e.table),e.columns_clause&&r.columns(e.columns_clause),e.values_list?.length&&r.values(...e.values_list),e.set_clause&&r.set(e.set_clause),e.select_clause&&r.select(e.select_clause),e.on_conflict_clause&&r.onConflict(e.on_conflict_clause),e.returning_list?.length&&r.returning(...e.returning_list),r}stringify(){let t=["INSERT"];return this.FLAGS.length&&t.push(this.FLAGS.map(e=>e.replace(/_/g," "))),t.push("INTO",this.TABLE),this.SET_CLAUSE?t.push("SET",this.SET_CLAUSE):(this.COLUMNS_CLAUSE&&t.push(this.COLUMNS_CLAUSE),this.SELECT_CLAUSE?t.push(this.SELECT_CLAUSE):t.push("VALUES",this.VALUES_LIST)),this.ON_CONFLICT_CLAUSE&&t.push(this.ON_CONFLICT_CLAUSE),this.RETURNING_LIST.length&&t.push("RETURNING",this.RETURNING_LIST.join(", ")),t.join(" ")}static parse(t,e,r){let[s,n,i,o]=/^INSERT(\s+WITH\s+UAC)?(?:\s+(IGNORE))?(?:\s+INTO)?([\s\S]+)$/i.exec(e.trim())||[];if(!s)return;let c=this.mySubstitutePlaceholders(t,o.trim()),{tokens:[f,l,h,p],matches:[E,S]}=m.lex(c,["(VALUES|VALUE|SET|SELECT)","ON\\s+(DUPLICATE\\s+KEY|CONFLICT)","RETURNING"],{useRegex:"i"}),N=new this(t);if(n&&N.withFlag("WITH_UAC"),i&&N.withFlag(i),/^SET$/i.test(E))N.into(r(N,f,[D])),N.set(r(N,l.trim(),[at]));else{let T=m.split(f,[]);if(N.into(r(N,T.shift().trim(),[D])),T.length&&N.columns(r(N,T.shift().trim(),[_t])),/^SELECT$/i.test(E))N.select(r(N,`SELECT ${l}`));else for(let O of m.split(l,[","]))N.values(r(N,O.trim(),[Ot]))}return S&&N.onConflict(r(N,`${S} ${h}`,[jt])),p&&N.returning(...m.split(p,[","]).map(T=>r(N,T.trim(),[H]))),N}};var gt=class extends rt{TABLE_LIST=[];JOIN_LIST=[];SET_CLAUSE=null;WHERE_CLAUSE=null;ORDER_BY_CLAUSE=null;LIMIT_CLAUSE=null;RETURNING_LIST=[];$trace(t,...e){return t==="get:node:table"?this.TABLE_LIST[0]:super.$trace(t,...e)}table(...t){return this.build("TABLE_LIST",t,D)}join(t){return this.build("JOIN_LIST",[t],b,"full")}leftJoin(t){return this.build("JOIN_LIST",[t],b,"left")}rightJoin(t){return this.build("JOIN_LIST",[t],b,"right")}innerJoin(t){return this.build("JOIN_LIST",[t],b,"inner")}crossJoin(t){return this.build("JOIN_LIST",[t],b,"cross")}set(...t){return this.build("SET_CLAUSE",t,at,"set")}where(...t){return this.build("WHERE_CLAUSE",t,w,"and")}orderBy(...t){return this.build("ORDER_BY_CLAUSE",t,F,"criterion"),this.ORDER_BY_CLAUSE}limit(...t){if(!t.every(e=>typeof e=="number"))throw new Error("Limits must be of type number.");this.LIMIT_CLAUSE=t}returning(...t){return this.build("RETURNING_LIST",t,H)}toJSON(){return{table_list:this.TABLE_LIST.map(t=>t.toJSON()),join_list:this.JOIN_LIST.map(t=>t.toJSON()),set_clause:this.SET_CLAUSE?.toJSON(),where_clause:this.WHERE_CLAUSE?.toJSON(),order_by_clause:this.ORDER_BY_CLAUSE?.toJSON(),limit_clause:this.LIMIT_CLAUSE,returning_list:this.RETURNING_LIST,flags:this.FLAGS}}static fromJSON(t,e){if(!Array.isArray(e?.table_list))return;let r=new this(t).withFlag(...e.flags||[]);return r.table(...e.table_list),e.join_list?.length&&r.join(...e.join_list),e.set_clause&&r.set(e.set_clause),e.where_clause&&r.where(e.where_clause),e.order_by_clause&&r.orderBy(e.order_by_clause),e.limit_clause&&r.limit(e.limit_clause),e.returning_list?.length&&r.returning(...e.returning_list),r}stringify(){let t=["UPDATE"];return this.FLAGS.length&&t.push(this.FLAGS.map(e=>e.replace(/_/g," "))),t.push(this.TABLE_LIST.join(", ")),this.JOIN_LIST.length&&t.push(...this.JOIN_LIST),t.push("SET",this.SET_CLAUSE),this.WHERE_CLAUSE&&t.push("WHERE",this.WHERE_CLAUSE),this.ORDER_BY_CLAUSE&&t.push(this.ORDER_BY_CLAUSE),this.LIMIT_CLAUSE&&t.push("LIMIT",this.LIMIT_CLAUSE),this.RETURNING_LIST.length&&t.push("RETURNING",this.RETURNING_LIST.join(", ")),t.join(" ")}static parse(t,e,r){let[s,n,i,o]=/^UPDATE(\s+WITH\s+UAC)?(?:\s+(IGNORE))?([\s\S]+)$/i.exec(e.trim())||[];if(!s)return;let c=new this(t);n&&c.withFlag("WITH_UAC"),i&&c.withFlag(i);let f=this.mySubstitutePlaceholders(c,o.trim()),l={join:b,set:"SET",where:"WHERE",orderBy:F,limit:"LIMIT",returning:"RETURNING"},{tokens:[h,...p],matches:E}=m.lex(f,Object.values(l).map(S=>typeof S=="string"||S.test?S:S.regex),{useRegex:"i"});for(let S of m.split(h,[","])){let N=r(c,S.trim(),[D]);c.table(N)}for(let S of E){let N=S.replace(/\s+/g,""),T=Object.keys(l).find(O=>new RegExp(O,"i").test(N));if(T==="set"){let O=r(c,p.shift().trim(),[at]);c.set(O)}else if(T==="where"){let O=r(c,p.shift().trim(),[w,J]);c.where(O)}else if(T==="limit")c.limit(parseInt(p.shift().trim()));else if(T==="returning")c.returning(...m.split(p.shift(),[","]).map(O=>r(c,O.trim(),[H])));else{let O=r(c,`${S} ${p.shift().trim()}`,[l[T]]);c[T](O)}}return c}};var mt=class extends rt{DELETE_LIST=[];FROM_LIST=[];USING_LIST=[];JOIN_LIST=[];WHERE_CLAUSE=null;ORDER_BY_CLAUSE=null;LIMIT_CLAUSE=null;RETURNING_LIST=[];$trace(t,...e){return t==="get:node:table"?this.USING_LIST[0]||this.FROM_LIST[0]:super.$trace(t,...e)}delete(...t){return this.build("DELETE_LIST",t,A)}from(...t){return this.build("FROM_LIST",t,[A,D])}using(...t){return this.build("USING_LIST",t,D)}join(t){return this.build("JOIN_LIST",[t],b,"full")}leftJoin(t){return this.build("JOIN_LIST",[t],b,"left")}rightJoin(t){return this.build("JOIN_LIST",[t],b,"right")}innerJoin(t){return this.build("JOIN_LIST",[t],b,"inner")}crossJoin(t){return this.build("JOIN_LIST",[t],b,"cross")}where(...t){return this.build("WHERE_CLAUSE",t,w,"and")}orderBy(...t){return this.build("ORDER_BY_CLAUSE",t,F,"criterion"),this.ORDER_BY_CLAUSE}limit(...t){if(!t.every(e=>typeof e=="number"))throw new Error("Limits must be of type number.");this.LIMIT_CLAUSE=t}returning(...t){return this.build("RETURNING_LIST",t,H)}toJSON(){return{delete_list:this.DELETE_LIST.map(t=>t.toJSON()),from_list:this.FROM_LIST.map(t=>t.toJSON()),using_list:this.USING_LIST.map(t=>t.toJSON()),join_list:this.JOIN_LIST.map(t=>t.toJSON()),where_clause:this.WHERE_CLAUSE?.toJSON(),order_by_clause:this.ORDER_BY_CLAUSE?.toJSON(),limit_clause:this.LIMIT_CLAUSE,returning_list:this.RETURNING_LIST,flags:this.FLAGS}}static fromJSON(t,e){if(!Array.isArray(e?.from_list))return;let r=new this(t).withFlag(...e.flags||[]);return e.delete_list?.length&&r.delete(...e.delete_list),r.from(...e.from_list),e.using_list?.length&&r.using(...e.using_list),e.join_list?.length&&r.join(...e.join_list),e.where_clause&&r.where(e.where_clause),e.order_by_clause&&r.orderBy(e.order_by_clause),e.limit_clause&&r.limit(e.limit_clause),e.returning_list&&r.returning(...e.returning_list),r}stringify(){let t=["DELETE"];return this.FLAGS.length&&t.push(this.FLAGS.map(e=>e.replace(/_/g," "))),this.DELETE_LIST.length&&t.push(this.DELETE_LIST.join(", ")),t.push("FROM",this.FROM_LIST.join(", ")),this.USING_LIST.length&&t.push("USING",this.USING_LIST.join(", ")),this.JOIN_LIST.length&&t.push(...this.JOIN_LIST),this.WHERE_CLAUSE&&t.push("WHERE",this.WHERE_CLAUSE),this.ORDER_BY_CLAUSE&&t.push(this.ORDER_BY_CLAUSE),this.LIMIT_CLAUSE&&t.push("LIMIT",this.LIMIT_CLAUSE),this.RETURNING_LIST.length&&t.push("RETURNING",this.RETURNING_LIST.join(", ")),t.join(" ")}static parse(t,e,r){let[s,n,i,o]=/^DELETE(\s+WITH\s+UAC)?(?:\s+(IGNORE))?([\s\S]+)$/i.exec(e.trim())||[];if(!s)return;let c=new this(t);n&&c.withFlag("WITH_UAC"),i&&c.withFlag(i);let f=this.mySubstitutePlaceholders(c,o.trim()),l={from:{backtest:"^(?!.*\\s+DISTINCT\\s+$)",test:"FROM"},using:{backtest:"^(?!.*\\s+JOIN\\s+)",test:"USING"},join:b,where:"WHERE",orderBy:F,limit:"LIMIT",returning:"RETURNING"},{tokens:[h,...p],matches:E}=m.lex(f,Object.values(l).map(S=>typeof S=="string"||S.test?S:S.regex),{useRegex:"i"});for(let S of m.split(h,[","])){let N=r(c,S.trim(),[A]);c.delete(N)}for(let S of E){let N=S.replace(/\s+/g,""),T=Object.keys(l).find(O=>new RegExp(O,"i").test(N));if(["from","using"].includes(T))for(let O of m.split(p.shift(),[","])){let _=T==="from"&&E.some(L=>L.toLowerCase()==="using")?A:D,g=r(c,O.trim(),[_]);c[T](g)}else if(T==="where"){let O=r(c,p.shift().trim(),[w,J]);c.where(O)}else if(T==="limit")c.limit(parseInt(p.shift().trim()));else if(T==="returning")c.returning(...m.split(p.shift(),[","]).map(O=>r(c,O.trim(),[H])));else{let O=r(c,`${S} ${p.shift().trim()}`,[l[T]]);c[T](O)}}return c}};var G=class extends Lt(B){toJSON(){return{name:this.NAME.toJSON(),...super.toJSON()}}static fromJSON(t,e){if(e.name)return super.fromJSON(t,e)?.name(e.name)}stringify(){let t=this.getFlag("RESTRICT")||this.getFlag("CASCADE"),r=(s=>{if(s.BASENAME||["SCHEMA","DATABASE"].includes(this.KIND))return s;let n=this.$trace("get:name:database");return s.clone().name([n,s.NAME])})(this.name());return`${this.CLAUSE}${this.getFlag("TEMPORARY")?" TEMPORARY":""} ${this.KIND}${this.hasFlag("IF_EXISTS")?" IF EXISTS":""} ${r}${t?` ${t}`:""}`}static parse(t,e,r){let[s,n,i,o,c,f]=new RegExp(`^${this.CLAUSE}\\s+(TEMPORARY\\s+)?(${this.KINDS.map(h=>h).join("|")})\\s+(?:(IF\\s+EXISTS)\\s+)?([\\s\\S]+?)(?:\\s+(RESTRICT|CASCADE|FORCE))?$`,"i").exec(e.trim())||[];if(!s)return;let l=new this(t,i.toUpperCase());return l.name(r(l,c,[A])),n&&l.withFlag("TEMPORARY"),o&&l.withFlag("IF_EXISTS"),f&&l.withFlag(f),l}static get CLAUSE(){return"DROP"}static KINDS=["TABLE","SCHEMA","DATABASE"]};var et=class extends Ft{TABLES=[];static get SUBTREE_PROPS(){return["TABLES"]}$trace(t,...e){return t==="get:schema:database"?this:t==="get:name:database"?this.NAME.NAME:super.$trace(t,...e)}table(t){return typeof t=="string"?this.TABLES.find(e=>this.isSame(e.name().NAME,t,"ci")):(this.build("TABLES",[t],X),this.TABLES[this.TABLES.length-1])}diffWith(t){super.diffWith(t);let e=(i,o)=>i.TABLES.find(c=>this.isSame(c.NAME.NAME,o,"ci")),r=i=>new Set(i.TABLES.map(o=>o.NAME.NAME)),s=r(this),n=r(t);for(let i of new Set([...s,...n])){let o=e(this,i),c=e(t,i);s.has(i)&&!n.has(i)?o.drop():s.has(i)?o.diffWith(c):this.table(c.toJSON())}return this}alterWith(t){let e=(r,s=!1)=>{let n=this.TABLES.find(i=>this.isSame(i.NAME.NAME,r,"ci"));if(!n&&!s)throw new Error(`TABLE ${r} does not exist.`);return n};for(let r of t.ACTIONS)if(r.CLAUSE==="RENAME")r.KIND?e(r.name()).name(r.argument()):this.name(r.argument());else if(r.CLAUSE==="DROP")e(r.name(),r.hasFlag("IF_EXISTS"))?.drop();else if(r.CLAUSE==="ADD")(!r.hasFlag("IF_NOT_EXISTS")||!e(r.argument().name().NAME,!0))&&this.table(r.argument().toJSON());else if(r.CLAUSE==="MODIFY"){let s=e(r.argument().name().NAME,r.hasFlag("IF_EXISTS"));if(!s)continue;s.diffWith(r.argument())}return this}getAlt(){let t=q.fromJSON(this.CONTEXT,{kind:"SCHEMA",name:this.NAME.toJSON(),actions:[]});this.$NAME&&!this.isSame(this.$NAME.NAME,this.NAME.NAME,"ci")&&t.rename(null,null,this.$NAME.NAME);for(let e of this.TABLES)if(typeof e.keep()!="boolean")t.SUBTREE.push(K.fromJSON(this,{kind:"TABLE",argument:e.clone()}));else if(e.keep()===!1)t.SUBTREE.push(G.fromJSON(this,{kind:"TABLE",name:e.name().toJSON()}));else{let r=e.getAlt();r.length&&t.SUBTREE.push(r)}return t}cascadeAlt(){this.keep(this.keep(),"auto");let t=this.dropped()?"DOWN":this.$NAME&&this.$NAME!==this.NAME?"RENAME":null;for(let e of this.TABLES)e.cascadeAlt();return this.altsCascaded=!0,this}toJSON(){return{...super.toJSON(),tables:this.TABLES.map(t=>t.toJSON())}}static fromJSON(t,e){if(!(!e||["tables"].some(r=>r in e&&!Array.isArray(e[r]))))return super.fromJSON(t,e,()=>{let r=new this(t);for(let s of e.tables||[])r.table(s);return r})}stringify(){return this.name()+""}static parse(t,e,r){let s=new this(t);return s.name(r(s,e.trim(),[A])),s}};var K=class extends Lt(Nt){get NAME(){return this.ARGUMENT?.NAME}stringify(){let t=[super.stringify()];return["SCHEMA","DATABASE"].includes(this.KIND)&&t.push(...this.argument().TABLES.map(e=>this.constructor.fromJSON(this,{kind:"TABLE",argument:e}))),t.join(`;
`)}static get CLAUSE(){return"CREATE"}static NODE_TYPES=[X,et];static KINDS=["TABLE","SCHEMA","DATABASE"]};var Ne=class extends Lt(It){static KINDS=["TABLE","SCHEMA","DATABASE"]};var tr=[K,q,G,Ne,tt,gt,mt,k,...C.Types];var Ae=class{static grammar=tr;static parse(t,e,r,s={}){if(!e?.length)return;let n=r?.length?r:this.grammar;for(let i of n){let o=this.parseOne(t,e,i,s);if(o)return s.log&&console.log(".................",e,".................>",o.constructor.name),o}if(s.assert!==!1)throw new SyntaxError(e)}static parseOne(t,e,r,s={}){return r.parse(t,e,(n,i,o,c={})=>this.parse(n,i,o,{...s,...c}))}};var te=class{constructor(t,e,r="backward"){Object.defineProperty(this,"$",{value:{client:t,json:e,direction:r}})}get client(){return this.$.client}get direction(){return this.$.direction}get id(){return this.$.json.id}get databaseTag(){return this.$.json.database_tag}get versionTag(){return this.$.json.version_tag}get versionMax(){return this.$.json.version_max}get cursor(){return this.$.json.$cursor}get description(){return this.$.json.savepoint_description}get savepointDate(){return this.$.json.savepoint_date}get rollbackDate(){return this.$.json.rollback_date}get rollbackEffect(){let t=typeof this.$.json.keep!="boolean"?["DROP","RECREATE"]:this.$.json.keep===!1?["RECREATE","DROP"]:["ALTER"];return this.direction==="forward"?t.reverse()[0]:t[0]}get rollbackQuery(){let t=et.fromJSON(this.client,this.schema());return this.direction!=="forward"&&(t.reverseAlt(!0),t.keep(t.keep(),"auto")),t.keep()===!1?G.fromJSON(this.client,{kind:"SCHEMA",name:t.name()}).withFlag(this.client.params.dialect==="mysql"?"":"CASCADE"):t.keep()===!0?t.getAlt().with({resultSchema:t}):K.fromJSON(this.client,{kind:"SCHEMA",argument:t})}name(t=!1){return t?this.direction==="forward"&&this.$.json.$name||this.$.json.name:this.direction!=="forward"&&this.$.json.$name||this.$.json.name}schema(){let{name:t,$name:e,tables:r=[],keep:s}=this.$.json;return{name:t,...e?{$name:e}:{},tables:r,keep:s}}toJSON(){let{id:t,database_tag:e,version_tag:r,version_max:s,$cursor:n,savepoint_description:i,savepoint_date:o,rollback_date:c}=this.$.json;return{id:t,name:this.name(),databaseTag:e,versionTag:r,versionMax:s,cursor:n,description:i,savepointDate:o,rollbackDate:c,rollbackEffect:this.rollbackEffect}}async isNextPointInTime(){return(await this.client.database(this.name()).savepoint({direction:this.direction})||{}).id===this.$.json.id}async rollback(){if(!await this.isNextPointInTime())throw new Error("Invalid rollback order.");await this.client.query(this.rollbackQuery,{noCreateSavepoint:!0});let t=[this.client.constructor.OBJ_INFOSCHEMA_DB,"database_savepoints"].join("."),e=await this.client.query(`UPDATE ${t} SET rollback_date = ${this.direction==="forward"?"NULL":"now()"} WHERE id = '${this.$.json.id}' RETURNING rollback_date`);return this.$.json.rollback_date=e[0].rollback_date,!0}};var Te=class{static get OBJ_INFOSCHEMA_DB(){return"obj_information_schema"}constructor(t,e={}){Object.defineProperty(this,"$",{value:{driver:t,params:e}})}get driver(){return this.$.driver}get params(){return this.$.params}$trace(t,...e){if(t==="get:api:client")return this;if(t==="get:client:kind")return this.constructor.kind}database(t,e={}){return new this.constructor.Database(this,...arguments)}async databases(){return[]}async hasDatabase(t){return(await this.databases()).includes(t)}async createDatabase(t,e={}){if(typeof t=="string")t={name:t};else if(typeof t?.name!="string")throw new Error("createDatabase() called with invalid arguments.");let r=K.fromJSON(this,{kind:"SCHEMA",argument:t});return e.ifNotExists&&r.withFlag("IF_NOT_EXISTS"),await this.query(r,e)}async alterDatabase(t,e,r={}){if(typeof e!="function")throw new Error("alterDatabase() called with invalid arguments.");if(typeof t=="string")t={name:t};else if(typeof t?.name!="string")throw new Error("alterDatabase() called with invalid arguments.");let s=await this.describeDatabase(t.name,t.tables);if(!s)throw new Error(`Database "${t.name}" does not exist.`);let n=et.fromJSON(this,s)?.keep(!0,!0);await e(n);let i=n.getAlt().with({resultSchema:n});if(i.length)return await this.query(i,r)}async dropDatabase(t,e={}){if(typeof t!="string")throw new Error(`dropDatabase() called with an invalid name: ${t}.`);let r=G.fromJSON(this,{kind:"SCHEMA",name:t});return e.ifExists&&r.withFlag("IF_EXISTS"),e.cascade&&r.withFlag("CASCADE"),await this.query(r,e)}async describeDatabase(t,e=["*"]){return this.describeDatabaseCallback(async(r,s)=>{let n=s&&await this.database(r).describeTable(s)||[];return{name:r,tables:n}},...arguments)}async describeDatabaseCallback(t,e,r=["*"]){let s;typeof e=="string"?s=[{name:e,tables:r}]:Array.isArray(e)?s=e.map(f=>typeof f=="object"?f:{name:f}):s=[].concat(e);let n=s.length===1&&s[0].name!=="*",i=s.length===1&&s[0].name==="*",o=await this.databases(),c=await Promise.all(o.map(f=>{let l=i?{name:f,tables:s[0].tables}:s.find(h=>h.name.toLowerCase()===f.toLowerCase());return l&&t(l.name,l.tables)}).filter(f=>f));return n?c[0]:c}async queryCallback(t,e,r={}){if(typeof e=="string")e=Ae.parse(this,e,null,{log:r.log});else if(!(e instanceof d))throw new Error("query() called with invalid arguments.");let s={},n=c=>c&&!new RegExp(c,"i").test(this.constructor.OBJ_INFOSCHEMA_DB)&&(!r.noCreateSavepoint||r.$resultSchema==="always");if(((c,f)=>f.some(l=>c instanceof l))(e,[K,q,G])){let c=e.KIND==="TABLE"&&e.$trace("get:name:table"),f=e.$trace("get:name:database")||e.KIND==="TABLE"&&await this.basenameGet(c,!0);if(["DATABASE","SCHEMA"].includes(e.KIND)&&n(f)){if(e instanceof G){let l=et.fromJSON(this,await this.describeDatabase(f)).drop();e.with({resultSchema:l})}else if(e instanceof q&&!e.resultSchema){let l=e.ACTIONS.map(p=>p.CLAUSE==="MODIFY"?p.ARGUMENT.$trace("get:name:table"):p.CLAUSE==="DROP"?p.name():null).filter(p=>p),h=et.fromJSON(this,await this.describeDatabase(f,l)).keep(!0,!0).alterWith(e);e.with({resultSchema:h})}else e instanceof K&&e.with({resultSchema:e.ARGUMENT});s.savepoint=e.resultSchema}else if(e.KIND==="TABLE"&&n(f)){let l=this.database(f);if(e instanceof G&&f){let h=X.fromJSON(l,await l.describeTable(c)).drop();e.with({resultSchema:h})}else if(e instanceof q&&!e.resultSchema&&f){let h=X.fromJSON(l,await l.describeTable(c)).keep(!0,!0).alterWith(e);e.with({resultSchema:h})}else e instanceof K&&f&&e.with({resultSchema:e.ARGUMENT});!r.noCreateSavepoint&&f&&(s.savepoint=et.fromJSON(this,{name:l.name,tables:[e.resultSchema]}).keep(!0))}}let o=await t(e,r);return!r.noCreateSavepoint&&s.savepoint?(s.savepoint.keep(s.savepoint.keep(),"auto"),await this.createSavepoint(s.savepoint,r.description)):o}async basenameResolution(t=[]){return arguments.length?(this.$.resolutionPath=[].concat(t),this):new BasenameResolutor(this.$.basenameResolution)}async basenameGet(t,e=!1){let r=await this.basenameResolution();return await r.reduce(async(s,n)=>await s||await this.database(n).hasTable(t)?n:null,null)||(e?r.find(s=>!s.startsWith("$"))||r[0]:null)}async getSavepoints(t={}){let e=this.constructor.OBJ_INFOSCHEMA_DB;if(!await this.hasDatabase(e))return[];let r=[e,"database_savepoints"].join(".");return(await this.query(`
            SELECT id, database_tag, name, ${A.fromJSON(this,"$name")}, keep, version_tag, version_max, CONCAT(rank_for_cursor, '/', total) AS ${A.fromJSON(this,"$cursor")}, savepoint_description, tables, savepoint_date, rollback_date FROM (
                SELECT *,
                ROW_NUMBER() OVER (PARTITION BY database_tag ORDER BY rollback_date IS NOT NULL ${t.direction==="forward"?"DESC":"ASC"}, version_tag ${t.direction==="forward"?"ASC":"DESC"}) AS rank_for_target,
                ROW_NUMBER() OVER (PARTITION BY database_tag ORDER BY version_tag ASC) AS rank_for_cursor,
                MAX(version_tag) OVER (PARTITION BY database_tag) AS version_max,
                COUNT(version_tag) OVER (PARTITION BY database_tag) AS total
                FROM ${r}
            ) AS savepoint WHERE rollback_date IS ${t.direction==="forward"?"NOT NULL":"NULL"} AND rank_for_target = 1${t.name?t.direction==="forward"?` AND name = '${t.name}'`:` AND COALESCE(${A.fromJSON(this,"$name")}, name) = '${t.name}'`:""}
        `)).map(n=>new te(this,n,t.direction))}async createSavepoint(t,e=null){let r=this.constructor.OBJ_INFOSCHEMA_DB;await this.hasDatabase(r)||await this.createDatabase({name:r,tables:[{name:"database_savepoints",columns:[{name:"id",...this.params.dialect==="mysql"?{type:"char(36)",default:{expr:"uuid()"}}:{type:"uuid",default:{expr:"gen_random_uuid()"}},primaryKey:!0},{name:"name",type:["varchar",255],notNull:!0},{name:"$name",type:["varchar",255]},{name:"tables",type:"json"},{name:"keep",type:this.params.dialect==="mysql"?["bit",1]:"boolean"},{name:"savepoint_description",type:["varchar",255]},{name:"database_tag",type:["varchar",12],notNull:!0},{name:"version_tag",type:"int",notNull:!0},{name:"savepoint_date",type:["timestamp",3],notNull:!0},{name:"rollback_date",type:["timestamp",3]}]}]},{noCreateSavepoint:!0});let{name:s,$name:n,...i}=t.toJSON(),o={name:s,$name:n,database_tag:null,...i,version_tag:null,savepoint_description:e,savepoint_date:new Date},c=t.NAME,f=await this.database(c).savepoint({direction:"forward"})||await this.database(c).savepoint();if(f){let h=[r,"database_savepoints"].join(".");o.database_tag=f.databaseTag,o.version_tag=f.versionMax+1,f.direction==="forward"?await this.query(`DELETE FROM ${h} WHERE database_tag = '${f.databaseTag}' AND rollback_date IS NOT NULL`):o.version_tag=f.versionTag+1}else o.database_tag=`db:${(0|Math.random()*9e6).toString(36)}`,o.version_tag=1;let l=await this.database(r).table("database_savepoints").insert(o,{returning:"*"});return new te(this,{...l,version_max:o.version_tag,$cursor:null})}};var de=class{constructor(t,e,r={}){Object.defineProperty(this,"$",{value:{client:t,name:e,params:r}})}get client(){return this.$.client}get name(){return this.$.name}get params(){return Object.assign({},this.client.params,this.$.params)}$trace(t,...e){return t==="get:api:database"?this:t==="get:name:database"?this.name:this.client.$trace(t,...e)}table(t,e={}){return new this.constructor.Table(this,...arguments)}async tables(){return[]}async hasTable(t){return(await this.tables()).includes(t)}async createTable(t,e={}){if(typeof t?.name!="string")throw new Error("createTable() called with invalid arguments.");let r=K.fromJSON(this,{kind:"TABLE",argument:t});return e.ifNotExists&&r.withFlag("IF_NOT_EXISTS"),this.client.query(r,e)}async alterTable(t,e,r={}){if(typeof e!="function"||typeof t!="string")throw new Error("alterTable() called with invalid arguments.");let s=await this.describeTable(t);if(!s)throw new Error(`Table "${t}" does not exist.`);let n=X.fromJSON(this,s)?.keep(!0,!0);await e(n);let i=n.getAlt().with({resultSchema:n});if(i.length)return r.ifExists&&i.withFlag("IF_EXISTS"),this.client.query(i,r)}async dropTable(t,e={}){if(typeof t!="string")throw new Error("dropTable() called with invalid arguments.");let r=G.fromJSON(this,{kind:"TABLE",name:t});return e.ifExists&&r.withFlag("IF_EXISTS"),e.cascade&&r.withFlag("CASCADE"),this.client.query(r,e)}async savepoint(t={}){return(await this.client.getSavepoints({...t,name:this.name}))[0]}async describeTableCallback(t,e){let r=[].concat(e),s=r.length===1&&r[0]!=="*",n=r.length===1&&r[0]==="*",i=await t(r,n),o=await this.tables(),c=(n?o:r).reduce((f,l)=>{let h=l.toLowerCase(),p=i.find(E=>E.name===h);return!p&&(n||o.includes(h))&&(p={name:h,columns:[],constraints:[],indexes:[]}),f.concat(p||[])},[]);return s?c[0]:c}};var _e=class{constructor(t,e,r={}){this.$={database:t,name:e,params:r}}get database(){return this.$.database}get name(){return this.$.name}get params(){return Object.assign({},this.database.params,this.$.params)}$trace(t,...e){return t==="get:api:table"?this:t==="get:table:name"?this.name:this.database.$trace(t,...e)}async count(...t){let e=[].concat(Array.isArray(t[0])?t.shift():"*");if(e.length!==1)throw new Error("Count expects exactly one field.");let r=await this.select([s=>s.fn("COUNT",e[0]).as("c")],...t);return Array.isArray(r)?r[0].c:r.c}async select(...t){let e=new k(this.database.client);e.from([this.database.name,this.name]);let r=this.$schemaMemo(),s=Array.isArray(t[0])?t.shift():["*"];e.select(...s);let n=t.shift()||{};await this.$applyModifiers(e,n,r);let i=await this.database.client.query(e);return["string","number"].includes(typeof n.where)?i[0]:i}async insert(...t){let e=new tt(this.database.client);e.into([this.database.name,this.name]);let r=this.$schemaMemo(),{columns:s=[],values:n=[],modifiers:i,singular:o,preHook:c,postHook:f}=await this.$resolveInsert(t,r,"insert");c&&await c(),s.length&&e.columns(...s);for(let h of n)e.values(...h);R(i)&&i.returning?e.returning(...[].concat(i.returning)):P(i)&&i(e);let l=await this.database.client.query(e);return f&&(l=await f(l)),o&&(l=l[0]),l}async upsert(...t){let e=new tt(this.database.client);e.into([this.database.name,this.name]);let r=this.$schemaMemo(),{columns:s=[],values:n=[],modifiers:i,singular:o,preHook:c,postHook:f}=await this.$resolveInsert(t,r,"upsert");c&&await c(),s.length&&e.columns(...s);for(let h of n)e.values(...h);if(R(i)&&i.returning?e.returning(...[].concat(i.returning)):P(i)&&i(e),e.onConflict({entries:s.map((h,p)=>[h,n[0][p]])}),this.params.dialect==="postgres"){let h=await r.get(),p=h.columns?.filter(N=>N.uniqueKey).map(N=>[N.name]).concat(h.constraints?.filter(N=>N.type==="UNIQUE").map(N=>N.targetColumns));if(!p.length)throw new Error("Table has no unique keys defined. You may want to perform a direct INSERT operation.");let E=e.columns()?.toJSON().list||[],S=p.find(N=>kt(N,E).length)||p[0];e.onConflict(N=>N.target(...S))}let l=await this.database.client.query(e);return f&&(l=await f(l)),o&&(l=l[0]),l}async update(t,e){if(!e)throw new Error('The "modifiers" parameter cannot be ommitted.');let r=["string","number"].includes(typeof e.where)&&e.returning,s=new gt(this.database.client);s.table([this.database.name,this.name]);let n=this.$schemaMemo(),i=Object.keys(t),o=Object.values(t),c,f;i.length&&e.experimentalRecursive?{columns:i,values:o,modifiers:e,preHook:c,postHook:f}=await this.$resolveRelations(i,o,e,n,"update"):o=o.map(h=>we(h,this.params.autoBindings)),c&&await c(),i.forEach((h,p)=>s.set(h,o[p])),await this.$applyModifiers(s,e,n);let l=await this.database.client.query(s);return f&&(l=await f(l)),r&&(l=l[0]),l}async delete(t){if(!t)throw new Error('The "modifiers" parameter cannot be ommitted.');let e=new mt(this.database.client);e.from([this.database.name,this.name]);let r=this.$schemaMemo();await this.$applyModifiers(e,t,r);let s=await this.database.client.query(e);return["string","number"].includes(typeof t.where)&&t.returning&&(s=s[0]),s}$schemaMemo(){return{db:this.database,name:this.name,async get(){return this.memo||(this.memo=await this.db.describeTable(this.name))}}}async $resolveInsert(t,e,r){let s=[],n=[],i,o;if(Array.isArray(t[0])&&t[0].every(c=>typeof c=="string")&&Array.isArray(t[1])){if(!t[1].every(c=>Array.isArray(c)))throw new TypeError("Invalid payload format.");[s,n,i]=t.splice(0,3)}else{let c=R(t[0]),f=[].concat(t.shift());if(!R(f[0]))throw new TypeError("Invalid payload format.");s=Object.keys(f[0]),n=f.map(l=>Object.values(l)),i=t.shift(),o=c&&i?.returning}return s.length&&i?.experimentalRecursive?{...await this.$resolveRelations(s,n,i||{},e,r),singular:o}:(n=n.map(c=>c.map(f=>we(f,this.params.autoBindings))),{columns:s,values:n,modifiers:i,singular:o})}async $resolveRelations(t,e,r,s,n){let i=await s.get(),o=sr(i),c=r.returning,f=Object.fromEntries(i.columns.map(E=>[E.name,E])),l={dependencies:new Map,dependents:new Map};e=e.map((E,S)=>E.reduce((N,T,O)=>{let _=t[O];if(f[_]?.references&&R(T)){let g=f[_].references.rhsTable,L=f[_].references.targetColumns[0];return l.dependencies.has(g)||l.dependencies.set(g,new Map),l.dependencies.get(g).set([S,_,L],T),N.concat(void 0)}if(_.includes(":")&&!f[_]&&Array.isArray(T)){let[g,L]=[Xt(_,":"),Je(_,":")];return l.dependents.has(g)||l.dependents.set(g,new Map),l.dependents.get(g).set([S,o,L],T),N}if(!f[_])throw new Error(`Unknown column name "${_}"`);return N.concat([we(T,this.params.autoBindings)])},[])),t=t.filter(E=>!(E.includes(":")&&l.dependents.has(Xt(E,":"))));let h=async()=>{for(let[E,S]of l.dependencies){let N=[...S.keys()],T=[...S.values()],O=await this.database.table(E)[n](T,{experimentalRecursive:!0,returning:N[0][2]});N.forEach(([_,g,L],v)=>{e[_][g]=O[v][L]})}},p=async E=>{for(let[S,N]of l.dependents){let T=[...N.keys()],O=[...N.values()],_=[];T.forEach(([L,v,y],We)=>{if(c){let ee=_.length,ir=O[We].length;E[L][`${S}:${y}`]=nr=>nr.slice(ee,ee+ir)}O[We].forEach(ee=>{ee[y]=E[L][v],_.push(ee)})});let g=await this.database.table(S)[n](_,{experimentalRecursive:!0,returning:c&&"*"});c&&E.forEach(L=>Object.keys(L).forEach(v=>{typeof L[v]=="function"&&(L[v]=L[v](g))}))}return c?([].concat(c).includes(o)||(E=E.map(S=>{let{[o]:N,...T}=S;return T})),E):E.length};return l.dependents.size&&![].concat(r.returning||[]).includes(o)&&(r={...r,returning:[].concat(r.returning||[]).concat(o)}),{columns:t,values:e,modifiers:r,preHook:h,postHook:p}}async $applyModifiers(t,e,r){if(e!==!0)if(R(e)){let s=n=>t.where(...Object.entries(n).map(([i,o])=>o===null?c=>c.isNull(i):c=>c.equals(i,we(o,this.params.autoBindings))));if(["string","number"].includes(typeof e.where)){let n=await r.get();s({[sr(n)]:e.where})}else R(e.where)?s(e.where):e.where&&e.where!==!0&&t.where(e.where);e.limit&&t.limit(e.limit),e.returning&&t.returning(...[].concat(e.returning))}else P(e)?e(t):/^\d+$/.test(e)&&t.limit(e)}},sr=u=>{let t=u.columns?.find(e=>e.primaryKey)?.name||u.constraints?.find(e=>e.type==="PRIMARY_KEY")?.targetColumns[0];if(!t)throw new Error("Cannot resolve primary key name for implied record.");return t},we=(u,t)=>u instanceof Date?e=>e.value(u.toISOString().split(".")[0]):t!==!1?e=>e.$bind(0,u):[!0,!1,null].includes(u)?e=>e.sql(u):Array.isArray(u)?e=>e.array(u):R(u)?e=>e.object(u):e=>e.value(u);var Oe=class{_pos=0;_eof=!1;_onfinish=[];constructor(t){this._cache=t}get eof(){return!this._cache.length||this._pos===this._cache.length-1}onfinish(t){this._onfinish.push(t)}next(){if(this.eof){this._onfinish.forEach(t=>t()),this._pos=0;return}this._pos++}async fetch(){if(!this.eof)return this._cache[this._pos]}};var ge=class extends Oe{constructor(t){super([]),this._store=t,this._storeFetch=new Promise(async e=>{this.cache=await this._store.getAll(),e()})}async fetch(){return await this._storeFetch,super.fetch()}};var Re=class extends _e{getCursor(){return new ge(this)}};var Le=class extends de{static Table=Re;async tables(){let t=`SELECT table_name FROM information_schema.tables WHERE table_schema = '${this.name}'`,e=await this.client.driver.query(t);return(e.rows||e).map(r=>r.table_name)}async describeTable(t){return this.describeTableCallback(async(e,r)=>{let[s,n]=this.getDescribeTableSql(e),i=await this.client.driver.query(s),o=await this.client.driver.query(n);return this.formatDescribeTableResult(e,i.rows||i,o.rows||o,[])},...arguments)}getDescribeTableSql(t){let e=`
        SELECT
            COLUMNS.column_name,
            COLUMNS.table_name,
            COLUMNS.ordinal_position,
            COLUMNS.column_default,
            COLUMNS.is_nullable,
            COLUMNS.data_type,
            COLUMNS.character_maximum_length,
            ${this.client.params.dialect==="mysql"?`
            COLUMNS.extra,
            `:`
            COLUMNS.is_identity,
            COLUMNS.identity_generation,
            COLUMNS.identity_start,
            COLUMNS.identity_increment,
            COLUMNS.identity_maximum,
            COLUMNS.identity_minimum,
            COLUMNS.identity_cycle,
            `}
            COLUMNS.is_generated,
            COLUMNS.generation_expression

        FROM INFORMATION_SCHEMA.COLUMNS AS COLUMNS

        WHERE COLUMNS.TABLE_SCHEMA='${this.name}'
            ${t.length&&t[0]!=="*"?`AND COLUMNS.TABLE_NAME IN ('${t.join("','")}')`:""}
        ORDER BY COLUMNS.ordinal_position
        `,r=i=>this.client.params.dialect==="mysql"?i:`MAX(${i})`,s=(i,o)=>this.client.params.dialect==="mysql"?`GROUP_CONCAT(${i}${o?` ORDER BY ${o}`:""} SEPARATOR ',')`:`STRING_AGG(${i}, ','${o?` ORDER BY ${o}`:""})`,n=`
        SELECT
            ${r("TABLE_CONSTRAINTS.table_name")} AS table_name,
            ${s("TABLE_CONSTRAINTS_DETAILS.column_name","TABLE_CONSTRAINTS_DETAILS.ordinal_position")} AS column_name,
            TABLE_CONSTRAINTS.constraint_name AS constraint_name,
            ${r("TABLE_CONSTRAINTS.constraint_type")} AS constraint_type,
            ${r("CHECK_CONSTRAINTS_DETAILS.check_clause")} AS check_clause,
                
            ${this.client.params.dialect==="mysql"?`
            ${r("CHECK_CONSTRAINTS_DETAILS.level")} AS check_constraint_level,
            ${s("TABLE_CONSTRAINTS_DETAILS.referenced_column_name")} AS referenced_column_name,
            ${r("TABLE_CONSTRAINTS_DETAILS.referenced_table_name")} AS referenced_table_name,
            ${r("TABLE_CONSTRAINTS_DETAILS.referenced_table_schema")} AS referenced_table_schema,
            `:`
            ${s("RELATION_DETAILS.column_name")} AS referenced_column_name,
            ${r("RELATION_DETAILS.table_name")} AS referenced_table_name,
            ${r("RELATION_DETAILS.table_schema")} AS referenced_table_schema,
            `}
            --${s("RELATION.unique_constraint_name")} AS referenced_constraint_name,
            ${r("RELATION.match_option")} AS match_rule,
            ${r("RELATION.update_rule")} AS update_rule,
            ${r("RELATION.delete_rule")} AS delete_rule

        FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS TABLE_CONSTRAINTS

        LEFT JOIN INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS TABLE_CONSTRAINTS_DETAILS
            ON TABLE_CONSTRAINTS_DETAILS.CONSTRAINT_NAME = TABLE_CONSTRAINTS.CONSTRAINT_NAME
            AND TABLE_CONSTRAINTS_DETAILS.TABLE_NAME = TABLE_CONSTRAINTS.TABLE_NAME
            AND TABLE_CONSTRAINTS_DETAILS.CONSTRAINT_SCHEMA = TABLE_CONSTRAINTS.CONSTRAINT_SCHEMA
            AND TABLE_CONSTRAINTS_DETAILS.CONSTRAINT_CATALOG = TABLE_CONSTRAINTS.CONSTRAINT_CATALOG
        LEFT JOIN INFORMATION_SCHEMA.CHECK_CONSTRAINTS AS CHECK_CONSTRAINTS_DETAILS
            ON CHECK_CONSTRAINTS_DETAILS.CONSTRAINT_NAME = TABLE_CONSTRAINTS.CONSTRAINT_NAME
            AND CHECK_CONSTRAINTS_DETAILS.CONSTRAINT_SCHEMA = TABLE_CONSTRAINTS.CONSTRAINT_SCHEMA
            AND CHECK_CONSTRAINTS_DETAILS.CONSTRAINT_CATALOG = TABLE_CONSTRAINTS.CONSTRAINT_CATALOG

        LEFT JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS RELATION
            ON RELATION.CONSTRAINT_NAME = TABLE_CONSTRAINTS.CONSTRAINT_NAME
            AND RELATION.CONSTRAINT_SCHEMA = TABLE_CONSTRAINTS.CONSTRAINT_SCHEMA
            AND RELATION.CONSTRAINT_CATALOG = TABLE_CONSTRAINTS.CONSTRAINT_CATALOG
        ${this.client.params.dialect==="mysql"?"":`
        LEFT JOIN INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS RELATION_DETAILS
            ON RELATION_DETAILS.CONSTRAINT_NAME = RELATION.UNIQUE_CONSTRAINT_NAME
            AND RELATION_DETAILS.CONSTRAINT_SCHEMA = RELATION.UNIQUE_CONSTRAINT_SCHEMA
            AND RELATION_DETAILS.CONSTRAINT_CATALOG = RELATION.UNIQUE_CONSTRAINT_CATALOG
            `}

        WHERE TABLE_CONSTRAINTS.CONSTRAINT_SCHEMA = '${this.name}'
            ${t.length&&t[0]!=="*"?`AND TABLE_CONSTRAINTS.TABLE_NAME IN ('${t.join("','")}')`:""}
        GROUP BY (TABLE_CONSTRAINTS.constraint_name)
        `;return[e,n]}formatDescribeTableResult(t,e,r,s){let n=o=>o==="character varying"?"varchar":o==="integer"?"int":o,i=(o,c=!1)=>({...c?{}:{name:o.constraint_name},targetTable:[o.referenced_table_schema,o.referenced_table_name],targetColumns:o.referenced_column_name.split(",").map(f=>f.trim()),...o.match_rule!=="NONE"?{matchRule:o.match_rule}:{},updateRule:o.update_rule,deleteRule:o.delete_rule});return(t.length&&t[0]!=="*"?t:[...new Set(e.map(o=>o.table_name))]).map(o=>{let c=e.filter(_=>_.table_name===o),f=r.filter(_=>_.table_name===o),l=s.filter(_=>_.table_name===o),h=c.map(_=>_.column_name),p=_=>{let g=(_.check_clause.replace(/(["'])(?:(?=(\\?))\2.)*?\1/g,"").match(/\w+/g)||[]).map(L=>L.toLowerCase());return _.columns=kt(h,g),_},[E,S,N,T]=f.reduce(([_,g,L,v],y)=>y.constraint_type==="PRIMARY KEY"?[_.concat(y),g,L,v]:y.constraint_type==="UNIQUE"?[_,g.concat(y),L,v]:y.constraint_type==="FOREIGN KEY"?[_,g,L.concat(y),v]:y.constraint_type==="CHECK"&&!(this.client.params.dialect==="postgres"&&/^[\d_]+not_null/.test(y.constraint_name))?[_,g,L,v.concat(p(y))]:[_,g,L,v],[[],[],[],[]]),O={name:o,columns:c.reduce((_,g)=>{let L={},v=g.extra?.split(",").map(y=>y.trim())||[];return v.includes("INVISIBLE"),_.concat({name:g.column_name,type:g.character_maximum_length?[n(g.data_type),g.character_maximum_length]:n(g.data_type),...E.length===1&&E[0].column_name===g.column_name&&(L.pKeys=E.pop())?{primaryKey:{name:L.pKeys.constraint_name}}:{},...(L.uKeys=S.filter(y=>y.column_name===g.column_name)).length===1&&(S=S.filter(y=>y!==L.uKeys[0]))?{uniqueKey:{name:L.uKeys[0].constraint_name}}:{},...(L.fKeys=N.filter(y=>y.column_name===g.column_name)).length===1&&(N=N.filter(y=>y!==L.fKeys[0]))?{references:i(L.fKeys[0])}:{},...(L.cKeys=T.filter(y=>y.check_constraint_level!=="Table"&&y.columns.length===1&&y.columns[0]===g.column_name)).length===1&&(T=T.filter(y=>y!==L.cKeys[0]))?{check:{name:L.cKeys[0].constraint_name,expr:L.cKeys[0].check_clause}}:{},...g.is_identity==="YES"?{identity:{always:g.identity_generation==="ALWAYS"}}:{},...g.is_generated!=="NEVER"?{expression:{always:g.is_generated==="ALWAYS",expr:g.generation_expression}}:{},...v.includes("auto_increment")?{autoIncrement:!0}:{},...g.is_nullable==="NO"?{notNull:!0}:{},...g.column_default&&g.column_default!=="NULL"?{default:{expr:g.column_default}}:{}})},[]),constraints:[],indexes:[]};return O.constraints.push(...[...E,...S,...N].map(_=>({name:_.constraint_name,type:_.constraint_type==="UNIQUE"?"UNIQUE_KEY":_.constraint_type.replace(" ","_"),columns:_.column_name.split(",").map(g=>g.trim()),..._.constraint_type==="FOREIGN KEY"?{references:i(_,!0)}:{}}))),O.constraints.push(...T.map(_=>({name:_.constraint_name,type:_.constraint_type,columns:_.columns,expr:_.check_clause}))),O})}};var Ke=class extends Te{constructor(t,e={}){if(typeof t!="object")throw new Error("The options.driver parameter is required and must be an object.");if(typeof t.query!="function")throw new Error("The provided driver must expose a .query() function.");super(t,e)}static kind="sql";static Database=Le;async databases(){let e=await this.driver.query("SELECT schema_name FROM information_schema.schemata");return(e.rows||e).map(r=>r.schema_name)}async query(t,e={}){return await this.queryCallback(async(r,s)=>{r.expandable&&await r.expand(!0);let n=[tt,gt,mt].some(f=>r instanceof f),i;if(n&&this.params.dialect==="mysql"&&r.RETURNING_LIST.length){if(this.params.returningClause===!1)throw new Error('Support for the "RETURNING" clause has been disabled.');[r,i]=await this.$myReturningMagic(r)}let o=(r.BINDINGS||[]).concat(s.values||[]).map(f=>Array.isArray(f)||typeof f=="object"&&f?JSON.stringify(f):f),c=await this.driver.query(r.toString(),o);return i&&(c=await i()),r instanceof k||n&&r.RETURNING_LIST.length||i?c.rows||c:"rowCount"in c?c.rowCount:c.affectedRows},...arguments)}async $myReturningMagic(t){t=t.clone();let e=t.RETURNING_LIST.splice(0),r=t.$trace("get:name:table"),s=t.$trace("get:name:database"),n=A.fromJSON(this,[s,r]);if(t instanceof mt){let f=await this.driver.query(`SELECT ${e.join(", ")} FROM ${n}${t.WHERE_CLAUSE?` WHERE ${t.WHERE_CLAUSE}`:""}`);return[t,()=>f]}let i="obj_column_for_returning_clause_support",o=A.fromJSON(this,i);await this.driver.query(`ALTER TABLE ${n} ADD COLUMN ${o} char(36) INVISIBLE`);let c=(0|Math.random()*9e6).toString(36);if(!t.SET_CLAUSE&&t instanceof tt){if(!t.COLUMNS_CLAUSE&&(t.SELECT_CLAUSE||t.VALUES_LIST.length))throw new Error("Support for the RETURNING clause currently requires explicit column list in INSERT statements.");if(t.columns(i),t.SELECT_CLAUSE)t.SELECT_CLAUSE.select(f=>f.value(c));else if(t.VALUES_LIST.length)for(let f of t.VALUES_LIST)f.list(l=>l.value(c));else t.values(c)}else t.set(i,f=>f.value(c));return t instanceof tt&&t.ON_CONFLICT_CLAUSE&&t.ON_CONFLICT_CLAUSE.set(i,f=>f.value(c)),[t,async()=>{let f=await this.driver.query(`SELECT ${e.join(", ")} FROM ${n} WHERE ${o} = '${c}'`);return await this.driver.query(`ALTER TABLE ${n} DROP COLUMN ${o}`),f}]}async basenameResolution(t=[]){if(arguments.length){t=[].concat(t).map(o=>A.fromJSON(this,o));let i=this.params.dialect==="mysql"?`USE ${t[0]}`:`SET SEARCH_PATH TO ${t.join(",")}`;return await this.driver.query(i)}let e,r;this.params.dialect==="mysql"?(e="SELECT database() AS default_db",r="default_db"):(e="SHOW SEARCH_PATH",r="search_path",e="SELECT current_setting('SEARCH_PATH')",r="current_setting");let s=await this.driver.query(e),n=((s.rows||s)[0]||{})[r];return m.split(n,[","]).map(i=>A.parseIdent(this,i.trim())[0])}};})();
//# sourceMappingURL=sql.js.map
